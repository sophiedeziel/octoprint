---
http_interactions:
- request:
    method: post
    uri: "<HOST>/api/languages"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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AAC6BAAAtAUAAAAAAAAAAAAACwIAABYBAAB+BAAANwEAAAAAAAB0BQAADwUAAHMEAAAAAAAAmgQAAKMEAACABQAAYwQAACQEAADyAwAAhAUAAJwEAAAAAAAAVAIAAMsEAAAAAAAAxgMAAAAAAAB+AAAAAAAAAGwAAAAAAAAAAAAAALgEAAC6AQAAggIAAEcFAABOAQAA6AIAAHMCAACPAAAAWQMAABADAAAAAAAAEQMAAJMFAAA6BAAAAAAAAIoEAAAAAAAAbwIAAMEAAABVBQAArwMAAMYAAADfAQAAyQAAALkBAAAAAAAAFQEAAAAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPk1hbmRhdG9yeSBTdGVwITwvc3Ryb25nPiBZb3UgbmVlZCB0byBmaWxsIHRoaXMgb3V0IG5vdy4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBlbmFibGVkLCBPY3RvUHJpbnQgd2lsbCB0cnkgdG8gZmlndXJlIG91dCB5b3VyIHByaW50ZXIncyBmaXJtd2FyZSBhdXRvbWF0aWNhbGx5IGFuZCBhZGp1c3Qgc29tZSBjb21tdW5pY2F0aW9uIHBhcmFtZXRlcnMgYmFzZWQgb24gdGhhdC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGF0IGRvZXNuJ3Qgd29yayBvdXQsIG9yIHlvdSB3YW50IG1vcmUgZ3JhbnVsYXIgY29udHJvbCwgdW5jaGVjayB0aGlzIGFuZCB0aGUgcGFyYW1ldGVycyBpbiBxdWVzdGlvbiB3aWxsIGJlY29tZSB2aXNpYmxlIGZvciB5b3UgdG8gYWRqdXN0LgogICAgICAgICAgICAgICAgICAgICAgICAgICAgAAogICAgICAgICAgICAgICAgICAgICAgICAgICAgT2N0b1ByaW50IGN1cnJlbnRseSBvbmx5IGFsbG93cyB1cGxvYWRpbmcgYmFja3VwcyBvZiBhIG1heGltdW0gc2l6ZSBvZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJShwbHVnaW5fYmFja3VwX21heF91cGxvYWRfc2l6ZV9zdHIpcyB2aWEgdGhlIFVJLiBCYWNrdXBzIGxhcmdlciB0aGFuIHRoaXMgY2FuIG9ubHkgYmUgcmVzdG9yZWQgYnkgY29tbWFuZCBsaW5lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYnkgYWRqdXN0aW5nIHRoZSBzaXplIGJ5IHJlbW92aW5nIGxhcmdlIGNvbnRlbnRzIChsaWtlIHRpbWVsYXBzZXMpIGZyb20gdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB6aXAgcHJpb3IgdG8gdXBsb2FkaW5nLiBCYWNrdXBzIGV4Y2VlZGluZyB0aGlzIHNpemUgbGltaXQgYXJlIG1hcmtlZCB3aXRoIGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICUobWFya2VyKXMgdXAgdGhlcmUuCiAgICAgICAgICAgICAgICAgICAgICAgIAAKICAgICAgICAgICAgICAgICAgICBUaGVyZSBpcyBhIG5ldyB2ZXJzaW9uIG9mIHRoZSBzZXJ2ZXIgYWN0aXZlIG5vdywgYSByZWxvYWQKICAgICAgICAgICAgICAgICAgICBvZiB0aGUgdXNlciBpbnRlcmZhY2UgaXMgbmVlZGVkLiBUaGlzIHdpbGwgbm90IGludGVycnVwdAogICAgICAgICAgICAgICAgICAgIGFueSBwcmludCBqb2JzIHlvdSBtaWdodCBoYXZlIG9uZ29pbmcuIFBsZWFzZSByZWxvYWQgdGhlCiAgICAgICAgICAgICAgICAgICAgd2ViIGludGVyZmFjZSBub3cgYnkgY2xpY2tpbmcgdGhlIGJ1dHRvbiBiZWxvdy4KICAgICAgICAgICAgICAgIAAKICAgICAgICAgICAgICAgIERlZmluZSBhIGNoZWNrIGludGVydmFsLCBhIGhvc3QgYW5kIGEgcG9ydCB0byBjaGVjayBhZ2FpbnN0LiBJZiB5b3UgZG9uJ3Qga25vdyB3aGF0IHRvIHNldCBoZXJlLCB0aGUKICAgICAgICAgICAgICAgIGRlZmF1bHQgdmFsdWVzICh1c2luZyBDbG91ZGZsYXJlJ3MgRE5TIHNlcnZlcikgc2hvdWxkIHdvcmsuIElmIHlvdSBoYXZlIGNvbmNlcm5zIGFib3V0IHVzaW5nCiAgICAgICAgICAgICAgICB0aGF0LCBkZWZpbmUgdGhlIElQIGFuZCBwb3J0IG9mIGEgZGlmZmVyZW50IG9ubGluZSBzZXJ2ZXIgdGhhdCB5b3UgdHJ1c3QgYW5kIHRoYXQgaGFzIGEgaGlnaAogICAgICAgICAgICAgICAgYXZhaWxhYmlsaXR5LgogICAgICAgICAgICAACiAgICAgICAgICAgICAgICBJZiB5b3UgYWxzbyB3YW50IHRvIGNoZWNrIGlmIG5hbWUgcmVzb2x1dGlvbiB3b3JrcyAoc3Ryb25nbHkgcmVjb21tZW5kZWQpLCBkZWZpbmUgYSBob3N0IG5hbWUKICAgICAgICAgICAgICAgIHRvIGNoZWNrIG5hbWUgcmVzb2x1dGlvbiBhZ2FpbnN0LiBJZiB5b3UgZG9uJ3Qga25vdyB3aGF0IHRvIHNldCBoZXJlLCB0aGUgZGVmYXVsdCB2YWx1ZQogICAgICAgICAgICAgICAgKE9jdG9QcmludCdzIGRvbWFpbikgc2hvdWxkIHdvcmsuIElmIHlvdSBkb24ndCB3YW50IHRvIHBlcmZvcm0gcmVndWxhciByZXNvbHV0aW9uIGNoZWNrcyBhbG9uZwogICAgICAgICAgICAgICAgc2lkZSB3aXRoIHRoZSBnZW5lcmFsIGNvbm5lY3Rpdml0eSBjaGVjaywgbGVhdmUgdGhlIGZpZWxkIGVtcHR5LgogICAgICAgICAgICAACiAgICAgICAgICAgICAgICBJdCBpcyByZWNvbW1lbmRlZCB0byBubyBsb25nZXIgdXNlIHRoZSBnbG9iYWwgQVBJIGtleSBhcyBpdCdzIG9uZSBzaW5nbGUga2V5IHRoYXQgZ2l2ZXMgZnVsbCBhZG1pbiBhY2Nlc3MKICAgICAgICAgICAgICAgIHRvIHlvdXIgd2hvbGUgT2N0b1ByaW50IGluc3RhbmNlLiA8c3Ryb25nPkl0IHdpbGwgYmUgcmVtb3ZlZCBpbiBPY3RvUHJpbnQgMi4wPC9zdHJvbmc+LgogICAgICAgICAgICAgICAgSW5zdGVhZCBvZiB1c2luZyB0aGUgZ2xvYmFsIGtleSB5b3Ugc2hvdWxkIGNyZWF0ZSBpbmRpdmlkdWFsIEFwcGxpY2F0aW9uIEtleXMgZm9yCiAgICAgICAgICAgICAgICB5b3VyIHRoaXJkIHBhcnR5IGNsaWVudHMuIFRoYXQgd2F5IHRoZXkgZ2V0IHBlcm1pc3Npb25zIG1hdGNoaW5nIHRoZSB1c2VyIGFjY291bnQgdXNlZCBmb3Iga2V5CiAgICAgICAgICAgICAgICBjcmVhdGlvbiBhbmQgeW91IGNhbiBhbHNvIHJldm9rZSBhY2Nlc3MgdG8gb25lIGFwcCB3aXRob3V0IGhhdmluZyB0byBjaGFuZ2UgdGhlIGtleXMgZm9yIGFsbCBvdGhlciBhcHBzLgogICAgICAgICAgICAgICAgSXQncyBhbHNvIHJlY29tbWVuZGVkIHRvIGNyZWF0ZSBhIHVzZXIgYWNjb3VudCB3aXRob3V0IGFkbWluIGFjY2VzcyBhbmQgdXNlIHRoYXQgZm9yIHRoaXJkCiAgICAgICAgICAgICAgICBwYXJ0eSBjbGllbnRzIHdoZXJlIHBvc3NpYmxlLgogICAgICAgICAgICAACiAgICAgICAgICAgIEhvdyBkbyB5b3Ugd2FudCB0byBwcm9jZWVkPwogICAgICAgIAAKICAgICAgICAgICAgSWYgeW91ciBwcmludGVyJ3MgcHJpbnQgaGVhZCBtYXkgbW92ZSBzbGlnaHRseSBvdXRzaWRlIHRoZSBwcmludCB2b2x1bWUgKGUuZy4gZm9yIG5venpsZSBjbGVhbmluZyByb3V0aW5lcykKICAgICAgICAgICAgeW91IGNhbiBkZWZpbmUgYSBjdXN0b20gc2FmZSBib3VuZGluZyBib3ggZm9yIGl0cyBtb3ZlbWVudHMgYmVsb3cuCiAgICAgICAgAAogICAgICAgICAgICBOb3RlIHRoYXQgdGhlIHRpbWUgYW5kIHVzYWdlIHZhbHVlcyBpbiB0aGlzIHRhYiBhcmUgPHN0cm9uZz5lc3RpbWF0ZWQ8L3N0cm9uZz4gYnkgdGhlIEdDT0RFIHZpZXdlciBpbiB5b3VyCiAgICAgICAgICAgIGJyb3dzZXIgYW5kIG1pZ2h0IGRpZmZlciBmcm9tIHRoZSB2YWx1ZXMgPHN0cm9uZz5lc3RpbWF0ZWQ8L3N0cm9uZz4gYnkgdGhlIHNlcnZlciB0aGF0IGFyZSBkaXNwbGF5ZWQgaW4gdGhlCiAgICAgICAgICAgICJTdGF0ZSIgYW5kICJGaWxlcyIgcGFuZWxzIGluIHRoZSBzaWRlYmFyIGR1ZSB0byBzbGlnaHRseSBkaWZmZXJlbnQgaW1wbGVtZW50YXRpb25zLiBBbHNvIG5vdGUgdGhhdCB0aGVzZQogICAgICAgICAgICA8c3Ryb25nPmVzdGltYXRlZDwvc3Ryb25nPiB2YWx1ZXMgbWF5IGJlIGluYWNjdXJhdGUgc2luY2UgdGhleSBjYW4gYWxzbyB0YWtlIGluZm9ybWF0aW9uIHByZXNlbnQgaW4gdGhlCiAgICAgICAgICAgIEdDT0RFIGZpbGUgaW50byBhY2NvdW50LgogICAgICAgIAAKICAgICAgICAgICAgT2N0b1ByaW50IGN1cnJlbnRseSBvbmx5IGFsbG93cyB1cGxvYWRpbmcgYmFja3VwcyBvZiBhIG1heGltdW0gc2l6ZSBvZgogICAgICAgICAgICAlKHBsdWdpbl9iYWNrdXBfbWF4X3VwbG9hZF9zaXplX3N0cilzIHZpYSB0aGUgVUkuIEJhY2t1cHMgbGFyZ2VyIHRoYW4gdGhpcyBjYW4gb25seSBiZSByZXN0b3JlZCBieSBjb21tYW5kIGxpbmUsCiAgICAgICAgICAgIG9yIGJ5IGFkanVzdGluZyB0aGUgc2l6ZSBieSByZW1vdmluZyBsYXJnZSBjb250ZW50cyAobGlrZSB0aW1lbGFwc2VzKSBmcm9tIHRoZQogICAgICAgICAgICB6aXAgcHJpb3IgdG8gdXBsb2FkaW5nLiBCYWNrdXBzIGV4Y2VlZGluZyB0aGlzIHNpemUgbGltaXQgYXJlIG1hcmtlZCB3aXRoIGEKICAgICAgICAgICAgJShtYXJrZXIpcyB1cCB0aGVyZS4KICAgICAgICAACiAgICAgICAgICAgIFRoZSBzZXR0aW5ncyBoYXZlIGJlZW4gdXBkYXRlZCBvbiB0aGUgc2VydmVyLiBZb3UgbWF5IHJlbG9hZCBhbGwgc2V0dGluZ3MsCiAgICAgICAgICAgIG92ZXJ3cml0aW5nIGFueSBjaGFuZ2VzIHlvdSBtaWdodCBoYXZlIGRvbmUgbG9jYWxseSwgb3IgYWx0ZXJuYXRpdmVseQogICAgICAgICAgICBvbmx5IHJlbG9hZCB0aG9zZSBzZXR0aW5ncyB5b3UgaGF2ZW4ndCBjaGFuZ2VkIGxvY2FsbHkuCiAgICAgICAgAAogICAgICAgICAgICBUd28gb3IgbW9yZSBvZiB0aGUgZm9sZGVycyBjb25maWd1cmVkIHNoYXJlIGEgbG9jYXRpb24uIFRoaXMgaXMgbm90CiAgICAgICAgICAgIHN1cHBvcnRlZC4gWW91IG5lZWQgdG8gZml4IHRoaXMsIHVudGlsIHRoZW4gbm8gY2hhbmdlcyB0byB5b3VyIGZvbGRlcgogICAgICAgICAgICBjb25maWd1cmF0aW9uIHdpbGwgYmUgcGVyc2lzdGVkIHdoZW4gc2F2aW5nIHRoZSBzZXR0aW5ncy4KICAgICAgICAACiAgICAgICAgICAgIFlvdSBjYW4gYWRqdXN0IHRoZSBmdWxsIEZGTVBFRyBjb21tYW5kIGxpbmUgaGVyZSB0aGF0CiAgICAgICAgICAgIGlzIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIHRpbWVsYXBzZSByZWNvcmRpbmdzLCBlLmcuIHRvIGFkZCBhZGRpdGlvbmFsIGNvbW1hbmQgbGluZQogICAgICAgICAgICBwYXJhbWV0ZXJzIGFzIG5lZWRlZC4gU3VwcG9ydGVkIHBsYWNlaG9sZGVycyBhcmU6CiAgICAgICAgICAgIDxjb2RlPntmZm1wZWd9PC9jb2RlPiAoY29uZmlndXJlZCBwYXRoIHRvIGZmbXBlZyksIDxjb2RlPntmcHN9PC9jb2RlPiAoY29uZmlndXJlZCBmcmFtZXJhdGUpLAogICAgICAgICAgICA8Y29kZT57aW5wdXR9PC9jb2RlPiAoaW5wdXQgZmlsZXMpLCA8Y29kZT57dmlkZW9jb2RlY308L2NvZGU+IChjb25maWd1cmVkIHZpZGVvIGNvZGVjIHRvIHVzZSksCiAgICAgICAgICAgIDxjb2RlPnt0aHJlYWRzfTwvY29kZT4gKGNvbmZpZ3VyZWQgbnVtYmVyIG9mIHRocmVhZHMgdG8gdXNlKSwgPGNvZGU+e2JpdHJhdGV9PC9jb2RlPiAoY29uZmlndXJlZCBiaXRyYXRlIHRvIHVzZSksCiAgICAgICAgICAgIDxjb2RlPntjb250YWluZXJmb3JtYXR9PC9jb2RlPiAoY29uZmlndXJlZCBjb250YWluZXIgZm9ybWF0IHRvIHVzZSksIDxjb2RlPntmaWx0ZXJzfTwvY29kZT4gKGZpbHRlciBjaGFpbiBmb3IgZmxpcC9yb3RhdGUgJiB3YXRlcm1hcmspLAogICAgICAgICAgICA8Y29kZT57b3V0cHV0fTwvY29kZT4gKG91dHB1dCBmaWxlKS4KICAgICAgICAACiAgICAgICAgQW5vbnltb3VzIFVzYWdlIFRyYWNraW5nIGlzIDxzdHJvbmcgY2xhc3M9InRleHQtZGFuZ2VyIj5kaXNhYmxlZDwvc3Ryb25nPi4KICAgIAAKICAgICAgICBBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmcgaXMgPHN0cm9uZyBjbGFzcz0idGV4dC1zdWNjZXNzIj5lbmFibGVkPC9zdHJvbmc+LgogICAgAAogICAgICAgIENvbm5lY3Rpdml0eSBjaGVjayBpcyA8c3Ryb25nIGNsYXNzPSJ0ZXh0LWRhbmdlciI+ZGlzYWJsZWQ8L3N0cm9uZz4uCiAgICAACiAgICAgICAgQ29ubmVjdGl2aXR5IGNoZWNrIGlzIDxzdHJvbmcgY2xhc3M9InRleHQtc3VjY2VzcyI+ZW5hYmxlZDwvc3Ryb25nPi4KICAgIAAKICAgICAgICBQbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmcgaXMgPHN0cm9uZyBjbGFzcz0idGV4dC1kYW5nZXIiPmRpc2FibGVkPC9zdHJvbmc+LgogICAgAAogICAgICAgIFBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZyBpcyA8c3Ryb25nIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPmVuYWJsZWQ8L3N0cm9uZz4uCiAgICAACiAgICA8cD4KICAgICAgICA8c3Ryb25nPk9jdG9QcmludCBpcyBjdXJyZW50bHkgcHJpbnRpbmcsIHVwZGF0ZXMgYXJlIGRpc2FibGVkLjwvc3Ryb25nPgogICAgPC9wPgogICAgPHA+CiAgICAgICAgUnVubmluZyB1cGRhdGVzIGlzIG5vdCBzdXBwb3J0ZWQgd2hpbGUgcHJpbnRpbmcgaW4gb3JkZXIgdG8gbm90IHJpc2sgYW55IGtpbmQgb2YgZGlzcnVwdGlvbiB0byB0aGUgcHJpbnQgam9iLgogICAgICAgIFBsZWFzZSBsZXQgdGhlIHByaW50IGZpbmlzaCBiZWZvcmUgdHJ5aW5nIHRvIHVwZGF0ZS4KICAgIDwvcD4KAAogICAgPHA+CiAgICAgICAgPHN0cm9uZz5PY3RvUHJpbnQgaXMgcnVubmluZyBvbiBhIHRocm90dGxlZCBzeXN0ZW0sIHVwZGF0ZXMgYXJlIGRpc2FibGVkLjwvc3Ryb25nPgogICAgPC9wPgogICAgPHA+CiAgICAgICAgVG8gcmVkdWNlIHRoZSBsaWtlbGlob29kIG9mIHJ1bm5pbmcgaW50byB1cGRhdGUgcHJvYmxlbXMgb24gdGhyb3R0bGVkIGFuZCBoZW5jZSBwb3RlbnRpYWxseSB1bnN0YWJsZSBzeXN0ZW1zCiAgICAgICAgYXMgc2VlbiBpbiB0aGUgcGFzdCwgT2N0b1ByaW50IGRvZXNuJ3Qgc3VwcG9ydCB1cGRhdGluZyB1bmRlciBzdWNoIGNvbmRpdGlvbnMuIFBsZWFzZSBmaXggdGhlIGN1cnJlbnQgaXNzdWUKICAgICAgICBiZWZvcmUgdHJ5aW5nIHRvIHVwZGF0ZS4gVGFrZSBhIGxvb2sgYXQgdGhlIGRpc3BsYXllZCB3YXJuaW5nIGluIHRoZSBuYXZpZ2F0aW9uIGJhciB0byBsZWFybiBhYm91dCB3aGF0IGlzCiAgICAgICAgd3JvbmcgYW5kIHRvIGdldCBoaW50cyBvbiBob3cgdG8gc29sdmUgdGhlIHByb2JsZW0uCiAgICA8L3A+CiAgICA8cD4KICAgICAgICBSZWFkIG1vcmUgb24gdGhpcyBpbiA8YSBocmVmPSJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3BpLWlzc3VlcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dGhlIEZBUTwvYT4uCiAgICA8L3A+CgAKICAgIDxwPgogICAgICAgIDxzdHJvbmc+VGhlcmUgaXMgbm90IGVub3VnaCBmcmVlIGRpc2sgc3BhY2UgYXZhaWxhYmxlIHRvIHJ1biBhbiB1cGRhdGUuPC9zdHJvbmc+CiAgICA8L3A+CiAgICA8cD4KICAgICAgICBUbyByZWR1Y2UgdGhlIGxpa2VsaWhvb2Qgb2YgcnVubmluZyBpbnRvIHVwZGF0ZSBwcm9ibGVtcyBkdWUgdG8gaW5zdWZmaWVudCBkaXNrIHNwYWNlLCBPY3RvUHJpbnQgcmVxdWlyZXMKICAgICAgICBhIG1pbmltdW0gb2YgJShtaW5fZnJlZV9zdG9yYWdlKXMgZnJlZSBkaXNrIHNwYWNlIGluIHZhcmlvdXMgbG9jYXRpb25zOgogICAgPC9wPgoACiAgICA8cD4KICAgICAgICA8c3Ryb25nPlRoaXMgdmVyc2lvbiBvZiB0aGUgUHl0aG9uIGVudmlyb25tZW50IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIGRpcmVjdCB1cGRhdGVzLjwvc3Ryb25nPgogICAgPC9wPgogICAgPHA+CiAgICAgICAgVG8gcmVkdWNlIHRoZSBsaWtlbGlob29kIG9mIHJ1bm5pbmcgaW50byB1cGRhdGUgcHJvYmxlbXMgaW4gb3V0ZGF0ZWQgZW52aXJvbm1lbnRzLCB0aGUgZm9sbG93aW5nIG1pbmltYWwKICAgICAgICB2ZXJzaW9ucyBhcmUgcmVxdWlyZWQgdG8gdXNlIHRoaXMgdXBkYXRlciB0byB1cGRhdGUgT2N0b1ByaW50IG9yIGFueSBpbnN0YWxsZWQgcGx1Z2luczoKICAgIDwvcD4KAAogICAgPHA+CiAgICAgICAgPHN0cm9uZz5Zb3UgYXJlIHJ1bm5pbmcgYSBub24tcmVsZWFzZSB2ZXJzaW9uIG9mIE9jdG9QcmludCBidXQgYXJlIHRyYWNraW5nIE9jdG9QcmludAogICAgICAgIHJlbGVhc2VzLjwvc3Ryb25nPgogICAgPC9wPjxwPgogICAgICAgIFlvdSBwcm9iYWJseSB3YW50IE9jdG9QcmludCB0byB0cmFjayB0aGUgbWF0Y2hpbmcgZGV2ZWxvcG1lbnQgdmVyc2lvbiBpbnN0ZWFkLgogICAgICAgIElmIHlvdSBoYXZlIGEgbG9jYWwgT2N0b1ByaW50IGNoZWNrb3V0IGZvbGRlciBzd2l0Y2hlZCB0byBhbm90aGVyIGJyYW5jaCwKICAgICAgICA8c3Ryb25nPnNpbXBseSBzd2l0Y2hpbmcgb3ZlciB0byAiQ29tbWl0IiB0cmFja2luZzwvc3Ryb25nPiB3aWxsIGFscmVhZHkKICAgICAgICB0YWtlIGNhcmUgb2YgdGhhdC4gT3RoZXJ3aXNlIHBsZWFzZSB0YWtlIGEgbG9vayBhdCB0aGUKICAgICAgICA8YSBocmVmPSJodHRwOi8vZG9jcy5vY3RvcHJpbnQub3JnL2VuL21hc3Rlci9idW5kbGVkcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+RG9jdW1lbnRhdGlvbjwvYT4uCiAgICA8L3A+CgAKICAgIDxwPgogICAgICAgIFBsZWFzZSB0YWtlIGEgbG9vayBhdCA8YSBocmVmPSJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL2luc3VmZmllbmN0LWRpc2stc3BhY2UiIHRhcmdldD0iX2JsYW5rIj50aGlzIEZBUSBlbnRyeSBvbiBob3cgdG8gcHJvY2VlZDwvYT4uCiAgICA8L3A+CgAKICAgIDxwPgogICAgICAgIFBsZWFzZSB0YWtlIGEgbG9vayBhdCA8YSBocmVmPSJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3Vuc3VwcG9ydGVkLXB5dGhvbi1lbnZpcm9ubWVudCIgdGFyZ2V0PSJfYmxhbmsiPnRoaXMgRkFRIGVudHJ5IG9uIGhvdyB0byBwcm9jZWVkPC9hPi4KICAgIDwvcD4KAAogICAgPHN0cm9uZz5UbyBwcm90ZWN0IGFnYWluc3Qga25vd24gc2V2ZXJlIGlzc3VlcyB3aXRoIGNlcnRhaW4gdmVyc2lvbnMgb2YgdGhpcmQgcGFydHkgcGx1Z2luczwvc3Ryb25nPiwgT2N0b1ByaW50IHN1cHBvcnRzCiAgICB0aGUgdXNlIG9mIGEgY2VudHJhbGl6ZWQgcGx1Z2luIHZlcnNpb24gYmxhY2tsaXN0IHRvIGF1dG9tYXRpY2FsbHkgZGlzYWJsZSBzdWNoIHBsdWdpbnMgYmVmb3JlIHRoZXkgY2FuIGludGVyZmVyZQogICAgd2l0aCBub3JtYWwgb3BlcmF0aW9uLgoACiAgICBCeSBkZWZhdWx0LCBPY3RvUHJpbnQgd2lsbCB1c2UgdGhlIGJsYWNrbGlzdCBob3N0ZWQgYXQgPGNvZGU+cGx1Z2lucy5vY3RvcHJpbnQub3JnL2JsYWNrbGlzdC5qc29uPC9jb2RlPiB3aGljaCB5b3UKICAgIGNhbiBhbHNvIHRha2UgYSBsb29rIGF0IGluIGEgbW9yZSBodW1hbiByZWFkYWJsZSBmb3JtYXQgPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiPmhlcmU8L2E+LgoACiAgICBFdmVuIHdpdGggT2N0b1ByaW50IGF0dGFjaGVkIHlvdSBzaG91bGQgPHN0cm9uZyBjbGFzcz0idGV4dC1lcnJvciI+bmV2ZXIgbGVhdmUKICAgIHlvdXIgcHJpbnRlciBydW5uaW5nIGNvbXBsZXRlbHkgdW5hdHRlbmRlZDwvc3Ryb25nPi4gVGhlIGVsZWN0cm9uaWNzIGluIG91ciBjb25zdW1lciBwcmludGVycyBjYW4gYW5kCiAgICBzb21ldGltZXMgc2FkbHkgZG8gY2F0Y2ggZmlyZSwgc28gc3RheSBvciBoYXZlIHNvbWVvbmUgZWxzZSBzdGF5IGNsb3NlIGVub3VnaCB0byBwaHlzaWNhbGx5IGludGVydmVuZQogICAgaW4gY2FzZSBvZiBzdWNoIGNhdGFzdHJvcGhpYyBmYWlsdXJlLgoACiAgICBGaW5hbGx5LCBwbGVhc2UgZGVjaWRlIG9uIHdoZXRoZXIgdG8gZW5hYmxlIG9yIGRpc2FibGUgdGhlIGNvbm5lY3Rpdml0eSBjaGVjay4gWW91IG1heSBjaGFuZ2UgdGhlIGNvbmZpZ3VyYXRpb24gYXQKICAgIGFueSB0aW1lIHRocm91Z2ggU2V0dGluZ3MgPiBTZXJ2ZXIgcmlnaHQgZnJvbSB3aXRoaW4gT2N0b1ByaW50LgoACiAgICBGb3IgZGV0YWlscyBvbiB3aGF0IGdldHMgdHJhY2tlZCwgcGxlYXNlIHJlZmVyIHRvIDxhIGhyZWY9Imh0dHBzOi8vdHJhY2tpbmcub2N0b3ByaW50Lm9yZyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dHJhY2tpbmcub2N0b3ByaW50Lm9yZzwvYT4KICAgIGFuZCBhbHNvIHRoZSA8YSBocmVmPSJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmcvcHJpdmFjeSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UHJpdmFjeSBQb2xpY3kgYXQgdHJhY2tpbmcub2N0b3ByaW50Lm9yZzwvYT4uCgAKICAgIElmIGl0IGlzIGRpc2FibGVkIE9jdG9QcmludCB3aWxsIGFsd2F5cyBhc3N1bWUgdG8gaGF2ZSBhIHdvcmtpbmcgY29ubmVjdGlvbiB0byB0aGUgaW50ZXJuZXQuCiAgICBJZiB0aGF0IHNob3VsZCBub3QgYWN0dWFsbHkgYmUgdGhlIGNhc2UsIHNlcnZlciBzdGFydHVwcywgdXBkYXRlIGNoZWNrcyBhbmQgdGhlIGxpa2UgbWlnaHQgdGFrZSBsb25nZXIuCgAKICAgIElmIHRoZSBjb25uZWN0aXZpdHkgY2hlY2sgaXMgZW5hYmxlZCwgT2N0b1ByaW50IHdpbGwgcmVndWxhcmx5IGNoZWNrIGlmIGl0J3MgY29ubmVjdGVkIHRvIHRoZSBpbnRlcm5ldC4KICAgIFRoaXMgaXMgPHN0cm9uZz51c2VmdWwgdG8gcHJldmVudCByZXNvdXJjZSBpbnRlbnNpdmUgb3BlcmF0aW9uczwvc3Ryb25nPiAoc3VjaCBhcyBjaGVja2luZyBmb3IgdXBkYXRlcykgaWYgaXQncyBhbHJlYWR5CiAgICBjbGVhciB0aGF0IHRoZXkgd29uJ3Qgc3VjY2VlZCBhbnlob3cuCgAKICAgIElmIHlvdSBhbHNvIHdhbnQgdG8gY2hlY2sgaWYgbmFtZSByZXNvbHV0aW9uIHdvcmtzIChzdHJvbmdseSByZWNvbW1lbmRlZCksIGRlZmluZSBhIGhvc3QgbmFtZQogICAgdG8gY2hlY2sgbmFtZSByZXNvbHV0aW9uIGFnYWluc3QuIElmIHlvdSBkb24ndCBrbm93IHdoYXQgdG8gc2V0IGhlcmUsIHRoZSBkZWZhdWx0IHZhbHVlCiAgICAoT2N0b1ByaW50J3MgZG9tYWluKSBzaG91bGQgd29yay4gSWYgeW91IGRvbid0IHdhbnQgdG8gcGVyZm9ybSByZWd1bGFyIHJlc29sdXRpb24gY2hlY2tzIGFsb25nCiAgICBzaWRlIHdpdGggdGhlIGdlbmVyYWwgY29ubmVjdGl2aXR5IGNoZWNrLCBsZWF2ZSB0aGUgZmllbGQgZW1wdHkuCgAKICAgIEl0IGxvb2tzIGxpa2UgT2N0b1ByaW50IGhhcyBjdXJyZW50bHkgbm8gY29ubmVjdGlvbiB0byB0aGUgaW50ZXJuZXQuIER1ZSB0byB0aGF0IGl0J3Mgbm90IHBvc3NpYmxlCiAgICB0byBpbnN0YWxsIG5ldyBwbHVnaW5zIGZyb20gdGhlIHBsdWdpbiByZXBvc2l0b3J5IG9yIGFyY2hpdmUgVVJMcy4KAAogICAgT2N0b1ByaW50IGNvbWVzIHByZWNvbmZpZ3VyZWQgdG8gcGVyZm9ybSB0aGUgY29ubmVjdGl2aXR5IGNoZWNrIGV2ZXJ5IDE1IG1pbnV0ZXMuIFlvdSBtYXkgY2hhbmdlIHRoZSB2YWx1ZSBoZXJlLgoACiAgICBPY3RvUHJpbnQgY29tZXMgcHJlY29uZmlndXJlZCB0byB1dGlsaXplIEdvb2dsZSdzIEROUyBzZXJ2ZXIgPGNvZGU+OC44LjguODwvY29kZT4sIHBvcnQgNTMgZm9yIHRoZSBjb25uZWN0aXZpdHkgY2hlY2sgKGlmCiAgICBpdCdzIGVuYWJsZWQpLiBJZiB5b3UgaGF2ZSBjb25jZXJucyBhYm91dCB1c2luZyB0aGF0LCBkZWZpbmUgdGhlIElQIGFuZCBwb3J0IG9mIGEgZGlmZmVyZW50IG9ubGluZSBzZXJ2ZXIgdGhhdCB5b3UKICAgIHRydXN0IGFuZCB0aGF0IGhhcyBhIGhpZ2ggYXZhaWxhYmlsaXR5LgoACiAgICBQbGVhc2UgY29uZmlndXJlIHRoZSA8c3Ryb25nPmNoZWNrb3V0IGZvbGRlcjwvc3Ryb25nPiBvZiBPY3RvUHJpbnQsIG90aGVyd2lzZQogICAgdGhpcyBwbHVnaW4gd29uJ3QgYmUgYWJsZSB0byB1cGRhdGUgaXQuIENsaWNrIG9uIHRoZSA8aSBjbGFzcz0iZmFzIGZhLXdyZW5jaCI+PC9pPiBidXR0b24KICAgIHRvIGRvIHRoaXMuIEFsc28gcmVmZXIgdG8gdGhlIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5vY3RvcHJpbnQub3JnL2VuL21hc3Rlci9idW5kbGVkcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+RG9jdW1lbnRhdGlvbjwvYT4uCgAKICAgIFBsZWFzZSBjb25zaWRlciA8c3Ryb25nPjxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5zdXBwb3J0aW5nIE9jdG9QcmludCdzIG9uZ29pbmcgZGV2ZWxvcG1lbnQ8L2E+PC9zdHJvbmc+LAogICAgd2hpY2ggY2FuIG9ubHkgY29udGludWUgd2l0aCBmdW5kaW5nIGJ5IHVzZXJzIGxpa2UgeW91ISBZb3UgY2FuIGFsc28gZmluZCB0aGlzIGxpbmsgaW4gdGhlICJBYm91dCIgZGlhbG9nLjxicj4KICAgIDxzdHJvbmc+VGhhbmsgeW91ITwvc3Ryb25nPgoACiAgICBQbGVhc2UgZGVjaWRlIHdoZXRoZXIgdG8gYWxsb3cgZmV0Y2ggYW5kIHVzZSBvZiB0aGlzIGNlbnRyYWxpemVkIGJsYWNrbGlzdCBzdGFydGluZyB3aXRoIHRoZSBuZXh0IHNlcnZlciBzdGFydC4KICAgIFlvdSBtYXkgYWxzbyBjaGFuZ2UgeW91ciBkZWNpc2lvbiBhdCBhbnkgdGltZSB0aHJvdWdoIFNldHRpbmdzID4gU2VydmVyIHJpZ2h0IGZyb20gd2l0aGluIE9jdG9QcmludC4KAAogICAgU2FmZSBtb2RlIGlzIGN1cnJlbnRseSBhY3RpdmUuIEFsbCB0aGlyZCBwYXJ0eSBwbHVnaW5zIGFyZSBkaXNhYmxlZCBhbmQgY2Fubm90IGJlCiAgICBlbmFibGVkLiBJbnN0YWxsYXRpb24gb2YgcGx1Z2luIHBhY2thZ2VzIGlzIGRpc2FibGVkLgoACiAgICBTb21lIHBsdWdpbnMgZHVyaW5nIHRoZSBsYXN0IHJlc3RvcmUgY291bGQgbm90IGJlIGlkZW50aWZpZWQgYW5kIGhlbmNlIG5vdCBhdXRvbWF0aWNhbGx5IGluc3RhbGxlZC4KICAgIFBsZWFzZSBpbnN0YWxsIHRoZW0gbWFudWFsbHksIHRoZXkgYXJlIGxpc3RlZCBiZWxvdyBpbmNsdWRpbmcgdGhlaXIgc3RhdGVkIGhvbWVwYWdlczoKICAgIAAKICAgIFRoYW5rIHlvdSBmb3IgaW5zdGFsbGluZyBPY3RvUHJpbnQhCgAKICAgIFRoZSA8Y29kZT5waXA8L2NvZGU+IGNvbW1hbmQgY291bGQgbm90IGJlIGZvdW5kIG9yIGRvZXMgbm90IHdvcmsgY29ycmVjdGx5CiAgICBmb3IgdGhpcyBpbnN0YWxsYXRpb24gb2YgT2N0b1ByaW50IC0gcGxlYXNlIGNvbnN1bHQgdGhlIGxvZyBmaWxlIGZvciBkZXRhaWxzCiAgICBhbmQgaWYgbmVjZXNzYXJ5IGNvbmZpZ3VyZSBpdCBtYW51YWxseS4gTm8gaW5zdGFsbGF0aW9uIGFuZCB1bmluc3RhbGxhdGlvbiBvZiBwbHVnaW4KICAgIHBhY2thZ2VzIGlzIHBvc3NpYmxlIHdoaWxlIDxjb2RlPnBpcDwvY29kZT4gaXMgdW5hdmFpbGFibGUuCgAKICAgIFRoZSBzeXN0ZW0gT2N0b1ByaW50IGlzIHJ1bm5pbmcgb24gaXMgY3VycmVudGx5IHRocm90dGxlZC4gRHVlIHRvIHRoYXQgaXQncyBub3QgcG9zc2libGUgdG8gaW5zdGFsbCBuZXcKICAgIHBsdWdpbnMgaW4gb3JkZXIgdG8gYXZvaWQgcG9zc2libGUgaXNzdWVzIGNhdXNlZCBieSBzeXN0ZW0gaW5zdGFiaWxpdHkuIFJlYWQgbW9yZSBvbgogICAgdGhpcyBpbiA8YSBocmVmPSJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3BpLWlzc3VlcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dGhlIEZBUTwvYT4uCgAKICAgIFRoZXJlIGFwcGVhcnMgdG8gaGF2ZSBiZWVuIGFuIGVycm9yIHJldHJpZXZpbmcgdGhlIHBsdWdpbiBkYXRhIGZyb20gdGhlIGJhY2tlbmQuIFBsZWFzZSByZXBvcnQgdGhpcwogICAgaW4gdGhlIGJ1ZyB0cmFja2VyICYgYmUgc3VyZSB0byBpbmNsdWRlIGFsbCByZXF1ZXN0ZWQgaW5mb3JtYXRpb24uCgAKICAgIFRoaXMgd2l6YXJkIHdpbGwgZ3VpZGUgeW91IHRocm91Z2ggdGhlIGZpbmFsIHN0ZXBzIHRvIGdldCB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSBhbGwgc2V0IHVwIGFuZCByZWFkeSB0byBnby4gV2UnbGwKICAgIGdldCB5b3UgcHJpbnRpbmcgaW4gbm8gdGltZSEKAAogICAgVG8gcHJvdGVjdCBhZ2FpbnN0IGtub3duIHNldmVyZSBpc3N1ZXMgd2l0aCBjZXJ0YWluIHZlcnNpb25zIG9mIHRoaXJkIHBhcnR5IHBsdWdpbnMsIE9jdG9QcmludCBzdXBwb3J0cyB0aGUgdXNlCiAgICBvZiBhIGNlbnRyYWxpemVkIHBsdWdpbiB2ZXJzaW9uIGJsYWNrbGlzdCB0byBhdXRvbWF0aWNhbGx5IGRpc2FibGUgc3VjaCBwbHVnaW4gdmVyc2lvbnMgYmVmb3JlIHRoZXkgY2FuIGludGVyZmVyZSB3aXRoCiAgICBub3JtYWwgb3BlcmF0aW9uLCBhbGxvd2luZyB5b3UgdG8gdW5pbnN0YWxsIG9yIHVwZGF0ZSB0aGVtIHRvIGEgbmV3ZXIgdmVyc2lvbi4KAAogICAgV2l0aCBhbGwgdGhhdCBiZWluZyBzYWlkLCA8c3Ryb25nPkhhcHB5IGFuZCBTYWZlIFByaW50aW5nPC9zdHJvbmc+IQoACiAgICBZb3UgYWxzbyBzaG91bGQgPHN0cm9uZyBjbGFzcz0idGV4dC1lcnJvciI+bmV2ZXIgbWFrZSB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSBhdmFpbGFibGUgZm9yIGV2ZXJ5b25lIG9uIHRoZQogICAgcHVibGljIGludGVybmV0PC9zdHJvbmc+LCBldmVuIHdpdGggQWNjZXNzIENvbnRyb2wgZW5hYmxlZC4gWW91ciBpbnN0YW5jZSA8ZW0+d2lsbDwvZW0+IGJlIGZvdW5kLCBhbmQgYmFkIHBlb3BsZQogICAgPGVtPndpbGw8L2VtPiB0cnkgdG8gYWJ1c2UgaXQuIERvbid0IHB1dCB5b3Vyc2VsZiBhdCByaXNrLAogICAgPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dXNlIGEgc2FmZSB3YXkgdG8gYWNjZXNzIHlvdXIgaW5zdGFuY2UgcmVtb3RlbHk8L2E+LgoACiAgICBZb3VyIE9jdG9QcmludCBpbnN0YWxsYXRpb24gaXMgbm93IGFsbCBzZXQgdXAgYW5kIHJlYWR5IHRvIGdvLgoACjxwPgogICAgQW5vbnltb3VzIHVzYWdlIHRyYWNraW5nIHByb3ZpZGVzIHZhbHVhYmxlIGluc2lnaHRzIGludG8gaG93IG1hbnkgaW5zdGFuY2VzIHJ1bm5pbmcgd2hhdCB2ZXJzaW9ucyBvZiBPY3RvUHJpbnQgYXJlIG91dCB0aGVyZSwKICAgIHdoZXRoZXIgdGhleSBhcmUgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRpbmcgcHJpbnQgam9icyBhbmQgdmFyaW91cyBvdGhlciBtZXRyaWNzLgo8L3A+CjxwPgogICAgQnkgZW5hYmxpbmcgaXQgeW91IGhlbHAgdG8gaWRlbnRpZnkgcHJvYmxlbXMgd2l0aCBuZXcgcmVsZWFzZXMgYW5kIHJlbGVhc2UgY2FuZGlkYXRlcyBlYXJseSBvbiwgYW5kIHRvIGJldHRlcgogICAgdGFpbG9yIE9jdG9QcmludCdzIGZ1dHVyZSBkZXZlbG9wbWVudCB0byBhY3R1YWwgdXNlLgo8L3A+CgAKPHA+CiAgICBFcnJvciB0cmFja2luZyB3aWxsIGNhdXNlIGFueSBsb2dnZWQgZXhjZXB0aW9ucyBpbiB0aGUgc2VydmVyIGFuZCB0aGUgYnJvd3NlciBpbnRlcmZhY2UgdG8gYmUgc2VudAogICAgdG8gT2N0b1ByaW50J3MgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVyZXIiPlNlbnRyeSBpbnN0YW5jZTwvYT4uCjwvcD4KPHA+CiAgICBCeSBlbmFibGluZyBpdCB5b3UgaGVscCB0byBnYXRoZXIgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gdGhlIGNhdXNlIG9mIGJ1Z3Mgb3Igb3RoZXIgaXNzdWVzLiBUaGlzIGlzIGVzcGVjaWFsbHkgdmFsdWFibGUKICAgIG9uIHJlbGVhc2UgY2FuZGlkYXRlcywgd2hpY2ggaXMgd2h5IHRoaXMgcGx1Z2luIHdpbGwgYWxzbyBwcm9tcHQgeW91IHRvIGVuYWJsZSBlcnJvciB0cmFja2luZyBpZiBpdCBkZXRlY3RzIHRoYXQKICAgIHlvdSBhcmUgc3Vic2NyaWJlZCB0byBhbiBSQyByZWxlYXNlIGNoYW5uZWwuCjwvcD4KPHA+CiAgICBQbGVhc2UgZW5hYmxlIHRoaXMgaWYgeW91IGFyZSBydW5uaW5nIGEgcmVsZWFzZSBjYW5kaWRhdGUsIG9yIGFyZSBwcm9tcHRlZCB0byBkbyBzbyB3aGlsZSBkZWJ1Z2dpbmcgYW4gaXNzdWUgdGhhdCB5b3UgcmVwb3J0ZWQuCjwvcD4KAAo8cD4KICAgIFRoZSBFcnJvciBUcmFja2luZyBwbHVnaW4gaXMgdXNpbmcgYSBTZW50cnkgaW5zdGFuY2Uga2luZGx5IHByb3ZpZGVkIGJ5CiAgICA8YSBocmVmPSJodHRwczovL3NlbnRyeS5pby8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+c2VudHJ5LmlvPC9hPi4gRm9yIGluZm9ybWF0aW9uIG9uIHRoZWlyIHNlcnZpY2UKICAgIHBsZWFzZSByZWZlciB0byB0aGVpciA8YSBocmVmPSJodHRwczovL3NlbnRyeS5pby9zZWN1cml0eS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+U2VjdXJpdHkgJiBDb21wbGlhbmNlIGRvY3VtZW50YXRpb248L2E+CiAgICBhbmQgdGhlaXIgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vcHJpdmFjeS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+UHJpdmFjeSBQb2xpY3k8L2E+Lgo8L3A+CgAiPHN0cm9uZz4lKGFwcClzPC9zdHJvbmc+IiBoYXMgcmVxdWVzdGVkIGFjY2VzcyB0byBjb250cm9sIE9jdG9QcmludCB0aHJvdWdoIHRoZSBBUEkuACJIZWxsbyIgY29tbWFuZAAiV2h5PyIAJShjb3VudClkIGVhcmxpZXIgYWN0aW9uACUoY291bnQpZCBlYXJsaWVyIGFjdGlvbnMuLi4AJShkYXlzKWQgZGF5ACUoZGF5cylkIGRheXMAJShkYXlzKWQuNSBkYXlzACUoaG91cikwMmQ6JShtaW51dGUpMDJkOiUoc2Vjb25kKTAyZAAlKGhvdXJzKWQgaG91cgAlKGhvdXJzKWQgaG91cnMAJShob3VycylkLjUgaG91cnMAJShtaW51dGVzKWQgbWluACUobWludXRlcylkIG1pbnV0ZXMAJShuYW1lKXM6ICUodmVyc2lvbilzACUoc2Vjb25kcylkIHNlYwArMQAtMQAuLi4gZnJvbSBVUkwALi4uIGZyb20gYW4gdXBsb2FkZWQgZmlsZQAuLi4gZnJvbSB0aGUgPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiPlBsdWdpbiBSZXBvc2l0b3J5PC9hPgAxIGRheQAxIGhvdXIAMiBtaW51dGVzADNyZCBwYXJ0eQA0MCBtaW51dGVzADUwIG1pbnV0ZXMAPGNvZGU+RzkwPC9jb2RlPi88Y29kZT5HOTE8L2NvZGU+IG92ZXJyaWRlcyByZWxhdGl2ZSBleHRydWRlciBtb2RlADxjb2RlPmJ1c3k8L2NvZGU+IHByb3RvY29sIHN1cHBvcnQgZGV0ZWN0ZWQAPGNvZGU+YnVzeTwvY29kZT4gcHJvdG9jb2wgc3VwcG9ydCBub3QgZGV0ZWN0ZWQAPGNvZGU+b2s8L2NvZGU+IGJ1ZmZlciBzaXplADxjb2RlPnBsdWdpbnRpbWluZ3MubG9nPC9jb2RlPiBpcyBlbmFibGVkADxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IGlzIGVuYWJsZWQAPHA+CiAgICAgICAgWW91J3ZlIHNlbGVjdGVkIDxzdHJvbmcgZGF0YS1iaW5kPSJ0ZXh0OiBzZWxlY3RlZEZpbGUubmFtZSI+PC9zdHJvbmc+IGZvciBwcmludGluZyB3aGljaCBoYXMgYSBzaXplIG9mCiAgICAgICAgPHN0cm9uZyBkYXRhLWJpbmQ9InRleHQ6IGZvcm1hdFNpemUoc2VsZWN0ZWRGaWxlLnNpemUoKSkiPjwvc3Ryb25nPi4gRGVwZW5kaW5nIG9uIHlvdXIgbWFjaGluZSB0aGlzCiAgICAgICAgbWlnaHQgYmUgdG9vIGxhcmdlIGZvciByZW5kZXJpbmcgYW5kIGNhdXNlIHlvdXIgYnJvd3NlciB0byBiZWNvbWUgdW5yZXNwb25zaXZlIG9yIGNyYXNoLgogICAgPC9wPgoKICAgIDxwPgogICAgICAgIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byB2aXN1YWxpemUgdGhpcyBmaWxlIG5ldmVydGhlbGVzcz8KICAgIDwvcD4APHA+CiAgICBCeSBkZWZhdWx0LCBPY3RvUHJpbnQgd2lsbCB1cGRhdGUgaXRzZWxmIHZpYSA8Y29kZT5waXA8L2NvZGU+IHRvIHB1Ymxpc2hlZCByZWxlYXNlcyBvciBjb21taXRzIHB1c2hlZAogICAgdG8gR2l0aHViLiBPY3RvUHJpbnQgY2FuIGFsc28gdXBkYXRlIGl0c2VsZiB2aWEgPGNvZGU+Z2l0PC9jb2RlPiB0byBhcmJpdHJhcnkgZGV2ZWxvcG1lbnQgYnJhbmNoZXMgeW91IG5lZWQgdG8gY2hlY2sgb3V0IG1hbnVhbGx5LgogICAgSWYgeW91IHdhbnQgdG8gZG8gdGhhdCB0aG91Z2ggaXQgbmVlZHMgdG8ga25vdyBpdHMgY2hlY2tvdXQgZm9sZGVyLiBZb3UgY2FuIGNvbmZpZ3VyZSB0aGF0IGhlcmUuCjwvcD4APHA+CiAgICBJZiB5b3UgYXJlIHJ1bm5pbmcgYSByZWxlYXNlIHZlcnNpb24gb2YgT2N0b1ByaW50LCBsZWF2ZSBhdCAiUmVsZWFzZSIgdHJhY2tpbmcuIElmIHlvdSBhcmUgcnVubmluZyBhIGRpZmZlcmVudAogICAgYnJhbmNoIGhvd2V2ZXIgb24gYSBtYW51YWwgY2hlY2tvdXQsIHlvdSBzaG91bGQgc2V0dXAgIkxvY2FsIENoZWNrb3V0IiB0cmFja2luZy4gRm9yIG1vcmUgc3BlY2lhbCBjYXNlcyB5b3UgbWlnaHQKICAgIHdhbnQgdG8gc2VsZWN0ICJHaXRodWIgQ29tbWl0IiB0cmFja2luZyAtIHlvdSBub3JtYWxseSBzaG91bGRuJ3QgbmVlZCB0byBob3dldmVyLgo8L3A+ADxwPgogICAgSWYgeW91IGhhdmUgYSB3ZWJjYW0sIHlvdSBtYXkgbm93IGNvbmZpZ3VyZSBpdCBoZXJlLgo8L3A+ADxwPgogICAgSWYgeW91IHdvdWxkIGxpa2UgdG8gcmVzdG9yZSBPY3RvUHJpbnQgY29uZmlndXJhdGlvbiBmcm9tIGEgYmFja3VwIG5vdyBpcyB0aGUgdGltZS4KPC9wPgA8cD4KICAgIEl0IGxvb2tzIGxpa2UgeW91IGhhdmVuJ3QgY29uZmlndXJlZCBhY2Nlc3MgY29udHJvbCB5ZXQsIHdoaWNoIGlzIG5vdyBtYW5kYXRvcnkuCiAgICBQbGVhc2UgPHN0cm9uZz5zZXQgdXAgYSB1c2VybmFtZSBhbmQgcGFzc3dvcmQ8L3N0cm9uZz4gZm9yIHRoZQogICAgaW5pdGlhbCBhZG1pbmlzdHJhdG9yIGFjY291bnQgd2hvIHdpbGwgaGF2ZSBmdWxsIGFjY2VzcyB0byBib3RoIHRoZSBwcmludGVyIGFuZAogICAgT2N0b1ByaW50J3Mgc2V0dGluZ3M6CjwvcD4APHA+CiAgICBPY3RvUHJpbnQgc3VwcG9ydHMgY2FsbGluZyBleHRlcm5hbCBjb21tYW5kcyBpbiBvcmRlciB0byByZXN0YXJ0IGl0c2VsZiBvciByZXN0YXJ0aW5nIGFuZC9vciBzaHV0dGluZwogICAgZG93biB0aGUgc3lzdGVtIGl0IGlzIHJ1bm5pbmcgb24uIFlvdSBtYXkgY29uZmlndXJlIHRob3NlIGhlcmUuCjwvcD4APHA+CiAgICBUaGUgPHN0cm9uZz5TdHJlYW0gVVJMPC9zdHJvbmc+IGlzIHRoZSBVUkwgT2N0b1ByaW50IHVzZXMgdG8gZW1iZWQgdGhlCiAgICBhY3R1YWwgd2ViY2FtIHN0cmVhbSAod2hpY2ggc2hvdWxkIGJlIGFuIE1KUEcgc3RyZWFtKSBpbnRvIHRoZSB3ZWIKICAgIGludGVyZmFjZS4gVGhpcyBuZWVkcyB0byBiZSByZWFjaGFibGUgPHN0cm9uZz5mcm9tIHlvdXIgYnJvd3Nlcjwvc3Ryb25nPi4KPC9wPjxwPgogICAgSXQgbWF5IGJlCiAgICA8dWw+CiAgICAgICAgPGxpPmEgZnVsbHkgcXVhbGlmaWVkIFVSTCAoPGNvZGU+aHR0cDovL2hvc3Q6cG9ydC9wYXRoPC9jb2RlPiksPC9saT4KICAgICAgICA8bGk+YSBVUkwgZGVmYXVsdGluZyB0byB0aGUgcHJvdG9jb2wgdXNlZCBmb3IgYWNjZXNzaW5nIHRoZSB3ZWIKICAgICAgICAgICAgaW50ZXJmYWNlIChlLmcuIDxjb2RlPi8vaG9zdDpwb3J0L3BhdGg8L2NvZGU+KSw8L2xpPgogICAgICAgIDxsaT5hbiBhYnNvbHV0ZSBwYXRoIG9uIHRoZSBzYW1lIGhvc3QgYXMgT2N0b1ByaW50IChlLmcuIDxjb2RlPi9hYnNvbHV0ZS9wYXRoPC9jb2RlPikgb3I8L2xpPgogICAgICAgIDxsaT5hIHJlbGF0aXZlIHBhdGggb24gdGhlIHNhbWUgaG9zdCBhcyBPY3RvUHJpbnQgKGUuZy4gPGNvZGU+cmVsYXRpdmUvcGF0aDwvY29kZT4pPC9saT4KICAgIDwvdWw+CjwvcD48cD4KICAgIFRoZSA8c3Ryb25nPlNuYXBzaG90IFVSTDwvc3Ryb25nPiBpcyB0aGUgVVJMIE9jdG9QcmludCB1c2VzIHRvIGZldGNoIHNpbmdsZQogICAgaW1hZ2VzIGZyb20gdGhlIHdlYmNhbSBmb3IgY3JlYXRpbmcgdGltZWxhcHNlIHJlY29yZGluZ3MuIFRoaXMgbmVlZHMgdG8gYmUKICAgIGEgZnVsbHkgcXVhbGlmaWVkIFVSTCByZWFjaGFibGUgPHN0cm9uZz5mcm9tIHRoZSBPY3RvUHJpbnQgc2VydmVyPC9zdHJvbmc+Lgo8L3A+ADxwPgogICAgVG8gcmVuZGVyIHRoZSBzbmFwc2hvdHMgaW50byB0aW1lbGFwc2UgcmVjb3JkaW5ncywgT2N0b1ByaW50IGFsc28gbmVlZHMgdG8KICAgIGtub3cgdGhlIGNvcnJlY3QgPHN0cm9uZz5wYXRoIHRvIEZGTVBFRzwvc3Ryb25nPi4KPC9wPgA8cD4KICAgIFlvdSBhcmUgYWJvdXQgdG8gc2V0IHVwIE9jdG9QcmludCA8c3BhbiBkYXRhLWJpbmQ9InRleHQ6IG9jdG9wcmludERhdGEuY3VycmVudCI+PC9zcGFuPgogICAgYnV0IDxzcGFuIGRhdGEtYmluZD0idGV4dDogb2N0b3ByaW50RGF0YS5hdmFpbGFibGUiPjwvc3Bhbj4gaXMgYXZhaWxhYmxlLiBJdCBpcyBzdHJvbmdseQogICAgcmVjb21tZW5kZWQgdG8gdXBkYXRlIHRvIHRoZSBsYXRlc3QgdmVyc2lvbiBiZWZvcmUgeW91IGNvbnRpbnVlLgo8L3A+ADxwPiUocmF0aW8pZCUlIG9mIHRyYW5zbWl0dGVkIGxpbmVzIGhhdmUgdHJpZ2dlcmVkIHJlc2VuZCByZXF1ZXN0cy4gVGhlIGNvbW11bmljYXRpb24gd2l0aCB0aGUgcHJpbnRlciBpcyB1bnJlbGlhYmxlIGFuZCB0aGlzIHdpbGwgY2F1c2UgcHJpbnQgYXJ0ZWZhY3RzIGFuZCBmYWlsdXJlcy48L3A+PHA+UGxlYXNlIHNlZSA8YSBocmVmPSclKHVybClzJyB0YXJnZXQ9J19ibGFuayc+dGhpcyBGQVEgZW50cnk8L2E+IG9uIHRpcHMgb24gaG93IHRvIHNvbHZlIHRoaXMuPC9wPgA8cD48c3Ryb25nPllvdSBhcmUgYWJvdXQgdG8gZGlzY29ubmVjdCBmcm9tIHRoZSBwcmludGVyIHdoaWxlIGEgcHJpbnQgaXMgaW4gcHJvZ3Jlc3MuPC9zdHJvbmc+PC9wPjxwPkRpc2Nvbm5lY3Rpbmcgd2hpbGUgYSBwcmludCBpcyBpbiBwcm9ncmVzcyB3aWxsIHByZXZlbnQgT2N0b1ByaW50IGZyb20gY29tcGxldGluZyB0aGUgcHJpbnQuIElmIHlvdSdyZSBwcmludGluZyBmcm9tIGFuIFNEIGNhcmQgYXR0YWNoZWQgZGlyZWN0bHkgdG8gdGhlIHByaW50ZXIsIGFueSBhdHRlbXB0IHRvIHJlc3RhcnQgT2N0b1ByaW50IG9yIHJlY29ubmVjdCB0byB0aGUgcHJpbnRlciBjb3VsZCBpbnRlcnJ1cHQgdGhlIHByaW50LjxwPgA8cD5JdCBsb29rcyBsaWtlIHlvdSBhcmUgdHJhY2tpbmcgYW4gT2N0b1ByaW50IFJDIHJlbGVhc2UgY2hhbm5lbC4gSXQgd291bGQgYmUgZ3JlYXQgaWYgeW91IHdvdWxkIGVuYWJsZSBlcnJvciByZXBvcnRpbmcgc28gdGhhdCBhbnkga2luZCBvZiBlcnJvcnMgdGhhdCBvY2N1ciB3aXRoIGFuIFJDIGNhbiBiZSBsb29rZWQgaW50byBtb3JlIGVhc2lseS4gVGhhbmsgeW91ITwvcD48cD48c21hbGw+WW91IGNhbiBmaW5kIG1vcmUgaW5mb3JtYXRpb24gb24gZXJyb3IgcmVwb3J0aW5nIHVuZGVyIFNldHRpbmdzID4gRXJyb3IgVHJhY2tpbmc8L3NtYWxsPjwvcD4APHA+SXQgc2VlbXMgdGhhdCB5b3UgYXJlIGNvbm5lY3RpbmcgdG8gT2N0b1ByaW50IG92ZXIgdGhlIHB1YmxpYyBpbnRlcm5ldC48L3A+PHA+VGhpcyBpcyBzdHJvbmdseSBkaXNjb3VyYWdlZCB1bmxlc3MgeW91IGhhdmUgdGFrZW4gcHJvcGVyIG5ldHdvcmsgc2VjdXJpdHkgcHJlY2F1dGlvbnMuIFlvdXIgcHJpbnRlciBpcyBhbiBhcHBsaWFuY2UgeW91IHJlYWxseSBzaG91bGQgbm90IGJlIGdpdmluZyBhY2Nlc3MgdG8gZXZlcnlvbmUgd2l0aCBhbiBpbnRlcm5ldCBjb25uZWN0aW9uLjwvcD48cD48c3Ryb25nPlBsZWFzZSBzZWUgPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciBub29wZW5lciI+dGhpcyBibG9nIHBvc3Q8L2E+IGZvciB3YXlzIHRvIHNhZmVseSBhY2Nlc3MgeW91ciBPY3RvUHJpbnQgaW5zdGFuY2UgZnJvbSByZW1vdGUuPC9zdHJvbmc+PC9wPjxwPjxzbWFsbD5JZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcgb3IgeW91IGFyZSBzdXJlIHRoaXMgbWVzc2FnZSBpcyBtaXN0YWtlbiBzaW5jZSB5b3UgYXJlIGluIGFuIGlzb2xhdGVkIExBTiwgZmVlbCBmcmVlIHRvIGlnbm9yZSBpdC48L3NtYWxsPjwvcD4APHA+UHl0aG9uIDIgaXMgZW5kLW9mLWxpZmUgYXMgb2YgSmFudWFyeSAxc3QgMjAyMC4gV2hpbGUgT2N0b1ByaW50IGN1cnJlbnRseSBzdGlsbCBzdXBwb3J0cyBydW5uaW5nIHVuZGVyIFB5dGhvbiAyLCBhIGZ1dHVyZSB2ZXJzaW9uIHdpbGwgcmVtb3ZlIHN1cHBvcnQgYW5kIHJlcXVpcmUgUHl0aG9uIDMuIFlvdSBzaG91bGQgdXBncmFkZSBhcyBzb29uIGFzIHBvc3NpYmxlITwvcD48cD5QbGVhc2UgcmVmZXIgdG8gdGhlIEZBUSBmb3IgcmVjb21tZW5kZWQgdXBkYXRlIHdvcmtmbG93czo8L3A+ADxwPlRoZSBzZXJ2ZXIgaXMgY3VycmVudGx5IHJ1bm5pbmcgaW4gc2FmZSBtb2RlLiBUaGlyZCBwYXJ0eSBwbHVnaW5zIGFuZCBsYW5ndWFnZSBwYWNrcyBhcmUgZGlzYWJsZWQgYW5kIGNhbm5vdCBiZSBlbmFibGVkLjwvcD48cD5SZWFzb246ICUocmVhc29uKXM8L3A+ADxzdHJvbmc+Tm90ZTo8L3N0cm9uZz4gWW91IGNhbiBhbHdheXMgY2hhbmdlIHlvdXIgZGVjaXNpb24gYW5kIGFsc28gYWNjZXNzIG1vcmUgZ3JhbnVsYXIgY29udHJvbHMgdmlhIFNldHRpbmdzID4gQW5vbnltb3VzIFVzYWdlIFRyYWNraW5nLgA8c3Ryb25nPlRoaXMgd2lsbCByZXN0YXJ0IHlvdXIgT2N0b1ByaW50IHNlcnZlci48L3N0cm9uZz48L3A+PHA+VGhpcyBhY3Rpb24gbWF5IGRpc3J1cHQgYW55IG9uZ29pbmcgcHJpbnQgam9icyAoZGVwZW5kaW5nIG9uIHlvdXIgcHJpbnRlcidzIGNvbnRyb2xsZXIgYW5kIGdlbmVyYWwgc2V0dXAgdGhhdCBtaWdodCBhbHNvIGFwcGx5IHRvIHByaW50cyBydW4gZGlyZWN0bHkgZnJvbSB5b3VyIHByaW50ZXIncyBpbnRlcm5hbCBzdG9yYWdlKS4APHN0cm9uZz5Zb3UgYXJlIGFib3V0IHRvIHJlYm9vdCB0aGUgc3lzdGVtLjwvc3Ryb25nPjwvcD48cD5UaGlzIGFjdGlvbiBtYXkgZGlzcnVwdCBhbnkgb25nb2luZyBwcmludCBqb2JzIChkZXBlbmRpbmcgb24geW91ciBwcmludGVyJ3MgY29udHJvbGxlciBhbmQgZ2VuZXJhbCBzZXR1cCB0aGF0IG1pZ2h0IGFsc28gYXBwbHkgdG8gcHJpbnRzIHJ1biBkaXJlY3RseSBmcm9tIHlvdXIgcHJpbnRlcidzIGludGVybmFsIHN0b3JhZ2UpLgA8c3Ryb25nPllvdSBhcmUgYWJvdXQgdG8gcmVzdGFydCB0aGUgT2N0b1ByaW50IHNlcnZlciBpbiBzYWZlIG1vZGUuPC9zdHJvbmc+PC9wPjxwPlRoaXMgYWN0aW9uIG1heSBkaXNydXB0IGFueSBvbmdvaW5nIHByaW50IGpvYnMgKGRlcGVuZGluZyBvbiB5b3VyIHByaW50ZXIncyBjb250cm9sbGVyIGFuZCBnZW5lcmFsIHNldHVwIHRoYXQgbWlnaHQgYWxzbyBhcHBseSB0byBwcmludHMgcnVuIGRpcmVjdGx5IGZyb20geW91ciBwcmludGVyJ3MgaW50ZXJuYWwgc3RvcmFnZSkuADxzdHJvbmc+WW91IGFyZSBhYm91dCB0byByZXN0YXJ0IHRoZSBPY3RvUHJpbnQgc2VydmVyLjwvc3Ryb25nPjwvcD48cD5UaGlzIGFjdGlvbiBtYXkgZGlzcnVwdCBhbnkgb25nb2luZyBwcmludCBqb2JzIChkZXBlbmRpbmcgb24geW91ciBwcmludGVyJ3MgY29udHJvbGxlciBhbmQgZ2VuZXJhbCBzZXR1cCB0aGF0IG1pZ2h0IGFsc28gYXBwbHkgdG8gcHJpbnRzIHJ1biBkaXJlY3RseSBmcm9tIHlvdXIgcHJpbnRlcidzIGludGVybmFsIHN0b3JhZ2UpLgA8c3Ryb25nPllvdSBhcmUgYWJvdXQgdG8gc2h1dGRvd24gdGhlIHN5c3RlbS48L3N0cm9uZz48L3A+PHA+VGhpcyBhY3Rpb24gbWF5IGRpc3J1cHQgYW55IG9uZ29pbmcgcHJpbnQgam9icyAoZGVwZW5kaW5nIG9uIHlvdXIgcHJpbnRlcidzIGNvbnRyb2xsZXIgYW5kIGdlbmVyYWwgc2V0dXAgdGhhdCBtaWdodCBhbHNvIGFwcGx5IHRvIHByaW50cyBydW4gZGlyZWN0bHkgZnJvbSB5b3VyIHByaW50ZXIncyBpbnRlcm5hbCBzdG9yYWdlKS4AQSBwcmludCBqb2IgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLiBVcGRhdGluZyB3aWxsIGJlIHByZXZlbnRlZCB1bnRpbCBpdCBpcyBkb25lLgBBIHByb2ZpbGUgd2l0aCBzdWNoIGFuIGlkZW50aWZpZXIgYWxyZWFkeSBleGlzdHMAQSByZWNvbm5lY3QgdG8gdGhlIHByaW50ZXIgaXMgbmVlZGVkIGZvciB0aGUgY2hhbmdlcyB0byB0YWtlIGVmZmVjdC4AQSByZWZyZXNoIGlzIG5lZWRlZCBmb3IgdGhlIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QuAEEgcmVzdGFydCBpcyBuZWVkZWQgZm9yIHRoZSBjaGFuZ2VzIHRvIHRha2UgZWZmZWN0LgBBUEkAQVBJIEtleQBBUEkga2V5IGJhc2VkIGxvZ2luAEFiYW5kb25lZCBieSBpdHMgbWFpbnRhaW5lcgBBYm9ydABBYm91dABBYm91dCBPY3RvUHJpbnQAQWNjZXNzAEFjY2VzcyBBcHBsaWNhdGlvbiBLZXlzAEFjY2VzcyBDb250cm9sAEFjY2VzcyBSZXF1ZXN0AEFjdGlvbgBBY3Rpb24gQ29tbWFuZCBOb3RpZmljYXRpb24gU2V0dGluZ3MAQWN0aW9uIENvbW1hbmQgUHJvbXB0IFNldHRpbmdzAEFjdGlvbnMAQWN0aXZlAEFjdGl2ZSBpbnN0YW5jZXMgcGFzdCBtb250aABBY3RpdmVseSBwYXVzZSBjb21tdW5pY2F0aW9uIGR1cmluZyA8Y29kZT5HNDwvY29kZT4gZHdlbGwgY29tbWFuZABBY3RpdmVseSBwb2xsIHRoZSB3YXRjaGVkIGZvbGRlci4gQ2hlY2sgdGhpcyBpZiBmaWxlcyBpbiB5b3VyIHdhdGNoZWQgZm9sZGVyIGFyZW4ndCBhdXRvbWF0aWNhbGx5IGFkZGVkIG90aGVyd2lzZS4AQWN0dWFsAEFkZABBZGQgUHJpbnRlciBQcm9maWxlAEFkZCBQcm9maWxlLi4uAEFkZCBncm91cABBZGQgZ3JvdXAuLi4AQWRkIHVzZXIAQWRkIHVzZXIuLi4AQWRkaXRpb25hbCBhcmd1bWVudHMAQWRkaXRpb25hbCBhcmd1bWVudHMgZm9yIHRoZSBwaXAgY29tbWFuZC4gWW91IHNob3VsZCBub3JtYWxseSBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4AQWRkaXRpb25hbCBiYXVkIHJhdGVzAEFkZGl0aW9uYWwgZGF0YQBBZGRpdGlvbmFsIHBlcm1pc3Npb25zAEFkZGl0aW9uYWwgc2VyaWFsIHBvcnRzAEFkbWluIGlzIGFsbG93ZWQgdG8gZG8gZXZlcnl0aGluZwBBZHZhbmNlZCBvcHRpb25zAEFmZmVjdGVkIHZlcnNpb25zOiAlKHZlcnNpb25zKXMAQWZmZWN0ZWQgdmVyc2lvbnM6IGFsbABBZnRlciBwcmludCBqb2IgY29tcGxldGVzAEFmdGVyIHByaW50IGpvYiBpcyBjYW5jZWxsZWQAQWZ0ZXIgcHJpbnQgam9iIGlzIHBhdXNlZABBZnRlciBzZXJpYWwgY29ubmVjdGlvbiB0byBwcmludGVyIGlzIGVzdGFibGlzaGVkAEFmdGVyIHNsaWNpbmcuLi4AQWZ0ZXIgdG9vbCBjaGFuZ2UAQWxsIERvbmUhAEFsbCBmaWxlcyBpbiB0aGUgdXBsb2FkcyBmb2xkZXIgYW5kIHN1YmZvbGRlcnMuIFRoZXNlIGFyZSB0aGUgZmlsZXMgaW4gdGhlIEZpbGVzIExpc3QsIHBsdXMgYW55IG1ldGFkYXRhIHRoYXQgaGFzIGJlZW4gZ2VuZXJhdGVkIGZvciB0aG9zZSBmaWxlcy4AQWxsb3cAQWxsb3cgPGEgaHJlZj0iJSh1cmwpcyI+Q3Jvc3MgT3JpZ2luIFJlc291cmNlIFNoYXJpbmcgKENPUlMpPC9hPgBBbGxvdyBlbWJlZGRpbmcgdGhlIHdlYiBpbnRlcmZhY2UgaW50byBhIGZyYW1lIG9yIGlmcmFtZQBBbGxvd3MgYWNjZXNzIHRvIGJhY2t1cHMgYW5kIHJlc3RvcmVzAEFsbG93cyBhY2Nlc3MgdG8gdGhlIEdDT0RFIHZpZXdlciBpZiB0aGUgIkZpbGUgRG93bmxvYWQicGVybWlzc2lvbiBpcyBhbHNvIHNldC4AQWxsb3dzIGFkbWluaXN0cmF0aW5nIGFsbCBhcHBsaWNhdGlvbiBrZXlzAEFsbG93cyBmb3IgdGhlIG1hbmFnZW1lbnQgb2YgZXZlbnQgc3Vic2NyaXB0aW9ucy4AQWxsb3dzIHRvIGNoYW5nZSB0aGUgdGltZWxhcHNlIHNldHRpbmdzIGFuZCBkZWxldGUgb3IgcmVuZGVyIHVucmVuZGVyZWQgdGltZWxhcHNlcy4gSW5jbHVkZXMgdGhlICJUaW1lbGFwc2UgTGlzdCIsIlRpbWVsYXBzZSBEZWxldGUiIGFuZCAiVGltZWxhcHNlIERvd25sb2FkIiBwZXJtaXNzaW9ucwBBbGxvd3MgdG8gY2hlY2sgZm9yIHNvZnR3YXJlIHVwZGF0ZXMAQWxsb3dzIHRvIGNsZWFyIHByaW50ZXIgbm90aWZpY2F0aW9ucwBBbGxvd3MgdG8gY29uZmlndXJlIHNvZnR3YXJlIHVwZGF0ZQBBbGxvd3MgdG8gY29ubmVjdCB0byBhbmQgZGlzY29ubmVjdCBmcm9tIGEgcHJpbnRlcgBBbGxvd3MgdG8gY29udHJvbCBvZiB0aGUgcHJpbnRlciBieSB1c2luZyB0aGUgdGVtcGVyYXR1cmUgY29udHJvbHMsdGhlIGNvbnRyb2wgdGFiIG9yIHNlbmRpbmcgY29tbWFuZHMgdGhyb3VnaCB0aGUgdGVybWluYWwuAEFsbG93cyB0byBkZWxldGUgdGltZWxhcHNlIHZpZGVvcyBhbmQgdW5yZW5kZXJlZCB0aW1lbGFwc2VzAEFsbG93cyB0byBkb3dubG9hZCBhbmQgZGVsZXRlIGxvZyBmaWxlcyBhbmQgbGlzdCBhbmQgc2V0IGxvZyBsZXZlbHMuAEFsbG93cyB0byBkb3dubG9hZCB0aW1lbGFwc2UgdmlkZW9zAEFsbG93cyB0byBlbmFibGUsIGRpc2FibGUgYW5kIHVuaW5zdGFsbCBpbnN0YWxsZWQgcGx1Z2lucy4AQWxsb3dzIHRvIGdhdGhlciBiYXNpYyBzdGF0dXMgaW5mb3JtYXRpb24sIGUuZy4gam9iIHByb2dyZXNzLCBwcmludGVyIHN0YXRlLCB0ZW1wZXJhdHVyZXMsIC4uLiBNYW5kYXRvcnkgZm9yIHRoZSBkZWZhdWx0IFVJIHRvIHdvcmsAQWxsb3dzIHRvIGluc3RhbGwgbmV3IHBsdWdpbnMuIEluY2x1ZGVzIHRoZSAiTWFuYWdlIHBsdWdpbnMiIHBlcm1pc3Npb24uAEFsbG93cyB0byBsaXN0IHRpbWVsYXBzZSB2aWRlb3MAQWxsb3dzIHRvIG1hbmFnZSBhbm5vdW5jZW1lbnQgc3Vic2NyaXB0aW9ucy4gSW5jbHVkZXMgIlJlYWQgYW5ub3VuY2VtZW50cyIgcGVybWlzc2lvbgBBbGxvd3MgdG8gbWFuYWdlIHNldHRpbmdzIGFuZCBhbHNvIHRvIHJlYWQgc2Vuc2l0aXZlIHNldHRpbmdzAEFsbG93cyB0byBwZXJmb3JtIHNvZnR3YXJlIHVwZGF0ZXMAQWxsb3dzIHRvIHJlYWQgYW5ub3VuY2VtZW50cwBBbGxvd3MgdG8gcmVhZCBub24gc2Vuc2l0aXZlIHNldHRpbmdzLiBNYW5kYXRvcnkgZm9yIHRoZSBkZWZhdWx0IFVJIHRvIHdvcmsuAEFsbG93cyB0byByZXRyaWV2ZSBhIGxpc3Qgb2YgYWxsIHVwbG9hZGVkIGZpbGVzIGFuZCBmb2xkZXJzLCBpbmNsdWRpbmd0aGVpciBtZXRhZGF0YSAoZS5nLiBkYXRlLCBmaWxlIHNpemUsIGFuYWx5c2lzIHJlc3VsdHMsIC4uLikAQWxsb3dzIHRvIHJ1biBzeXN0ZW0gY29tbWFuZHMsIGUuZy4gcmVzdGFydCBPY3RvUHJpbnQsIHNodXRkb3duIG9yIHJlYm9vdCB0aGUgc3lzdGVtLCBhbmQgdG8gcmV0cmlldmUgc3lzdGVtIGFuZCB1c2FnZSBpbmZvcm1hdGlvbgBBbGxvd3MgdG8gc2VlIGFuZCBpbnRlcmFjdCB3aXRoIHByaW50ZXIgcHJvbXB0cwBBbGxvd3MgdG8gc2VlIHByaW50ZXIgbm90aWZpY2F0aW9ucwBBbGxvd3MgdG8gc2VsZWN0IGEgZmlsZSBmb3IgcHJpbnRpbmcAQWxsb3dzIHRvIHNsaWNlIGZpbGVzAEFsbG93cyB0byBzdGFydCwgcGF1c2UgYW5kIGNhbmNlbCBhIHByaW50IGpvYgBBbGxvd3MgdG8gd2F0Y2ggdGhlIHRlcm1pbmFsIHRhYiBidXQgbm90IHRvIHNlbmQgY29tbWFuZHMgdG8gdGhlIHByaW50ZXIgZnJvbSBpdABBbGxvd3MgdG8gd2F0Y2ggdGhlIHdlYmNhbSBzdHJlYW0AQWxsb3dzIHVzZXJzIHRvIGRlbGV0ZSBmaWxlcyBhbmQgZm9sZGVycy4gSWYgdGhlIEZpbGUgVXBsb2FkIHBlcm1pc3Npb24gaXMgYWxzbyBzZXQsIEZpbGUgRGVsZXRlIGFsc28gYWxsb3dzIG1vdmluZyBmaWxlcyBhbmQgZm9sZGVycy4AQWxsb3dzIHVzZXJzIHRvIGRvd25sb2FkIGZpbGVzLiBUaGUgR0NPREUgdmlld2VyIGlzIGFmZmVjdGVkIGJ5IHRoaXMgYXMgd2VsbC4AQWxsb3dzIHVzZXJzIHRvIHVwbG9hZCBuZXcgZmlsZXMsIGNyZWF0ZSBuZXcgZm9sZGVycyBhbmQgY29weSBleGlzdGluZyBvbmVzLiBJZiB0aGUgRmlsZSBEZWxldGUgcGVybWlzc2lvbiBpcyBhbHNvIHNldCwgRmlsZSBVcGxvYWQgYWxzbyBhbGxvd3MgbW92aW5nIGZpbGVzIGFuZCBmb2xkZXJzLgBBbHNvIHBlcnNvbmFsaXplIHRoZSBpY29uIG9mIHRoZSBicm93c2VyIHRhYgBBbHNvIHNob3cgY3VycmVudCBsYXllcgBBbHNvIHNob3cgbmV4dCBsYXllcgBBbHNvIHNob3cgcHJldmlvdXMgbGF5ZXIAQWx3YXlzAEFsd2F5cyAAQWx3YXlzIGFzc3VtZSBTRCBjYXJkIGlzIHByZXNlbnQAQW4gYWNjb3VudCB3aXRoIHRoZSBmb2xsb3dpbmcgcGVybWlzc2lvbnMgaXMgcmVxdWlyZWQ6AEFuYWx5emUgZ2NvZGUgZm9yIHRpbWUgYW5kIG1vZGVsIHNpemUgZXN0aW1hdGVzAEFuYWx5emVkAEFuYWx5emluZy4uLgBBbm5vdW5jZW1lbnRzAEFub255bW91cyBVc2FnZSBUcmFja2luZwBBbnkgY2hhbmdlcyB0YWtlIGVmZmVjdCBvbmx5IG9uIHRoZSBuZXh0IHNlcnZlciBzdGFydC4AQW55dGhpbmcgeW91IHB1dCBoZXJlIHdpbGwgYmUgZXhlY3V0ZWQgPGVtPmFmdGVyPC9lbT4gYW55IGxpbmVzIGluIHlvdXIgZmlsZXMuAEFueXRoaW5nIHlvdSBwdXQgaGVyZSB3aWxsIGJlIGV4ZWN1dGVkIDxlbT5hZnRlcjwvZW0+IGFueSB0b29sIGNoYW5nZSBjb21tYW5kcyA8Y29kZT5UbjwvY29kZT4uAEFueXRoaW5nIHlvdSBwdXQgaGVyZSB3aWxsIGJlIGV4ZWN1dGVkIDxlbT5iZWZvcmU8L2VtPiBhbnkgbGluZXMgaW4geW91ciBmaWxlcy4AQW55dGhpbmcgeW91IHB1dCBoZXJlIHdpbGwgYmUgZXhlY3V0ZWQgPGVtPmJlZm9yZTwvZW0+IGFueSB0b29sIGNoYW5nZSBjb21tYW5kcyA8Y29kZT5UbjwvY29kZT4uAEFueXRoaW5nIHlvdSBwdXQgaGVyZSB3aWxsIG9ubHkgYmUgZXhlY3V0ZWQgd2hlbiBjbG9zaW5nIHRoZSBzZXJpYWwgY29ubmVjdGlvbiBhY3RpdmVseS4gSWYgdGhlIHNlcmlhbCBjb25uZWN0aW9uIHRvIHRoZSBwcmludGVyIGlzIHN1ZGRlbmx5IGxvc3Qgbm90aGluZyB3aWxsIGJlIHNlbnQuAEFwcGVhcmFuY2UAQXBwbGljYXRpb24gS2V5cwBBcHBsaWNhdGlvbiBpZGVudGlmaWVyAEFwcGx5IGFyYyBmaXgAQXBwbHkgZmlsdGVycyB0byBzZWFyY2ggcmVzdWx0cwBBcHBseSBwYXJpdHkgZG91YmxlIG9wZW4gd29ya2Fyb3VuZABBcHByb3guIFRvdGFsIFByaW50IFRpbWUAQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRpc2Nvbm5lY3QgZnJvbSB0aGUgcHJpbnRlcj8AQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHByb2NlZWQ/AEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byB1cGRhdGUgbm93PwBBcmUgeW91IHN1cmU/AEFzcGVjdCByYXRpbyBvZiB0aGUgd2ViY2FtIHN0cmVhbSwgZWl0aGVyIDE2Ojkgb3IgNDozAEF0dGVtcHQgdG8gYWJvcnQgYW55IGJsb2NraW5nIGhlYXR1cHMgb24gY2FuY2VsIHZpYSA8Y29kZT5NMTA4PC9jb2RlPi4AQXR0ZW1wdCB0byByZWNvbm5lY3QAQXV0aG9yaXphdGlvbiBoZWFkZXIgYmFzZWQgbG9naW4AQXV0by1jb25uZWN0IG9uIHNlcnZlciBzdGFydHVwAEF1dG8tY29ubmVjdCB0byBwcmludGVyIG9uIHNlcnZlciBzdGFydABBdXRvZGV0ZWN0IGZyb20gYnJvd3NlcgBBdXRvZGV0ZWN0aW9uIHRpbWVvdXQAQXV0b3JlcG9ydCBpbnRlcnZhbCB0byByZXF1ZXN0IGZyb20gZmlybXdhcmUAQXV0b3Njcm9sbABBdmFpbGFibGUgTGFuZ3VhZ2UgUGFja3MAQXZhaWxhYmxlOgBBeGVzAEJhY2sAQmFja3VwICYgUmVzdG9yZQBCYWNrdXAgY3JlYXRlZCBzdWNjZXNzZnVsbHkAQmFja3VwIGZpbGUAQmFja3VwcwBCYXNlZCBvbiBhIGxpbmVhciBhcHByb3hpbWF0aW9uICh2ZXJ5IGxvdyBhY2N1cmFjeSwgZXNwZWNpYWxseSBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcmludCkAQmFzZWQgb24gYSBtaXggb2YgYXZlcmFnZSB0b3RhbCBmcm9tIHBhc3QgcHJpbnRzIGFuZCBjYWxjdWxhdGlvbiAodXN1YWxseSBnb29kIGFjY3VyYWN5KQBCYXNlZCBvbiBhIG1peCBvZiBlc3RpbWF0ZSBmcm9tIGFuYWx5c2lzIGFuZCBjYWxjdWxhdGlvbiAobWVkaXVtIGFjY3VyYWN5KQBCYXNlZCBvbiB0aGUgYXZlcmFnZSB0b3RhbCBvZiBwYXN0IHByaW50cyBvZiB0aGlzIG1vZGVsIHdpdGggdGhlIHNhbWUgcHJpbnRlciBwcm9maWxlICh1c3VhbGx5IGdvb2QgYWNjdXJhY3kpAEJhc2VkIG9uIHRoZSBjYWxjdWxhdGVkIGVzdGltYXRlIChiZXN0IGFjY3VyYWN5KQBCYXNlZCBvbiB0aGUgZXN0aW1hdGUgZnJvbSBhbmFseXNpcyBvZiBmaWxlIChtZWRpdW0gYWNjdXJhY3kpAEJhdWRyYXRlAEJlIHN1cmUgdG8gcmVhZCB0aHJvdWdoIGFueSBsaW5rZWQgcmVsZWFzZSBub3RlcywgZXNwZWNpYWxseSB0aG9zZSBmb3IgT2N0b1ByaW50IHNpbmNlIHRoZXkgbWlnaHQgY29udGFpbiBpbXBvcnRhbnQgaW5mb3JtYXRpb24geW91IG5lZWQgdG8ga25vdyA8c3Ryb25nPmJlZm9yZTwvc3Ryb25nPiB1cGdyYWRpbmcuAEJlZABCZWZvcmUgcHJpbnQgam9iIGlzIHJlc3VtZWQAQmVmb3JlIHByaW50IGpvYiBzdGFydHMAQmVmb3JlIHNlcmlhbCBjb25uZWN0aW9uIHRvIHByaW50ZXIgaXMgY2xvc2VkAEJlZm9yZSB0b29sIGNoYW5nZQBCZWhhdmlvdXIAQmV0YQBCaXRyYXRlIHRvIHVzZSBmb3IgZW5jb2RpbmcgdGhlIHRpbWVsYXBzZSB2aWRlbwBCbGFja2xpc3QgVVJMAEJsYWNrbGlzdCBjYWNoZSBUVEwAQmxhY2tsaXN0ZWQAQmxhY2tsaXN0ZWQgYmF1ZCByYXRlcwBCbGFja2xpc3RlZCBzZXJpYWwgcG9ydHMAQmxvY2tlZCBjb21tYW5kcwBCcm93c2UuLi4AQnVuZGxlZABCdW5kbGVkIHdpdGggT2N0b1ByaW50AEJ5dGVzIHByaW50ZWQgdnMgdG90YWwgYnl0ZXMgb2YgZmlsZQBDT1JTAENhbid0IHVwZGF0ZSB3aGlsZSBwcmludGluZwBDYW4ndCB1cGRhdGUgd2hpbGUgdGhyb3R0bGVkAENhbmNlbABDYW5jZWwgYW55IG9uZ29pbmcgcHJpbnRzIGJ1dCBzdGF5IGNvbm5lY3RlZCB0byB0aGUgcHJpbnRlcgBDYW5jZWwgcHJpbnQAQ2FuY2VsbGluZwBDYW5jZWxzIHRoZSBwcmludCBqb2IAQ2Fubm90IGJlIHRvZ2dsZWQAQ2Fubm90IGJlIHVuaW5zdGFsbGVkIHRocm91Z2ggT2N0b1ByaW50AENhbm5vdCBjaGVjayBmb3IgdXBkYXRlLCBuZWVkIG9ubGluZSBjb25uZWN0aW9uAENhbm5vdCBkZWxldGUgdGhlIGRlZmF1bHQgcHJvZmlsZSBvciB0aGUgY3VycmVudGx5IGFjdGl2ZSBwcm9maWxlLgBDYW5ub3QgaW5zdGFsbCBwbHVnaW4gIiUocGx1Z2luKXMiIGR1ZSB0byBpdCBiZWluZyBpbmNvbXBhdGlibGUgdG8gdGhpcyBPY3RvUHJpbnQgdmVyc2lvbiBhbmQvb3IgdW5kZXJseWluZyBvcGVyYXRpbmcgc3lzdGVtAENhbm5vdCByZW5kZXIgdGltZWxhcHNlAENhbm5vdCBzbGljZSBvbiB0aGUgc2FtZSBkZXZpY2Ugd2hpbGUgcHJpbnRpbmcAQ2Fubm90IHNsaWNlLCBub3QgYWxsIHBhcmFtZXRlcnMgc3BlY2lmaWVkAENhbm5vdCB1cGxvYWQgdG8gcHJpbnRlcidzIFNEIHdoaWxlIHByaW50aW5nAENhcHR1cmluZyB0aW1lbGFwc2UgcG9zdHJvbGwAQ2F1c2VzIHJlbG9hZABDZW50ZXIAQ2VudGVyIHZpZXdwb3J0IG9uIG1vZGVsAENoYW1iZXIAQ2hhbmdlIE9mZnNldABDaGFuZ2UgcGFzc3dvcmQAQ2hhbmdlIHBhc3N3b3JkIGZvciB1c2VyICIlKHVzZXIpcyIAQ2hhbmdlIHNvcnRpbmcAQ2hhbmdlcyB0byB0aGUgZGVmYXVsdCBpbnRlcmZhY2UgbGFuZ3VhZ2Ugd2lsbCBvbmx5IGJlY29tZSBhY3RpdmUgYWZ0ZXIgYSByZWxvYWQgb2YgdGhlIHBhZ2UgYW5kIG9ubHkgYmUgYWN0aXZlIGlmIG5vdCBvdmVycmlkZGVuIGJ5IHRoZSB1c2VycyBsYW5ndWFnZSBzZXR0aW5ncy4AQ2hhbmdlcyB0byB0aGUgaW50ZXJmYWNlIGxhbmd1YWdlIHdpbGwgb25seSBiZWNvbWUgYWN0aXZlIGFmdGVyIGEgcmVsb2FkIG9mIHRoZSBwYWdlLgBDaGFuZ2luZyBPZmZzZXQgb2YgJShuYW1lKXMAQ2hhbmdpbmcgbW9zdCBvZiB0aGVzZSBzZXR0aW5ncyByZXF1aXJlcyByZXN0YXJ0aW5nIHRoZSBjb25uZWN0aW9uIHdpdGggeW91ciBwcmludGVyIGZvciB5b3VyIGNoYW5nZXMgdG8gYmVjb21lIGVmZmVjdGl2ZS4AQ2hlY2sgZm9yIHVwZGF0ZXMAQ2hlY2sgaW50ZXJuYWwgZXJyb3Igd2hpbGUgY2hlY2tpbmcgZm9yIHVwZGF0ZQBDaGVjayBpbnRlcnZhbABDaGVjayB0aGlzIGlmIHlvdSB3YW50IG5vdGlmaWNhdGlvbnMgdG8gYWxzbyBzaG93IHVwIGFzIHBvcHVwcyBpbiBhZGRpdGlvbiB0byB0aGUgbm90aWZpY2F0aW9uIGxpc3QgaW4gdGhlIHNpZGViYXIAQ2hlY2sgdGhpcyBpZiB5b3VyIHByaW50ZXIgaGFzIGEgc2luZ2xlIG5venpsZSBhbmQgaGVhdGVyIHNoYXJlZCBhbW9uZyBpdHMgZXh0cnVkZXJzIGluc3RlYWQgb2Ygb25lIG5venpsZSBhbmQgaGVhdGVyIHBlciBleHRydWRlcgBDaGVjayB0aGlzIHRvIG1ha2UgeW91ciBzZWxlY3RlZCB0aW1lbGFwc2UgbW9kZSBhbmQgb3B0aW9ucyBwZXJzaXN0IGFjcm9zcyByZXN0YXJ0cy4AQ2hyb21lAENpcmN1bGFyAENsZWFuaW5nIHVwIGFsbCBsZWZ0IG92ZXIgcGx1Z2luIGRhdGEuLi4AQ2xlYW5pbmcgdXAgZGF0YSBvZiBwbHVnaW4gIiUobmFtZSlzIgBDbGVhbmluZyB1cCBwbHVnaW4gZGF0YS4uLgBDbGVhbnVwAENsZWFudXAgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcwBDbGVhbnVwIFBsdWdpbiBEYXRhAENsZWFudXAgYWxsAENsZWFudXAgYWxsIGRhdGEAQ2xlYW51cCBhbGw6ICUocmVzdWx0KXMAQ2xlYW51cCBkYXRhAENsZWFyIGFsbABDbGVhciBsb2cgd2luZG93AENsZWFyIG5vdGlmaWNhdGlvbnMAQ2xlYXIgc2VsZWN0aW9uAENsb3NlAENsb3NlIGRpYWxvZ3MgYnkgY2xpY2tpbmcgb3V0c2lkZQBDbG9zZWQAQ29sb3IAQ29sb3JpemUgZmF2aWNvbiAoaW4gc3VwcG9ydGVkIGJyb3dzZXJzKQBDb21tYW5kAENvbW1hbmQgRWRpdG9yAENvbW1hbmQgbGluZSBmbGFnAENvbW1hbmQgdG8gcmVzdGFydCB0aGUgT2N0b1ByaW50IHNlcnZlcgBDb21tYW5kIHRvIHJlc3RhcnQgdGhlIHN5c3RlbSBPY3RvUHJpbnQgaXMgcnVubmluZyBvbgBDb21tYW5kIHRvIHNlbmQgdG8gdGhlIGZpcm13YXJlIG9uIGZpcnN0IGhhbmRzaGFrZSBhdHRlbXB0LgBDb21tYW5kIHRvIHNodXQgZG93biB0aGUgc3lzdGVtIE9jdG9QcmludCBpcyBydW5uaW5nIG9uAENvbW1hbmRzAENvbW1hbmRzIHRoYXQgYWx3YXlzIHJlcXVpcmUgYSBjaGVja3N1bQBDb21tYW5kcyB0aGF0IGFsd2F5cyByZXF1aXJlIGEgbGluZSBudW1iZXIgYW5kIGNoZWNrc3VtIHRvIGJlIHNlbnQgd2l0aCB0aGVtLgBDb21tYW5kcyB0aGF0IGFyZSBrbm93IHRvIHJ1biBsb25nIGFuZCBoZW5jZSBzaG91bGQgc3VwcHJlc3MgY29tbXVuaWNhdGlvbiB0aW1lb3V0cyBmcm9tIGJlaW5nIHRyaWdnZXJlZC4AQ29tbWFuZHMgdG8gbm90IGNvbXBsZXRlbHkgYXV0byB1cHBlcmNhc2UgaW4gdGhlIHRlcm1pbmFsIHRhYgBDb21tdW5pY2F0aW9uIGVycm9yAENvbW11bmljYXRpb24gdGltZW91dABDb25maWd1cmUgQW5vbnltb3VzIFVzYWdlIFRyYWNraW5nAENvbmZpZ3VyZSBwbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmcAQ29uZmlndXJlIHRoZSBjb25uZWN0aXZpdHkgY2hlY2sAQ29uZmlndXJlZCBDaGFubmVscwBDb25maXJtAENvbmZpcm0gUGFzc3dvcmQAQ29uZmlybSBiZWZvcmUgY2FuY2VsbGluZyBhIHByaW50AENvbmZpcm0gYmVmb3JlIGRpc2FibGluZyBhIHBsdWdpbgBDb25maXJtIGJlZm9yZSBvdmVyd3JpdGluZyBhIGZpbGUgYnkgdXBsb2FkAENvbmZpcm0gYmVmb3JlIHN0YXJ0aW5nIGEgcHJpbnQAQ29uZmlybWF0aW9ucwBDb25uZWN0AENvbm5lY3RlZCB0byBwcmludGVyAENvbm5lY3RpbmcAQ29ubmVjdGluZyB0byBPY3RvUHJpbnQncyBzZXJ2ZXIuLi4AQ29ubmVjdGlvbgBDb25uZWN0aW9uIHRpbWVvdXQAQ29ubmVjdGl2aXR5IGNoZWNrAENvbnNlY3V0aXZlIGhhbmRzaGFrZSBhdHRlbXB0cwBDb250aW51ZQBDb250cm9sAENvcHkAQ29weSBBUEkgS2V5IHRvIGNsaXBib2FyZABDb3B5IGFsbABDb3VsZCBub3QgYWRkIHByb2ZpbGUAQ291bGQgbm90IGNhcHR1cmUgc25hcHNob3RzAENvdWxkIG5vdCBkZWxldGUgcHJvZmlsZQBDb3VsZCBub3QgcmVtb3ZlIHRpbWVsYXBzZQBDb3VsZCBub3QgcmV0cmlldmUgc25hcHNob3QgVVJMLCBwbGVhc2UgZG91YmxlIGNoZWNrIHRoZSBVUkwAQ291bGQgbm90IHNsaWNlICUoc3RsKXMgdG8gJShnY29kZSlzOiAlKHJlYXNvbilzAENvdWxkIG5vdCB1cGRhdGUgcHJvZmlsZQBDb3VsZCBub3QgdXBsb2FkIHRoZSBmaWxlLiBNYWtlIHN1cmUgdGhhdCBpdCBpcyBhIHJlYWRhYmxlLCB2YWxpZCBmaWxlIHdpdGggb25lIG9mIHRoZXNlIGV4dGVuc2lvbnM6ICUoZXh0ZW5zaW9ucylzAENvdWxkIHJldHJpZXZlIHRoZSBzbmFwc2hvdCBVUkwsIGJ1dCBpdCBkaWRuJ3QgbG9vayBsaWtlIGFuIGltYWdlLiBHb3QgdGhpcyBhcyBhIGNvbnRlbnQgdHlwZSBoZWFkZXI6IDxjb2RlPiUoY29udGVudF90eXBlKXM8L2NvZGU+LiBQbGVhc2UgZG91YmxlIGNoZWNrIHRoYXQgdGhlIFVSTCBpcyByZXR1cm5pbmcgc3RhdGljIGltYWdlcywgbm90IG11bHRpcGFydCBkYXRhIG9yIHZpZGVvcy4AQ291bnQgb2YgcmVzZW5kIHJlcXVlc3RzLCB0cmFuc21pdHRlZCBsaW5lcyBhbmQgcmVzZW5kIHJhdGlvAENyZWF0ZQBDcmVhdGUgQWNjb3VudABDcmVhdGUgRm9sZGVyAENyZWF0ZSBhIG5ldyBiYWNrdXAgb2YgdGhlIGN1cnJlbnQgc3RhdGUuAENyZWF0ZSBiYWNrdXAAQ3JlYXRlIGJhY2t1cCBub3cAQ3JlYXRlIGZvbGRlci4uLgBDcmVhdGluZyB0aGUgYmFja3VwIGZhaWxlZABDcml0aWNhbABDcml0aWNhbCByZXNlbmQgcmF0aW8AQ3JpdGljYWwgcmVzZW5kIHJhdGlvIQBDdXJyZW50IEFQSSBLZXkAQ3VycmVudCBPZmZzZXQAQ3VycmVudCBhY3R1YWwgdGVtcGVyYXR1cmUgYXMgcmVwb3J0ZWQgYnkgeW91ciBwcmludGVyAEN1cnJlbnQgcHJpbnRlciBzdGF0ZQBDdXJyZW50IHRhcmdldCB0ZW1wZXJhdHVyZSBhcyByZXBvcnRlZCBieSB5b3VyIHByaW50ZXIAQ3VycmVudCB0aW1lbGFwc2UgY29uZmlndXJhdGlvbgBDdXJyZW50IHZlcnNpb25zAEN1cnJlbnRseSBjb25maWd1cmVkIHBhdGggdG8gRkZNUEVHAEN1cnJlbnRseSBjb25maWd1cmVkIHNuYXBzaG90IFVSTABDdXJyZW50bHkgY29uZmlndXJlZCBzdHJlYW0gVVJMAEN1cnJlbnRseSBpbgBDdXJyZW50bHk6AEN1c3RvbSBib3VuZGluZyBib3gARGFuZ2Vyb3VzAERhdGUARGVidWcARGVidWcgb3B0aW9ucwBEZWZhdWx0AERlZmF1bHQgTGFuZ3VhZ2UARGVmYXVsdCBQcmludGVyIFByb2ZpbGUARGVmYXVsdCBncm91cABEZWxldGUARGVsZXRlIE9mZnNldABEZWxldGUgUHJvZmlsZQBEZWxldGUgZ3JvdXAARGVsZXRlIHJlY29yZCBvZiB1bmtub3duIHBsdWdpbnMARGVsZXRlIHNlbGVjdGVkAERlbGV0ZSB1bnJlbmRlcmVkIHRpbWVsYXBzZQBEZWxldGUgdXNlcgBEZWxldGVkICUoZmlsZW5hbWUpcy4uLgBEZWxldGluZyAlKGNvdW50KWQgYmFja3Vwcy4uLgBEZWxldGluZyAlKGNvdW50KWQgbG9nIGZpbGVzLi4uAERlbGV0aW5nICUoY291bnQpZCB0aW1lbGFwc2UgZmlsZXMuLi4ARGVsZXRpbmcgJShjb3VudClkIHVucmVuZGVyZWQgdGltZWxhcHNlcy4uLgBEZWxldGluZyBiYWNrdXBzAERlbGV0aW5nIGxvZyBmaWxlcwBEZWxldGluZyB0aW1lbGFwc2UgZmlsZXMARGVsZXRpbmcgdW5yZW5kZXJlZCB0aW1lbGFwc2VzAERlbGV0aW9uIG9mICUoZmlsZW5hbWUpcyBmYWlsZWQsIGNvbnRpbnVpbmcuLi4ARGVsZXRpb24gb2YgJShmaWxlbmFtZSlzIGZhaWxlZDogJShlcnJvcilzAERlbGV0aW9uIG9mICUoa2V5KXMgZmFpbGVkOiAlKGVycm9yKXMARGVueQBEZXBlbmRpbmcgb24geW91ciBwcmludGVyJ3MgY29udHJvbGxlciBhbmQgZ2VuZXJhbCBzZXR1cCwgcmVzdGFydGluZyBPY3RvUHJpbnQgbWF5IGNhdXNlIHlvdXIgcHJpbnRlciB0byBiZSByZXNldC4ARGVwdGggKFkpAERlc2NyaXB0aW9uAERldGFpbHMARGV0ZWN0aW5nIHNlcmlhbCBjb25uZWN0aW9uAERpYWxvZyBjb21tYW5kAERpYW1ldGVyIChYL1kpAERpZCBub3QgZmluaXNoIHN0cmVhbWluZyAlKGxvY2FsKXMgdG8gJShyZW1vdGUpcyBvbiBTRABEaXNhYmxlIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMARGlzYWJsZSBBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmcARGlzYWJsZSBDaGFubmVsAERpc2FibGUgQ29ubmVjdGl2aXR5IENoZWNrAERpc2FibGUgUGx1Z2luAERpc2FibGUgUGx1Z2luIEJsYWNrbGlzdCBQcm9jZXNzaW5nAERpc2FibGUgU0QgcHJpbnRpbmcgZGV0ZWN0aW9uAERpc2FibGUgYW55d2F5AERpc2FibGUgZGV0ZWN0aW9uIG9mIGV4dGVybmFsIGhlYXR1cHMARGlzYWJsZSBwbHVnaW4ARGlzYWJsZWQARGlzYWJsZWQgZHVlIHRvIGFjdGl2ZSBzYWZlIG1vZGUARGlzYWJsZWQgZHVlIHRvIHNhZmUgbW9kZQBEaXNjb25uZWN0AERpc2Nvbm5lY3QgZnJvbSB0aGUgcHJpbnRlcgBEaXNjb25uZWN0IHByaW50ZXIARGlzY29yZABEaXNrIHNwYWNlIHRocmVzaG9sZHMARGlzcGxheSBub3RpZmljYXRpb25zIGZvciBzdXBwcmVzc2VkIGNvbW1hbmRzAERvIG5vdCBmb3JnZXQgdG8gc2F2ZSBpbiBtYWluIHNldHRpbmdzLgBEbyBub3RoaW5nAERvIHlvdSBzdGlsbCB3YW50IHRvIGRpc2FibGUgaXQ/AERvIHlvdSB3YW50IHRvIGFsbG93IGFjY2VzcyB0byB0aGlzIGFwcGxpY2F0aW9uIHdpdGggeW91ciB1c2VyIGFjY291bnQ/AERvIHlvdSB3YW50IHRvIHN0YXJ0IHRoZSBwcmludCBqb2Igbm93PwBEb2NzAERvZXMgbm90IHdvcmsgd2hlbiBwcmludGluZyBmcm9tIHRoZSBwcmludGVyJ3MgU0QgQ2FyZCAobm8gd2F5IHRvIGRldGVjdCB0aGUgY2hhbmdlIGluIFogcmVsaWFibHkpLiBVc2UgIlRpbWVkIiBtb2RlIGZvciB0aG9zZSBwcmludHMgaW5zdGVhZC4ARG9uZSEARG93bmxvYWQARG93bmxvYWQgU3lzdGVtaW5mbyBCdW5kbGUARG93bmxvYWQgc2VsZWN0ZWQARQBFZGl0IFByaW50ZXIgUHJvZmlsZSAiJShuYW1lKXMiAEVkaXQgUHJvZmlsZQBFZGl0IGdyb3VwICIlKG5hbWUpcyIARWRpdCB1c2VyICIlKG5hbWUpcyIARW1lcmdlbmN5IGNvbW1hbmRzAEVuYWJsZQBFbmFibGUgPGNvZGU+cGlwPC9jb2RlPiB1cGRhdGUgY2hlY2tzAEVuYWJsZSA8Y29kZT5wbHVnaW50aW1pbmdzLmxvZzwvY29kZT4ARW5hYmxlIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMARW5hYmxlIEFub255bW91cyBVc2FnZSBUcmFja2luZwBFbmFibGUgQ2FjaGUgYnVzdGVyAEVuYWJsZSBDaGFubmVsAEVuYWJsZSBDb25uZWN0aXZpdHkgQ2hlY2sARW5hYmxlIEtleWJvYXJkIENvbnRyb2wARW5hYmxlIE9jdG9QcmludCB3YXRlcm1hcmsgaW4gdGltZWxhcHNlIG1vdmllcwBFbmFibGUgUGx1Z2luAEVuYWJsZSBQbHVnaW4gQmxhY2tsaXN0IFByb2Nlc3NpbmcARW5hYmxlIFNEIHN1cHBvcnQARW5hYmxlIFRlbXBlcmF0dXJlIEdyYXBoAEVuYWJsZSBhbm9ueW1vdXMgdXNhZ2UgdHJhY2tpbmcARW5hYmxlIGF1dG9tYXRpYyBmaXJtd2FyZSBkZXRlY3Rpb24ARW5hYmxlIGVycm9yIHJlcG9ydGluZz8ARW5hYmxlIGVycm9yIHRyYWNraW5nAEVuYWJsZSBmb3JjZSBzZW5kaW5nIG9mIHRoZSBjb25maWd1cmVkIGNvbW1hbmQgdG8gYnlwYXNzIGJsb2NraW5nIGZpcm13YXJlIHJvdXRpbmVzIGlmIGRldGVjdGVkIGFzIHN1cHBvcnRlZC4gWW91IG5vcm1hbGx5IHNob3VsZCBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4ARW5hYmxlIG1vZGVsIHNpemUgZGV0ZWN0aW9uIGFuZCB3YXJuIGlmIG1vZGVsIGV4Y2VlZHMgcHJpbnQgYmVkAEVuYWJsZSBwbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3Npbmcgb24gc3RhcnR1cABFbmFibGUgcG9wdXBzAEVuYWJsZSByZWd1bGFyIGNvbm5lY3Rpdml0eSBjaGVjawBFbmFibGUgc2lnbmFsaW5nIHRvIHRoZSBmaXJtd2FyZSB0aGF0IHdlIHN1cHBvcnQgPGNvZGU+cHJvbXB0Xyo8L2NvZGU+IGFjdGlvbnMgaWYgZGV0ZWN0ZWQgYXMgc3VwcG9ydGVkLiBZb3Ugbm9ybWFsbHkgc2hvdWxkIG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLgBFbmFibGUgc3VwcG9ydABFbmFibGUgdGhlIGNhY2hlIGJ1c3RlciBvbiB0aGUgd2ViY2FtIFVSbABFbmFibGUgdGhlIHZpcnR1YWwgcHJpbnRlcgBFbmFibGUgdGhpcyB0byBoYXZlIHRlbXBlcmF0dXJlIGZpbmUgYWRqdXN0bWVudHMgeW91IGRvIHZpYSB0aGUgKyBvciAtIGJ1dHRvbiBiZSBzZW50IHRvIHRoZSBwcmludGVyIGF1dG9tYXRpY2FsbHkuAEVuYWJsZSB0aW1lbGFwc2Ugc3VwcG9ydABFbmFibGUgd2ViY2FtIHN1cHBvcnQARW5hYmxlZABFbnRlciBVUkwuLi4ARW50ZXIgdGhlIHJldHJhY3Rpb24gei1ob3AgdXNlZCBpbiB0aGUgZmlybXdhcmUgb3IgdGhlIGdjb2RlIGZpbGUgdG8gdHJpZ2dlciBzbmFwc2hvdHMgZm9yIHRoZSB0aW1lbGFwc2Ugb25seSBpZiBhIHJlYWwgbGF5ZXIgY2hhbmdlIGhhcHBlbnMuIEZvciB0aGlzIHRvIHdvcmsgcHJvcGVybHkgeW91ciByZXRyYWN0aW9uIHotaG9wIGhhcyB0byBiZSBkaWZmZXJlbnQgZnJvbSB5b3VyIGxheWVyaGVpZ2h0IQBFcnJvcgBFcnJvciBUcmFja2luZwBFcnJvciBjb25uZWN0aW5nIHRvIHByaW50ZXIARXJyb3IgaGFuZGxpbmcARXJyb3IgcmVwb3J0ZWQgYnkgcHJpbnRlcgBFcnJvciBzdGFydGluZyBhIHByaW50AEVycm9yIQBFcnJvcnMgaW4gdGhlIGNvbW11bmljYXRpb24gd2l0aCB0aGUgcHJpbnRlciBhbmQvb3IgcmVwb3J0ZWQgYnkgdGhlIGZpcm13YXJlAEVzdGltYXRlZCBsYXllciBoZWlnaHQARXN0aW1hdGVkIHByaW50IHRpbWUARXN0aW1hdGVkIHRpbWUgdW50aWwgdGhlIHByaW50IGpvYiBpcyBkb25lLiBUaGlzIGlzIG9ubHkgYW4gZXN0aW1hdGUgYW5kIGFjY3VyYWN5IGRlcGVuZHMgaGVhdmlseSBvbiB2YXJpb3VzIGZhY3RvcnMhAEVzdGltYXRlZCB0b3RhbCBwcmludCB0aW1lAEVzdGltYXRlZCB0b3RhbCBwcmludCB0aW1lIGJhc2VkIG9uIGFuYWx5c2lzIG9mIHRoZSBmaWxlIG9yIHBhc3QgcHJpbnRzAEV2ZW50AEV2ZW50IE1hbmFnZXIARXZlbnRzIHRvIHRyYWNrLiBUaGUgcGluZyBpcyBtYW5kYXRvcnkuAEV2ZXJ5dGhpbmcgaXMgdXAtdG8tZGF0ZQBFeGNsdWRlIHRpbWVsYXBzZXMgZnJvbSBiYWNrdXAARXhjbHVkZSB1cGxvYWRlZCBmaWxlcyAoJiBhc3NvY2lhdGVkIG1ldGFkYXRhKSBmcm9tIGJhY2t1cABFeGlzdGluZyBiYWNrdXBzAEV4cG9ydABFeHRydWRlAEV4dHJ1ZGVyAEZBUQBGRk1QRUcgY29tbWFuZCBsaW5lAEZGTVBFRyBjb21tYW5kIGxpbmUgdG8gdXNlAEZGTVBFRyB0aHJlYWRzAEZhaWxlZCByZXBlYXRlZGx5IHRvIGNhcHR1cmUgdGltZWxhcHNlIGZyYW1lIGZyb20gd2ViY2FtIC0gaXMgdGhlIHNuYXBzaG90IFVSTCBjb25maWd1cmVkIGNvcnJlY3RseSBhbmQgdGhlIGNhbWVyYSBvbj8ARmFpbGVkIHRvIHJlbW92ZSB0aW1lbGFwc2UgJShuYW1lKXMuPC9wPjxwPlBsZWFzZSBjb25zdWx0IG9jdG9wcmludC5sb2cgZm9yIGRldGFpbHMuPC9wPgBGYWtlIEFja25vd2xlZGdlbWVudABGYW4gb2ZmAEZhbiBvbgBGZWF0dXJlcwBGZWVkIHJhdGUgbW9kaWZpZXI6AEZpbGFtZW50AEZpbGUARmlsZSBhbHJlYWR5IGV4aXN0cwBGaWxlIGFscmVhZHkgZXhpc3RzOiAlKG5hbWUpcwBGaWxlIGxpc3Qgc2V0dGluZ3MARmlsZS9Gb2xkZXIgd2lsbCBiZSBtb3ZlZCB0bzogAEZpbGVzAEZpbmUgYWRqdXN0OiArMcKwQwBGaW5lIGFkanVzdDogLTHCsEMARmluZSBhZGp1c3RtZW50cwBGaW5pc2gARmluaXNoZWQgVGltZWxhcHNlcwBGaW5pc2hpbmcARmlybXdhcmUgJmFtcDsgcHJvdG9jb2wARmlybXdhcmUgc3BlY2lmaWMgc2V0dGluZ3MARmlyc3QgaGFuZHNoYWtlIGF0dGVtcHQARml4ZWQARml4ZWQgZ3JvdXBzIGNhbid0IGJlIGFkZGVkIG9yIHJlbW92ZWQgdG8gb3RoZXIgZ3JvdXBzLgBGaXhlZCBncm91cHMgY2FuJ3QgYmUgYWRkZWQgb3IgcmVtb3ZlZCB0byB1c2Vycy4ARmxpcCB3ZWJjYW0gaG9yaXpvbnRhbGx5AEZsaXAgd2ViY2FtIHZlcnRpY2FsbHkARmxvdyByYXRlIG1vZGlmaWVyOgBGb2xkZXIgbmFtZQBGb2xkZXJzAEZvciBhY3J5bGljIHByaW50ZXJzIDspAEZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIE9jdG9QcmludCBldmVudHMgcGxlYXNlIHNlZSA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVyZXIiPnRoZSBvZmZpY2lhbCBkb2N1bWVudGF0aW9uPC9hPi4ARm9yIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QgeW91IG11c3QgcmVzdGFydCBPY3RvUHJpbnQgYWZ0ZXIgc2F2aW5nLgBGb3IgcGVyZm9ybWFuY2UgcmVhc29ucyBsb2NhbGx5IHJ1biBzbGljZXJzIGFyZSBkaXNhYmxlZCB3aGlsZSBwcmludGluZwBGb3IgcGVyZm9ybWFuY2UgcmVhc29ucyBvbmx5IGEgbGltaXRlZCBhbW91bnQgb2YgdGVybWluYWwgZnVuY3Rpb25hbGl0eSBpcyBlbmFibGVkIHJpZ2h0IG5vdy4ARm9yIHlvdXIgcHJpbnRlcidzIHNhZmV0eQBGb3JjZSBjaGVjayBmb3IgdXBkYXRlIChvdmVycmlkZXMgY2FjaGUgdXNlZCBmb3IgdXBkYXRlIGNoZWNrcykARm9yY2UgZmFuY3kgZnVuY3Rpb25hbGl0eQBGb3JjZSB0ZXJtaW5hbCBvdXRwdXQgZHVyaW5nIHByaW50aW5nAEZvcmNlIHRoZSB1c2Ugb2YgdGhlIDxjb2RlPi0tdXNlcjwvY29kZT4gZmxhZyB3aXRoIDxjb2RlPnBpcCBpbnN0YWxsPC9jb2RlPgBGb3JjZSB1cGRhdGUgYWxsIChldmVuIGlmIG5vIG5ldyB2ZXJzaW9ucyBhcmUgYXZhaWxhYmxlKQBGb3Jnb3QgcGFzc3dvcmQ/AEZvcm0gRmFjdG9yAEZvcnVtAEZyYW1lcwBGcmVlAEZ1bGwgcGF0aCB0byB0aGUgRkZNUEVHIGJpbmFyeQBGdWxseSBxdWFsaWZpZWQgVVJMLCBuZWVkcyB0byBiZSByZWFjaGFibGUgYnkgT2N0b1ByaW50J3Mgc2VydmVyAEdDT0RFIFNjcmlwdHMAR0NPREUgY29tbWFuZHMAR0NvZGUgVmlld2VyAEdDb2RlIFZpZXdlciBmaWxlIHNpemUgdGhyZXNob2xkAEdlbmVyYWwAR2VuZXJhdGUAR2V0IE1vcmUAR2l0aHViIENvbW1pdABHaXRodWIgc3RhcnMAR2xvYmFsIEFQSSBLZXkAR3JhcGgAR3JhcGggY3V0b2ZmAEdyb3VwcwBIZWF0ZWQgQmVkAEhlYXRlZCBDaGFtYmVyAEhlaWdodCAoWikASGVsbG8hAEhpZGUgZW1wdHkgbGF5ZXJzAEhpZGUgc3VjY2Vzc2Z1bGx5IHByaW50ZWQgZmlsZXMASGludDogSGl0dGluZyA8a2JkPkVudGVyPC9rYmQ+IGluIHRoZSBpbnB1dCBmaWVsZCB3aWxsIGFsc28gc3VibWl0IHRoZSBmb3JtAEhpbnQ6IElmIHlvdSBtb3ZlIHlvdXIgbW91c2Ugb3ZlciB0aGUgcGljdHVyZSwgeW91IGVudGVyIGtleWJvYXJkIGNvbnRyb2wgbW9kZS4ASGludDogWW91IGNhbiBhbHNvIGRyYWcgYW5kIGRyb3AgZmlsZXMgb24gdGhpcyBwYWdlIHRvIHVwbG9hZCB0aGVtLgBIb21lIFgvWQBIb21lIFoASG9tZXBhZ2UASG9zdCBJUABIb3N0IGFnYWluc3Qgd2hpY2ggdG8gY2hlY2sgZm9yIGludGVybmV0IGNvbm5lY3Rpdml0eQBIb3N0bmFtZQBIb3N0bmFtZSB0byB0cnkgdG8gcmVzb2x2ZSB0byBjaGVjayBmb3IgaW50ZXJuZXQgY29ubmVjdGl2aXR5AEhvdGVuZABIb3RlbmQgJiBleHRydWRlcgBIb3cgbG9uZyB0byBjYWNoZSBub3RpY2VzLCBpbiBtaW51dGVzLiBZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLgBIb3cgbG9uZyB0byBjYWNoZSByZXBvc2l0b3J5IGRhdGEsIGluIG1pbnV0ZXMuIFlvdSBzaG91bGQgbm9ybWFsbHkgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuAEhvdyBsb25nIHRvIGNhY2hlIHRoZSBibGFja2xpc3QsIGluIG1pbnV0ZXMuIFlvdSBzaG91bGQgbm9ybWFsbHkgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuAElkZW50aWZpZXIASWRlbnRpZmllciBtdXN0IGJlIHNldABJZiBhY2tub3dsZWRnZW1lbnRzICgib2sicykgc2VudCBieSB0aGUgZmlybXdhcmUgZ2V0IGxvc3QgZHVlIHRvIGlzc3VlcyB3aXRoIHRoZSBzZXJpYWwgY29tbXVuaWNhdGlvbiB0byB5b3VyIHByaW50ZXIsIE9jdG9QcmludCdzIGNvbW11bmljYXRpb24gd2l0aCBpdCBjYW4gYmVjb21lIHN0dWNrLiBJZiB0aGF0IGhhcHBlbnMsIHRoaXMgY2FuIGhlbHAuIFBsZWFzZSBiZSBhZHZpc2VkIHRoYXQgc3VjaCBvY2N1cnJlbmNlcyBoaW50IGF0IGdlbmVyYWwgY29tbXVuaWNhdGlvbiBpc3N1ZXMgd2l0aCB5b3VyIHByaW50ZXIgd2hpY2ggd2lsbCBwcm9iYWJseSBuZWdhdGl2ZWx5IGluZmx1ZW5jZSB5b3VyIHByaW50aW5nIHJlc3VsdHMgYW5kIHdoaWNoIHlvdSBzaG91bGQgdGhlcmVmb3JlIHRyeSB0byByZXNvbHZlIQBJZiBkZXRlY3RlZCBhcyBuZWNlc3NhcnkASWYgZGV0ZWN0ZWQgYXMgcG90ZW50aWFsbHkgbmVlZGVkAElmIGRldGVjdGVkIGFzIHN1cHBvcnRlZCBieSB0aGUgZmlybXdhcmUgKDxjb2RlPlBST01QVF9TVVBQT1JUPC9jb2RlPiBjYXBhYmlsaXR5KQBJZiBlbmFibGVkLCBPY3RvUHJpbnQgd2lsbCBub3Qgc2VuZCB0b29sIGNvbW1hbmRzIHRvIHlvdXIgcHJpbnRlciB0aGF0IGV4Y2VlZCB0aGUgbnVtYmVyIG9mIGV4dHJ1ZGVycyBjb25maWd1cmVkIGluIHRoZSBhY3RpdmUgcHJpbnRlciBwcm9maWxlLCBvciBmb3Igd2hpY2ggdGhlIGZpcm13YXJlIGhhcyByZXBvcnRlZCBhbiAiaW52YWxpZCBleHRydWRlciIgZXJyb3IuIE9ubHkgdW5jaGVjayB0aGlzIGlmIE9jdG9QcmludCBvciB5b3VyIGZpcm13YXJlIG1pc3Rha2luZ2x5IG1hcmsgdmFsaWQgdG9vbHMgYXMgaW52YWxpZCBhbmQgYmUgc3VyZSB0byBpbnZlc3RpZ2F0ZSB0aGUgcmVhc29uIGZvciB0aGF0LCBpdCBtaWdodCBiZSBhIG1pc2NvbmZpZ3VyYXRpb24geW91IG5lZWQgdG8gY29ycmVjdCBmb3IgcHJvcGVyIG9wZXJhdGlvbi4ASWYgZW5hYmxlZCwgYW4gYWRkaXRpb25hbCBzZXJpYWwgcG9ydCA8Y29kZT5WSVJUVUFMPC9jb2RlPiB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgY29ubmVjdGluZywgYmFja2VkIGJ5IGEgZmFrZSBwcmludGVyIGltcGxlbWVudGF0aW9uLiBVc2VmdWwgZm9yIGRldmVsb3BtZW50LgBJZiBwcm92aWRlZCwgdGhlIEdDb2RlIFZpZXdlciB3aWxsIHNlYXJjaCBmb3IgYSBsaW5lIGJlZ2lubmluZyB3aXRoIHRoaXMgc3RyaW5nLiBJZiBmb3VuZCwgYWxsIEdDb2RlIHVwIHRvIHRoYXQgcG9pbnQgd2lsbCBiZSBza2lwcGVkLiBUaGlzIGNhbiBiZSB1c2VkIHRvIHNraXAgInB1cmdlL25venpsZSB3aXBlIiBHQ29kZSBpbiB0aGUgdmlld2VyLiBOb3RlIHRoZSBzZWFyY2ggaXMgY2FzZSBzZW5zaXRpdmUuIEV4YW1wbGU6IDxjb2RlPjsgbGF5ZXIgMTwvY29kZT4ASWYgdGhlIGZyZWUgZGlzayBzcGFjZSBmYWxscyBiZWxvdyB0aGVzZSB0aHJlc2hvbGRzLCBPY3RvUHJpbnQgd2lsbCB3YXJuIHRoZSB1c2VyLgBJZiB0aGUgc3RyZWFtIGhhcyBhIGRpZmZlcmVudCBhc3BlY3QgcmF0aW8gdGhhbiBjb25maWd1cmVkIGhlcmUgaXQgd2lsbCBiZSBsZXR0ZXJib3hlZC4ASWYgdGhpcyBpcyBjaGVja2VkLCBPY3RvUHJpbnQgd2lsbCB0cnkgdG8gc2VuZCBhbiA8Y29kZT5NMTEyPC9jb2RlPiBwcmlvciB0byBhIGRpc2Nvbm5lY3QgZHVlIHRvIGEgKGZhdGFsKSBlcnJvciBpbiBvcmRlciB0byBkaXNhYmxlIGhlYXRlcnMgYW5kIG1vdG9ycy4ASWYgeW91IGNoZWNrIHRoaXMsIE9jdG9QcmludCB3aWxsIGFsc28gbm90aWZ5IHlvdSBvZiB1cGRhdGVzIG9mIHRoZSA8Y29kZT5waXA8L2NvZGU+IHRvb2wgdXNlZCBieSBPY3RvUHJpbnQgdG8gaW5zdGFsbCBwbHVnaW5zIGFuZCB1cGRhdGVzIGFuZCBhbGxvdyB5b3UgdG8gdXBkYXRlIGl0IHRocm91Z2ggT2N0b1ByaW50LiA8Y29kZT5waXA8L2NvZGU+IGlzIG91dHNpZGUgb2YgdGhlIGNvbnRyb2wgb2YgdGhlIE9jdG9QcmludCBtYWludGFpbmVyLCBzbyBlbmFibGUgYXQgeW91ciBvd24gcmlzay4ASWYgeW91IGRpc2FibGUgdGhpcywgdGhlIDxjb2RlPmNhbmNlbF9wb3NpdGlvbjwvY29kZT4gcGxhY2Vob2xkZXJzIGluIHlvdXIgY2FuY2VsIEdDT0RFIHNjcmlwdCBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgZGF0YSBpbiB0aGUgcHJpbnQgcmVjb3ZlcnkgZGF0YSB3aWxsIHN0YXkgdW5wb3B1bGF0ZWQhIEhvd2V2ZXIsIGNhbmNlbGxpbmcgc3BlZWQgbWlnaHQgaW1wcm92ZSBzbGlnaHRseS4ASWYgeW91IGRpc2FibGUgdGhpcywgdGhlIDxjb2RlPnBhdXNlX3Bvc2l0aW9uPC9jb2RlPiBwbGFjZWhvbGRlcnMgaW4geW91ciBwYXVzZS9yZXN1bWUgR0NPREUgc2NyaXB0cyB3aWxsIHN0YXkgdW5wb3B1bGF0ZWQhIEhvd2V2ZXIsIHBhdXNpbmcgc3BlZWQgbWlnaHQgaW1wcm92ZSBzbGlnaHRseS4ASWYgeW91IGRvIG5vdCB3aXNoIHRvIGNoYW5nZSB5b3VyIHBhc3N3b3JkLCBqdXN0IGxlYXZlIHRoZSBmb2xsb3dpbmcgZmllbGRzIGVtcHR5LgBJZiB5b3UgZW5qb3kgT2N0b1ByaW50Li4uAElmIHlvdSBldmVyIG5lZWQgdG8geW91IGNhbiBmaW5kIHRoZSBkZWZhdWx0IGNhbmNlbCBzY3JpcHQgdGhhdCBPY3RvUHJpbnQgc2hpcHMgd2l0aCA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayI+aGVyZTwvYT4uAElmIHlvdSBzZWUgeW91ciB3ZWJjYW0gc25hcHNob3QgcGljdHVyZSBiZWxvdywgdGhlIGVudGVyZWQgc25hcHNob3QgVVJMIGlzIG9rLgBJZiB5b3Ugc2VlIHlvdXIgd2ViY2FtIHN0cmVhbSBiZWxvdywgdGhlIGVudGVyZWQgc3RyZWFtIFVSTCBpcyBvay4ASWYgeW91IHVuY2hlY2sgdGhpcywgb25seSBsb2dnZWQgaW4gYWRtaW5zIHdpbGwgc2VlIHVwZGF0ZSBub3RpZmljYXRpb25zLiBVcGRhdGUgbm90aWZpY2F0aW9ucyBzaG93biB0byB1c2VycyBkbyBub3QgaW5jbHVkZSB0aGUgIlVwZGF0ZSBub3ciIGJ1dHRvbi4ASWYgeW91IHdhbnQgdG8gcmVuYW1lIHRoZSBmaWxlLCB5b3UgbWF5IGRvIHNvIGJlbG93LiBBIGNvbGxpc2lvbiBmcmVlIHN1Z2dlc3Rpb24gaGFzIGFscmVhZHkgYmVlbiBtYWRlLgBJZ25vcmUASWdub3JlIGNvbnNlY3V0aXZlIHJlc2VuZCByZXF1ZXN0cyBmb3IgdGhlIHNhbWUgbGluZQBJZ25vcmVkIGNvbW1hbmRzAEltcG9ydGFudCBub3RpY2UgcmVnYXJkaW5nIHBsdWdpbiAiJShuYW1lKXMiAEluY29tcGF0aWJsZQBJbmNvbXBhdGlibGUgdG8gT2N0b1ByaW50IG9yIHRoZSB1bmRlcmx5aW5nIFB5dGhvbiBlbnZpcm9ubWVudABJbmNvcnJlY3QgdXNlcm5hbWUgb3IgcGFzc3dvcmQuAEluZm8ASW5pdGlhbCBiYXVkcmF0ZSBkZXRlY3Rpb24gcGF1c2UASW5pdGlhbGl6ZSBTRCBjYXJkAEluc3RhbGwASW5zdGFsbCA8ZW0+JShwbHVnaW4pczwvZW0+OiAlKHJlc3VsdClzAEluc3RhbGwgbmV3IFBsdWdpbnMuLi4ASW5zdGFsbGVkIFBsdWdpbnMASW5zdGFsbGVkOgBJbnN0YWxsaW5nIHBsdWdpbiAiJShuYW1lKXMiIGZyb20gJSh1cmwpcy4uLgBJbnN0YWxsaW5nIHBsdWdpbiAiJShwbHVnaW4pcyIuLi4ASW5zdGFsbGluZyBwbHVnaW4gZnJvbSAlKHVybClzLi4uAEluc3RhbGxpbmcgcGx1Z2luIGZyb20gdXBsb2FkZWQgZmlsZS4uLgBJbnN0YWxsaW5nIHBsdWdpbi4uLgBJbnN0YW5jZSBJRABJbnRlcmZhY2UASW50ZXJuYWwASW50ZXJ2YWwgaW4gd2hpY2ggdG8gY2hlY2sgZm9yIGludGVybmV0IGNvbm5lY3Rpdml0eQBJbnRlcnZhbCBpbiB3aGljaCB0byBwb2xsIGZvciB0aGUgU0QgcHJpbnRpbmcgc3RhdHVzIGluZm9ybWF0aW9uIGZyb20gdGhlIHByaW50ZXIgd2hpbGUgcHJpbnRpbmcASW50ZXJ2YWwgaW4gd2hpY2ggdG8gcG9sbCBmb3IgdGhlIHRlbXBlcmF0dXJlIGluZm9ybWF0aW9uIGZyb20gdGhlIHByaW50ZXIASW50ZXJ2YWxzICZhbXA7IHRpbWVvdXRzAEludmFsaWQgY2hhcmFjdGVycywgb25seSBhLXosIEEtWiwgMC05LCAtLCAuLCBfLCAoIGFuZCApIGFyZSBhbGxvd2VkAEludmFsaWQgdG9vbCByZXBvcnRlZABJbnZlcnQgY29udHJvbABJcyB5b3VyIE9jdG9QcmludCBpbnN0YWxsYXRpb24gY29ubmVjdGVkIHRvIHRoZSBpbnRlcm5ldD8ASXQgY2FuIG5lZ2F0aXZlbHkgaW1wYWN0IHByaW50IHBlcmZvcm1hbmNlIGFuZCBhbHNvIHRha2UgdXAgYSBsb3Qgb2Ygc3RvcmFnZSBzcGFjZSBkZXBlbmRpbmcgb24gaG93IGxvbmcgeW91IGtlZXAgaXQgZW5hYmxlZCBhbmQgdGh1cyBzaG91bGQgb25seSBiZSB1c2VkIGZvciBkZWJ1Z2dpbmcuAEl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIG5vIHBsdWdpbnMgdGhhdCBtYXRjaCB5b3VyIHNlYXJjaCBjcml0ZXJpYQBJdCBsb29rcyBsaWtlIHlvdXIgcHJpbnRlciByZXNldCB3aGlsZSBhIGNvbm5lY3Rpb24gd2FzIGFjdGl2ZS4gRHVlIHRvIHRoaXMgdGhlIG9uZ29pbmcgam9iIHdhcyBhYm9ydGVkLiBJZiB0aGlzIHdhcyBpbnRlbnRpb25hbCB5b3UgbWF5IHNhZmVseSBpZ25vcmUgdGhpcyBtZXNzYWdlLiBPdGhlcndpc2UgeW91IHNob3VsZCBpbnZlc3RpZ2F0ZSB3aHkgeW91ciBwcmludGVyIHJlc2V0IGl0c2VsZiwgc2luY2UgdGhpcyB3aWxsIGludGVycnVwdCBwcmludHMgYW5kIGFsc28gZmlsZSB0cmFuc2ZlcnMgdG8geW91ciBwcmludGVyJ3MgU0QuAEl0IGxvb2tzIGxpa2UgeW91ciBwcmludGVyIHJlc2V0IHdoaWxlIGEgY29ubmVjdGlvbiB3YXMgYWN0aXZlLiBJZiB0aGlzIHdhcyBpbnRlbnRpb25hbCB5b3UgbWF5IHNhZmVseSBpZ25vcmUgdGhpcyBtZXNzYWdlLiBPdGhlcndpc2UgeW91IHNob3VsZCBpbnZlc3RpZ2F0ZSB3aHkgeW91ciBwcmludGVyIHJlc2V0IGl0c2VsZiwgc2luY2UgdGhpcyB3aWxsIGludGVycnVwdCBwcmludHMgYW5kIGFsc28gZmlsZSB0cmFuc2ZlcnMgdG8geW91ciBwcmludGVyJ3MgU0QuAEl0IG1pZ2h0IG5vdCBiZSBjb25maWd1cmVkIGNvcnJlY3RseSBvciByZXF1aXJlIGF1dGhlbnRpY2F0aW9uLiBUbyBoYXZlIHRoaXMgZml4ZWQsIGdldCBpbiB0b3VjaCB3aXRoIGFuIGFkbWluaXN0cmF0b3Igb2YgdGhpcyBPY3RvUHJpbnQgaW5zdGFuY2UuAEl0IG1pZ2h0IG5vdCBiZSBjb25maWd1cmVkIGNvcnJlY3RseSBvciByZXF1aXJlIGF1dGhlbnRpY2F0aW9uLiBZb3UgY2FuIGNoYW5nZSB0aGUgVVJMIG9mIHRoZSBzdHJlYW0gdW5kZXIgIlNldHRpbmdzIiA+ICJXZWJjYW0gJiBUaW1lbGFwc2UiID4gIldlYmNhbSIgPiAiU3RyZWFtIFVSTCIuIElmIHlvdSBkb24ndCBoYXZlIGEgd2ViY2FtIHlvdSBjYW4gYWxzbyBqdXN0IGRpc2FibGUgd2ViY2FtIHN1cHBvcnQgdGhlcmUuAEtlZXAgZGF0YQBLZWVwIGVuYWJsZWQAS2VlcCBpbnN0YWxsZWQAS2V5Ym9hcmQgY29udHJvbHMgYWN0aXZlAExhbmd1YWdlAExhbmd1YWdlIFBhY2tzAExhc3QgY2FjaGUgcmVmcmVzaDoATGFzdCBwcmludCB0aW1lAExhc3QgcHJpbnRlZABMYXN0IHB1c2ggdG8gbWFpbiBicmFuY2gATGFzdCB1cGRhdGU6AExhdGVyAExhdGVzdCByZWxlYXNlICYgZGF0ZQBMYXllciBoZWlnaHQATGF5ZXIgaW5mbwBMYXllciBudW1iZXIATGF5ZXJzIHdpdGggZXh0cnVzaW9uAExldmVsAExpY2Vuc2UATG9hZABMb2FkIGFuZCBQcmludABMb2FkaW5nIE9jdG9QcmludCdzIFVJLCBwbGVhc2Ugd2FpdC4uLgBMb2FkaW5nLi4uAExvY2FsIGNoZWNrb3V0AExvZyBjb21tdW5pY2F0aW9uIHRvIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+AExvZyBpbgBMb2cgcG9zaXRpb24gb24gY2FuY2VsAExvZyBwb3NpdGlvbiBvbiBwYXVzZQBMb2cgc3RvcmFnZToATG9nZ2VkIGluIGFzICUobmFtZSlzAExvZ2dpbmcgTGV2ZWxzAExvZ2luAExvZ2luIGZhaWxlZABMb2dpbiBzdWNjZXNzZnVsAExvZ291dABMb2dvdXQgbm90IHN1cHBvcnRlZCBmb3IgJShtZXRob2QpcywgcGxlYXNlIGNsb3NlIHRoZSBicm93c2VyIGluc3RlYWQATG9nb3V0IG9mIE9jdG9QcmludABMb2dvdXQgc3VjY2Vzc2Z1bABMb2dzAExvZ3MgRm9sZGVyAExvbmcgcnVubmluZyBjb21tYW5kcwBMb3dlciBMZWZ0AE1ha2Ugc3VyZSB0byBzcGVjaWZ5IG51bWJlciBvZiBleHRydWRlcnMgYXZhaWxhYmxlIG9uIHlvdXIgcHJpbnRlciBvciB5b3UgbWlnaHQgcnVuIGludG8gaXNzdWVzAE1ha2Ugc3VyZSB5b3UgaGF2ZSByZWFkIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIgbm9vcGVuZXIiPiJIb3cgdG8gdXNlIHRoZSByZWxlYXNlIGNoYW5uZWxzIHRvIGhlbHAgdGVzdCByZWxlYXNlIGNhbmRpZGF0ZXMiPC9hPiBiZWZvcmUgc3dpdGNoaW5nIHRvIGEgcmVsZWFzZSBjaGFubmVsIG90aGVyIHRoYW4gIlN0YWJsZSIATWFrZXMgT2N0b1ByaW50IHRyeSB0byBjb25uZWN0IHRvIHRoZSBwcmludGVyIGF1dG9tYXRpY2FsbHkgZHVyaW5nIHN0YXJ0IHVwAE1hbmFnZSBMYW5ndWFnZSBQYWNrcy4uLgBNYW5hZ2UuLi4ATWFudWFsbHkgZ2VuZXJhdGUgYW4gYXBwbGljYXRpb24ga2V5AE1hcmsgYXMgbGFzdCByZWFkAE1hcmsgcmVhZABNYXJraW5nIGEgZ3JvdXAgYXMgZGVmYXVsdCB3aWxsIG1ha2UgaXQgZ2V0IHByZSBzZWxlY3RlZCB3aGVuIGNyZWF0aW5nIG5ldyB1c2Vycy4ATWFybGluIDIrAE1heC4gY29uc2VjdXRpdmUgdGltZW91dHMgZHVyaW5nIGxvbmcgcnVubmluZyBjb21tYW5kcwBNYXguIGNvbnNlY3V0aXZlIHRpbWVvdXRzIHdoaWxlIGlkbGUATWF4LiBjb25zZWN1dGl2ZSB0aW1lb3V0cyB3aGlsZSBwcmludGluZwBNYXhpbXVtIGNvbnNlY3V0aXZlIGNvbW11bmljYXRpb24gdGltZW91dHMgd2hpbGUgYSBsb25nIHJ1bm5pbmcgY29tbWFuZCBpcyBhY3RpdmUuIE1vcmUgdGhhbiB0aGlzIGFuZCB0aGUgcHJpbnRlciB3aWxsIGJlIGNvbnNpZGVyZWQgdG8gYmUgZ29uZS4gU2V0IHRvIDAgdG8gZGlzYWJsZS4ATWF4aW11bSBjb25zZWN1dGl2ZSBjb21tdW5pY2F0aW9uIHRpbWVvdXRzIHdoaWxlIGlkbGUuIE1vcmUgdGhhbiB0aGlzIGFuZCB0aGUgcHJpbnRlciB3aWxsIGJlIGNvbnNpZGVyZWQgdG8gYmUgZ29uZS4gU2V0IHRvIDAgdG8gZGlzYWJsZS4ATWF4aW11bSBjb25zZWN1dGl2ZSBjb21tdW5pY2F0aW9uIHRpbWVvdXRzIHdoaWxlIHByaW50aW5nLiBNb3JlIHRoYW4gdGhpcyBhbmQgdGhlIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIHRvIGJlIGdvbmUuIFNldCB0byAwIHRvIGRpc2FibGUuAE1heGltdW0gc2l6ZSBmb3Igd2hpY2ggdGhlIEdDb2RlIFZpZXdlciBhdXRvbG9hZHMgdGhlIGZpbGUgZm9yIHByZXZpZXcATWVzc2FnZSBmcm9tIHlvdXIgcHJpbnRlcgBNaW5pbXVtIGZyZWUgZGlzayBzcGFjZQBNaW5pbXVtIGludGVydmFsAE1peGVkAE1vZGVsAE1vZGVsIGNvbnRhaW5zIG5vIGV4dHJ1c2lvbi48YnI+AE1vZGVsIGluZm8ATW9kZWwgc2l6ZQBNb3JlAE1vc3QgTWFybGluIGZvcmtzIHRoYXQgd2VyZSBkZXJpdmVkIGZyb20gTWFybGluIHZlcnNpb25zICZsdDsgdjEuMS4wIGRvIG5vdCBzZW5kIGFuIGFja25vd2xlZGdpbmcgPGNvZGU+b2s8L2NvZGU+IGZvciBhIDxjb2RlPk0yOTwvY29kZT4uIENoZWNrIHRoaXMgaWYgeW91IHJ1biBpbnRvIGNvbW11bmljYXRpb24gc3RhbGxzIGZvbGxvd2luZyBzdHJlYW1pbmcgb2YgYSBmaWxlIHRvIHlvdXIgcHJpbnRlcidzIFNELgBNb3RvcnMgb2ZmAE1vdmUATW92ZSBGaWxlIG9yIEZvbGRlcgBOL0EATmFtZQBOYW1lIGNhbiBiZSByZXNvbHZlZABOYW1lIGNhbm5vdCBiZSByZXNvbHZlZABOYW1lIG11c3QgYmUgc2V0AE5hbWUgb2YgZmlsZSBjdXJyZW50bHkgc2VsZWN0ZWQgZm9yIHByaW50aW5nAE5hbWUgb2YgdGhpcyBPY3RvUHJpbnQgaW5zdGFuY2UsIHdpbGwgYmUgc2hvd24gaW4gdGhlIG5hdmlnYXRpb24gYmFyIGFuZCBicm9hZGNhc3Qgb24gdGhlIG5ldHdvcmsATmF2aWdhdGlvbgBOZWVkcyBhIHJlc3RhcnQgb2YgT2N0b1ByaW50IHRvIGJlY29tZSBhY3RpdmUuAE5lZWRzIHJlc3RhcnQATmVlZHMgdG8gYmUgcmVhY2hhYmxlIGZyb20gdGhlIGJyb3dzZXIgZGlzcGxheWluZyB0aGUgT2N0b1ByaW50IFVJLCB1c2VkIHRvIGVtYmVkIHRoZSB3ZWJjYW0gc3RyZWFtIGludG8gdGhlIHBhZ2UuAE5ldHdvcmsgZXJyb3Igd2hpbGUgY2hlY2tpbmcgZm9yIHVwZGF0ZQBOZXZlcgBOZXZlciBzaG93IG5vdGlmaWNhdGlvbnMATmV3IE9mZnNldABOZXcgUGFzc3dvcmQATmV3IGtleSBnZW5lcmF0ZWQhAE5ldyB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBpcyBkb25lIHJlbmRlcmluZy4ATmV3ZXIgdmVyc2lvbnMgb2YgdGhpcyBwbHVnaW4gYXJlIG5vdCBjb21wYXRpYmxlIHRvIHRoaXMgc2V0dXAuAE5leHQATmV4dCBsYXllcgBObwBObyBhZGRpdGlvbmFsIExhbmd1YWdlIFBhY2tzIGFyZSBpbnN0YWxsZWQgYXQgdGhlIG1vbWVudC4ATm8gaW50ZXJuZXQgY29ubmVjdGlvbgBObywgY29udGludWUgdGhlIHByaW50AE5vdCBjb21wYXRpYmxlAE5vdCBwb3NzaWJsZQBOb3RlAE5vdGU6AE5vdGU6IABOb3RoaW5nIHRvIGNsZWFudXAhIFRoZXJlIGFyZSBubyBzZXR0aW5ncyBvciBkYXRhIGxlZnQgb3ZlciBmcm9tIHBsdWdpbnMgd2hpY2ggYXJlIG5vIGxvbmdlciBpbnN0YWxsZWQuAE5vdGljZSByZWdhcmRpbmcgcGx1Z2luICIlKG5hbWUpcyIATm90aWNlcyBVUkwATm90aWNlcyBjYWNoZSBUVEwATm90aWNlcyBjb25maWd1cmF0aW9uAE5vdyBjYXB0dXJpbmcgdGltZWxhcHNlIHBvc3Qgcm9sbCwgdGhpcyB3aWxsIHRha2UgYXBwcm94aW1hdGVseSAlKGR1cmF0aW9uKXMgKHNvIHVudGlsICUodGltZSlzKS4uLgBOb3cgY2FwdHVyaW5nIHRpbWVsYXBzZSBwb3N0IHJvbGwsIHRoaXMgd2lsbCB0YWtlIGFwcHJveGltYXRlbHkgJShkdXJhdGlvbilzLi4uAE5vdyBjYXB0dXJpbmcgdGltZWxhcHNlIHBvc3Qgcm9sbCwgdGhpcyB3aWxsIHRha2Ugb25seSBhIG1vbWVudC4uLgBOb3cgcmVuZGVyaW5nIHRpbWVsYXBzZSAlKG1vdmllX3ByZWZpeClzLiBEdWUgdG8gcGVyZm9ybWFuY2UgcmVhc29ucyBpdCBpcyBub3QgcmVjb21tZW5kZWQgdG8gc3RhcnQgYSBwcmludCBqb2Igd2hpbGUgYSBtb3ZpZSBpcyBzdGlsbCByZW5kZXJpbmcuAE5vdyB1cGRhdGluZyAlKG5hbWUpcyB0byAlKHZlcnNpb24pcwBOb3cgdXBkYXRpbmcsIHBsZWFzZSB3YWl0LgBOb3p6bGUgRGlhbWV0ZXIATnVtYmVyIG9mIEV4dHJ1ZGVycwBOdW1iZXIgb2YgRkZNUEVHIGVuY29kaW5nIHRocmVhZHMAT2JqZWN0IGRvZXNuJ3QgZml0IHByaW50IHZvbHVtZQBPYmplY3QgZXhjZWVkcyBwcmludCB2b2x1bWUgaW4gZGVwdGguPGJyPgBPYmplY3QgZXhjZWVkcyBwcmludCB2b2x1bWUgaW4gaGVpZ2h0Ljxicj4AT2JqZWN0IGV4Y2VlZHMgcHJpbnQgdm9sdW1lIGluIHdpZHRoLjxicj4AT2JqZWN0IGluICUobmFtZSlzIGV4Y2VlZHMgdGhlIHByaW50IHZvbHVtZSBvZiB0aGUgY3VycmVudGx5IHNlbGVjdGVkIHByaW50ZXIgcHJvZmlsZSwgYmUgY2FyZWZ1bCB3aGVuIHByaW50aW5nIHRoaXMuAE9iamVjdCdzIGJvdW5kaW5nIGJveDogKCUob2JqZWN0Lm1pblgpLjJmLCAlKG9iamVjdC5taW5ZKS4yZiwgJShvYmplY3QubWluWikuMmYpICZ0aW1lczsgKCUob2JqZWN0Lm1heFgpLjJmLCAlKG9iamVjdC5tYXhZKS4yZiwgJShvYmplY3QubWF4WikuMmYpAE9jdG9QcmludABPY3RvUHJpbnQgPGNvZGU+cGlwPC9jb2RlPiB0YXJnZXQAT2N0b1ByaW50IFJlbGVhc2UgQ2hhbm5lbABPY3RvUHJpbnQgU2V0dGluZ3MAT2N0b1ByaW50IGNhbm5vdCByZWFjaCB0aGUgaW50ZXJuZXQuIElmIHRoaXMgaXMgbm90IGludGVudGlvbmFsLCBwbGVhc2UgY2hlY2sgT2N0b1ByaW50J3MgbmV0d29yayBzZXR0aW5ncyBhbmQgdGhlIGNvbm5lY3Rpdml0eSBjaGVjayBjb25maWd1cmF0aW9uLiBVcGRhdGVzLCBwbHVnaW4gcmVwb3NpdG9yeSBhbmQgYW55dGhpbmcgZWxzZSByZXF1aXJpbmcgYWNjZXNzIHRvIHRoZSBwdWJsaWMgaW50ZXJuZXQgd2lsbCBub3Qgd29yay4AT2N0b1ByaW50IGNoZWNrb3V0IGZvbGRlcgBPY3RvUHJpbnQgY291bGQgbm90IGNyZWF0ZSB5b3VyIGJhY2t1cC4gUGxlYXNlIGNvbnN1bHQgPGNvZGU+b2N0b3ByaW50LmxvZzwvY29kZT4gZm9yIGRldGFpbHMuIEVycm9yOiAlKGVycm9yKXMAT2N0b1ByaW50IG9yIGEgcGx1Z2luIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IG9yIHVuc3VjY2Vzc2Z1bGx5AE9jdG9QcmludCByZWxhdGVkIGNvbW1hbmRzAE9jdG9QcmludCB2ZXJzaW9uIHRyYWNraW5nAE9jdG9QcmludCB3aWxsIHJhdGUgbGltaXQgc25hcHNob3RzIHRvIHRoaXMgbWluaW11bSBpbnRlcnZhbC4gVGhpcyBpdCB0byBwcmV2ZW50IGFnYWluc3QgcGVyZm9ybWFuY2UgaXNzdWVzIHdpdGggdmFzZSBtb2RlL2NvbnRpbnVvdXMgeiBwcmludHMuAE9jdG9QcmludCB3aWxsIHVzZSB0aGUgZmluYWwgcGljdHVyZSB0byBhZGQgdGhpcyBtYW55IHNlY29uZHMgdG8gdGhlIGVuZCBvZiB5b3VyIHJlbmRlcmVkIHRpbWVsYXBzZS4AT2N0b1ByaW50IHdpbGwgdXNlIHRoaXMgZGVsYXkgdG8gbGltaXQgdGhlIG51bWJlciBvZiBzZW50IHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNob3VsZCB5b3UgcGVyZm9ybSBtdWx0aXBsZSBmaW5lIGFkanVzdG1lbnRzIGluIGEgc2hvcnQgdGltZS4AT2N0b1ByaW50J3MgVUkgcmVxdWlyZXMgSmF2YVNjcmlwdCB0byB3b3JrLiBQbGVhc2UgZW5hYmxlIEphdmFTY3JpcHQgYW5kIHJlbG9hZC4AT2ZmAE9mZmxpbmUAT2ZmbGluZSBhZnRlciBlcnJvcgBPZmZzZXQAT2Zmc2V0IHRvIGFwcGx5IHRvIHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNlbnQgZnJvbSBmaWxlcwBPbiBaIENoYW5nZQBPbmJvYXJkIHNsaWNpbmcgYWN0aW9ucwBPbmxpbmUgQ29ubmVjdGl2aXR5IENoZWNrAE9ubGluZSByZXN0b3JlIGlzIG5vdCBzdXBwb3J0ZWQgb24geW91ciBzeXN0ZW0uAE9ubHkgY2hvb3NlIHRoaXMgaWYgeW91ciBmaXJtd2FyZSBzZW5kcyBlcnJvciBtZXNzYWdlcyB0aGF0IGFyZSBub3QgYWN0dWFsIGVycm9ycy4gTWlnaHQgbWFzayBwcmludGVyIGlzc3VlcyAoZXZlbiBmYXRhbCBlcnJvcnMhKSwgYmUgY2FyZWZ1bCEAT25seSBtb2RpZnkgaWYgdG9sZCB0byBkbyBzbwBPbmx5IHNob3cgJSh0eXBlKXMgZmlsZXMAT25seSBzaG93IGNvbXBhdGlibGUgcGx1Z2lucwBPbmx5IHNob3cgZmlsZXMgc3RvcmVkIGxvY2FsbHkAT25seSBzaG93IGZpbGVzIHN0b3JlZCBvbiBTRABPbmx5IHNob3cgbWFjaGluZSBjb2RlIGZpbGVzAE9ubHkgc2hvdyBtb2RlbCBmaWxlcwBPbmx5IHNob3cgdW5hYmFuZG9uZWQgcGx1Z2lucwBPbmx5IHNob3cgdW5pbnN0YWxsZWQgcGx1Z2lucwBPbmx5IHdoZW4gaWRsZSAobm90IHByaW50aW5nKQBPcGVuaW5nIHNlcmlhbCBjb25uZWN0aW9uAE9wZXJhdGlvbmFsAE9yaWdpbgBPdXRwdXQgRmlsZW5hbWUAUGFnZSZkYXJyOwBQYWdlJnVhcnI7AFBhc3N3b3JkAFBhc3N3b3JkcyBkbyBub3QgbWF0Y2gAUGF0aCB0byBGRk1QRUcAUGF1c2UAUGF1c2VkAFBhdXNlcyB0aGUgcHJpbnQgam9iAFBhdXNpbmcAUGF1c2luZyBjb21tYW5kcwBQZW5kaW5nIGluc3RhbGwAUGVuZGluZyB1bmluc3RhbGwAUGVybWlzc2lvbnMAUGVyc29uYWxpemUgdGhlIGNvbG9yIG9mIHRoZSBuYXZpZ2F0aW9uIGJhciAtIG1heWJlIHRvIG1hdGNoIHlvdXIgcHJpbnRlcj8AUGxlYXNlIGFsd2F5cyBzaGFyZSBhIFN5c3RlbWluZm8gQnVuZGxlIHdoZW4gcmVxdWVzdGluZyBzdXBwb3J0IG9uIHRoZSBmb3J1bXMgb3IKICAgIHdoZW4gb3BlbmluZyBhIG5ldyBidWcgcmVwb3J0OgBQbGVhc2UgY29uZmlndXJlIHdoaWNoIHNsaWNlciBhbmQgd2hpY2ggc2xpY2luZyBwcm9maWxlIHRvIHVzZSBhbmQgbmFtZSB0aGUgR0NvZGUgZmlsZSB0byBzbGljZSB0byBiZWxvdywgb3IgY2xpY2sgIkNhbmNlbCIgaWYgeW91IGRvIG5vdCB3aXNoIHRvIHNsaWNlIHRoZSBmaWxlIG5vdy4AUGxlYXNlIGNvbnN1bHQgb2N0b3ByaW50LmxvZyBmb3IgZGV0YWlscwBQbGVhc2UgZGVmaW5lIHRoZSBtYXhpbXVtIHNwZWVkL2ZlZWRyYXRlIG9mIHRoZSBpbmRpdmlkdWFsIGF4ZXMgYW5kIHdoZXRoZXIgdGhlaXIgY29udHJvbCBzaG91bGQgYmUgaW52ZXJ0ZWQgb3Igbm90LgBQbGVhc2UgZGVmaW5lIHRoZSBwcmludCB2b2x1bWUuAFBsZWFzZSBsb2cgaW4AUGxlYXNlIG1ha2Ugc3VyZSB0aGUgc2V0dGluZ3MgYmVsb3cgbWF0Y2ggeW91ciBwcmludGVyLiBJZiB5b3UgcGxhbiBvbiBjb25uZWN0aW5nIG1vcmUgdGhhbiBvbmUgcHJpbnRlcgp0byBPY3RvUHJpbnQsIHlvdSBjYW4gYWxzbyBjb25maWd1cmUgYWRkaXRpb25hbCBwcmludGVyIHByb2ZpbGVzIHVuZGVyIFNldHRpbmdzID4gUHJpbnRlciBQcm9maWxlcwBQbGVhc2Ugbm90ZSB0aGF0IE9jdG9QcmludCBtZXJlbHkgZW1iZWRzIGEgd2ViY2FtIHN0cmVhbSAmIGFjY2VzcyBhIHNuYXBzaG90IFVSTC4gSXQgZG9lcyBub3QgYWN0dWFsbHkgcnVuIGl0cyBvd24gd2ViY2FtIHNlcnZlciBvciBpbnRlcmFjdCBkaXJlY3RseSB3aXRoIHlvdXIgY2FtZXJhLiBJdCB0aHVzIGNhbid0IGltcG9zZSBhY2Nlc3MgcmVzdHJpY3Rpb25zIG9uIGl0IG9yIGVuYWJsZS9kaXNhYmxlIHRoZSBzdHJlYW0gZm9yIHlvdS4gUGxlYXNlIHNlZSA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayI+dGhpcyBGQVEgZW50cnk8L2E+IGZvciBtb3JlIGV4cGxhbmF0aW9uLgBQbGVhc2Ugbm90ZSB0aGF0IGNoYW5nZXMgdG8gdGhlIEFQSSBrZXkgYXJlIGFwcGxpZWQgaW1tZWRpYXRlbHksIHdpdGhvdXQgaGF2aW5nIHRvICJDb25maXJtIiBmaXJzdC4AUGxlYXNlIG5vdGUgdGhhdCBjaGFuZ2VzIHRvIHRoZSBBUEkga2V5IGFyZSBhcHBsaWVkIGltbWVkaWF0ZWx5LCB3aXRob3V0IGhhdmluZyB0byAiU2F2ZSIgZmlyc3QuAFBsZWFzZSBub3RlIHRoYXQgaWYgeW91IGNob29zZSB0aGlzLCBPY3RvUHJpbnQgd2lsbCBzdGlsbCBkaXNjb25uZWN0IGZyb20gdGhlIHByaW50ZXIgaW4gY2FzZSBvZiA8ZW0+ZmF0YWw8L2VtPiBlcnJvcnMgcmVwb3J0ZWQgYnkgeW91ciBmaXJtd2FyZSAoZS5nLiA8Y29kZT5raWxsKCkgY2FsbGVkPC9jb2RlPiwgPGNvZGU+ZmF0YWw6PC9jb2RlPikuAFBsZWFzZSBub3RlIHRoYXQgdGhlIG9wZXJhdGluZyBzeXN0ZW0gdGhhdCB0aGlzIE9jdG9QcmludCBzZXJ2ZXIgaXMgcnVubmluZyBvbiBkb2VzIG5vdCBzdXBwb3J0IGF1dG9tYXRpY2FsbHkgcmVzdG9yaW5nIGJhY2t1cHMuIFlvdSB3aWxsIGhhdmUgdG8gPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+cmVzdG9yZSB5b3VyIGJhY2t1cHMgbWFudWFsbHkgZm9yIG5vdzwvYT4uAFBsZWFzZSBub3RlIHRoYXQgdGhlIHVwZGF0ZSBsb2cgd2lsbCBvbmx5IGNvbnRhaW4gZW50cmllcyBmb3IgdXBkYXRlcyBwZXJmb3JtZWQgdGhyb3VnaCBPY3RvUHJpbnQncyBTb2Z0d2FyZSBVcGRhdGUgcGx1Z2luLgBQbGVhc2Ugbm90ZSB0aGF0IHlvdSB3aWxsIGhhdmUgdG8gcmVsb2FkIHRoZSBwYWdlIGluIG9yZGVyIGZvciBhbnkgbmV3bHkgYWRkZWQgbGFuZ3VhZ2UgcGFja3MgdG8gYmVjb21lIGF2YWlsYWJsZS4AUGxlYXNlIG5vdGUhAFBsZWFzZSBvcGVuIGEgPGEgaHJlZj0nJShidWdyZXBvcnQpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+YnVnIHJlcG9ydDwvYT4gb24gdGhpcy4gTWFrZSBzdXJlIHRvIGluY2x1ZGUgYWxsIHJlcXVlc3RlZCBpbmZvcm1hdGlvbiwgaW5jbHVkaW5nIHlvdXIgPGEgaHJlZj0nJShqc2NvbnNvbGUpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+SlMgY29uc29sZTwvYT4gYW5kIDxjb2RlPm9jdG9wcmludC5sb2c8L2NvZGU+LgBQbGVhc2UgcmVsb2FkAFBsZWFzZSByZWxvYWQgdGhlIHBhZ2UgYWZ0ZXIgZW5hYmxpbmcvZGlzYWJsaW5nICYgc2F2aW5nAFBsZWFzZSBzZXQgdXAgQWNjZXNzIENvbnRyb2wAUGxlYXNlIHNldCB1cCBhbm9ueW1vdXMgdXNhZ2UgdHJhY2tpbmcAUGxlYXNlIHNldCB1cCB0aGUgb25saW5lIGNvbm5lY3Rpdml0eSBjaGVjawBQbGVhc2Ugc2V0IHVwIHRoZSBwbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmcAUGxlYXNlIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIGZvbGRlciB0byBjcmVhdGUuAFBsZWFzZSBzcGVjaWZ5IHRoZSBub3p6bGUgb2Zmc2V0cyBvZiB0aGUgZXh0cnVkZXJzIHJlbGF0aXZlIHRvIHRoZSBmaXJzdCBub3p6bGUgVDAgPHN0cm9uZz5pZiB5b3UgaGF2ZW4ndCBhbHJlYWR5IGRvbmUgc28gaW4geW91ciBmaXJtd2FyZTwvc3Ryb25nPi4gT3RoZXJ3aXNlIGxlYXZlIHRoZW0gYXQgKDAsMCkuAFBsdWdpbgBQbHVnaW4gQmxhY2tsaXN0AFBsdWdpbiBDb25maWd1cmF0aW9uAFBsdWdpbiBNYW5hZ2VyAFBsdWdpbiBibGFja2xpc3QgVVJMLiBZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLgBQbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmcAUGx1Z2luIGZvbGRlcgBQbHVnaW4gaW5zdGFsbGVkL3VuaW5zdGFsbGVkL2VuYWJsZWQvZGlzYWJsZWQAUGx1Z2luIG1hbmFnZW1lbnQgbG9nAFBsdWdpbiByZXBvc2l0b3J5IGNvbmZpZ3VyYXRpb24AUGx1Z2luIHRvIGNvbmZpZ3VyZSBldmVudCBzdWJzY3JpcHRpb25zIGF2YWlsYWJsZSBpbiBjb25maWcueWFtbC4AUGx1Z2lucwBQb3J0AFBvcnQgYWdhaW5zdCB3aGljaCB0byBjaGVjayBmb3IgaW50ZXJuZXQgY29ubmVjdGl2aXR5AFBvc2l0aW9uIGF1dG9yZXBvcnQgaW50ZXJ2YWwAUG9zaXRpb24gaW50ZXJ2YWwgdG8gcmVxdWVzdCBmcm9tIGF1dG9yZXBvcnQgY2FwYWJsZSBmaXJtd2FyZXMuIEEgdmFsdWUgb2YgMCBkaXNhYmxlcyBhdXRvcmVwb3J0aW5nIGJ5IHRoZSBmaXJtd2FyZS4AUG9zaXRpb24gcXVlcnkgdGltZW91dABQb3NzaWJsZSBleHRlcm5hbCBhY2Nlc3MgZGV0ZWN0ZWQAUHJlc2V0cwBQcmV2aW91cwBQcmV2aW91cyBsYXllcgBQcmludABQcmludCBUaW1lAFByaW50IFRpbWUgTGVmdABQcmludCBiZWQgJiBidWlsZCB2b2x1bWUAUHJpbnQgc3RhcnRlZC9jYW5jZWxsZWQvZmluaXNoZWQAUHJpbnQgdm9sdW1lOiAoJShwcm9maWxlLm1pblgpLjJmLCAlKHByb2ZpbGUubWluWSkuMmYsICUocHJvZmlsZS5taW5aKS4yZikgJnRpbWVzOyAoJShwcm9maWxlLm1heFgpLjJmLCAlKHByb2ZpbGUubWF4WSkuMmYsICUocHJvZmlsZS5tYXhaKS4yZikAUHJpbnRlZABQcmludGVyAFByaW50ZXIgRGlhbG9ncwBQcmludGVyIE5vdGlmaWNhdGlvbgBQcmludGVyIE5vdGlmaWNhdGlvbnMAUHJpbnRlciBQcm9maWxlAFByaW50ZXIgUHJvZmlsZXMAUHJpbnRlciBTYWZldHkgQ2hlY2sgd2FybmluZ3MAUHJpbnRlciBjb250cm9sAFByaW50ZXIgcmVzZXQgZGV0ZWN0ZWQAUHJpbnRpbmcAUHJpbnRpbmcgZnJvbSBTRABQcm9ibGVtIGR1cmluZyBsYXN0IHN0YXJ0dXAAUHJvY2VlZABQcm9ncmVzcwBQcm90b2NvbCBmaW5lIHR1bmluZwBQcm92aWRlIHZhbHVlcyBpbmNsdWRpbmcgc2l6ZSB1bml0LiBBbGxvd2VkIHVuaXRzIGFyZTogYiwgYnl0ZSwgYnl0ZXMsIGtiLCBtYiwgZ2IsIHRiIChjYXNlIGluc2Vuc2l0aXZlKS4gRXhhbXBsZTogPGNvZGU+NU1CPC9jb2RlPiwgPGNvZGU+NTAwS0I8L2NvZGU+AFBydXNhIEZpcm13YXJlAFB1YmxpY2F0aW9uIGRhdGUAUHl0aG9uAFB5dGhvbiBwYWNrYWdlIGluc3RhbGxhdGlvbiBmb2xkZXIAUVIgQ29kZQBRdWVyeSBpbnRlcnZhbHMAUmFuZG9tIHVuaXF1ZSBpbnN0YW5jZSBJRABSYXRlIGxpbWl0IGV4Y2VlZGVkIHdoaWxlIGNoZWNraW5nIGZvciB1cGRhdGUsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIAUmVhZCBtb3JlLi4uAFJlYWQuLi4AUmVib290IHN5c3RlbQBSZWJvb3RpbmcgdGhlIHNlcnZlciBmYWlsZWQsIHBsZWFzZSByZWJvb3QgaXQgbWFudWFsbHkuIFlvdSBtaWdodCBhbHNvIHdhbnQgdG8gY29uc3VsdCBvY3RvcHJpbnQubG9nIG9uIHdoYXQgd2VudCB3cm9uZyBoZXJlLgBSZWNvbm5lY3QuLi4AUmVjdGFuZ3VsYXIAUmVmcmVzaABSZWZyZXNoIEFubm91bmNlbWVudHMAUmVmcmVzaCBTRCBmaWxlcwBSZWZyZXNoIGNvbm5lY3Rpb24gb3B0aW9ucwBSZWZyZXNoIGZpbGUgbGlzdABSZWZyZXNoIGxpc3QgZnJvbSByZXBvc2l0b3J5AFJlZnJlc2ggbm90aWNlcyBmcm9tIHJlcG9zaXRvcnkAUmVmcmVzaGluZyBsaXN0IC4uLgBSZWdFeHAAUmVnaXN0ZXJlZCBhcHBsaWNhdGlvbiBrZXlzAFJlZ3VsYXIgcGluZyBldmVyeSAxNW1pbiAoaW5jbC4gdXB0aW1lKQBSZWd1bGFyIHBvbmcgZXZlcnkgMjRoIChpbmNsLiBwbHVnaW4gbGlzdCkAUmVpbnN0YWxsAFJlaW5zdGFsbGluZyBwbHVnaW4gIiUobmFtZSlzIiBmcm9tICUodXJsKXMuLi4AUmVpbnN0YWxsaW5nIHBsdWdpbi4uLgBSZWxlYXNlAFJlbGVhc2UgQ2hhbm5lbDoAUmVsZWFzZSBOb3RlcwBSZWxlYXNlIE5vdGVzOgBSZWxlYXNlIFNEIGNhcmQAUmVsb2FkAFJlbG9hZCBhbGwAUmVsb2FkIG5vdwBSZWxvYWQgb25seSBub24tY29uZmxpY3RpbmcgY2hhbmdlcwBSZW1lbWJlciBtZQBSZW1vdmUAUmVuYW1lIHRvAFJlbmRlciB0aW1lbGFwc2UAUmVuZGVyZXIgb3B0aW9ucwBSZW5kZXJpbmcgJSh0YXJnZXQpcy4uLgBSZW5kZXJpbmcgJSh0YXJnZXQpcy4uLiAoJShwcm9ncmVzcylkJSUpAFJlbmRlcmluZyBvZiB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBmYWlsZWQgZHVlIHRvIGFuIHVua25vd24gZXJyb3IsIHBsZWFzZSBjb25zdWx0IHRoZSBsb2cgZmlsZQBSZW5kZXJpbmcgb2YgdGltZWxhcHNlICUobW92aWVfcHJlZml4KXMgZmFpbGVkIHdpdGggcmV0dXJuIGNvZGUgJShyZXR1cm5jb2RlKXMAUmVuZGVyaW5nIG9mIHRpbWVsYXBzZSAlKG1vdmllX3ByZWZpeClzIGlzIG5vdCBwb3NzaWJsZSBzaW5jZSBubyBmcmFtZXMgd2VyZSBjYXB0dXJlZC4gSXMgdGhlIHNuYXBzaG90IFVSTCBjb25maWd1cmVkIGNvcnJlY3RseT8AUmVuZGVyaW5nIHRpbWVsYXBzZQBSZW5kZXJpbmcgdGltZWxhcHNlIGZhaWxlZABSZXBSYXAgRmlybXdhcmUAUmVwZWF0IFBhc3N3b3JkAFJlcGV0aWVyAFJlcG9zaXRvcnkgVVJMAFJlcG9zaXRvcnkgY2FjaGUgVFRMAFJlcXVlc3QgZXhjbHVzaXZlIGFjY2VzcyB0byB0aGUgc2VyaWFsIHBvcnQAUmVxdWVzdCBsb3cgbGF0ZW5jeSBtb2RlIG9uIHRoZSBzZXJpYWwgcG9ydABSZXNlbmQgVHJhY2tpbmcAUmVzZW5kIHJhdGlvAFJlc2VuZCByYXRpbyB0aHJlc2hvbGQuIFBlcmNlbnRhZ2Ugb2YgcmVzZW5kIHJlcXVlc3RzIGFtb25nIGFsbCBzZW50IGxpbmVzIHRvIGNvbnNpZGVyIGNyaXRpY2FsLgBSZXNldCBvcHRpb25zAFJlc2V0IHRvIGFjdGl2ZSBjb25maWd1cmF0aW9uAFJlc2V0IHZpZXdwb3J0AFJlc2hvdyBjdXJyZW50IG5vdGljZXMAUmVzdGFydABSZXN0YXJ0IE9jdG9QcmludABSZXN0YXJ0IE9jdG9QcmludCBpbiBzYWZlIG1vZGUAUmVzdGFydCBmYWlsZWQAUmVzdGFydCBpbiBwcm9ncmVzcwBSZXN0YXJ0IG5vdwBSZXN0YXJ0IG9mIE9jdG9QcmludCBuZWVkZWQgZm9yIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QAUmVzdGFydCBzeXN0ZW0AUmVzdGFydGluZyBPY3RvUHJpbnQgZmFpbGVkLCBwbGVhc2UgcmVzdGFydCBpdCBtYW51YWxseS4gWW91IG1pZ2h0IGFsc28gd2FudCB0byBjb25zdWx0IG9jdG9wcmludC5sb2cgb24gd2hhdCB3ZW50IHdyb25nIGhlcmUuAFJlc3RhcnRzIHRoZSBwcmludCBqb2IgZnJvbSB0aGUgYmVnaW5uaW5nAFJlc3RvcmUAUmVzdG9yZSBCYWNrdXA/AFJlc3RvcmUgZmFpbGVkISBDaGVjayB0aGUgYWJvdmUgb3V0cHV0IGFuZCBvY3RvcHJpbnQubG9nIGZvciByZWFzb25zIGFzIHRvIHdoeS4AUmVzdG9yZSBmcm9tIGEgYmFja3VwPwBSZXN0b3JlIGZyb20gdXBsb2FkZWQgYmFja3VwAFJlc3RvcmUgc2V0dGluZ3MgJiBmaWxlcyBmcm9tIGFuIHVwbG9hZGVkIGJhY2t1cCBhcmNoaXZlLgBSZXN0b3JlIHN1Y2Nlc3NmdWwhIFRoZSBzZXJ2ZXIgd2lsbCBub3cgYmUgcmVzdGFydGVkIQBSZXN0b3JpbmcgZnJvbSBiYWNrdXAuLi4AUmVzdW1lAFJlc3VtZXMgdGhlIHByaW50IGpvYgBSZXN1bWluZwBSZXRyYWN0AFJldHJhY3Rpb24gWi1Ib3AAUmV2b2NhdGlvbiBvZiAlKGtleSlzIGZhaWxlZCwgY29udGludWluZy4uLgBSZXZva2UAUmV2b2tlIHNlbGVjdGVkAFJldm9rZWQgJShrZXkpcy4uLgBSZXZva2luZyAlKGNvdW50KWQgYXBwbGljYXRpb24ga2V5cy4uLgBSZXZva2luZyBhcHBsaWNhdGlvbiBrZXlzAFJvdGF0ZSB3ZWJjYW0gOTAgZGVncmVlcyBjb3VudGVyIGNsb2Nrd2lzZQBSdW5zIGxvY2FsbHkAU0QgQ2FyZCBvcGVyYXRpb25zAFNEIG5vdCBpbml0aWFsaXplZABTRCBzdGF0dXMgaW50ZXJ2YWwgKGF1dG9yZXBvcnQpAFNEIHN0YXR1cyBpbnRlcnZhbCAocG9sbGluZykAU0Qgc3RhdHVzIGludGVydmFsIHRvIHJlcXVlc3QgZnJvbSBhdXRvcmVwb3J0IGNhcGFibGUgZmlybXdhcmVzLiBBIHZhbHVlIG9mIDAgZGlzYWJsZXMgYXV0b3JlcG9ydGluZyBieSB0aGUgZmlybXdhcmUgYW5kIGZvcmNlcyBwb2xsaW5nLgBTYWRseSB0aGUgcmVwb3NpdG9yeSBpcyBjdXJyZW50bHkgbm90IGF2YWlsYWJsZQBTYWZlIG1vZGUgaXMgYWN0aXZlAFNhbml0eSBDaGVja2luZwBTYW5pdHkgY2hlY2sgdG9vbCBjb21tYW5kcwBTYXZlAFNhdmUgYXMgZGVmYXVsdABTYXZlIGNoYW5nZXMAU2F2ZSBjb25uZWN0aW9uIHNldHRpbmdzAFNhdmluZyAuLi4AU2Nyb2xsIHRvIGVuZABTZWFyY2guLi4AU2VlIDxhIGhyZWY9JyUodXJsKXMnIHRhcmdldD0nX2JsYW5rJz5pc3N1ZSAjNDExNzwvYT4uAFNlbGVjdCBTRCBmaWxlcyBieSBsb3dlciBjYXNlIHBhdGgAU2VsZWN0IFNEIGZpbGVzIGJ5IHJlbGF0aXZlIHBhdGgAU2VsZWN0IGEgbG9nZ2VyLi4uAFNlbGVjdCBhIHByaW50ZXIgcHJvZmlsZS4uLgBTZWxlY3QgYSBzbGljZXIuLi4AU2VsZWN0IGEgc2xpY2luZyBwcm9maWxlLi4uAFNlbGVjdCBhbGwAU2VsZWN0IGFsbCBieSBhcHAuLi4AU2VsZWN0IGFsbCBieSB1c2VyLi4uAFNlbGVjdCBhbGwgb24gdGhpcyBwYWdlAFNlbGVjdCBkZXN0aW5hdGlvbiBmb2xkZXIgZm9yIABTZWxlY3QgZm9yIHByaW50aW5nAFNlbmQAU2VuZCA8Y29kZT5NMTEyPC9jb2RlPiBvbiBkaXNjb25uZWN0IGR1ZSB0byBlcnJvcgBTZW5kIDxjb2RlPk0yMCBMPC9jb2RlPiBpbnN0ZWFkIG9mIDxjb2RlPk0yMDwvY29kZT4gdG8gdXNlIGV4dGVuZGVkIFNEIGZpbGUgbGlzdHMsIGlmIGRldGVjdGVkIGFzIHN1cHBvcnRlZCBieSB0aGUgZmlybXdhcmUAU2VuZCBhIGNoZWNrc3VtIHdpdGggdGhlIGNvbW1hbmQAU2VuZCBlbWVyZ2VuY3kgR0NPREVTIDxjb2RlPk0xMDg8L2NvZGU+IGFuZCA8Y29kZT5NNDEwPC9jb2RlPiB3aXRob3V0IHdhaXRpbmcgZm9yIGFja25vd2xlZGdlbWVudCwgaWYgZGV0ZWN0ZWQgYXMgc3VwcG9ydGVkIGJ5IHRoZSBmaXJtd2FyZQBTZW5kIHRlbXBlcmF0dXJlIGZpbmUgYWRqdXN0bWVudHMgYXV0b21hdGljYWxseQBTZW5kaW5nIGRlbGF5AFNlbmRpbmcgZmlsZSB0byBTRABTZXJpYWwgQ29ubmVjdGlvbgBTZXJpYWwgUG9ydABTZXJpYWwgYmF1ZCByYXRlIHRvIGNvbm5lY3Qgd2l0aCwgc2V0dGluZyB0aGlzIHRvIEFVVE8gd2lsbCBtYWtlIE9jdG9QcmludCB0cnkgdG8gYXV0b21hdGljYWxseSBmaW5kIHRoZSByaWdodCBzZXR0aW5nAFNlcmlhbCBsb2dnaW5nAFNlcmlhbCBwb3J0IHRvIGNvbm5lY3QgdG8sIHNldHRpbmcgdGhpcyB0byBBVVRPIHdpbGwgbWFrZSBPY3RvUHJpbnQgdHJ5IHRvIGF1dG9tYXRpY2FsbHkgZmluZCB0aGUgcmlnaHQgc2V0dGluZwBTZXJ2ZXIAU2VydmVyIENvbW1hbmRzAFNlcnZlciBpcyBjdXJyZW50bHkgb2ZmbGluZS4AU2VydmVyIGlzIG9mZmxpbmUAU2VydmVyIHN0YXJ0dXAgJiBzaHV0ZG93bgBTZXQAU2V0ICUobmFtZSlzICglKHZhbHVlKXMpAFNldCBhcyBkZWZhdWx0IHByb2ZpbGUAU2V0IGRlc3RpbmF0aW9uIGZpbGVuYW1lIABTZXQgdGVtcGVyYXR1cmUgcHJvZmlsZQBTZXQgdG8gMCB0byBkaXNhYmxlIGNvbnNlY3V0aXZlIHRpbWVvdXQgZGV0ZWN0aW9uIGFuZCBoYW5kbGluZy4AU2V0IHVwIHlvdXIgcHJpbnRlciBwcm9maWxlAFNldHRpbmcgaW4gY29uZmlnLnlhbWwAU2V0dGluZ3MAU2V0dGluZ3MgdXBkYXRlIGRldGVjdGVkAFNldHVwIFdpemFyZABTaGFyZWQgbm96emxlAFNob3cgYXBwcm94LiBwcmludCBoZWFkIHBvc2l0aW9uAFNob3cgYm90aCBidW5kbGVkIGFuZCB0aGlyZC1wYXJ0eSBwbHVnaW5zAFNob3cgYm90aCBlbmFibGVkIGFuZCBkaXNhYmxlZCBwbHVnaW5zAFNob3cgZGVidWcgYXJjcwBTaG93IGZ1enp5IHByaW50IHRpbWUgZXN0aW1hdGVzAFNob3cgaW50ZXJuYWwgZmlsZW5hbWUgaW4gdGhlIGZpbGVzIHNpZGViYXIgKGlmIGF2YWlsYWJsZSkAU2hvdyBsYXllciBib3VuZGluZyBib3gAU2hvdyBtb3ZlcwBTaG93IG5vdGlmaWNhdGlvbnMgb2Ygc2V2ZXJpdHkgImluZm8iIGFuZCAid2FybmluZyIAU2hvdyBub3RpZmljYXRpb25zIG9mIHNldmVyaXR5ICJ3YXJuaW5nIgBTaG93IG9ubHkgYnVuZGxlZCBwbHVnaW5zAFNob3cgb25seSBkaXNhYmxlZCBwbHVnaW5zAFNob3cgb25seSBlbmFibGVkIHBsdWdpbnMAU2hvdyBvbmx5IHRoaXJkLXBhcnR5IHBsdWdpbnMAU2hvdyBwcmludGVkIGJvdW5kaW5nIGJveABTaG93IHJldHJhY3RzAFNob3cgc2VnbWVudCBzdGFydHMAU2hvdyB0ZW1wZXJhdHVyZXMgaW4gRmFocmVuaGVpdCBhcyB3ZWxsIGFzIENlbHNpdXMAU2hvdyB1cGRhdGUgbm90aWZpY2F0aW9ucyB0byB1c2VycwBTaG93IHZpc2l0ZWQgYm91bmRpbmcgYm94AFNodXRkb3duIHN5c3RlbQBTaW11bGF0ZSA8Y29kZT5vazwvY29kZT4gZm9yIDxjb2RlPk0yOTwvY29kZT4AU2ltdWxhdGUgPGNvZGU+b2s8L2NvZGU+IGZvciByZXNlbmQgcmVxdWVzdHMAU2l0ZSBkZWZhdWx0AFNpemUAU2tpcCB0byB0aGlzAFNraXAvaGlkZSBnY29kZSB1bnRpbCB0aGlzIHN0cmluZwBTbGljZQBTbGljZWQgJShzdGwpcyB0byAlKGdjb2RlKXMsIHRvb2sgJSh0aW1lKS4yZiBzZWNvbmRzAFNsaWNlcgBTbGljaW5nICUoZmlsZW5hbWUpcwBTbGljaW5nIC4uLgBTbGljaW5nIC4uLiAoJShwZXJjZW50YWdlKWQlJSkAU2xpY2luZyBQcm9maWxlAFNsaWNpbmcgZG9uZQBTbGljaW5nIGZhaWxlZABTbGljaW5nIGlzIGN1cnJlbnRseSBkaXNhYmxlZCBzaW5jZSBubyBzbGljZXIgaGFzIGJlZW4gY29uZmlndXJlZCB5ZXQuIFBsZWFzZSBjb25maWd1cmUgYSBzbGljZXIgdW5kZXIgIlNldHRpbmdzIi4AU21vb3RoaWV3YXJlAFNuYXBzaG90IFVSTABTbmFwc2hvdCBpbnRlcnZhbABTbmFwc2hvdCB0ZXN0AFNuYXBzaG90IHRlc3QgZmFpbGVkAFNuYXBzaG90IHRpbWVvdXQAU29mdHdhcmUgVXBkYXRlAFNvbWUgTWFybGluIGZvcmtzIGxhY2sgYW4gYWNrbm93bGVkZ2luZyA8Y29kZT5vazwvY29kZT4gd2l0aCB0aGVpciByZXNlbmQgcmVxdWVzdHMuIFNldCB0aGlzIHRvICJhbHdheXMiIG9yICJpZiBkZXRlY3RlZCBhcyBuZWNlc3NhcnkiIGlmIHlvdSBydW4gaW50byBjb21tdW5pY2F0aW9uIHN0YWxscyBvbiByZXNlbmQgcmVxdWVzdHMuAFNvbWUgY29udHJvbGxlcnMgbmVlZCBhIGJpdCBvZiBhIGJyZWF0aGVyIGJlZm9yZSBiYXVkcmF0ZSBkZXRlY3Rpb24gYWZ0ZXIgaW5pdGlhbCBjb25uZWN0LiBJZiBiYXVkcmF0ZSBkZXRlY3Rpb24gZmFpbHMgZHVlIHRvIGEgaGFuZ2luZyBjb250cm9sbGVyLCB0cnkgaW5jcmVhc2luZyB0aGlzIHZhbHVlLgBTb21lIGZ1bmN0aW9uYWxpdHkgb2YgdGhlIHRlcm1pbmFsIHdpbGwgYmUgZGlzYWJsZWQgaWYgT2N0b1ByaW50IGRldGVjdHMgdGhhdCB5b3VyIGJyb3dzZXIgaXMgdG9vIHNsb3cgZm9yIHRoYXQuIFlvdSBtYXkgZm9yY2UgaXQgYmFjayBvbiBoZXJlLCBidXQgYmUgYXdhcmUgdGhhdCB0aGlzIG1pZ2h0IG1ha2UgeW91ciBicm93c2VyIHVucmVzcG9uc2l2ZS4AU29tZXRoaW5nIHdlbnQgd3JvbmcAU29ydCBieSBGaWxlcywgRm9sZGVycwBTb3J0IGJ5IEZvbGRlcnMsIEZpbGVzAFNvcnQgYnkgR2l0aHViIHN0YXJzAFNvcnQgYnkgYWN0aXZlIGluc3RhbmNlIGNvdW50AFNvcnQgYnkgZGF0ZQBTb3J0IGJ5IGRhdGUgb2YgbGFzdCBwcmludABTb3J0IGJ5IGZpbGUgc2l6ZQBTb3J0IGJ5IGxhc3QgcHVzaCBkYXRlAFNvcnQgYnkgbGFzdCByZWxlYXNlIGRhdGUAU29ydCBieSBtb2RpZmljYXRpb24gZGF0ZQBTb3J0IGJ5IG5hbWUAU29ydCBieSBwdWJsaWNhdGlvbiBkYXRlAFNvcnQgYnkgdGl0bGUAU29ydCBieSB1cGxvYWQgZGF0ZQBTb3J0IGxheWVycwBTdGFydABTdGFydCBwcmludGluZwBTdGFydCB0aGUgc2xpY2luZyBwcm9jZXNzAFN0YXJ0IHRyYWNraW5nIHJlc2VuZCByZXF1ZXN0IGFmdGVyIHRoZXNlIG1hbnkgdHJhbnNtaXR0ZWQgbGluZXMuAFN0YXJ0aW5nAFN0YXJ0aW5nIHByaW50IGZyb20gU0QAU3RhcnRpbmcgdG8gc2VuZCBmaWxlIHRvIFNEAFN0YXJ0cyB0aGUgcHJpbnQgam9iAFN0YXRlAFN0YXkgQ29ubmVjdGVkAFN0ZXBzaXplAFN0aWxsIHN0YWJpbGl6aW5nLi4uAFN0cmVhbSBVUkwAU3RyZWFtIGFzcGVjdCByYXRpbwBTdHJlYW0gdGVzdABTdHJlYW0gdGltZW91dABTdHJlYW1lZCAlKGxvY2FsKXMgdG8gJShyZW1vdGUpcyBvbiBTRCwgdG9vayAlKHRpbWUpLjJmIHNlY29uZHMAU3RyZWFtaW5nIC4uLgBTdHJlYW1pbmcgZG9uZQBTdHJlYW1pbmcgZmFpbGVkAFN1Ymdyb3VwcwBTdXBwb3J0IDxjb2RlPlRhcmdldEV4dHIlJW48L2NvZGU+Lzxjb2RlPlRhcmdldEJlZDwvY29kZT4gdGFyZ2V0IHRlbXBlcmF0dXJlIGZvcm1hdABTdXBwb3J0IDxjb2RlPmJ1c3k8L2NvZGU+IHByb3RvY29sLCBpZiBkZXRlY3RlZABTdXBwb3J0IHBvc2l0aW9uIGF1dG9yZXBvcnRpbmcgYnkgZmlybXdhcmUsIGlmIGRldGVjdGVkAFN1cHBvcnQgc2Qgc3RhdHVzIGF1dG9yZXBvcnRpbmcgYnkgZmlybXdhcmUsIGlmIGRldGVjdGVkAFN1cHBvcnQgdGVtcGVyYXR1cmUgYXV0b3JlcG9ydGluZyBieSBmaXJtd2FyZSwgaWYgZGV0ZWN0ZWQAU3VwcHJlc3NlZCBjb21tYW5kAFN3aXRjaCBUb29sLi4uAFN5bmMgd2l0aCBqb2IgcHJvZ3Jlc3MAU3lzdGVtAFN5c3RlbSBJbmZvcm1hdGlvbgBTeXN0ZW0gY29tbWFuZHMAU3lzdGVtIGdvdCB0aHJvdHRsZWQvdW50aHJvdHRsZWQgKGN1cnJlbnRseSBvbmx5IGRldGVjdGVkIG9uIFJQaXMpAFN5c3RlbSBpbmZvAFN5c3RlbSBpbmZvIGJ1bmRsZQBTeXN0ZW0gcmVsYXRlZCBjb21tYW5kcwBTeXN0ZW0gdGVtcG9yYXJ5IGZpbGVzAFRha2Ugbm90ZSB0aGF0IGFsbCBwbHVnaW4gbWFuYWdlbWVudCBmdW5jdGlvbmFsaXR5IGlzIGRpc2FibGVkIHdoaWxlIHlvdXIgcHJpbnRlciBpcyBwcmludGluZyBvciBwYXVzZWQuAFRha2Ugbm90ZSB0aGF0IHRpbWVsYXBzZSBjb25maWd1cmF0aW9uIGlzIGRpc2FibGVkIHdoaWxlIHlvdXIgcHJpbnRlciBpcyBwcmludGluZy4AVGFyZ2V0AFRlbXBlcmF0dXJlAFRlbXBlcmF0dXJlIGludGVydmFsIChhdXRvcmVwb3J0KQBUZW1wZXJhdHVyZSBpbnRlcnZhbCAocG9sbGluZykAVGVtcGVyYXR1cmUgcmVwb3J0IGludGVydmFsIHRvIHJlcXVlc3QgZnJvbSBhdXRvcmVwb3J0IGNhcGFibGUgZmlybXdhcmVzLiBBIHZhbHVlIG9mIDAgZGlzYWJsZXMgYXV0b3JlcG9ydGluZyBieSB0aGUgZmlybXdhcmUgYW5kIGZvcmNlcyBwb2xsaW5nLgBUZW1wZXJhdHVyZXMAVGVybWluYWwAVGVybWluYWwgQXV0byBVcHBlcmNhc2UgQmxhY2tsaXN0AFRlcm1pbmFsIEZpbHRlcnMAVGVzdABUZXN0IGhvc3QgJiBwb3J0AFRlc3QgbmFtZSByZXNvbHV0aW9uAFRoZSBjb21tYW5kICIlKGNvbW1hbmQpcyIgY291bGQgbm90IGJlIGV4ZWN1dGVkLgBUaGUgY29tbWFuZCAiJShjb21tYW5kKXMiIGV4ZWN1dGVkIHN1Y2Nlc3NmdWxseQBUaGUgY29tbWFuZCAiJShjb21tYW5kKXMiIHdhcyB0cmlnZ2VyZWQgYXN5bmNocm9ub3VzbHkAVGhlIGNvbW1hbmQgPGNvZGU+JShjb21tYW5kKXM8L2NvZGU+IHdhcyBub3Qgc2VudCB0byB0aGUgcHJpbnRlcjoAVGhlIGZlZWQgcmF0ZSBjYW4gb25seSBiZSBzZXQsIGl0IGNhbm5vdCBiZSByZWFkIGJhY2sgZnJvbSB0aGUgZmlybXdhcmUgZHVlIHRvIGEgbGltaXRhdGlvbiBvZiB0aGUgY29tbXVuaWNhdGlvbiBwcm90b2NvbC4gVGhlcmUgaXMgbm8gd2F5IHRvIHNob3cgdGhlIGN1cnJlbnQgc2V0dGluZy4AVGhlIGZsb3cgcmF0ZSBjYW4gb25seSBiZSBzZXQsIGl0IGNhbm5vdCBiZSByZWFkIGJhY2sgZnJvbSB0aGUgZmlybXdhcmUgZHVlIHRvIGEgbGltaXRhdGlvbiBvZiB0aGUgY29tbXVuaWNhdGlvbiBwcm90b2NvbC4gVGhlcmUgaXMgbm8gd2F5IHRvIHNob3cgdGhlIGN1cnJlbnQgc2V0dGluZy4AVGhlIG1pbmltdW0gYW1vdW50IG9mIGZyZWUgZGlzayBzcGFjZSB0aGF0IGhhcyB0byBiZSBhdmFpbGFibGUgb24gdmFyaW91cyBsb2NhdGlvbnMgZm9yIE9jdG9QcmludCB0byBhbGxvdyB1cGRhdGVzLiBTaG91bGQgbm90IGJlIHNldCB0byAwLgBUaGUgcGF0aCBkb2VzIG5vdCBleGlzdCBhbmQgY2Fubm90IGJlIGNyZWF0ZWQuAFRoZSBwYXRoIGRvZXNuJ3QgZXhpc3QAVGhlIHBhdGggaXMgYSBicm9rZW4gc3ltbGluay4AVGhlIHBhdGggaXMgbm90IGEgZmlsZQBUaGUgcGF0aCBpcyBub3QgYSBmb2xkZXIuAFRoZSBwYXRoIGlzIG5vdCBhbiBleGVjdXRhYmxlAFRoZSBwYXRoIGlzIG5vdCB3cml0YWJsZS4AVGhlIHBhdGggaXMgdmFsaWQAVGhlIHNlbGVjdGVkIHRvb2wgY2FuIG9ubHkgYmUgc2V0LCBpdCBjYW5ub3QgYmUgcmVhZCBiYWNrIGZyb20gdGhlIGZpcm13YXJlIGR1ZSB0byBhIGxpbWl0YXRpb24gb2YgdGhlIGNvbW11bmljYXRpb24gcHJvdG9jb2wuIFRoZXJlIGlzIG5vIHdheSB0byBzaG93IHRoZSBjdXJyZW50IHNldHRpbmcuAFRoZSBzZXJ2ZXIgYXBwYXJlbnRseSBkaWQgbm90IHJlc3RhcnQgYnkgaXRzZWxmLCB5b3UnbGwgaGF2ZSB0byBkbyBpdCBtYW51YWxseS4gUGxlYXNlIGNvbnN1bHQgb2N0b3ByaW50LmxvZyBvbiB3aGF0IHdlbnQgd3JvbmcuAFRoZSBzZXJ2ZXIgYXBwZWFycyB0byBiZSBvZmZsaW5lLCBhdCBsZWFzdCBJJ20gbm90IGdldHRpbmcgYW55IHJlc3BvbnNlIGZyb20gaXQuIEkgPHN0cm9uZz5jb3VsZCBub3QgcmVjb25uZWN0IGF1dG9tYXRpY2FsbHk8L3N0cm9uZz4sIGJ1dCB5b3UgbWF5IHRyeSBhIG1hbnVhbCByZWNvbm5lY3QgdXNpbmcgdGhlIGJ1dHRvbiBiZWxvdy4AVGhlIHNlcnZlciBhcHBlYXJzIHRvIGJlIG9mZmxpbmUsIGF0IGxlYXN0IEknbSBub3QgZ2V0dGluZyBhbnkgcmVzcG9uc2UgZnJvbSBpdC4gSSdsbCB0cnkgdG8gcmVjb25uZWN0IGF1dG9tYXRpY2FsbHkgPHN0cm9uZz5vdmVyIHRoZSBuZXh0IGNvdXBsZSBvZiBtaW51dGVzPC9zdHJvbmc+LCBob3dldmVyIHlvdSBhcmUgd2VsY29tZSB0byB0cnkgYSBtYW51YWwgcmVjb25uZWN0IGFueXRpbWUgdXNpbmcgdGhlIGJ1dHRvbiBiZWxvdy4AVGhlIHNlcnZlciBpcyBub3QgcmVhY2hhYmxlAFRoZSBzZXJ2ZXIgaXMgbm93IGJlaW5nIHJlc3RhcnRlZCBpbiB0aGUgYmFja2dyb3VuZABUaGUgc2VydmVyIGlzIHJlYWNoYWJsZQBUaGUgc25hcHB5IHdlYiBpbnRlcmZhY2UgZm9yIHlvdXIgM0QgcHJpbnRlcgBUaGUgc25hcHNob3QgVVJMIGFuZC9vciB0aGUgcGF0aCB0byBGRk1QRUcgYXJlIG1pc3NpbmcuIFRvIGhhdmUgdGhpcyBmaXhlZCwgZ2V0IGluIHRvdWNoIHdpdGggYW4gYWRtaW5pc3RyYXRvciBvZiB0aGlzIE9jdG9QcmludCBpbnN0YW5jZS4AVGhlIHNuYXBzaG90IFVSTCBhbmQvb3IgdGhlIHBhdGggdG8gRkZNUEVHIGFyZSBtaXNzaW5nLiBZb3UgY2FuIGNoYW5nZSBib3RoIHVuZGVyICJTZXR0aW5ncyIgPiAiV2ViY2FtICYgVGltZWxhcHNlIiA+ICJUaW1lbGFwc2UiLiBJZiB5b3UgZG9uJ3QgaGF2ZSBhIHdlYmNhbSBvciBkb24ndCB3YW50IHRvIGVuYWJsZSB0aW1lbGFwc2Ugc3VwcG9ydCB5b3UgY2FuIGFsc28ganVzdCBkaXNhYmxlIGl0IHRoZXJlLgBUaGUgdXBkYXRlIGNvdWxkIG5vdCBiZSBzdGFydGVkLiBJcyBpdCBhbHJlYWR5IGFjdGl2ZT8gUGxlYXNlIGNvbnN1bHQgb2N0b3ByaW50LmxvZyBmb3IgZGV0YWlscy4AVGhlIHVwZGF0ZSBkaWQgbm90IGZpbmlzaCBzdWNjZXNzZnVsbHkuIFBsZWFzZSBjb25zdWx0IDxjb2RlPm9jdG9wcmludC5sb2c8L2NvZGU+IGFuZCA8Y29kZT5wbHVnaW5fc29mdHdhcmV1cGRhdGVfY29uc29sZS5sb2c8L2NvZGU+IGZvciBkZXRhaWxzLgBUaGUgdXBkYXRlIGZpbmlzaGVkIHN1Y2Nlc3NmdWxseSBhbmQgdGhlIHNlcnZlciB3aWxsIG5vdyBiZSByZXN0YXJ0ZWQuAFRoZSB1cGRhdGUgZmluaXNoZWQgc3VjY2Vzc2Z1bGx5LCBwbGVhc2UgcmVib290IHRoZSBzZXJ2ZXIgbm93LgBUaGUgdXBkYXRlIGZpbmlzaGVkIHN1Y2Nlc3NmdWxseSwgcGxlYXNlIHJlc3RhcnQgT2N0b1ByaW50IG5vdy4AVGhlIHVwZGF0ZSBmaW5pc2hlZCBzdWNjZXNzZnVsbHkuAFRoZXJlIGFyZSAlKGNvdW50KWQgbm90aWNlcyAoJShpbXBvcnRhbnQpZCBtYXJrZWQgYXMgaW1wb3J0YW50KSBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIC0gY2xpY2sgdG8gc2hvdyEAVGhlcmUgYXJlICUoY291bnQpZCBub3RpY2VzIGF2YWlsYWJsZSByZWdhcmRpbmcgdGhpcyBwbHVnaW4gLSBjbGljayB0byBzaG93IQBUaGVyZSBhcmUgJShjb3VudClkIHBsdWdpbiBub3RpY2VzIGZvciBvbmUgb3IgbW9yZSBvZiB5b3VyIGluc3RhbGxlZCBwbHVnaW5zLgBUaGVyZSBhcmUgJShjb3VudClkIHBsdWdpbnMgeW91J2xsIG5lZWQgdG8gaW5zdGFsbCBtYW51YWxseSBzaW5jZSB0aGV5IGFyZW4ndCByZWdpc3RlcmVkIG9uIHRoZSByZXBvc2l0b3J5OgBUaGVyZSBhcmUgY3VycmVudGx5IG5vIG5vdGlmaWNhdGlvbnMgZnJvbSB5b3VyIHByaW50ZXIuAFRoZXJlIGFyZSBubyBhcHBsaWNhdGlvbiBrZXlzIHJlZ2lzdGVyZWQgeWV0LgBUaGVyZSBhcmUgbm8gYmFja3VwcyB5ZXQuAFRoZXJlIGFyZSBubyBiYWNrdXBzLiBNYXliZSBjcmVhdGUgb25lIGJlbG93PwBUaGVyZSBhcmUgbm8gcGx1Z2luIG5vdGljZXMuIEdyZWF0IQBUaGVyZSBhcmUgbm90aWNlcyBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luAFRoZXJlIGFyZSB1cGRhdGVzIGF2YWlsYWJsZSBmb3IgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzOgBUaGVyZSBpcyBhIG5vdGljZSBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIC0gY2xpY2sgdG8gc2hvdyEAVGhlcmUgaXMgYSBwbHVnaW4gbm90aWNlIGZvciBvbmUgb2YgeW91ciBpbnN0YWxsZWQgcGx1Z2lucy4AVGhlcmUgaXMgYW4gaW1wb3J0YW50IG5vdGljZSBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIC0gY2xpY2sgdG8gc2hvdyEAVGhlcmUgaXMgY3VycmVudGx5IG5vIGNlbnRyYWwgcmVwb3NpdG9yeSBmb3IgbGFuZ3VhZ2UgcGFja3MgbGlrZSB0aGVyZSBpcyBmb3IgcGx1Z2lucyAtIGFueSBoZWxwIHRvIGNoYW5nZSB0aGF0IGlzIGFwcHJlY2lhdGVkIQBUaGVyZSBpcyBubyBjb25uZWN0aW9uIHRvIHRoZSBpbnRlcm5ldABUaGVyZSB3YXMgYSBjb21tdW5pY2F0aW9uIGVycm9yIHdoaWxlIHRhbGtpbmcgdG8geW91ciBwcmludGVyLiBQbGVhc2UgY29uc3VsdCB0aGUgdGVybWluYWwgb3V0cHV0IGFuZCBvY3RvcHJpbnQubG9nIGZvciBkZXRhaWxzLiBFcnJvcjogJShlcnJvcilzAFRoZXJlIHdhcyBhbiBlcnJvciB3aGlsZSB0cnlpbmcgdG8gY29ubmVjdCB0byB5b3VyIHByaW50ZXIuIEVycm9yOiAlKGVycm9yKXMAVGhlcmUgd2FzIGFuIGVycm9yIHdoaWxlIHRyeWluZyB0byBzdGFydCBhIHByaW50IGpvYi4gRXJyb3I6ICUoZXJyb3IpcwBUaGVyZSB3YXMgYW4gdW5rbm93biBlcnJvciB3aGlsZSB0YWxraW5nIHRvIHlvdXIgcHJpbnRlci4gUGxlYXNlIGNvbnN1bHQgdGhlIHRlcm1pbmFsIG91dHB1dCBhbmQgb2N0b3ByaW50LmxvZyBmb3IgZGV0YWlscy4gRXJyb3I6ICUoZXJyb3IpcwBUaGVyZSB3YXMgdW5leHBlY3RlZCBlcnJvciB3aGlsZSByZW1vdmluZyB0aGUgcHJpbnRlciBwcm9maWxlLCBwbGVhc2UgY29uc3VsdCB0aGUgbG9ncy4AVGhlcmUgd2FzIHVuZXhwZWN0ZWQgZXJyb3Igd2hpbGUgc2F2aW5nIHRoZSBwcmludGVyIHByb2ZpbGUsIHBsZWFzZSBjb25zdWx0IHRoZSBsb2dzLgBUaGVyZSB3YXMgdW5leHBlY3RlZCBlcnJvciB3aGlsZSB1cGRhdGluZyB0aGUgcHJpbnRlciBwcm9maWxlLCBwbGVhc2UgY29uc3VsdCB0aGUgbG9ncy4AVGhlcmUncyBjdXJyZW50bHkgbm90IGVub3VnaCBmcmVlIGRpc2sgc3BhY2UgYXZhaWxhYmxlIGZvciBhIGRpcmVjdCB1cGRhdGUuAFRoZXNlIGFyZSB0aGUgYmFja3VwcyBvZiB5b3VyIHNldHRpbmdzIGFuZCBmaWxlcyB0aGF0IGFscmVhZHkgZXhpc3Qgb24gdGhpcyBPY3RvUHJpbnQgaW5zdGFuY2UuIFlvdSBtYXkgZGVsZXRlLCBkb3dubG9hZCBvciByZXN0b3JlIHRoZW0uAFRoaXMgYWN0aW9uIG1heSBkaXNydXB0IGFueSBvbmdvaW5nIHByaW50IGpvYnMuAFRoaXMgYmFja3VwIGV4Y2VlZHMgdGhlIG1heGltdW0gYWxsb3dlZCB1cGxvYWQgc2l6ZQBUaGlzIGRvZXMgbm90IGxvb2sgbGlrZSBhIHZhbGlkIFVSTC4gRXhwZWN0ZWQgaHR0cCwgaHR0cHMgb3IgYW55IG9mIHRoZSA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayI+c3VwcG9ydGVkIFZDUyBVUkxzPC9hPi4AVGhpcyBkb2VzIG5vdCBsb29rIGxpa2UgYSB2YWxpZCBsYW5ndWFnZSBwYWNrLiBWYWxpZCBsYW5ndWFnZSBwYWNrcyBzaG91bGQgYmUgZWl0aGVyIHppcCBmaWxlcyBvciB0YXJiYWxscyBhbmQgaGF2ZSB0aGUgZXh0ZW5zaW9uICIuemlwIiwgIi50YXIuZ3oiLCAiLnRneiIgb3IgIi50YXIiAFRoaXMgZG9lcyBub3QgbG9vayBsaWtlIGEgdmFsaWQgcGx1Z2luLiBWYWxpZCBwbHVnaW5zIHNob3VsZCBiZSBlaXRoZXIgemlwIGZpbGVzIG9yIHRhcmJhbGxzIGluc3RhbGxhYmxlIHZpYSA8Y29kZT5waXA8L2NvZGU+IHRoYXQgaGF2ZSB0aGUgZXh0ZW5zaW9uICIuemlwIiwgIi50YXIuZ3oiLCAiLnRneiIgb3IgIi50YXIiLCBvciBzaW5nbGUgZmlsZSBweXRob24gcGx1Z2lucyB3aXRoIHRoZSBleHRlbnNpb24gIi5weSIAVGhpcyBncm91cCBtYXkgbm90IGhhdmUgZGFuZ2Vyb3VzIHBlcm1pc3Npb25zIG9yIHN1Ymdyb3Vwcy4AVGhpcyBpbmZvcm1hdGlvbiBpcyB1c2VkIGZvciBtYW51YWwgY29udHJvbCB2aWEgdGhlICJDb250cm9sIiB0YWIuAFRoaXMgaW5mb3JtYXRpb24gaXMgdXNlZCBmb3IgdGhlIGdyYXBoIGFuZCBjb250cm9scyBhdmFpbGFibGUgaW4gdGhlICJUZW1wZXJhdHVyZSIgdGFiLCB0aGUgR0NPREUgdmlld2VyLCB3aGVuIHNsaWNpbmcgZnJvbSB3aXRoaW4gT2N0b1ByaW50IGFuZCBmb3IgZGVjaWRpbmcgd2hpY2ggdG9vbGNoYW5nZSBjb21tYW5kcyBhcmUgc2FmZSB0byBzZW5kIHRvIHRoZSBwcmludGVyLgBUaGlzIGluZm9ybWF0aW9uIGlzIHVzZWQgZm9yIHRoZSB0ZW1wZXJhdHVyZSB0YWIsIHRoZSBib3VuZGluZyBib3ggY2hlY2ssIHRoZSBHQ09ERSBWaWV3ZXIgYW5kL29yIHdoZW4gc2xpY2luZyBmcm9tIE9jdG9QcmludC4AVGhpcyBpcyBub3QgcmVjb21tZW5kZWQAVGhpcyBpcyB1c2VkIGJ5IHRoZSBHQ09ERSBhbmFseXNpcyBpbiB0aGUgYmFja2VuZCBhbmQgdGhlIHZpZXdlciBpbiB0aGUgZnJvbnRlbmQgdG8gaW50ZXJwcmV0IHlvdXIgc2xpY2VkIGZpbGVzIGNvcnJlY3RseS4AVGhpcyBtYXkgY2F1c2UgdW5wcmVkaWN0YWJsZSBjYWNoaW5nIGJlaGF2aW91ci4gT25seSBkaXNhYmxlIGlmIHlvdXIgd2ViY2FtIHNlcnZlciBpcyBpbmNvbXBhdGlibGUgYW5kIGRvZXMgbm90IHdvcmsgaW4gT2N0b1ByaW50J3MgVUkAVGhpcyBuZWVkcyB0byBiZSBzZXQgaWYgeW91IHNlbGVjdCBjb21taXQgYmFzZWQgdmVyc2lvbiB0cmFja2luZy4AVGhpcyBwbHVnaW4gaXMgYmxhY2tsaXN0ZWQAVGhpcyB1c2VyIG1heSBub3QgaGF2ZSBkYW5nZXJvdXMgcGVybWlzc2lvbnMuAFRoaXMgdmVyc2lvbiBvZiB0aGUgUHl0aG9uIGVudmlyb25tZW50IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIGRpcmVjdCB1cGRhdGVzLgBUaGlzIHdpbGwgY2FuY2VsIHlvdXIgcHJpbnQuAFRoaXMgd2lsbCBkZWxldGUgdGhlIEFQSSBLZXkuIEl0IHdpbGwgY2Vhc2UgdG8gdG8gZnVuY3Rpb24gaW1tZWRpYXRlbHkuAFRoaXMgd2lsbCBnZW5lcmF0ZSBhIG5ldyBBUEkgS2V5LiBUaGUgb2xkIEFQSSBLZXkgd2lsbCBjZWFzZSB0byBmdW5jdGlvbiBpbW1lZGlhdGVseS4AVGhpcyB3aWxsIHJlc3RhcnQgdGhlIHByaW50IGpvYiBmcm9tIHRoZSBiZWdpbm5pbmcuAFRoaXMgd2lsbCBzdGFydCBhIG5ldyBwcmludCBqb2IuIFBsZWFzZSBjaGVjayB0aGF0IHRoZSBwcmludCBiZWQgaXMgY2xlYXIuAFRoaXMgd2lsbCB1cGRhdGUgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzIGFuZCByZXN0YXJ0IHRoZSBzZXJ2ZXI6AFRob3NlIGNvbXBvbmVudHMgbWFya2VkIHdpdGggPGkgY2xhc3M9ImZhIGZhLWNoZWNrIj48L2k+IGNhbiBiZSB1cGRhdGVkIGRpcmVjdGx5LgBUaW1lIGFmdGVyIHdoaWNoIGEgY29ubmVjdGlvbiBhdHRlbXB0IHRvIHRoZSBwcmludGVyIHdpbGwgYmUgY29uc2lkZXJlZCBhcyBoYXZpbmcgZmFpbGVkAFRpbWUgYWZ0ZXIgd2hpY2ggdGhlIGNvbW11bmljYXRpb24gd2l0aCB5b3VyIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIHRpbWVkIG91dCBpZiBub3RoaW5nIHdhcyBzZW50IGJ5IHlvdXIgcHJpbnRlciAoYW5kIGFuIGF0dGVtcHQgdG8gZ2V0IGl0IHRhbGtpbmcgYWdhaW4gd2lsbCBiZSBkb25lKS4gSW5jcmVhc2UgdGhpcyBpZiB5b3VyIHByaW50ZXIgdGFrZXMgbG9uZ2VyIHRoYW4gdGhpcyBmb3Igc29tZSBtb3Zlcy4AVGltZSBhZnRlciB3aGljaCB0byBjb25zaWRlciBhIHBvc2l0aW9uIHF1ZXJ5IG9uIHBhdXNlIG9yIGNhbmNlbCB0byBoYXZlIGZhaWxlZABUaW1lIGFmdGVyIHdoaWNoIHRvIGNvbnNpZGVyIHRoZSBhdXRvIGRldGVjdGlvbiBoYW5kc2hha2UgYXR0ZW1wdCB0byBoYXZlIGZhaWxlZCBpZiBubyBzdWNjZXNzZnVsIGNvbm5lY3Rpb24gaXMgZGV0ZWN0ZWQAVGltZSB0byB3YWl0IGFmdGVyIG9wZW5pbmcgdGhlIHNlcmlhbCBjb25uZWN0aW9uIGJlZm9yZSBzdGFydGluZyBiYXVkcmF0ZSBkZXRlY3Rpb24AVGltZWQAVGltZWxhcHNlAFRpbWVsYXBzZSBDb25maWd1cmF0aW9uAFRpbWVsYXBzZSBGb2xkZXIAVGltZWxhcHNlIE1vZGUAVGltZWxhcHNlIFByZXZpZXcAVGltZWxhcHNlIFJlY29yZGluZ3MAVGltZWxhcHNlIFJlbmRlciBQcm9ncmVzcwBUaW1lbGFwc2UgVGVtcCBGb2xkZXIAVGltZWxhcHNlIGJpdHJhdGUAVGltZWxhcHNlIGZyYW1lIHJhdGUAVGltZWxhcHNlIG5vdCBmdWxseSBjb25maWd1cmVkAFRpbWVsYXBzZSBwb3N0IHJvbGwAVGltZWxhcHNlIHJlYWR5AFRpbWVvdXQgYWZ0ZXIgd2hpY2ggdG8gdW5sb2FkIHRoZSBzdHJlYW0gaWYgdGhlIGNvbnRyb2wgdGFiIGlzIG5vdCB2aXNpYmxlAFRpbWVvdXQgZm9yIHRha2luZyBhIHNuYXBzaG90AFRpbWVvdXRzAFRpdGxlAFRvIGhhdmUgdXBkYXRlcyBhcHBsaWVkLCBnZXQgaW4gdG91Y2ggd2l0aCBhbiBhZG1pbmlzdHJhdG9yIG9mIHRoaXMgT2N0b1ByaW50IGluc3RhbmNlLgBUb28gbWFueSBmaWxlcyBzZWxlY3RlZCB0byBkb3dubG9hZCBhdCBvbmNlLiBSZWR1Y2UgbnVtYmVyIG9mIGZpbGVzIHRvIGVuYWJsZSBkb3dubG9hZCBidXR0b24uAFRvb2wAVG90YWwAVG90YWwgcHJpbnQgdGltZSBzbyBmYXIAVHJhY2tlZCBicmFuY2gAVHJhY2tlZCBldmVudHMAVHJhY2tpbmcgc3RhcnQAVHJhbnNmZXJyaW5nIGZpbGUgdG8gU0QAVHJhbnNwYXJlbnQgY29sb3IAVHJ5IGNoZWNraW5nIHRoaXMgaWYgeW91IHJ1biBpbnRvIGNvbm5lY3Rpb24gdGltZW91dHMgZHVlIHRvIHlvdXIgcHJpbnRlciB0YWtpbmcgdG9vIGxvbmcgdG8gcmVzcG9uZCB0byBPY3RvUHJpbnQncyBoYW5kc2hha2UgYXR0ZW1wdHMgb24gY29ubmVjdC4AVHJ5aW5nIHRvIHJlc3RhcnQgdGhlIHNlcnZlciBwcm9kdWNlZCBhbiBlcnJvciwgcGxlYXNlIGNoZWNrIG9jdG9wcmludC5sb2cgZm9yIGRldGFpbHMuIFlvdSdsbCBoYXZlIHRvIHJlc3RhcnQgbWFudWFsbHkuAFR5cGUAVVJMIG9mIHRoZSBOb3RpY2VzIHNvdXJjZSB0byB1c2UuIFlvdSBzaG91bGQgbm9ybWFsbHkgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuAFVSTCBvZiB0aGUgUGx1Z2luIFJlcG9zaXRvcnkgdG8gdXNlLiBZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLgBVUkwgdG8gZW1iZWQgaW50byB0aGUgVUkgZm9yIGxpdmUgdmlld2luZyBvZiB0aGUgd2ViY2FtIHN0cmVhbQBVUkwgdG8gdXNlIGZvciByZXRyaWV2aW5nIHdlYmNhbSBzbmFwc2hvdCBpbWFnZXMgZm9yIHRpbWVsYXBzZSBjcmVhdGlvbgBVbHRpbWFrZXIgMi8yKwBVbmFibGUgdG8gbW92ZSBmaWxlIG9yIGZvbGRlcgBVbmNoZWNrIHRoaXMgaWYgeW91IGFyZSBoYXZpbmcgcHJvYmxlbXMgY29ubmVjdGluZyB0byB5b3VyIHByaW50ZXIuAFVuY2hlY2sgdGhpcyBpZiB5b3VyIGZpcm13YXJlIGRvZXNuJ3Qgc3VwcG9ydCA8Y29kZT5NMTA4PC9jb2RlPiBmb3IgYWJvcnRpbmcgYmxvY2tpbmcgaGVhdHVwcyEAVW5pbnN0YWxsAFVuaW5zdGFsbCAmIGNsZWFuIHVwIGRhdGEAVW5pbnN0YWxsIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMAVW5pbnN0YWxsIFBsdWdpbgBVbmluc3RhbGxpbmcgcGx1Z2luICIlKG5hbWUpcyIAVW5pbnN0YWxsaW5nIHBsdWdpbi4uLgBVbmtub3duAFVua25vd24gZXJyb3IAVW5rbm93biBlcnJvciB3aGlsZSBjaGVja2luZyBmb3IgdXBkYXRlLCBwbGVhc2UgY2hlY2sgdGhlIGxvZ3MAVW5rbm93biB1cGRhdGUgY2hlY2ssIGNvbmZpZ3VyYXRpb24gb2s/AFVubGVzcyBvdGhlcndpc2Ugbm90ZWQsIHlvdSBtYXkganVzdCBza2lwIGFueSB3aXphcmQgcGFnZSBieSBjbGlja2luZyAiTmV4dCIgb3IgIkZpbmlzaCIuAFVucmVuZGVyZWQgVGltZWxhcHNlcwBVbnRpbCBhIHJlcG9zaXRvcnkgaXMgYXZhaWxhYmxlLCBwbGVhc2Ugc2VlIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiA+dGhlIHdpa2k8L2E+IGZvciBsYW5ndWFnZSBwYWNrcyBwcm92aWRlZCBieSB0aGUgY29tbXVuaXR5LgBVcGRhdGUAVXBkYXRlIEF2YWlsYWJsZQBVcGRhdGUgVXNlcgBVcGRhdGUgYWxsAFVwZGF0ZSBhdmFpbGFibGUAVXBkYXRlIGRvbmUsIHBsZWFzZSBjbG9zZSB0aGlzIHdpbmRvdy4AVXBkYXRlIGZhaWxlZCEAVXBkYXRlIGdyb3VwAFVwZGF0ZSBpbiBwcm9ncmVzcywgcGxlYXNlIHdhaXQuAFVwZGF0ZSBsb2cAVXBkYXRlIG5vdCBwb3NzaWJsZQBVcGRhdGUgbm90IHN0YXJ0ZWQhAFVwZGF0ZSBub3cAVXBkYXRlIHN1Y2Nlc3NmdWwhAFVwZGF0ZSBzdWNjZXNzZnVsLCByZXN0YXJ0IHJlcXVpcmVkIQBVcGRhdGUgc3VjY2Vzc2Z1bCwgcmVzdGFydGluZyEAVXBkYXRlPwBVcGRhdGluZywgcGxlYXNlIHdhaXQuAFVwZGF0aW5nLi4uAFVwbG9hZABVcGxvYWQgJiByZXN0b3JlAFVwbG9hZCAob3ZlcndyaXRlKQBVcGxvYWQgKHJlbmFtZSkAVXBsb2FkIEZvbGRlcgBVcGxvYWQgYWRkaXRpb25hbCBMYW5ndWFnZSBQYWNrcwBVcGxvYWQgZGF0ZSBvZiB0aGUgZmlsZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3IgcHJpbnRpbmcAVXBsb2FkIGxvY2FsbHkAVXBsb2FkIHRvIFNEAFVwbG9hZGVkAFVwbG9hZGluZyAuLi4AVXNlIDxjb2RlPi0tcHJvY2Vzcy1kZXBlbmRlbmN5LWxpbmtzPC9jb2RlPiB3aXRoIDxjb2RlPnBpcCBpbnN0YWxsPC9jb2RlPgBVc2UgdGhlIGZvcm0gYmVsb3cgdG8gc3BlY2lmeSBhIG5ldyBvZmZzZXQgdG8gYXBwbHkgdG8gYWxsIHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNlbnQgZnJvbSBwcmludGVkIGZpbGVzIGZvciAiJShuYW1lKXMiAFVzZSB0aGlzIGlmIGNvbm5lY3RpbmcgdG8geW91ciBwcmludGVyIGZhaWxzIHdpdGggPGNvZGU+KDIyLCAnSW52YWxpZCBhcmd1bWVudCcpPC9jb2RlPi4AVXNlIHRoaXMgaWYgeW91IGFyZSBydW5uaW5nIGludG8gPGEgaHJlZj0iJSUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+dGhpcyBwcm9ibGVtPC9hPi4AVXNlIHRoaXMgdG8gZGVmaW5lIDxhIGhyZWY9IiUlKGdsb2JfdXJsKXMiPmdsb2IgcGF0dGVybnM8L2E+IG1hdGNoaW5nIHNlcmlhbCBwb3J0cyB0byBibGFja2xpc3QgZm9yIGNvbm5lY3RpbmcgYWdhaW5zdCwgZS5nLiA8Y29kZT4vZGV2L3R0eVMqPC9jb2RlPi4gT25lIGVudHJ5IHBlciBsaW5lLgBVc2UgdGhpcyB0byBkZWZpbmUgYWRkaXRpb25hbCA8YSBocmVmPSIlJShnbG9iX3VybClzIj5nbG9iIHBhdHRlcm5zPC9hPiBtYXRjaGluZyBzZXJpYWwgcG9ydHMgdG8gbGlzdCBmb3IgY29ubmVjdGluZyBhZ2FpbnN0LCBlLmcuIDxjb2RlPi9kZXYvdHR5QU1BKjwvY29kZT4uIE9uZSBlbnRyeSBwZXIgbGluZS4gUGxlYXNlIG5vdGUgdGhhdCBwb3J0cyB3aWxsIG9ubHkgYmUgb2ZmZXJlZCB0byBjb25uZWN0IHRvIGlmIHRoZXkgZ2V0IGFsc28gZGV0ZWN0ZWQgYnkgdGhlIDxlbT5vcGVyYXRpbmcgc3lzdGVtPC9lbT4uIEFkZGluZyBhIHBvcnQgaGVyZSB3aWxsIG5vdCBtYWtlIGl0IG1hZ2ljYWxseSBhcHBlYXIgaW4gT2N0b1ByaW50LiBJZiB0aGUgb3BlcmF0aW5nIHN5c3RlbSBkb2Vzbid0IHNlZSB5b3VyIHByaW50ZXIgeW91IG5lZWQgdG8gc29sdmUgdGhpcyBmaXJzdC4AVXNlIHRoaXMgdG8gZGVmaW5lIGFkZGl0aW9uYWwgc2VyaWFsIHBvcnQgYmF1ZCByYXRlcyB0byBsaXN0IGZvciBjb25uZWN0aW5nIHdpdGgsIGUuZy4gPGNvZGU+MTIzNDU2PC9jb2RlPi4gQ29tbWEgc2VwYXJhdGVkLgBVc2UgdGhpcyB0byBkZWZpbmUgc2VyaWFsIHBvcnQgYmF1ZCByYXRlcyB0byBibGFja2xpc3QgZm9yIGNvbm5lY3Rpbmcgd2l0aCwgZS5nLiA8Y29kZT4xMjM0NTY8L2NvZGU+LiBDb21tYSBzZXBhcmF0ZWQuAFVzZSB0aGlzIHRvIGRlZmluZSB0aGUgZGlhbG9nIGNvbW1hbmQuIERlZmF1bHQgaXMgPGNvZGU+TTg3NjwvY29kZT4uIFlvdSBub3JtYWxseSBzaG91bGQgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuAFVzZSB0aGlzIHRvIHNwZWNpZnkgYSBkaWZmZXJlbnQgY29tbWFuZCB0aGFuIHRoZSBkZWZhdWx0IDxjb2RlPk0xMTA8L2NvZGU+IHRvIHNlbmQgdG8gdGhlIHByaW50ZXIgb24gaW5pdGlhbCBjb25uZWN0aW9uIHRvIHRyaWdnZXIgYSBjb21tdW5pY2F0aW9uIGhhbmRzaGFrZS4AVXNlIHRoaXMgdG8gc3BlY2lmeSBjb21tYW5kcyBvbiB3aGljaCBPY3RvUHJpbnQgc2hvdWxkIHBhdXNlIHRoZSBwcmludCBqb2IuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuIERlZmF1bHRzIHRvIDxjb2RlPk0wPC9jb2RlPiwgPGNvZGU+TTE8L2NvZGU+IGFuZCA8Y29kZT5NMjU8L2NvZGU+LgBVc2UgdGhpcyB0byBzcGVjaWZ5IGNvbW1hbmRzIHRoYXQgc2hvdWxkIGJlIHNpbGVudGx5IGlnbm9yZWQgYW5kIG5ldmVyIGJlIHNlbnQgdG8gdGhlIHByaW50ZXIuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuIFVubGlrZSBibG9ja2VkIGNvbW1hbmRzIGFib3ZlLCB0aGVyZSB3aWxsIGJlIG5vIHdhcm5pbmcgcG9wdXAgd2hlbiB0aGVzZSBjb21tYW5kcyBhcmUgZW5jb3VudGVyZWQuAFVzZSB0aGlzIHRvIHNwZWNpZnkgY29tbWFuZHMgdGhhdCBzaG91bGQgbmV2ZXIgYmUgc2VudCB0byB0aGUgcHJpbnRlci4gSnVzdCB0aGUgRyBvciBNIGNvZGUsIGNvbW1hIHNlcGFyYXRlZC4gRGVmYXVsdHMgdG8gPGNvZGU+TTA8L2NvZGU+IGFuZCA8Y29kZT5NMTwvY29kZT4gc2luY2UgbW9zdCBmaXJtd2FyZSB3aWxsIGJsb2NrIHVudGlsIGEgYnV0dG9uIG9uIHRoZSBjb250cm9sbGVyIGhhcyBiZWVuIHByZXNzZWQgaWYgaXQgcmVjZWl2ZXMgZWl0aGVyIG9mIHRob3NlIHR3byBjb21tYW5kcy4AVXNlIHRoaXMgdG8gc3BlY2lmeSBlbWVyZ2VuY3kgY29tbWFuZHMgd2hpY2ggc2hvdWxkIGp1bXAgYW55IHF1ZXVlcyBhbmQgLSBpZiBzdXBwb3J0ZWQgYnkgdGhlIGZpcm13YXJlIC0gYmUgZm9yY2Ugc2VudC4gSnVzdCB0aGUgRyBvciBNIGNvZGUsIGNvbW1hIHNlcGFyYXRlZC4gRGVmYXVsdHMgdG8gPGNvZGU+TTExMjwvY29kZT4sIDxjb2RlPk0xMDg8L2NvZGU+IGFuZCA8Y29kZT5NNDEwPC9jb2RlPi4AVXNlIHRoaXMgdG8gc3BlY2lmeSB0aGUgY29tbWFuZHMga25vd24gdG8gdGFrZSBhIGxvbmcgdGltZSB0byBjb21wbGV0ZSB3aXRob3V0IG91dHB1dCBmcm9tIHlvdXIgcHJpbnRlciBhbmQgaGVuY2UgbWlnaHQgY2F1c2UgdGltZW91dCBpc3N1ZXMuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuAFVzZSB0aGlzIHRvIHNwZWNpZnkgdGhlIGNvbW1hbmRzIHRoYXQgc2hvdWxkIG5vdCBoYXZlIHRoZWlyIHBhcmFtZXRlcnMgYXV0b21hdGljYWxseSB1cHBlcmNhc2VkIGluIHRoZSB0ZXJtaW5hbCB0YWIuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuAFVzZSB0aGlzIHRvIHNwZWNpZnkgd2hpY2ggY29tbWFuZHMgPHN0cm9uZz5hbHdheXM8L3N0cm9uZz4gbmVlZCB0byBiZSBzZW50IHdpdGggYSBjaGVja3N1bS4gQ29tbWEgc2VwYXJhdGVkIGxpc3QuAFVzZXIAVXNlciBTZXR0aW5ncwBVc2VyIHVua25vd24sIHdyb25nIHBhc3N3b3JkIG9yIGFjY291bnQgZGVhY3RpdmF0ZWQAVXNlciB3aG8gc2VsZWN0ZWQgdGhpcyBmaWxlIGZvciBwcmludGluZwBVc2VybmFtZQBVc2VycwBWYWxpZGF0ZSBTU0wgb24gc25hcHNob3QgVVJMIChpZiBhcHBsaWNhYmxlKQBWZXJzaW9uIGNhY2hlIFRUTABWaWRlbyBjb2RlYwBWaWRlbyBjb2RlYyB1c2VkIGZvciBlbmNvZGluZwBXYWl0IGZvciA8Y29kZT5zdGFydDwvY29kZT4gb24gY29ubmVjdABXYXJuaW5nAFdhcm5pbmc6AFdhdGNoZWQgRm9sZGVyAFdlYgBXZWIgaW50ZXJmYWNlIGxvYWQAV2ViY2FtAFdlYmNhbSAmIFRpbWVsYXBzZQBXZWJjYW0gJmFtcDsgVGltZWxhcHNlIFJlY29yZGluZ3MAV2ViY2FtIHN0cmVhbSBsb2FkaW5nLi4uAFdlYmNhbSBzdHJlYW0gbm90IGxvYWRlZABXaGF0IHRvIGRvIG9uIGEgZmlybXdhcmUgZXJyb3IgKDxjb2RlPkVycm9yOjwvY29kZT4gb3IgPGNvZGU+ISE8L2NvZGU+KQBXaGVuIGlkbGUgYW5kIGEgdGFyZ2V0IHRlbXBlcmF0dXJlIGlzIHNldABXaGVuIHByaW50aW5nAFdoZW4gcHJpbnRpbmcgZnJvbSB0aGUgcHJpbnRlcidzIFNEAFdoZW4gcHJpbnRpbmcgb3IgaWRsZQBXaGlsZSB0aGlzIGNhbiBuZWdhdGl2ZWx5IGltcGFjdCBwZXJmb3JtYW5jZSwgYSA8Y29kZT5wbHVnaW50aW1pbmdzLmxvZzwvY29kZT4gY2FuIGJlIGluY3JlZGlibHkgdXNlZnVsIGZvciBkZWJ1Z2dpbmcgYW55IHBlcmZvcm1hbmNlIGlzc3VlcyBvYnNlcnZlZCBvdXRzaWRlIG9mIHNhZmUgbW9kZS4AV2hpbGUgdGhpcyBjYW4gbmVnYXRpdmVseSBpbXBhY3QgcGVyZm9ybWFuY2UsIGEgPGNvZGU+c2VyaWFsLmxvZzwvY29kZT4gY2FuIGJlIGluY3JlZGlibHkgdXNlZnVsIGZvciBkZWJ1Z2dpbmcgYW55IGlzc3VlcyBvYnNlcnZlZCBpbiB0aGUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIE9jdG9QcmludCBhbmQgeW91ciBwcmludGVyLgBXaHk/AFdpZHRoIChYKQBXaXRob3V0IHRoaXMgcGx1Z2luIE9jdG9QcmludCB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIHBlcmZvcm0gc2V0dXAgc3RlcHMgdGhhdCBtaWdodCBiZSByZXF1aXJlZCBhZnRlciBhbiB1cGRhdGUuAFdpdGhvdXQgdGhpcyBwbHVnaW4gT2N0b1ByaW50IHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gdXBkYXRlIGl0c2VsZiBvciBhbnkgb2YgeW91ciBpbnN0YWxsZWQgcGx1Z2lucyB3aGljaCBtaWdodCBwdXQgeW91ciBzeXN0ZW0gYXQgcmlzay4AV2l0aG91dCB0aGlzIHBsdWdpbiB0aGUgR0NvZGUgVmlld2VyIGluIE9jdG9QcmludCB3aWxsIG5vIGxvbmdlciBiZSBhdmFpbGFibGUuAFdpdGhvdXQgdGhpcyBwbHVnaW4gdGhpcmQgcGFydHkgY2xpZW50cyB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIG9idGFpbiBhbiBBUEkga2V5IHdpdGhvdXQgeW91IG1hbnVhbGx5IGNvcHktcGFzdGluZyBpdC4AV2l0aG91dCB0aGlzIHBsdWdpbiB5b3UgbWlnaHQgbWlzcyBpbXBvcnRhbnQgYW5ub3VuY2VtZW50cyByZWdhcmRpbmcgc2VjdXJpdHkgb3Igb3RoZXIgY3JpdGljYWwgaXNzdWVzIGNvbmNlcm5pbmcgT2N0b1ByaW50LgBXaXRob3V0IHRoaXMgcGx1Z2luIHlvdSB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIGJhY2t1cCAmIHJlc3RvcmUgeW91ciBPY3RvUHJpbnQgc2V0dGluZ3MgYW5kIGRhdGEuAFdpdGhvdXQgdGhpcyBwbHVnaW4geW91IHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gcmV0cmlldmUgT2N0b1ByaW50J3MgbG9ncyBvciBtb2RpZnkgdGhlIGN1cnJlbnQgbG9nZ2luZyBsZXZlbHMgdGhyb3VnaCB0aGUgd2ViIGludGVyZmFjZS4AV2l0aG91dCB0aGlzIHBsdWdpbiB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSB3aWxsIG5vIGxvbmdlciBiZSBkaXNjb3ZlcmFibGUgb24gdGhlIG5ldHdvcmsgdmlhIEJvbmpvdXIgYW5kIHVQblAuAFdpdGhvdXQgdGhpcyBwbHVnaW4geW91ciBwcmludGVyIHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gdHJpZ2dlciBjb25maXJtYXRpb24gb3Igc2VsZWN0aW9uIHByb21wdHMgaW4gT2N0b1ByaW50AFdpdGhvdXQgdGhpcyBwbHVnaW4geW91ciBwcmludGVyIHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gdHJpZ2dlciBub3RpZmljYXRpb25zIGluIE9jdG9QcmludABYAFggQXhpcwBYIENvb3JkaW5hdGVzAFkAWSBBeGlzAFkgQ29vcmRpbmF0ZXMAWVlZWS1NTS1ERCBISDptbQBZWVlZLU1NLUREIEhIOm1tOnNzAFllcwBZZXMsIGNhbmNlbCB0aGUgcHJpbnQAWWVzLCBwbGVhc2UgdmlzdWFsaXplICUobmFtZSlzIHJlZ2FyZGxlc3Mgb2YgaXRzIHNpemUAWW91IGFyZSBhYm91dCB0byBjbGVhbnVwIGxlZnQgb3ZlciBwbHVnaW4gc2V0dGluZ3MgYW5kIGRhdGEgb2YgcGx1Z2lucyBubyBsb25nZXIgaW5zdGFsbGVkLiBUaGlzIG9wZXJhdGlvbiBjYW5ub3QgYmUgcmV2ZXJzZWQuAFlvdSBhcmUgYWJvdXQgdG8gY2xlYW51cCB0aGUgcGx1Z2luIGRhdGEgb2YgIiUobmFtZSlzIi4gVGhpcyBvcGVyYXRpb24gY2Fubm90IGJlIHJldmVyc2VkLgBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSAlKGNvdW50KWQgYmFja3Vwcy4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgJShjb3VudClkIGxvZyBmaWxlcy4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgJShjb3VudClkIHRpbWVsYXBzZSBmaWxlcy4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgJShjb3VudClkIHVucmVuZGVyZWQgdGltZWxhcHNlcy4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgYmFja3VwIGZpbGUgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgbG9nIGZpbGUgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGhlIGZvbGRlciAiJShmb2xkZXIpcyIgd2hpY2ggc3RpbGwgY29udGFpbnMgZmlsZXMgYW5kL29yIHN1YiBmb2xkZXJzLgBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSB0aGUgZ3JvdXAgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGhlIHByaW50ZXIgcHJvZmlsZSAiJShuYW1lKXMiLgBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSB0aGUgcmVjb3JkIG9mIHBsdWdpbnMgdW5rbm93biBkdXJpbmcgdGhlIGxhc3QgcmVzdG9yZS4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGhlIHVzZXIgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGltZWxhcHNlIGZpbGUgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkZWxldGUgdW5yZW5kZXJlZCB0aW1lbGFwc2UgIiUobmFtZSlzIi4AWW91IGFyZSBhYm91dCB0byBkaXNhYmxlICIlKG5hbWUpcyIAWW91IGFyZSBhYm91dCB0byBkaXNhYmxlICIlKG5hbWUpcyIuAFlvdSBhcmUgYWJvdXQgdG8gcmVzdG9yZSB0aGUgYmFja3VwIGZpbGUgIiUobmFtZSlzIi4gVGhpcyBjYW5ub3QgYmUgdW5kb25lLgBZb3UgYXJlIGFib3V0IHRvIHJldm9rZSAlKGNvdW50KWQgYXBwbGljYXRpb24ga2V5cy4AWW91IGFyZSBhYm91dCB0byByZXZva2UgdGhlIGFwcGxpY2F0aW9uIGtleSAiJShrZXkpcyIuAFlvdSBhcmUgYWJvdXQgdG8gdW5pbnN0YWxsIHRoZSBwbHVnaW4gIiUobmFtZSlzIgBZb3UgYXJlIGFib3V0IHRvIHVwbG9hZCBhbmQgcmVzdG9yZSB0aGUgYmFja3VwIGZpbGUgIiUobmFtZSlzIi4gVGhpcyBjYW5ub3QgYmUgdW5kb25lLgBZb3UgYXJlIG5vdyBsb2dnZWQgaW4gYXMgIiUodXNlcm5hbWUpcyIAWW91IGFyZSBub3cgbG9nZ2VkIG91dABZb3UgYXJlIHN0aWxsIHJ1bm5pbmcgUHl0aG9uIDIAWW91IGNhbiBlZGl0IHlvdXIgYW5ub3VuY2VtZW50IHN1YnNjcmlwdGlvbnMgdW5kZXIgU2V0dGluZ3MgPiBBbm5vdW5jZW1lbnRzLgBZb3UgY2FuIGZpbmQgbW9yZSBpbmZvIG9uIHRoaXMgaXNzdWUgaW4gdGhlIEZBUSBhdCAlKHVybClzAFlvdSBjYW4gbWFrZSB0aGlzIG1lc3NhZ2UgZGlzcGxheSBhZ2FpbiB2aWEgIlNldHRpbmdzIiA+ICJTb2Z0d2FyZSBVcGRhdGUiID4gIkNoZWNrIGZvciB1cGRhdGUgbm93IgBZb3UgY2FuIHN0aWxsIGVuYWJsZSBlcnJvciB0cmFja2luZyB2aWEgIlNldHRpbmdzIiA+ICJFcnJvciBUcmFja2luZyIAWW91IGNhbiB2aWV3IFN5c3RlbWluZm8gQnVuZGxlcyBhdCA8YSBocmVmPSJodHRwczovL2J1bmRsZXZpZXdlci5vY3RvcHJpbnQub3JnIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5idW5kbGV2aWV3ZXIub2N0b3ByaW50Lm9yZzwvYT4AWW91IGN1cnJlbnRseSBoYXZlIDxjb2RlPiUobG9nZmlsZSlzPC9jb2RlPiBlbmFibGVkLiBQbGVhc2UgcmVtZW1iZXIgdG8gdHVybiBpdCBvZmYgYWdhaW4gb25jZSB5b3VyIGFyZSBkb25lIGRlYnVnZ2luZyB3aGF0ZXZlciBpc3N1ZSBwcm9tcHRlZCB5b3UgdG8gdHVybiBpdCBvbi4AWW91IGRvbid0IHNlZW0gdG8gaGF2ZSBKYXZhU2NyaXB0IGVuYWJsZWQAWW91IGhhdmUgdW5zYXZlZCBjaGFuZ2VzLiBEb24ndCBmb3JnZXQgdG8gc2F2ZSB0aGVtLgBZb3UgaGF2ZW4ndCB5ZXQgZGVjaWRlZCBvbiB3aGV0aGVyIHRvIGVuYWJsZSBvciBkaXNhYmxlIGFub255bW91cyB1c2FnZSB0cmFja2luZy4gWW91IG5lZWQgdG8gZWl0aGVyIGVuYWJsZSBvciBkaXNhYmxlIGl0IGJlZm9yZSBjb250aW51aW5nLgBZb3UgaGF2ZW4ndCB5ZXQgZGVjaWRlZCBvbiB3aGV0aGVyIHRvIGVuYWJsZSBvciBkaXNhYmxlIHRoZSBvbmxpbmUgY29ubmVjdGl2aXR5IGNoZWNrLiBZb3UgbmVlZCB0byBlaXRoZXIgZW5hYmxlIG9yIGRpc2FibGUgaXQgYmVmb3JlIGNvbnRpbnVpbmcuAFlvdSBoYXZlbid0IHlldCBkZWNpZGVkIG9uIHdoZXRoZXIgdG8gZW5hYmxlIG9yIGRpc2FibGUgdGhlIHBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZy4gWW91IG5lZWQgdG8gZWl0aGVyIGVuYWJsZSBvciBkaXNhYmxlIGl0IGJlZm9yZSBjb250aW51aW5nLgBZb3UgaGF2ZW4ndCB5ZXQgc2V0IHVwIGFjY2VzcyBjb250cm9sLiBZb3UgbmVlZCB0byBzZXR1cCBhIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhbmQgY2xpY2sgIkNyZWF0ZSBBY2NvdW50IiBiZWZvcmUgY29udGludWluZy4AWW91IGxhY2sgYWRtaW4gcGVybWlzc2lvbnMuAFlvdSBtYXkgbm90IGRlbGV0ZSB5b3VyIG93biBhY2NvdW50LgBZb3Ugc2hvdWxkIG5vcm1hbGx5IDxzdHJvbmc+bm90PC9zdHJvbmc+IGhhdmUgdG8gY2hhbmdlIDxzdHJvbmc+YW55PC9zdHJvbmc+IG9mIHRoZSBmb2xsb3dpbmcgc2V0dGluZ3MsIHRoZXkgYXJlIHB1cmVseSBwcm92aWRlZCBmb3IgY29udmVuaWVuY2UgaGVyZS4AWW91IHNob3VsZCBub3JtYWxseSBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4AWW91ciBhdmFpbGFibGUgZnJlZSBkaXNrIHNwYWNlIGlzIGNyaXRpY2FsbHkgbG93LgBZb3VyIGF2YWlsYWJsZSBmcmVlIGRpc2sgc3BhY2UgaXMgc3RhcnRpbmcgdG8gcnVuIGxvdy4AWW91ciBjdXJyZW50IGRpc2sgdXNhZ2UuAFlvdXIgcHJpbnRlciByZXBvcnRlZCB0b29sIFQlKHRvb2wpZCBhcyBpbnZhbGlkLCByZXZlcnRpbmcgYmFjayB0byBUJShmYWxsYmFjaylkAFlvdXIgcHJpbnRlcidzIGZpcm13YXJlIHJlcG9ydGVkIGFuIGVycm9yLiBEdWUgdG8gdGhhdCBPY3RvUHJpbnQgd2lsbCBkaXNjb25uZWN0LiBSZXBvcnRlZCBlcnJvcjogJShlcnJvcilzAFlvdXIgcHJpbnRlcidzIGZpcm13YXJlIHJlcG9ydGVkIGFuIGVycm9yLiBEdWUgdG8gdGhhdCB0aGUgb25nb2luZyBwcmludCBqb2Igd2lsbCBiZSBjYW5jZWxsZWQuIFJlcG9ydGVkIGVycm9yOiAlKGZpcm13YXJlRXJyb3IpcwBZb3VyIHN5c3RlbSBpcyBjdXJyZW50bHkgdGhyb3R0bGVkLiBPY3RvUHJpbnQgcmVmdXNlcyB0byBydW4gdXBkYXRlcyB3aGlsZSBpbiB0aGlzIHN0YXRlIGR1ZSB0byBwb3NzaWJsZSBzdGFiaWxpdHkgaXNzdWVzLgBaAFogQXhpcwBaIENvb3JkaW5hdGVzAFpvb20gaW4gb24gbW9kZWwAYSBmZXcgc2Vjb25kcwBhIG1pbnV0ZQBhc2NlbmRpbmcAYmxhY2sAYmx1ZQBkZWZhdWx0AGRlc2NlbmRpbmcAZnBzAGdyZWVuAGxlc3MgdGhhbiBhIG1pbnV0ZQBtaW4AbW0Ab2ZmAG9rIGJ1ZmZlciBzaXplAG9uIGRlc2t0b3AAb24gbW9iaWxlAG9yYW5nZQBwaXAAcGlwIGNvbmZpZ3VyYXRpb24AcGx1Z2lucyBkaXNwbGF5ZWQAcGx1Z2ludGltaW5ncy5sb2cgaXMgZW5hYmxlZAByZWQAcmVzZW5kIHJhdGlvAHJlc2VuZCByZXF1ZXN0cwBzZWMAc2VyaWFsLmxvZyBpcyBlbmFibGVkAHNldHVwdG9vbHMAc2hvd2luZyAlKGRpc3BsYXllZClkIGxpbmVzAHNob3dpbmcgJShkaXNwbGF5ZWQpZCBsaW5lcyAoJShmaWx0ZXJlZClkIG9mICUodG90YWwpZCB0b3RhbCBsaW5lcyBmaWx0ZXJlZCkAc2hvd2luZyAlKGRpc3BsYXllZClkIGxpbmVzICglKGZpbHRlcmVkKWQgb2YgJSh0b3RhbClkIHRvdGFsIGxpbmVzIGZpbHRlcmVkLCBidWZmZXIgZnVsbCkAc2hvd2luZyAlKGRpc3BsYXllZClkIGxpbmVzIChidWZmZXIgZnVsbCkAdG8AdHJhbnNtaXR0ZWQgbGluZXMAdW5rbm93bgB2aW9sZXQAd2hpdGUAeWVsbG93AHlvdSBoYXZlAFByb2plY3QtSWQtVmVyc2lvbjogT2N0b1ByaW50ClJlcG9ydC1Nc2dpZC1CdWdzLVRvOiBpMThuQG9jdG9wcmludC5vcmcKUE8tUmV2aXNpb24tRGF0ZTogMjAyMS0wOC0wOSAyMzoxNiswMjAwCkxhc3QtVHJhbnNsYXRvcjogSmVhbi1CYXB0aXN0ZSBEdWNsb3MKTGFuZ3VhZ2UtVGVhbTogRnJlbmNoIChGcmFuY2UpIChodHRwOi8vd3d3LnRyYW5zaWZleC5jb20vb2N0b3ByaW50L29jdG9wcmludC9sYW5ndWFnZS9mcl9GUi8pCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD1VVEYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA4Yml0CkdlbmVyYXRlZC1CeTogQmFiZWwgMi44LjAKTGFuZ3VhZ2U6IGZyX0ZSClBsdXJhbC1Gb3JtczogbnBsdXJhbHM9MjsgcGx1cmFsPShuID4gMSk7ClgtR2VuZXJhdG9yOiBQb2VkaXQgMy4wCgAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPsOJdGFwZSBvYmxpZ2F0b2lyZSE8L3N0cm9uZz4gVm91cyBkZXZleiBsZSByZW1wbGlyLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAApTaSBjZXR0ZSBvcHRpb24gZXN0IGFjdGl2w6llLCBPY3RvUHJpbnQgZXNzYWllcmEgZGUgZMOpdGVybWluZXIgYXV0b21hdGlxdWVtZW50IGxlIGZpcm13YXJlIGRlIHZvdHJlIGltcHJpbWFudGUgZXQgZCdhanVzdGVyIGNlcnRhaW5zIHBhcmFtw6h0cmVzIGRlIGNvbW11bmljYXRpb24gZW4gY29uc8OpcXVlbmNlLgpTaSBjZWxhIG5lIGZvbmN0aW9ubmUgcGFzIG91IHNpIHZvdXMgc291aGFpdGV6IHVuIGNvbnRyw7RsZSBwbHVzIGTDqXRhaWxsw6ksIGTDqWNvY2hleiBjZXR0ZSBvcHRpb24gZXQgbGVzIHBhcmFtw6h0cmVzIGVuIHF1ZXN0aW9uIGRldmllbmRyb250IHZpc2libGVzIHBvdXIgbGVzIGFqdXN0ZXIuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAACk9jdG9QcmludCBuZSBwZXJtZXQgYWN0dWVsbGVtZW50IGxlIHTDqWzDqWNoYXJnZW1lbnQgZGUgc2F1dmVnYXJkZXMgdmlhIGzigJlpbnRlcmZhY2UgdXRpbGlzYXRldXIgcXVlIGTigJl1bmUgdGFpbGxlIG1heGltYWxlIGRlICUocGx1Z2luX2JhY2t1cF9tYXhfdXBsb2FkX3NpemVfc3RyKXMgcGV1dmVudCDDqnRyZSByZXN0YXVyw6llcyBzb2l0IDoKICAgICAgICAgICAgICAgICAtIHBhciBsaWduZSBkZSBjb21tYW5kZSwKICAgICAgICAgICAgICAgICAtIGVuIGRpbWludWFudCBsZXVyIHRhaWxsZSBwYXIgbGEgc3VwcHJlc3Npb24gZGUgZ3JvcyBjb250ZW51cyAoY29tbWUgbGVzIFRpbWVsYXBzZSkgZHUgZmljaGllciB6aXAgYXZhbnQgbGUgdMOpbMOpY2hhcmdlbWVudC4KIExlcyBzYXV2ZWdhcmRlcyBkb250IGxhIHRhaWxsZSBkw6lwYXNzZSBjZXR0ZSBsaW1pdGUgc29udCBtYXJxdcOpZXMgYXZlYyUobWFya2VyKXMuCsKgAApJbCB5IGEgdW5lIG5vdXZlbGxlIHZlcnNpb24gZHUgc2VydmV1ciBhY3RpZiBtYWludGVuYW50LCB1bmUgcmVjaGFyZ2UgZGUgbCdpbnRlcmZhY2UgdXRpbGlzYXRldXIgZXN0IG7DqWNlc3NhaXJlLiBDZWxhIG4naW50ZXJyb21wdCBwYXMgbGVzIHRyYXZhdXggZCdpbXByZXNzaW9uIHF1ZSB2b3VzIHBvdXJyaWV6IGF2b2lyIGVuIGNvdXJzLiBWZXVpbGxleiByZWNoYXJnZXIgbCdpbnRlcmZhY2UgV2VibWFpbnRlbmFudCBlbiBjbGlxdWFudCBzdXIgbGUgYm91dG9uIGNpLWRlc3NvdXMuCiAgICAgICAgICAgICAgICAACiAgICAgICAgICAgICAgICBEw6lmaW5pc3NleiB1biBpbnRlcnZhbGxlIGRlIHbDqXJpZmljYXRpb24sIHVuIGjDtHRlIGV0IHVuIHBvcnQgw6AgdsOpcmlmaWVyLiBTaSB2b3VzIG5lIHNhdmV6IHBhcyBxdW9pIGTDqWZpbmlyIGljaSwgbGVzCiAgICAgICAgICAgICAgICB2YWxldXJzIHBhciBkw6lmYXV0ICh1dGlsaXNhbnQgbGUgc2VydmV1ciBETlMgZGUgQ2xvdWRmbGFyZSkgZGV2cmFpZW50IGZvbmN0aW9ubmVyLiBTaSB2b3VzIGF2ZXogZGVzIGlucXVpw6l0dWRlcyBxdWFudCDDoCBjZXR0ZQogICAgICAgICAgICAgICAgdXRpbGlzYXRpb24sIGTDqWZpbmlzc2V6IGwnSVAgZXQgbGUgcG9ydCBkJ3VuIGF1dHJlIHNlcnZldXIgZW4gbGlnbmUgYXVxdWVsIHZvdXMgZmFpdGVzIGNvbmZpYW5jZSBldCBxdWkgYSB1bmUgaGF1dGUKICAgICAgICAgICAgICAgIGRpc3BvbmliaWxpdMOpLgogICAgICAgICAgICAAClNpIHZvdXMgc291aGFpdGV6IMOpZ2FsZW1lbnQgdsOpcmlmaWVyIHNpIGxhIHLDqXNvbHV0aW9uIGRlIG5vbXMgZm9uY3Rpb25uZSAoZm9ydGVtZW50IHJlY29tbWFuZMOpKSwgZMOpZmluaXNzZXogdW4gbm9tIGQnaMO0dGUgcG91ciBjb21wYXJlciBsYSByw6lzb2x1dGlvbiBkZSBub21zLiBTaSB2b3VzIG5lIHNhdmV6IHBhcyBxdW9pIGTDqWZpbmlyIGljaSwgbGEgdmFsZXVyIHBhciBkw6lmYXV0IChkb21haW5lIGRlIE9jdG9QcmludCkgZGV2cmFpdCBmb25jdGlvbm5lci4gU2kgdm91cyBuZSBzb3VoYWl0ZXogcGFzIGVmZmVjdHVlciBkZSB2w6lyaWZpY2F0aW9ucyBkZSByw6lzb2x1dGlvbiByw6lndWxpw6hyZXMgcGFyYWxsw6hsZW1lbnQgw6AgbGEgdsOpcmlmaWNhdGlvbiBkZSBjb25uZWN0aXZpdMOpIGfDqW7DqXJhbGUsIGxhaXNzZXogbGUgY2hhbXAgdmlkZS4KICAgICAgICAgICAgAAogSWwgZXN0IHJlY29tbWFuZMOpIGRlIG5lIHBsdXMgdXRpbGlzZXIgbGEgY2zDqSBBUEkgZ2xvYmFsZSBjYXIgaWwgcydhZ2l0IGQndW5lIGNsw6kgdW5pcXVlIHF1aSBkb25uZSB1biBhY2PDqHMgY29tcGxldCDDoCBsJ2FkbWluaXN0cmF0aW9uIGRlIHRvdXRlIHZvdHJlIGluc3RhbmNlIE9jdG9QcmludC4gPHN0cm9uZz5JbCBzZXJhIHJldGlyw6kgcG91ciBPY3RvcHJpbnQgMi4wPC9zdHJvbmc+LgpBdSBsaWV1IGQndXRpbGlzZXIgbGEgY2zDqSBnbG9iYWxlLCB2b3VzIGRldnJpZXogY3LDqWVyIGRlcyBjbMOpcyBkJ2FwcGxpY2F0aW9uIGluZGl2aWR1ZWxsZXMgcG91ciB2b3MgY2xpZW50cyB0aWVycy4gQWluc2ksIGlscyBvYnRpZW5uZW50IGRlcyBhdXRvcmlzYXRpb25zIGNvcnJlc3BvbmRhbnQgYXUgY29tcHRlIHV0aWxpc2F0ZXVyIHV0aWxpc8OpIHBvdXIgbGEgY3LDqWF0aW9uIGRlIGxhIGNsw6kgZXQgdm91cyBwb3V2ZXogw6lnYWxlbWVudCByw6l2b3F1ZXIgbCdhY2PDqHMgw6AgdW5lIGFwcGxpY2F0aW9uIHNhbnMgYXZvaXIgw6AgbW9kaWZpZXIgbGVzIGNsw6lzIGRlIHRvdXRlcyBsZXMgYXV0cmVzIGFwcGxpY2F0aW9ucy4KSWwgZXN0IMOpZ2FsZW1lbnQgcmVjb21tYW5kw6kgZGUgY3LDqWVyIHVuIGNvbXB0ZSB1dGlsaXNhdGV1ciBzYW5zIGFjY8OocyBhZG1pbmlzdHJhdGV1ciBldCBkZSBsJ3V0aWxpc2VyIHBvdXIgbGVzIGNsaWVudHMgdGllcnMgbG9yc3F1ZSBjZWxhIGVzdCBwb3NzaWJsZS4KICAgICAgICAgICAgAAogQ29tbWVudCB2b3VsZXotdm91cyBwcm9jw6lkZXIgPwogICAgICAgAApTaSBsYSB0w6p0ZSBkJ2ltcHJlc3Npb24gZGUgdm90cmUgaW1wcmltYW50ZSBwZXV0IHNlIGTDqXBsYWNlciBsw6lnw6hyZW1lbnQgZW4gZGVob3JzIGR1IHZvbHVtZSBkJ2ltcHJlc3Npb24gKHBhciBleGVtcGxlIHBvdXIgbGVzIHJvdXRpbmVzIGRlIG5ldHRveWFnZSBkZXMgYnVzZXMpLCB2b3VzIHBvdXZleiBkw6lmaW5pciB1bmUgYm/DrnRlIGRlIHPDqWN1cml0w6kgcGVyc29ubmFsaXPDqWUgcG91ciBzZXMgZMOpcGxhY2VtZW50cyBjaS1kZXNzb3VzLgogICAgICAgIAAKTm90ZXogcXVlIGxlIHRlbXBzIGRvbm7DqSBkYW5zIGNldHRlIHBhcnRpZSBlc3QgPHN0cm9uZz5lc3RpbcOpPC9zdHJvbmc+IHBhciBsZSB2aXN1YWxpc2V1ciBkdSBHLWNvZGUgYXZlYyB2b3RyZSBuYXZpZ2F0ZXVyIGV0IHBldXQgZGlmZsOpcmVyIGRlIGxhIHZhbGV1ciA8c3Ryb25nPmVzdGltw6llPC9zdHJvbmc+IHBhciBsZSBzZXJ2ZXVyIHF1aSBlc3QgYWZmaWNow6llIGRhbnMgbGEgZmVuw6p0cmUgIsOJdGF0IiBldCAiRmljaGllcnMiIGRhbnMgbGUgcGFubmVhdSDDoCBnYXVjaGUuIE5vdGV6IMOpZ2FsZW1lbnQgcXVlIGNldHRlIDxzdHJvbmc+ZXN0aWxhdGlvbjwvc3Ryb25nPiBwZXV0IHZhcmllciwgw6l0YW50IGRvbm7DqSBxdSdlbGxlIHByZW5kIGVuIGNvbXB0ZSBkZXMgaW5mb3JtYXRpb25zIHByw6lzZW50ZXMgZGFucyBsZSBmaWNoaWVyIGR1IEctY29kZS4gICAgICAgIAAKICAgICAgICAgICAgIE9jdG9QcmludCBuZSBwZXJtZXQgYWN0dWVsbGVtZW50IGxlIHTDqWzDqWNoYXJnZW1lbnQgZGUgc2F1dmVnYXJkZXMgdmlhIGzigJlpbnRlcmZhY2UgdXRpbGlzYXRldXIgcXVlIGTigJl1bmUgdGFpbGxlIG1heGltYWxlIGRlCiUocGx1Z2luX2JhY2t1cF9tYXhfdXBsb2FkX3NpemVfc3RyKXMgcGV1dmVudCDDqnRyZSByZXN0YXVyw6llcyBzb2l0IDoKICAgICAgICAgICAgICAgICAtIHBhciBsaWduZSBkZSBjb21tYW5kZSwKICAgICAgICAgICAgICAgICAtIGVuIGRpbWludWFudCBsZXVyIHRhaWxsZSBwYXIgbGEgc3VwcHJlc3Npb24gZGUgZ3JvcyBjb250ZW51cyAoY29tbWUgbGVzIHRpbWVsYXBzZXMpIGR1IGZpY2hpZXIgCnppcCBhdmFudCBsZSB0w6lsw6ljaGFyZ2VtZW50LgogTGVzIHNhdXZlZ2FyZGVzIGRvbnQgbGEgdGFpbGxlIGTDqXBhc3NlIGNldHRlIGxpbWl0ZSBzb250IG1hcnF1w6llcyBhdmVjCiUobWFya2VyKXMuCsKgAApMZXMgcGFyYW3DqHRyZXMgb250IMOpdMOpIG1pcyDDoCBqb3VyIHN1ciBsZSBzZXJ2ZXVyLiBWb3VzIHBvdXZleiByZWNoYXJnZXIgdG91cyBsZXMgcGFyYW3DqHRyZXMsIMOpY3Jhc2VyIGxlcyBtb2RpZmljYXRpb25zIHF1ZSB2b3VzIHBvdXJyaWV6IGF2b2lyIGFwcG9ydMOpZXMgbG9jYWxlbWVudCwgb3UgYWx0ZXJuYXRpdmVtZW50IHJlY2hhcmdlciB1bmlxdWVtZW50IGxlcyBwYXJhbcOodHJlcyBxdWUgdm91cyBuJ2F2ZXogcGFzIG1vZGlmacOpcyBsb2NhbGVtZW50LgogICAgICAgAAogICAgICAgICAgICBEZXV4IG91IHBsdXNpZXVycyBkZXMgZG9zc2llcnMgY29uZmlndXLDqXMgcGFydGFnZW50IHVuIGVtcGxhY2VtZW50LiBDZXR0ZSBzaXR1YXRpb24gbidlc3QgcGFzCiAgICAgICAgICAgIHByaXNlIGVuIGNoYXJnZS4gVm91cyBkZXZleiBjb3JyaWdlciBjZSBwcm9ibMOobWUuIEVuIGF0dGVuZGFudCwgbGVzIG1vZGlmaWNhdGlvbnMgYXBwb3J0w6llcyDDoCBsYSBjb25maWd1cmF0aW9uIGRlcyBkb3NzaWVycwogICAgICAgICAgICBuZSBzZXJvbnQgcGFzIGNvbnNlcnbDqWVzIGxvcnMgZGUgbCdlbnJlZ2lzdHJlbWVudCBkZXMgcGFyYW3DqHRyZXMuCiAgICAgICAgAApWb3VzIHBvdXZleiBhanVzdGVyIGljaSB0b3V0ZSBsYSBsaWduZSBkZSBjb21tYW5kZSBGRk1QRUcgcXVpIGVzdCB1dGlsaXPDqWUgcG91ciBnw6luw6lyZXIgbGVzIGVucmVnaXN0cmVtZW50cyBlbiB0ZW1wcyByw6llbCwgcGFyIGV4ZW1wbGUgcG91ciBham91dGVyIGRlcyBwYXJhbcOodHJlcyBkZSBsaWduZSBkZSBjb21tYW5kZSBzdXBwbMOpbWVudGFpcmVzIHNpIG7DqWNlc3NhaXJlLiBMZXMgY2FyYWN0w6hyZXMgZGUgcmVtcGxhY2VtZW50IHByaXMgZW4gY2hhcmdlIHNvbnQgbGVzIApzdWl2YW50cyA6Cjxjb2RlPntmZm1wZWd9PC9jb2RlPiAoY2hlbWluIGNvbmZpZ3Vyw6kgdmVycyBGRk1QRUcpCjxjb2RlPntmcHN9PC9jb2RlPiAodGF1eCBkZSByYWZyYcOuY2hpc3NlbWVudCBjb25maWd1csOpKSwKPGNvZGU+e2lucHV0fTwvY29kZT4gKGZpY2hpZXJzIGVudHJhbnRzKQo8Y29kZT57dmlkZW9jb2RlY308L2NvZGU+IChjb2RlYyB2aWTDqW8gY29uZmlndXLDqSDDoCB1dGlsaXNlcikKPGNvZGU+e3RocmVhZHN9PC9jb2RlPiAobm9tYnJlIGRlIHRocmVhZHMgY29uZmlndXLDqXMgw6AgdXRpbGlzZXIpCjxjb2RlPntiaXRyYXRlfTwvY29kZT4gKGTDqWJpdCBiaW5haXJlIGNvbmZpZ3Vyw6kgw6AgdXRpbGlzZXIpCjxjb2RlPntjb250YWluZXJmb3JtYXR9PC9jb2RlPiAoZm9ybWF0IGRlIGNvbnRlbmV1ciBjb25maWd1csOpIMOgIHV0aWxpc2VyKQo8Y29kZT57ZmlsdGVyc308L2NvZGU+IChjaGHDrm5lIGRlIGZpbHRyZXMgcG91ciBsZSBtaXJvaXIvcm90YXRpb24gZXQgbGUgZmlsaWdyYW5lKQo8Y29kZT57b3V0cHV0fTwvY29kZT4gKGZpY2hpZXIgZGUgc29ydGllKS4gICAgICAgIAAKTGUgU3VpdmkgZCdVdGlsaXNhdGlvbiBBbm9ueW1lIGVzdCA8c3Ryb25nIGNsYXNzPSJ0ZXh0LWRhbmdlciI+ZMOpc2FjdGl2w6k8L3N0cm9uZz4KICAgIAAKTGUgU3VpdmkgZCdVdGlsaXNhdGlvbiBBbm9ueW1lIGVzdCA8c3Ryb25nIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPmFjdGl2w6k8L3N0cm9uZz4uCiAgICAACkNvbnRyw7RsZSBkJ2FjY8OocyA8c3Ryb25nIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPmTDqXNhY3RpdsOpPC9zdHJvbmc+LgogICAgAApDb250csO0bGUgZCdhY2PDqHMgPHN0cm9uZyBjbGFzcz0idGV4dC1zdWNjZXNzIj5hY3RpdsOpPC9zdHJvbmc+CiAgICAACkwnZXh0ZW5zaW9uIExpc3RlIE5vaXJlIGVzdCA8c3Ryb25nIGNsYXNzPSJ0ZXh0LWRhbmdlciI+aW5hY3RpdmU8L3N0cm9uZz4uCiAgICAACkwnZXh0ZW5zaW9uIExpc3RlIE5vaXJlIGVzdCA8c3Ryb25nIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPmFjdGl2ZTwvc3Ryb25nPi4KICAgIAAKPHA+PHN0cm9uZz5PY3RvUHJpbnQgZXN0IGVuIGNvdXJzIGQnaW1wcmVzc2lvbiwgbGVzIG1pc2VzIMOgIGpvdXIgc29udCBkw6lzYWN0aXbDqWVzLjwvc3Ryb25nPiA8L3A+CjxwPiBMJ2V4w6ljdXRpb24gZGUgbWlzZXMgw6Agam91ciBuJ2VzdCBwYXMgcHJpc2UgZW4gY2hhcmdlIGxvcnMgZGUgbCdpbXByZXNzaW9uIGFmaW4gZGUgbmUgcGFzIHJpc3F1ZXIgZGUgcGVydHVyYmVyIGxlIHRyYXZhaWwgZCdpbXByZXNzaW9uLgpWZXVpbGxleiBsYWlzc2VyIGzigJlpbXByZXNzaW9uIHNlIHRlcm1pbmVyIGF2YW50IGTigJllc3NheWVyIGRlIG1ldHRyZSDDoCBqb3VyLjwvcD4KAAo8cD4KICAgICAgICAgPHN0cm9uZz5PY3RvUHJpbnQgcydleMOpY3V0ZSBzdXIgdW4gc3lzdMOobWUgbGltaXTDqSwgbGVzIG1pc2VzIMOgIGpvdXIgc29udCBkw6lzYWN0aXbDqWVzLjwvc3Ryb25nPgogICAgIDwvcD4KICAgICA8cD4KICAgICAgICAgUG91ciByw6lkdWlyZSBsYSBwcm9iYWJpbGl0w6kgZGUgcmVuY29udHJlciBkZXMgcHJvYmzDqG1lcyBkZSBtaXNlIMOgIGpvdXIgc3VyIGRlcyBzeXN0w6htZXMgbGltaXTDqXMgZXQgZG9uYyBwb3RlbnRpZWxsZW1lbnQgaW5zdGFibGVzCiAgICAgICAgIGNvbW1lIHZ1IGRhbnMgbGUgcGFzc8OpLCBPY3RvUHJpbnQgbmUgcHJlbmQgcGFzIGVuIGNoYXJnZSBsYSBtaXNlIMOgIGpvdXIgZGFucyBkZSB0ZWxsZXMgY29uZGl0aW9ucy4gVmV1aWxsZXogY29ycmlnZXIgbGUgcHJvYmzDqG1lIGFjdHVlbAogICAgICAgICBhdmFudCBkJ2Vzc2F5ZXIgZGUgbWV0dHJlIMOgIGpvdXIuIEpldGV6IHVuIMWTaWwgw6AgbCdhdmVydGlzc2VtZW50IGFmZmljaMOpIGRhbnMgbGEgYmFycmUgZGUgbmF2aWdhdGlvbiBwb3VyIHNhdm9pciBjZSBxdWkgbmUKICAgICAgICAgdmEgcGFzIGV0IHBvdXIgb2J0ZW5pciBkZXMgY29uc2VpbHMgc3VyIGxhIGZhw6dvbiBkZSByw6lzb3VkcmUgbGUgcHJvYmzDqG1lLgogICAgIDwvcD4KICAgICA8cD4KICAgICAgICAgRW4gc2F2b2lyIHBsdXMgw6AgY2Ugc3VqZXQgZ3LDomNlIMOgIDxhIGhyZWY9Imh0dHBzOi8vZmFxLm9jdG9wcmludC5vcmcvcGktaXNzdWVzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5sYSBGQVE8L2E+LgogICAgIDwvcD4KAAogICA8cD48c3Ryb25nPkwnZXNwYWNlIGRpc3F1ZSBkaXNwb25pYmxlIGVzdCBpbnN1ZmZpc2FudCBwb3VyIGV4w6ljdXRlciB1bmUgbWlzZSDDoCBqb3VyLjwvc3Ryb25nPjwvcD4KICAgPHA+IFBvdXIgcsOpZHVpcmUgbGEgcHJvYmFiaWxpdMOpIGRlIHJlbmNvbnRyZXIgZGVzIHByb2Jsw6htZXMgZGUgbWlzZSDDoCBqb3VyIGVuIHJhaXNvbiBkJ3VuIGVzcGFjZSBkaXNxdWUgaW5zdWZmaXNhbnQsIE9jdG9QcmludCBuw6ljZXNzaXRlIHVuIG1pbmltdW0gZGUgJShtaW5fZnJlZV9zdG9yYWdlKXMgZXNwYWNlIGRpc3F1ZSBsaWJyZSDDoCBkaXZlcnMgZW5kcm9pdHM6IDwvcD4KAAogICAgPHA+PHN0cm9uZz5DZXR0ZSB2ZXJzaW9uIGRlIGwnZW52aXJvbm5lbWVudCBQeXRob24gbidlc3QgcGFzIHByaXNlIGVuIGNoYXJnZSBwb3VyIGxlcyBtaXNlcyDDoCBqb3VyIGRpcmVjdGVzLjwvc3Ryb25nPiA8L3A+CjxwPiBQb3VyIHLDqWR1aXJlIGxlcyByaXNxdWVzIGRlIHByb2Jsw6htZXMgZGUgbWlzZSDDoCBqb3VyIGRhbnMgZGVzIGVudmlyb25uZW1lbnRzIG9ic29sw6h0ZXMsIGxlcyB2ZXJzaW9ucyBtaW5pbWFsZXMgc3VpdmFudGVzIHNvbnQgcmVxdWlzZXMgcG91ciB1dGlsaXNlciBjZSBwcm9ncmFtbWUgZGUgbWlzZSDDoCBqb3VyLCBwb3VyIG1ldHRyZSDDoCBqb3VyIE9jdG9QcmludCBvdSB0b3VzIGxlcyBleHRlbnNpb25zIGluc3RhbGzDqWVzOjwvcD4KAAo8cD4gPHN0cm9uZz5Wb3VzIGV4w6ljdXRleiB1bmUgdmVyc2lvbiBub24gY29tbWVyY2lhbGUgZGUgT2N0b1ByaW50IG1haXMgdm91cyBlZmZlY3R1ZXogbGUgc3VpdmkgZGVzIHZlcnNpb25zIGRlIE9jdG9QcmludC48L3N0cm9uZz48L3A+PHA+IFZvdXMgdm91ZHJleiBwcm9iYWJsZW1lbnQgcXVlIE9jdG9QcmludCBzdWl2ZSBsYSB2ZXJzaW9uIGRlIGTDqXZlbG9wcGVtZW50IGNvcnJlc3BvbmRhbnRlIMOgIGxhIHBsYWNlLiBTaSB2b3VzIGF2ZXogdW4gZG9zc2llciBkZSBwYWllbWVudCBsb2NhbCBkZSBPY3RvUHJpbnQsIGJhc2N1bMOpIHZlcnMgdW5lIGF1dHJlIGJyYW5jaGUsPHN0cm9uZz5sZSBwYXNzZXIgYXUgc3VpdmkgIkNvbW1pdCI8L3N0cm9uZz4gcydlbiBjaGFyZ2VyYS4gU2lub24sIHZldWlsbGV6IGNvbnN1bHRlciBsYSA8YSBocmVmPSJodHRwOi8vZG9jcy5vY3RvcHJpbnQub3JnL2VuL21hc3Rlci9idW5kbGVkcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+RG9jdW1lbnRhdGlvbjwvYT4uIDwvcD4KAAogICAgPHA+VmV1aWxsZXogY29uc3VsdGVyIDxhIGhyZWY9Imh0dHBzOi8vZmFxLm9jdG9wcmludC5vcmcvaW5zdWZmaWVuY3QtZGlzay1zcGFjZSIgdGFyZ2V0PSJfYmxhbmsiPmNldHRlIGVudHLDqWUgZGUgbGEgRkFRIHN1ciBsYSBtYW5pw6hyZSBkZSBwcm9jw6lkZXI8L2E+LjwvcD4KAAogICAgPHA+UydpbCB2b3VzIHBsYcOudCBqZXRlciB1biDFk2lsIMOgIGxhIEZBUSA6IDxhIGhyZWY9Imh0dHBzOi8vZmFxLm9jdG9wcmludC5vcmcvdW5zdXBwb3J0ZWQtcHl0aG9uLWVudmlyb25tZW50IiB0YXJnZXQ9Il9ibGFuayI+IHN1ciBsYSBmYcOnb24gZGUgcHJvY8OpZGVyPC9hPi48L3A+CgAKPHN0cm9uZz5Qb3VyIHZvdXMgcHJvdMOpZ2VyIGRlIHPDqXbDqHJlcyBmYWlsbGVzIGNvbm51ZXMgYXZlYyBjZXJ0YWluZXMgZXh0ZW5zaW9uczwvc3Ryb25nPiwgT2N0b1ByaW50IHN1cHBvcnRlIHVuZSBMaXN0ZSBOb2lyZSBjZW50cmFsaXPDqWUgZCdleHRlbnNpb25zIGFmaW4gZGUgbGVzIGTDqXNhY3RpdmVyIGF1dG9tYXRpcXVlbWVudCBhdmFudCBxdWUgY2VzIHZlcnNpb25zIG4naW50ZXJmw6hyZW50IGF2ZWMgbGUgZm9uY3Rpb25uZW1lbnQgbm9ybWFsIGRlIHZvdHJlIHN5c3TDqG1lLgoAClBhciBkw6lmYXV0LCBPY3RvUHJpbnQgdXRpbGlzZSB1bmUgTGlzdGUgbm9pcmUgZCdleHRlbnNpb25zIGjDqWJlcmfDqWUgc3VyIDxjb2RlPnBsdWdpbnMub2N0b3ByaW50Lm9yZy9ibGFja2xpc3QuanNvbjwvY29kZT4sIHBvdXIgbGFxdWVsbGUgZXhpc3RlIHVuZSB2ZXJzaW9uIHBsdXMgbGlzaWJsZSBwYXIgdW4gaHVtYWluIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5pY2k8L2E+CgAKTcOqbWUgYXZlYyBPY3RvUHJpbnQgZCdpbnN0YWxsw6ksIDxzdHJvbmcgY2xhc3M9InRleHQtZXJyb3IiPnZvdXMgbmUgZGV2ZXogamFtYWlzIGxhaXNzZXIgdm90cmUgaW1wcmltYW50ZSBmb25jdGlvbm5lciBzYW5zIHN1cnZlaWxsYW5jZTwvc3Ryb25nPi4gTCfDqWxlY3Ryb25pcXVlIGRlcyBpbXByaW1hbnRlcyBncmFuZCBwdWJsaWMgcGV1dCBwYXJmb2lzLCBwcmVuZHJlIGZldSwgYWxvcnMgcmVzdGV6IHByb2NoZSBvdSBkZW1hbmRleiDDoCBxdWVscXUndW4gZCdhdXRyZSBkZSByZXN0ZXIgc3VmZmlzYW1tZW50IHByb2NoZSBwb3VyIGludGVydmVuaXIgcGh5c2lxdWVtZW50IGVuIGNhcyBkZSBwYW5uZSBjYXRhc3Ryb3BoaXF1ZQoACkVuZmluLCB2ZXVpbGxleiBkw6ljaWRlciBkJ2FjdGl2ZXIgb3UgZGUgZMOpc2FjdGl2ZXIgbGUgY29udHLDtGxlIGRlIGNvbm5lY3Rpdml0w6kuIFZvdXMgcG91dmV6IGNoYW5nZXIgbGEgY29uZmlndXJhdGlvbiDDoCAgIHRvdXQgbW9tZW50IHZpYSBQYXJhbcOodHJlcyA+IFNlcnZldXIgZGlyZWN0ZW1lbnQgZGVwdWlzIE9jdG9QcmludC4KAApQb3VyIGxlcyBkw6l0YWlscyBzdXIgY2UgcXVpIGVzdCBsZSBzdWl2aSwgdmV1aWxsZXogdm91cyByZXBvcnRlciDDoCA8YSBocmVmPSJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmciIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRyYWNraW5nLm9jdG9wcmludC5vcmcgZXQgw6lnYWxlbWVudCBsYSA8YSBocmVmPSJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmcvcHJpdmFjeSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UG9saXRpcXVlIGRlIENvbmZpZGVudGlhbGl0w6kgc3VyIHRyYWNraW5nLm9jdG9wcmludC5vcmc8L2E+LgoAClMnaWwgZXN0IGTDqXNhY3RpdsOpIE9jdG9QcmludCBjb25zaWTDqXJlcmEgcXVlIHZvdHJlIGNvbm5leGlvbiDDoCBpbnRlcm5ldCBmb25jdGlvbm5lIHRvdWpvdXJzLgpTaSBjZWxhIG4nZXN0IGVuIGZhaXQgcGFzIGxlIGNhcywgbGUgZMOpbWFycmFnZSBkdSBzZXJ2ZXVyLCBsYSB2w6lyaWZpY2F0aW9uIGRlcyBtaXNlcyDDoCBqb3VyIG91IGF1dHJlcyBwZXV2ZW50IHByZW5kcmUgcGx1cyBkZSB0ZW1wcy4KAApTaSBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIGNvbm5lY3Rpdml0w6kgZXN0IGFjdGl2w6llLCBPY3RvUHJpbnQgdsOpcmlmaWVyYSByw6lndWxpw6hyZW1lbnQgcydpbCBlc3QgY29ubmVjdMOpIMOgIEludGVybmV0LgpDZWNpIGVzdCA8c3Ryb25nPnV0aWxlIHBvdXIgw6l2aXRlciBsZXMgb3DDqXJhdGlvbnMgZ291cm1hbmRlcyBlbiByZXNzb3VyY2VzIDwvc3Ryb25nPih0ZWxsZXMgcXVlIGxhIHJlY2hlcmNoZSBkZSBtaXNlcyDDoCBqb3VyKSBzJ2lsIGVzdCDDqXZpZGVudCBxdSdlbGxlcyBuZSByw6l1c3Npcm9udCBwYXMgZGUgdG91dGUgZmHDp29uLgoAClNpIHZvdXMgc291aGFpdGV6IMOpZ2FsZW1lbnQgdsOpcmlmaWVyIHNpIGxhIHLDqXNvbHV0aW9uIGRlcyBub21zIGZvbmN0aW9ubmUgKGZvcnRlbWVudCByZWNvbW1hbmTDqSksIGTDqWZpbmlzc2V6IHVuIG5vbSBkJ2jDtHRlIHBvdXIgdsOpcmlmaWVyIGxhIHLDqXNvbHV0aW9uIGR1IG5vbS4gU2kgdm91cyBuZSBzYXZleiBwYXMgY2UgcXVlIHZvdXMgZGV2ZXogZMOpZmluaXIgaWNpLCBsYSB2YWxldXIgcGFyIGTDqWZhdXQgKGRvbWFpbmUgZGUgT2N0b1ByaW50KSBkZXZyYWl0IGZvbmN0aW9ubmVyLiBTaSB2b3VzIG5lIHNvdWhhaXRleiBwYXMgZWZmZWN0dWVyIGRlcyBjb250csO0bGVzIGRlIHLDqXNvbHV0aW9uIHLDqWd1bGllcnMgZW4gcGx1cyBkdSAgY29udHLDtGxlIGfDqW7DqXJhbCBkZSBsYSBjb25uZWN0aXZpdMOpLCBsYWlzc2V6IGxlIGNoYW1wIHZpZGUuCgAKSWwgc2VtYmxlcmFpdCBxdWUgT2N0b1ByaW50IG4nYSBhY3R1ZWxsZW1lbnQgYXVjdW5lIGNvbm5leGlvbiDDoCBpbnRlcm5ldC4gSWwgZXN0IGRvbmMgaW1wb3NzaWJsZSBkJ2luc3RhbGxlciBsYSBub3V2ZWxsZSBleHRlbnNpb24gZGVwdWlzIGxlIHLDqXBlcnRvaXJlIGRlcyBleHRlbnNpb25zIG91IMOgIHBhcnRpciBkZXMgVVJMLgoACk9jdG9wcmludCBlc3QgcHLDqS1jb25maWd1csOpIHBvdXIgZWZmZWN0dWVyIGxhIHbDqXJpZmljYXRpb24gZGUgbGEgY29ubmVjdGlvbiB0b3V0ZXMgbGVzIDE1IG1pbnV0ZXMuIFZvdXMgcG91dmV6IGNoYW5nZXIgY2V0dGUgdmFsZXVyIGljaS4KAApPY3RvUHJpbnQgZXN0IHByw6ktY29uZmlndXLDqSBwb3VyIHV0aWxpc2VyIGxlIHNlcnZldXIgRE5TIGRlIEdvb2dsZSA8Y29kZT44LjguOC44PC9jb2RlPiwgcG9ydCA1MyBwb3VyIGxhIHbDqXJpZmljYXRpb24gZGUgbGEgY29ubmVjdGlvbiAoc2kgZWxsZSBlc3QgYWN0aXbDqWUpLiBTaSB2b3VzIG5lIHNvdWhhaXRleiBwYXMgbCd1dGlsaXNlciwgZMOpZmluaXNzZXogbCdhZHJlc3NlIElQIGV0IGxlIHBvcnQgZCd1biBhdXRyZSBzZXJ2ZXVyIGVuIGxpZ25lIGRlIGNvbmZpYW5jZSBldCBxdWkgZXN0IGZvcnRlbWVudCBkaXNwb25pYmxlLgoAClZldWlsbGV6IGNvbmZpZ3VyZXIgbGUgPHN0cm9uZz5kb3NzaWVyIGRlIHNvcnRpZTwvc3Ryb25nPiBkZSBPY3RvUHJpbnQsIHNpbm9uIGNldHRlIGV4dGVuc2lvbiBuZSBwb3VycmEgcGFzIHNlIG1ldHRyZSDDoCBqb3VyLiBDbGlxdWV6IHN1ciBsZSBib3V0b24gPGkgY2xhc3M9ImZhcyBmYS13cmVuY2giPjwvaT4gcG91ciBsZSBmYWlyZS4gUmVwb3J0ZXogdm91cyDDoCBsYSA8YSBocmVmPSJodHRwczovL2RvY3Mub2N0b3ByaW50Lm9yZy9lbi9tYXN0ZXIvYnVuZGxlZHBsdWdpbnMvc29mdHdhcmV1cGRhdGUuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPkRvY3VtZW50YXRpb248L2E+LgoAClZldWlsbGV6IGVudmlzYWdlciA8c3Ryb25nPjxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5kZSBzb3V0ZW5pciBsZSBkw6l2ZWxvcHBlbWVudCBlbiBjb3VycyBkZSBPY3RvUHJpbnQ8L2E+PC9zdHJvbmc+LCAgcXVpIG5lIHBldXQgY29udGludWVyIGF2ZWMgbGUgZmluYW5jZW1lbnQgZCd1dGlsaXNhdGV1cnMgY29tbWUgdm91cyAhIFZvdXMgcG91dmV6IMOpZ2FsZW1lbnQgdHJvdXZlciBjZSBsaWVuIGRhbnMgbGEgYm/DrnRlIGRlIGRpYWxvZ3VlICLDgCBwcm9wb3MgZGUiPGJyPi4KIDxzdHJvbmc+bWVyY2kgITwvc3Ryb25nPgoACkNob2lzaXNzZXogcydpbCBmYXV0IGF1dG9yaXNlciBsYSByw6ljdXDDqXJhdGlvbiBldCBsJ3V0aWxpc2F0aW9uIGRlIGNldHRlIExpc3RlIE5vaXJlIGNlbnRyYWxpc8OpZSBhdSBwcm9jaGFpbiBsYW5jZW1lbnQgZHUgc2VydmV1ci4KVm91cyBwb3V2ZXogbW9kaWZpZXIgY2UgY2hvaXggw6AgdG91dCBtb21lbnQgZGFucyBQYXJhbcOodHJlcyA+IFNlcnZldXIgZGlyZWN0ZW1lbnQgZGVwdWlzIE9jdG9QcmludC4KAApMZSBtb2RlIHNhbnMgw6ljaGVjIGVzdCBhY3RpZi4gVG91cyBsZXMgZXh0ZW5zaW9ucyB0aWVycyBzb250IGTDqXNhY3RpdsOpZXMgZXQgbmUgcGV1dmVudCBwYXMgw6p0cmUgYWN0aXbDqWVzLiBMJ2luc3RhbGxhdGlvbiBkZXMgcGFja2FnZXMgZGUgY2V0dGUgZXh0ZW5zaW9uIGVzdCBkw6lzYWN0aXbDqWUuCgAKICAgQ2VydGFpbmVzIGV4dGVuc2lvbnMgbG9ycyBkZSBsYSBkZXJuacOocmUgcmVzdGF1cmF0aW9uIG4nb250IHBhcyBwdSDDqnRyZSBpZGVudGlmacOpZXMgZXQgZG9uYyBwYXMgaW5zdGFsbMOpZXMgYXV0b21hdGlxdWVtZW50LgogICBWZXVpbGxleiBsZXMgaW5zdGFsbGVyIG1hbnVlbGxlbWVudC4gRWxsZXMgc29udCByw6lwZXJ0b3Jpw6llcyBjaS1kZXNzb3VzLCB5IGNvbXByaXMgbGV1cnMgcGFnZXMgZCdhY2N1ZWlsIGTDqWNsYXLDqWVzOgogICAACk1lcmNpIGQnYXZvaXIgaW5zdGFsbMOpIE9jdG9QcmludCAhCgAKTGEgY29tbWFuZGUgPGNvZGU+IHBpcCA8L2NvZGU+IG4nYSBwYXMgcHUgw6p0cmUgdHJvdXbDqWUgb3UgbmUgZm9uY3Rpb25uZSBwYXMgY29ycmVjdGVtZW50IHBvdXIgY2V0dGUgaW5zdGFsbGF0aW9uIGRlIE9jdG9QcmludCAtIHZldWlsbGV6IGNvbnN1bHRlciBsZXMgbG9ncyBwb3VyIHBsdXMgZGUgZMOpdGFpbHMgZXQgc2kgbsOpY2Vzc2FpcmUgY29uZmlndXJlciBtYW51ZWxsZW1lbnQuIEF1Y3VuZSBpbnN0YWxsYXRpb24gZXQgZMOpc2luc3RhbGxhdGlvbiBkZXMgcGFja2FnZXMgZGUgY2V0dGUgZXh0ZW5zaW9uIG4nZXN0IHBvc3NpYmxlIHRhbnQgcXVlIDxjb2RlPiBwaXAgPC9jb2RlPiBuJ2VzdCBwYXMgZGlzcG9uaWJsZS4KAApMZSBzeXN0w6htZSBzdXIgbGVxdWVsIE9jdG9QcmludCBzJ2V4w6ljdXRlIGVzdCBhY3R1ZWxsZW1lbnQgbGltaXTDqS4gUG91ciBjZXR0ZSByYWlzb24sIGlsIG4nZXN0IHBhcyBwb3NzaWJsZSBkJ2luc3RhbGxlciBkZSBub3V2ZWF1eAogICAgIHBsdWdpbnMgYWZpbiBkJ8Opdml0ZXIgZCfDqXZlbnR1ZWxzIHByb2Jsw6htZXMgY2F1c8OpcyBwYXIgbCdpbnN0YWJpbGl0w6kgZHUgc3lzdMOobWUuIExpcmUgbGEgc3VpdGUgw6AKICAgICBjZSBwcm9wb3MgZGFucyA8YSBocmVmPSJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3BpLWlzc3VlcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+bGEgRkFRPC9hPi4KAApJbCBzZW1ibGUgeSBhdm9pciBldSB1bmUgZXJyZXVyIGxvcnMgZGUgbGEgcsOpY3Vww6lyYXRpb24gZGVzIGRvbm7DqWVzIGR1IHBsdWdpbiBkZXB1aXMgbCdhcnJpw6hyZS1wbGFuLiBWZXVpbGxleiBsZSBzaWduYWxlcgogICAgIGRhbnMgbGUgc3VpdmkgZGVzIGJvZ3VlcyBldCBhc3N1cmV6LXZvdXMgZCdpbmNsdXJlIHRvdXRlcyBsZXMgaW5mb3JtYXRpb25zIGRlbWFuZMOpZXMuCgAKQ2V0IGFzc2lzdGFudCB2b3VzIGd1aWRlcmEgw6AgdHJhdmVycyBsZXMgZGVybmnDqHJlcyDDqXRhcGVzIHBvdXIgcXVlIHZvdHJlIGluc3RhbmNlIGRlIE9jdG9QcmludCBzb2l0IGNvbmZpZ3Vyw6llIGV0IHByw6p0ZSDDoCBmb25jdGlvbm5lci4gVm91cyBpbXByaW1lcmV6IGVuIHVuIHJpZW4gZGUgdGVtcHMKAApQb3VyIHZvdXMgcHJvdMOpZ2VyIGRlIHPDqXbDqHJlcyBmYWlsbGVzIGNvbm51ZXMgYXZlYyBjZXJ0YWluZXMgZXh0ZW5zaW9ucywgT2N0b1ByaW50IHN1cHBvcnRlIHVuZSBMaXN0ZSBOb2lyZSBjZW50cmFsaXPDqWUgZCdleHRlbnNpb25zIHBvdXIgZMOpc2FjdGl2ZXIgYXV0b21hdGlxdWVtZW50IGxlcyB2ZXJzaW9ucyBkZSBjZXMgZXh0ZW5zaW9ucyBhdmFudCBxdSdlbGxlcyBuJ2ludGVyZsOocmVudCAgYXZlYyBsZSBmb25jdGlvbm5lbWVudCBub3JtYWwgZGUgdm90cmUgc3lzdMOobWUuIFRvdXQgZW4gdm91cyBsYWlzc2FudCBsYSBwb3NzaWJpbGl0w6kgZGUgZMOpc2luc3RhbGxlciBvdSBtZXR0cmUgw6Agam91ciB2ZXJzIHVuZSBub3V2ZWxsZSB2ZXJzaW9uLgoACkFwcsOocyB0b3V0IGNlIHF1aSBhIHB1IMOqdHJlIGRpdCwgPHN0cm9uZz5Cb25uZSBjaGFuY2UgcG91ciB2b3MgaW1wcmVzc2lvbnM8L3N0cm9uZz4hCgAKICAgIEVuIG91dHJlLDxzdHJvbmcgY2xhc3M9InRleHQtZXJyb3IiPiB2b3VzIG5lIGRldnJpZXogamFtYWlzIHJlbmRyZSB2b3RyZSBpbnN0YW5jZSBPY3RvUHJpbnQgZGlzcG9uaWJsZSBwb3VyIHRvdXQgbGUgbW9uZGUgc3VyIEludGVybmV0IDwvc3Ryb25nPiwgbcOqbWUgYXZlYyBsZSBjb250csO0bGUgZCdhY2PDqHMgQWN0aXbDqS4gVm90cmUgaW5zdGFuY2UgPGVtPnBldXQtw6p0cmU8L2VtPiBkw6ljb3V2ZXJ0ZSwgZXQgbGVzIG1hdXZhaXNlcyBwZXJzb25uZXMgPGVtPnBldXZlbnQ8L2VtPiBlc3NheWVyIGQnZW4gYWJ1c2VyLiBOZSBwcmVuZXogcGFzIGRlIHJpc3F1ZSw8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5VdGlsaXNleiB1biBtb3llbiBzw7tyIGTigJlhY2PDqWRlciDDoCBPY3RvcHJpbnQgw6AgZGlzdGFuY2U8L2E+LgoACiAgICBWb3RyZSBpbnN0YWxsYXRpb24gT2N0b1ByaW50IGVzdCBtYWludGVuYW50IGNvbmZpZ3Vyw6llIGV0IHByw6p0ZSDDoCBmb25jdGlvbm5lci4KAAo8cD4gTGUgc3VpdmkgZGUgbOKAmXV0aWxpc2F0aW9uIGFub255bWUgZm91cm5pdCBkZXMgaW5mb3JtYXRpb25zIHByw6ljaWV1c2VzIHN1ciBsZSBub21icmUgZOKAmWluc3RhbmNlcyB1dGlsaXNhbnQgbGVzIHZlcnNpb25zIGRlIE9jdG9QcmludCwgcydpbHMgcsOpdXNzaXNzZW50IGxlcyB0cmF2YXV4IGQnaW1wcmVzc2lvbiBldCBkaXZlcnMgYXV0cmVzIGluZGljYXRldXJzLjwvcD4KPHA+RW4gbOKAmWFjdGl2YW50LCB2b3VzIGFpZGV6IMOgIGlkZW50aWZpZXIgbGVzIHByb2Jsw6htZXMgYXZlYyBsZXMgbm91dmVsbGVzIHZlcnNpb25zIGV0IGxlcyBjYW5kaWRhdHMgw6AgbGEgcHVibGljYXRpb24gZMOocyBsZSBkw6lidXQsIGV0IMOgIG1pZXV4IGFkYXB0ZXIgbGUgZMOpdmVsb3BwZW1lbnQgZnV0dXIgZGUgT2N0b1ByaW50IMOgIHNvbiB1dGlsaXNhdGlvbiByw6llbGxlLjwvcD4KAAo8cD4gTGUgc3VpdmkgZGVzIGVycmV1cnMgZW50cmHDrm5lcmEgbCdlbnZvaSBkZXMgZXhjZXB0aW9ucyBjb25zaWduw6llcyBzdXIgbGUgc2VydmV1ciBldCBsJ2ludGVyZmFjZSBkdSBuYXZpZ2F0ZXVyLgogICAgY2hleiBPY3RvUHJpbnQgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVyZXIiPiBFeGVtcGxlIFNlbnRpbmVsbGUgPC9hPjwvcD4KPHA+IEVuIGwnYWN0aXZhbnQsIHZvdXMgYWlkZXogw6AgcmVjdWVpbGxpciBkZXMgaW5mb3JtYXRpb25zIGTDqXRhaWxsw6llcyBzdXIgbGEgY2F1c2UgZGVzIGJvZ3VlcyBvdSBkJ2F1dHJlcyBwcm9ibMOobWVzLiBDZWNpIGVzdCBwYXJ0aWN1bGnDqHJlbWVudCBwcsOpY2lldXggw6AgbGEgcHVibGljYXRpb24gZGVzIGNhbmRpZGF0cywgY+KAmWVzdCBwb3VycXVvaSBjZSBwbHVnaW4gdm91cyBpbnZpdGVyYSDDqWdhbGVtZW50IMOgIGFjdGl2ZXIgbGUgc3VpdmkgZGVzIGVycmV1cnMgc+KAmWlsIGTDqXRlY3RlIHF1ZSB2b3VzIMOqdGVzIGFib25uw6kgw6AgdW4gY2FuYWwgZGUgZGlmZnVzaW9uIFJDLjwvcD4KPHA+IEFjdGl2ZXogY2V0dGUgb3B0aW9uIHNpIHZvdXMgZXjDqWN1dGV6IHVuZSB2ZXJzaW9uIGNhbmRpZGF0ZSBvdSBzaSB2b3VzIMOqdGVzIGludml0w6kgw6AgbGUgZmFpcmUgbG9ycyBkdSBkw6lib2dhZ2UgZCd1biBwcm9ibMOobWUgcXVlIHZvdXMgYXZleiBzaWduYWzDqS48L3A+CgAKPHA+IEwnZXh0ZW5zaW9uIEVycm9yIFRyYWNraW5nIHV0aWxpc2UgdW5lIGluc3RhbmNlIFNlbnRpbmVsbGUgYWltYWJsZW1lbnQgZm91cm5pZSBwYXIgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVyZXIiPnNlbnRyeS5pbzwvYT4uIFBvdXIgcGx1cyBkJ2luZm9ybWF0aW9ucyBzdXIgbGV1ciBzZXJ2aWNlIHZldWlsbGV6IHZvdXMgcsOpZsOpcmVyIMOgIGxldXIgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vc2VjdXJpdHkvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVyZXIiPiBEb2N1bWVudGF0aW9uIGRlIHPDqWN1cml0w6kgZXQgZGUgY29uZm9ybWl0w6kgPC9hPmV0IGxldXIgPGEgaHJlZj0iaHR0cHM6Ly9zZW50cnkuaW8vcHJpdmFjeS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+IFBvbGl0aXF1ZSBkZSBjb25maWRlbnRpYWxpdMOpPC9hPi48L3A+CgAiPHN0cm9uZz4lKGFwcClzPC9zdHJvbmc+ImEgZGVtYW5kw6kgbCdhY2PDqHMgcG91ciBjb250csO0bGVyIE9jdG9QcmludCB2aWEgbCdBUEkuAENvbW1hbmRlICJIZWxsbyIAIlBvdXJxdW9pID8iACUoY291bnQpZCBhY3Rpb24gcHLDqWPDqWRlbnRlACUoY291bnQpZCAgYWN0aW9uIHByw6ljw6lkZW50ZS4uLgAlKGRheXMpZCBqb3VyACUoZGF5cylkIGpvdXJzACUoZGF5cylkLjUgam91cnMAJShob3VyKTAyZDolKG1pbnV0ZSkwMmQ6JShzZWNvbmQpMDJkACUoaG91cnMpZCBoZXVyZQAlKGhvdXJzKWQgaGV1cmVzACUoaG91cnMpZC41IGhldXJlcwAlKG1pbnV0ZXMpZCBtaW5pACUobWludXRlcylkIG1pbnV0ZXMAJShuYW1lKXMgOiAlKHZlcnNpb24pcwAlKHNlY29uZHMpZCBzACsxAC0xAC4uLiBkZXB1aXMgbCdVUkwALi4uIMOgIHBhcnRpciBkJ3VuIGZpY2hpZXIgdMOpbMOpY2hhcmfDqQAuLi4gZGVwdWlzIGxlIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5kw6lww7R0IGRlcyBleHRlbnNpb25zPC9hPgAxIGpvdXIAMSBoZXVyZQAyIG1pbnV0ZXMAM8OobWUgcGFydGllADQwIG1pbnV0ZXMANTAgbWludXRlcwA8Y29kZT5HOTA8L2NvZGU+Lzxjb2RlPkc5MTwvY29kZT4gaWdub3JlbnQgbGUgcG9zaXRpb25uZW1lbnQgcmVsYXRpZiBkZSBsJ2V4dHJ1ZGV1c2UAUHJpc2UgZW4gY2hhcmdlIGR1IHByb3RvY29sZSA8Y29kZT5vY2N1cMOpPC9jb2RlPiBkw6l0ZWN0w6llAFByaXNlIGVuIGNoYXJnZSBkdSBwcm90b2NvbGUgPGNvZGU+b2NjdXDDqTwvY29kZT4gbm9uIGTDqXRlY3TDqWUAVGFpbGxlIGR1IHRhbXBvbiA8Y29kZT5vazwvY29kZT4APGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+IGVzdCBhY3RpdsOpADxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IGVzdCBhY3RpdsOpADxwPlZvdXMgYXZleiBzw6lsZWN0aW9ubsOpIGxlIGZpY2hpZXIgPHN0cm9uZyBkYXRhLWJpbmQ9InRleHQ6IHNlbGVjdGVkRmlsZS5uYW1lIj48L3N0cm9uZz4gcG91ciBsJ2ltcHJpbWVyIGQndW5lIHRhaWxsZSBkZSA8c3Ryb25nIGRhdGEtYmluZD0idGV4dDogZm9ybWF0U2l6ZShzZWxlY3RlZEZpbGUuc2l6ZSgpKSI+PC9zdHJvbmc+LiBFbiBmb25jdGlvbiBkZSB2b3RyZSBtYWNoaW5lLCBjZSBmaWNoaWVyIHBvdXJyYWl0IMOqdHJlIHRyb3Agdm9sdW1pbmV1eCBldCBwb3VycmFpdCBwbGFudGVyIHZvdHJlIG5hdmlnYXRldXIuPC9wPgo8cD4gU291aGFpdGV6LXZvdXMgdG91dCBkZSBtw6ptZSB2aXN1YWxpc2VyIGNlIGZpY2hpZXIgPzwvcD4APHA+IFBhciBkw6lmYXV0LCBPY3RvUHJpbnQgc2UgbWV0dHJhIMOgIGpvdXIgYXZlYyBsZXMgdmVyc2lvbnMgcHVibGnDqWVzIHZpYSA8Y29kZT5waXA8L2NvZGU+IG91IGxlcyBjb21taXRzIHBvdXNzw6lzIGRlIEdpdGh1Yi4gT2N0b1ByaW50IHBldXQgw6lnYWxlbWVudCBzZSBtZXR0cmUgw6Agam91ciB2aWEgPGNvZGU+Z2l0PC9jb2RlPiB2ZXJzIGRlcyBicmFuY2hlcyBkZSBkw6l2ZWxvcHBlbWVudCBhcmJpdHJhaXJlcywgdm91cyBkZXZleiB2w6lyaWZpZXIgbWFudWVsbGVtZW50LiBTaSB2b3VzIHZvdWxleiBsZSBmYWlyZSwgaWwgZG9pdCBjb25uYcOudHJlIHNvbiBkb3NzaWVyIGRlIHBhaWVtZW50LiBWb3VzIHBvdXZleiBjb25maWd1cmVyIGNlbGEgaWNpLjwvcD4APHA+U2kgdm91cyB1dGlsaXNleiB1bmUgdmVyc2lvbiBmaW5hbGUgZGUgT2N0b1ByaW50LCBsYWlzc2V6IGxlIHN1aXZpICJSZWxlYXNlIi4gU2kgdG91dGVmb2lzIHZvdXMgZXjDqWN1dGV6IHVuZSBhdXRyZSB2ZXJzaW9uIGxvcnMgZCd1biBwYWllbWVudCBtYW51ZWwsIHZvdXMgZGV2ZXogY29uZmlndXJlciBsZSBzdWl2aSAiUGFpZW1lbnQgbG9jYWwiLiBQb3VyIGRlcyBjYXMgcGx1cyBzcMOpY2lhdXgsIHZvdXMgcG91dmV6IHPDqWxlY3Rpb25uZXIgbGUgc3VpdmkgIkdpdGh1YiBDb21taXQiIC0gdm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IHBhcyBhdm9pciBiZXNvaW4gZGUgbGUgZmFpcmUgY2VwZW5kYW50LjwvcD4APHA+U2kgdm91cyBhdmV6IHVuZSB3ZWJjYW0sIHZvdXMgcG91dmV6IG1haW50ZW5hbnQgbGEgY29uZmlndXJlciBpY2kuPC9wPgA8cD4KICAgIFNpIHZvdXMgc291aGFpdGV6IHJlc3RhdXJlciBsYSBjb25maWd1cmF0aW9uIGQnT2N0b1ByaW50IMOgIHBhcnRpciBkJ3VuZSBzYXV2ZWdhcmRlLCBjJ2VzdCBsZSBtb21lbnQgZGUgbGUgZmFpcmUuCjwvcD4APHA+CiAgICBJbCBzZW1ibGUgcXVlIHZvdXMgbidheWV6IHBhcyBlbmNvcmUgY29uZmlndXLDqSBsZSBjb250csO0bGUgZCdhY2PDqHMsIGNlIHF1aSBlc3QgbWFpbnRlbmFudCBvYmxpZ2F0b2lyZS4gCiAgICBWZXVpbGxleiA8c3Ryb25nPmNyw6llciB1biB1dGlsaXNhdGV1ciBhdmVjIHNvbiBtb3QgZGUgcGFzc2U8L3N0cm9uZz4gcXVpIHNlcmEKICAgIGFkbWluaXN0cmF0ZXVyIGluaXRpYWwgZXQgYXVyYSB1biBhY2PDqHMgdG90YWwgw6AgbCdpbXByaW1hbnRlIGFpbnNpIHF1J2F1eCBwYXJhbcOodHJlcyBkJ09jdG9QcmludDoKPC9wPgA8cD5PY3RvUHJpbnQgcHJlbmQgZW4gY2hhcmdlIGxlcyBjb21tYW5kZXMgZXh0ZXJuZXMgYWZpbiBkZSByZWTDqW1hcnJlciBldCAvIG91IGRlIGZlcm1lciBsZSBzeXN0w6htZSAgc3VyIGxlcXVlbCBpbCBmb25jdGlvbm5lLiBWb3VzIHBvdXZleiBsZSBjb25maWd1cmVyIGljaS48L3A+ADxwPgogICAgTCc8c3Ryb25nPlVSTCBkdSBmbHV4PC9zdHJvbmc+IGVzdCBsJ1VSTCB1dGlsaXPDqWUgcGFyIE9jdG9QcmludCBwb3VyIGludMOpZ3JlcgogICAgbGUgZmx1eCBkZSBsYSB3ZWJjYW0gKHF1aSBkb2l0IMOqdHJlIHVuIGZsdXggTUpQRykgZGFucyBsJ2ludGVyZmFjZSBXZWIuCiAgICBDZWxhIGRvaXQgw6p0cmUgYWNjZXNzaWJsZSA8c3Ryb25nPiBkZXB1aXMgdm90cmUgbmF2aWdhdGV1cjwvc3Ryb25nPi4KPC9wPjwvcD4KICAgIElsIHBldXQgcydhZ2lyCiAgICA8dWw+CiAgICAgICAgPGxpPmQndW5lIFVSTCBjb21wbMOodGUoPGNvZGU+aHR0cDovL2hvc3Q6cG9ydC9wYXRoPC9jb2RlPiksPC9saT4KICAgICAgICA8bGk+dW5lIFVSTCBwYXIgZMOpZmF1dCBwb3VyIGxlIHByb3RvY29sZSB1dGlsaXPDqSBwb3VyIGFjY8OpZGVyIMOgCiAgICAgICAgICAgIGwnaW50ZXJmYWNlIHdlYiAoZS5nLiA8Y29kZT4vL2hvc3Q6cG9ydC9wYXRoPC9jb2RlPiksPC9saT4KICAgICAgICA8bGk+dW4gY2hlbWluIGFic29sdSBzdXIgbGUgbcOqbWUgaMO0dGUgcXVlIE9jdG9QcmludChlLmcuIDxjb2RlPi9hYnNvbHV0ZS9wYXRoPC9jb2RlPikgb3I8L2xpPgogICAgICAgIDxsaT51biBjaGVtaW4gcmVsYXRpZiBzdXIgbGUgbcOqbWUgaMO0dGUgcXVlIE9jdG9QcmludChlLmcuIDxjb2RlPnJlbGF0aXZlL3BhdGg8L2NvZGU+KTwvbGk+CiAgICA8L3VsPgo8L3A+PC9wPgogICAgTCc8c3Ryb25nPlVSTCBkdSBTbmFwc2hvdCA8L3N0cm9uZz5lc3QgbCdVUkwgdXRpbGlzw6llIHBhciBPY3RvUHJpbnQgcG91ciBleHRyYWlyZQogICAgZGVzIGltYWdlcyBpbmRpdmlkdWVsbGVzIGRlIGxhIHdlYmNhbSBwb3VyIGNyw6llciBkZXMgVGltZWxhcHNlLiBJbCBkb2l0IHMnYWdpcgogICAgZCd1bmUgVVJMIGFjY2Vzc2libGUgw6AgcGFydGlyIDxzdHJvbmc+ZHUgc2VydmV1ciBPY3RvUHJpbnQ8L3N0cm9uZz4uCjwvcD4APHA+IEFmaW4gY29udmVydGlyIGxlcyBjYXB0dXJlcyBkJ8OpY3JhbiBlbiBUaW1lbHBhc2UsIE9jdG9QcmludCBkb2l0IGNvbm5hw650cmUgbGUgYm9uIDxzdHJvbmc+Y2hlbWluIHBvdXIgRkZNUEVHPC9zdHJvbmc+LjwvcD4APHA+CiAgICAgVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgY29uZmlndXJlciBPY3RvUHJpbnQgPHNwYW4gZGF0YS1iaW5kPSJ0ZXh0OiBvY3RvcHJpbnREYXRhLmN1cnJlbnQiPjwvc3Bhbj4KICAgICBtYWlzIDxzcGFuIGRhdGEtYmluZD0idGV4dDogb2N0b3ByaW50RGF0YS5hdmFpbGFibGUiPjwvc3Bhbj4gZXN0IGRpc3BvbmlibGUuIEMnZXN0IGZvcnRlbWVudAogICAgIHJlY29tbWFuZMOpIGRlIG1ldHRyZSDDoCBqb3VyIHZlcnMgbGEgZGVybmnDqHJlIHZlcnNpb24gYXZhbnQgZGUgY29udGludWVyLgo8L3A+ADxwPiUocmF0aW8pZCUlIGRlcyBsaWduZXMgdHJhbnNtaXNzZW50IG9udCBkw6ljbGVuY2jDqWVzIGRlcyBkZW1hbmRlcyBkZSByZW52b2llLiBMYSBjb21tdW5pY2F0aW9uIGF2ZWMgbCdpbXByaW1hbnRlIG4nZXN0IHBhcyBmaWFibGUgZXQgdmEgZ8OpbsOpcmVyIGRlcyBhcnRlZmFjdHMgZXQgZGVzIMOpY2hlY3MuPC9wPjxwPlZldWlsbGV6IGNvbnN1bHRlciA8YSBocmVmPSclKHVybClzJyB0YXJnZXQ9J19ibGFuayc+Y2V0IGFydGljbGUgZGUgbGEgRkFRPC9hPiBwb3VyIGF2b2lyIGRlcyBjb25zZWlscyBwb3VyIHLDqXNvdWRyZSBjZSBwcm9ibMOobWUuPC9wPgA8cD48c3Ryb25nPlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHZvdXMgZMOpY29ubmVjdGVyIGRlIGwnaW1wcmltYW50ZSBwZW5kYW50IHF1J3VuZSBpbXByZXNzaW9uIGVzdCBlbiBjb3Vycy48L3N0cm9uZz48L3A+IDxwPkxlIGZhaXQgZGUgc2UgZMOpY29ubmVjdGVyIHBlbmRhbnQgcXUndW5lIGltcHJlc3Npb24gZXN0IGVuIGNvdXJzIGVtcMOqY2hlcmEgT2N0b1ByaW50IGRlIHRlcm1pbmVyIGwnaW1wcmVzc2lvbi4gU2kgdm91cyBpbXByaW1leiDDoCBwYXJ0aXIgZCd1bmUgY2FydGUgU0QgYXR0YWNow6llIGRpcmVjdGVtZW50IMOgIGwnaW1wcmltYW50ZSwgdG91dGUgdGVudGF0aXZlIGRlIHJlZMOpbWFycmVyIE9jdG9QcmludCBvdSBkZSBzZSByZWNvbm5lY3RlciDDoCBsJ2ltcHJpbWFudGUgcG91cnJhaXQgaW50ZXJyb21wcmUgbCdpbXByZXNzaW9uLjxwPgA8cD5JbCBzZW1ibGVyYWl0IHF1ZSB2b3VzIHN1aXZpZXogdW4gY2FuYWwgZGUgcHVibGljYXRpb24gT2N0b1ByaW50IFJDLiBDZSBzZXJhaXQgYmllbiBzaSB2b3VzIHBvdXZpZXogYWN0aXZlciBsZSBzaWduYWxlbWVudCBkZXMgZXJyZXVycyBhZmluIHF1ZSB0b3V0IHR5cGUgZCdlcnJldXIgcG91dmFudCBzdXJ2ZW5pciBhdmVjIHVuIFJDIHB1aXNzZSDDqnRyZSBhbmFseXPDqSBwbHVzIGZhY2lsZW1lbnQuIE1lcmNpITwvcD48cD48c21hbGw+Vm91cyB0cm91dmVyZXogcGx1cyBk4oCZaW5mb3JtYXRpb25zIHN1ciBsZSBzaWduYWxlbWVudCBkZXMgZXJyZXVycyBzb3VzIFBhcmFtw6h0cmVzPiBTdWl2aSBkZXMgZXJyZXVycy48L3NtYWxsPjwvcD4ASWwgc2VtYmxlIHF1ZSB2b3VzIHZvdXMgY29ubmVjdGlleiDDoCBPY3RvUHJpbnQgdmlhIHVuIGFjY8OocyBwdWJsaWM8L3A+LiAKPHA+Q2VsYSBlc3Qgdml2ZW1lbnQgZMOpY29uc2VpbGzDqSBzaSB2b3VzIG7igJlhdmV6IHBhcyBwcmlzIGxlcyBwcsOpY2F1dGlvbnMgYXBwcm9wcmnDqWVzLiBWb3RyZSBpbXByaW1hbnRlIGVzdCB1biBhcHBhcmVpbCBxdWUgdm91cyBuZSBkZXZyaWV6IHBhcyBkb25uZXIgYWNjw6hzIMOgIHRvdXQgbGUgbW9uZGUgc3VyIEludGVybmV0PC9wPi4gCjxwPjxzdHJvbmc+VmV1aWxsZXogY29uc3VsdGVyIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIgbm9vcGVuZXIiPmNldCBhcnRpY2xlIGRlIGJsb2c8L2E+IHBvdXIgc2F2b2lyIGNvbW1lbnQgYWNjw6lkZXIgZW4gdG91dGUgc8OpY3VyaXTDqSDDoCB2b3RyZSBpbnN0YW5jZSBPY3RvUHJpbnQgw6AgZGlzdGFuY2UuPC9zdHJvbmc+PC9wPgo8cD48c21hbGw+IFNpIHZvdXMgc2F2ZXogY2UgcXVlIHZvdXMgZmFpdGVzIG91IHNpIHZvdXMgw6p0ZXMgc8O7ciBxdWUgY2UgbWVzc2FnZSBlc3QgZXJyb27DqSBjYXIgdm91cyDDqnRlcyBzdXIgdW4gTEFOIGlzb2zDqSwgbidow6lzaXRleiBwYXMgw6AgbCdpZ25vcmVyLjwvc21hbGw+PC9wPgA8cD5QeXRob24gMiBlc3QgZW4gZmluIGRlIHZpZSBsZSAxZXIgamFudmllciAyMDIwLiBBbG9ycyBxdSdPY3RvUHJpbnQgcHJlbmQgYWN0dWVsbGVtZW50IGVuIGNoYXJnZSBsJ2V4w6ljdXRpb24gc291cyBQeXRob24gMiwgdW5lIGZ1dHVyZSB2ZXJzaW9uIHN1cHByaW1lcmEgbGEgcHJpc2UgZW4gY2hhcmdlIGV0IG7DqWNlc3NpdGVyYSBQeXRob24gMy4gVm91cyBkZXZleiBtZXR0cmUgw6Agbml2ZWF1IGTDqHMgcXVlIHBvc3NpYmxlwqAhPC9wPiA8cD5WZXVpbGxleiB2b3VzIHLDqWbDqXJlciDDoCBsYSBGQVEgcG91ciBtZXR0cmUgw6Agam91ciBsZXMgZmx1eCBkZSB0cmF2YWlsIHJlY29tbWFuZMOpc8KgOjwvcD4APHA+TGUgc2VydmV1ciBmb25jdGlvbm5lIGFjdHVlbGxlbWVudCBlbiBtb2RlIHNhbnMgw6ljaGVjLiBMZXMgZXh0ZW5zaW9ucyBldCBsZXMgbW9kdWxlcyBsaW5ndWlzdGlxdWVzIHRpZXJzIHNvbnQgZMOpc2FjdGl2w6lzIGV0IG5lIHBldXZlbnQgcGFzIMOqdHJlIGFjdGl2w6lzLjwvcD48cD5SYWlzb246ICUocmVhc29uKXM8L3A+ADxzdHJvbmc+Tm90ZTo8L3N0cm9uZz4gVm91cyBwb3VycmV6IGNoYW5nZXIgdm90cmUgY2hvaXggZXQgw6lnYWxlbWVudCBhY2PDqWRlciDDoCBkZXMgY29udHLDtGxlcyBwbHVzIGdyYW51bGFpcmVzIHZpYSBQYXJhbcOodHJlcyA+IFN1aXZpIGRlIGwndXRpbGlzYXRpb24gYW5vbnltZS4APHN0cm9uZz5DZWxhIHJlZMOpbWFycmVyYSB2b3RyZSBzZXJ2ZXVyIE9jdG9QcmludC48L3N0cm9uZz48L3A+PHA+IENldHRlIGFjdGlvbiBwZXV0IHBlcnR1cmJlciB0b3VzIGxlcyB0cmF2YXV4IGQnaW1wcmVzc2lvbiBlbiBjb3VycyAoZW4gZm9uY3Rpb24gZHUgY29udHLDtGxldXIgZGUgdm90cmUgaW1wcmltYW50ZSBldCBkZSBsYSBjb25maWd1cmF0aW9uIGfDqW7DqXJhbGUgcXVpIHBldXQgw6lnYWxlbWVudCBzJ2FwcGxpcXVlciBhdXggaW1wcmVzc2lvbnMgZXjDqWN1dMOpZXMgZGlyZWN0ZW1lbnQgw6AgcGFydGlyIGR1IHN0b2NrYWdlIGludGVybmUgZGUgdm90cmUgaW1wcmltYW50ZSkuADxzdHJvbmc+Vm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgcmVkw6ltYXJyZXIgbGUgc3lzdMOobWUuPC9zdHJvbmc+PC9wPjxwPiBDZXR0ZSBhY3Rpb24gcGV1dCBwZXJ0dXJiZXIgbGVzIHRyYXZhdXggZCdpbXByZXNzaW9uIGVuIGNvdXJzIChlbiBmb25jdGlvbiBkdSBjb250csO0bGV1ciBkZSB2b3RyZSBpbXByaW1hbnRlIGV0IGRlIGxhIGNvbmZpZ3VyYXRpb24gZ8OpbsOpcmFsZSBxdWkgcGV1dCDDqWdhbGVtZW50IHMnYXBwbGlxdWVyIGF1eCBpbXByZXNzaW9ucyBleMOpY3V0w6llcyBkaXJlY3RlbWVudCDDoCBwYXJ0aXIgZHUgc3RvY2thZ2UgaW50ZXJuZSBkZSB2b3RyZSBpbXByaW1hbnRlKS4APHN0cm9uZz5Wb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSByZWTDqW1hcnJlciBsZSBzZXJ2ZXVyIE9jdG9QcmludCBlbiBtb2RlIHNhbnMgw6ljaGVjLjwvc3Ryb25nPjwvcD48cD5DZXR0ZSBhY3Rpb24gcGV1dCBwZXJ0dXJiZXIgbGVzIHRyYXZhdXggZCdpbXByZXNzaW9uIGVuIGNvdXJzIChlbiBmb25jdGlvbiBkdSBjb250csO0bGV1ciBkZSB2b3RyZSBpbXByaW1hbnRlIGV0IGRlIGxhIGNvbmZpZ3VyYXRpb24gZ8OpbsOpcmFsZSBxdWkgcGV1dCDDqWdhbGVtZW50IHMnYXBwbGlxdWVyIGF1eCBpbXByZXNzaW9ucyBleMOpY3V0w6llcyBkaXJlY3RlbWVudCDDoCBwYXJ0aXIgZHUgc3RvY2thZ2UgaW50ZXJuZSBkZSB2b3RyZSBpbXByaW1hbnRlKS4APHN0cm9uZz5Wb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSByZWTDqW1hcnJlciBsZSBzZXJ2ZXVyIE9jdG9QcmludC48L3N0cm9uZz48L3A+PHA+IENldHRlIGFjdGlvbiBwZXV0IHBlcnR1cmJlciBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZW4gY291cnMgKGVuIGZvbmN0aW9uIGR1IGNvbnRyw7RsZXVyIGRlIHZvdHJlIGltcHJpbWFudGUgZXQgZGUgbGEgY29uZmlndXJhdGlvbiBnw6luw6lyYWxlIHF1aSBwZXV0IMOpZ2FsZW1lbnQgcydhcHBsaXF1ZXIgYXV4IGltcHJlc3Npb25zIGV4w6ljdXTDqWVzIGRpcmVjdGVtZW50IMOgIHBhcnRpciBkdSBzdG9ja2FnZSBpbnRlcm5lIGRlIHZvdHJlIGltcHJpbWFudGUpLgA8c3Ryb25nPlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGQnYXJyw6p0ZXIgbGUgc3lzdMOobWUuPC9zdHJvbmc+PC9wPjxwPiBDZXR0ZSBhY3Rpb24gcGV1dCBwZXJ0dXJiZXIgbGVzIHRyYXZhdXggZCdpbXByZXNzaW9uIGVuIGNvdXJzIChlbiBmb25jdGlvbiBkdSBjb250csO0bGV1ciBkZSB2b3RyZSBpbXByaW1hbnRlIGV0IGRlIGxhIGNvbmZpZ3VyYXRpb24gZ8OpbsOpcmFsZSBxdWkgcGV1dCDDqWdhbGVtZW50IHMnYXBwbGlxdWVyIGF1eCBpbXByZXNzaW9ucyBleMOpY3V0w6llcyBkaXJlY3RlbWVudCDDoCBwYXJ0aXIgZHUgc3RvY2thZ2UgaW50ZXJuZSBkZSB2b3RyZSBpbXByaW1hbnRlKS4AVW5lIGltcHJlc3Npb24gZXN0IGVuIGNvdXJzLiBMYSBtaXNlIMOgIGpvdXIgbmUgc2VyYSBwb3NzaWJsZSBxdSfDoCBsYSBmaW4gZGUgY2VsbGUtY2kuAFVuIHByb2ZpbCBhdmVjIGNldCBpZGVudGlmaWFudCBleGlzdGUgZMOpasOgAFVuZSByZWNvbm5leGlvbiDDoCBsJ2ltcHJpbWFudGUgZXN0IG7DqWNlc3NhaXJlIHBvdXIgcXVlIGxlcyBtb2RpZmljYXRpb25zIHByZW5uZW50IGVmZmV0LgBVbiByYWZyYWljaGlzc2VtZW50IGVzdCBuw6ljZXNzYWlyZSBwb3VyIHF1ZSBsZXMgbW9kaWZpY2F0aW9ucyBwcmVubmVudCBlZmZldC4AVW4gcmVkw6ltYXJyYWdlIGVzdCBuw6ljZXNzYWlyZSBwb3VyIHF1ZSBsZXMgbW9kaWZpY2F0aW9ucyBwcmVubmVudCBlZmZldC4AQVBJAENsw6kgZGUgbCdBUEkAQ29ubmV4aW9uIGJhc8OpZSBzdXIgbGEgY2zDqSBBUEkAQWJhbmRvbm7DqSBwYXIgc29uIGTDqXRlbnRldXIAQW5udWxlcgDDgCBwcm9wb3MgZGUAw4AgcHJvcG9zIGRlIE9jdG9QcmludABBY2PDqHMAQWNjw6lkZXIgYXV4IGNsw6lzIGQnYXBwbGljYXRpb24AQ29udHLDtGxlIGQnYWNjw6hzAERlbWFuZGUgZCdhY2PDqHMAQWN0aW9uAFBhcmFtw6h0cmVzIGRlIG5vdGlmaWNhdGlvbiBkZXMgY29tbWFuZGVzIGQnYWN0aW9uAFBhcmFtw6h0cmVzIGR1IGNob2l4IGRlIGNvbW1hbmRlAEFjdGlvbnMAQWN0aWYASW5zdGFuY2VzIGFjdGl2ZXMgbGUgbW9pcyBkZXJuaWVyAEludGVycm9tcHJlIGxhIGNvbW11bmljYXRpb24gcGVuZGFudCBsYSBjb21tYW5kZSBkJ2F0dGVudGUgPGNvZGU+RzQ8L2NvZGU+AEludGVycm9nYXRpb24gYWN0aXZlIGR1IGRvc3NpZXIgc3VydmVpbGzDqS4gQ29jaGV6IGNldHRlIGZvbmN0aW9uIHNpIGxlcyBmaWNoaWVycyBkZSB2b3RyZSBkb3NzaWVyIG9ic2VydsOpIG5lIHNvbnQgcGFzIGF1dG9tYXRpcXVlbWVudCBham91dMOpcy4AQWN0dWVsAEFqb3V0ZXIAQWpvdXQgZCd1biBwcm9maWwgZCdpbXByaW1hbnRlAEFqb3V0ZXIgdW4gcHJvZmlsIC4uLgBBam91dGVyIHVuIGdyb3VwZQBBam91dGVyIHVuIGdyb3VwZS4uLgBBam91dGVyIHVuIHV0aWxpc2F0ZXVyAEFqb3V0ZXIgdW4gdXRpbGlzYXRldXIgLi4uAEFyZ3VtZW50cyBhZGRpdGlvbm5lbHMAQXJndW1lbnRzIHN1cHBsw6ltZW50YWlyZXMgcG91ciBsYSBjb21tYW5kZSBwaXAuIE5vcm1hbGVtZW50LCB2b3VzIG5lIGRldmV6IHBhcyBjaGFuZ2VyIGNlbGEuAFZpdGVzc2VzIGRlIHRyYW5zbWlzc2lvbiBzdXBwbMOpbWVudGFpcmVzAEluZm9ybWF0aW9uIHN1cHBsw6ltZW50YWlyZQBBdXRvcmlzYXRpb25zIHN1cHBsw6ltZW50YWlyZXMAUG9ydHMgc8OpcmllcyBzdXBwbMOpbWVudGFpcmVzAEwnYWRtaW5pc3RyYXRldXIgcG9zc8OoZGUgdG91dGVzIGxlcyBhdXRvcmlzYXRpb25zAE9wdGlvbnMgYXZhbmPDqWVzAFZlcnNpb24gYWZmZWN0w6llcyA6ICUodmVyc2lvbnMpcwBWZXJzaW9ucyBhZmZlY3TDqWVzIDogdG91dGVzAEFwcsOocyBsJ2ltcHJlc3Npb24AQXByw6hzIGwnYW5udWxhdGlvbiBkZSBsJ2ltcHJlc3Npb24AQXByw6hzIGxhIG1pc2UgZW4gcGF1c2UgZGUgbCdpbXByZXNzaW9uAFVuZSBmb2lzIGxhIGNvbm5leGlvbiBzw6lyaWUgw6AgbCdpbXByaW1hbnRlIMOpdGFibGllAEFwcsOocyBsZSBkw6ljb3VwYWdlIC4uLgBBcHLDqHMgY2hhbmdlbWVudCBkJ291dGlscwBUZXJtaW7DqSAhAFBlcm1ldCBkZSBnw6lyZXIgbGVzIGFib25uZW1lbnRzIGF1eCDDqXbDqW5lbWVudHMuAEF1dG9yaXNlcgBBdXRvcmlzZXIgPGEgaHJlZj0iJSh1cmwpcyI+Q3Jvc3MgT3JpZ2luIFJlc291cmNlIFNoYXJpbmcgKENPUlMpPC9hPgBBdXRvcmlzZXIgbCdpbnTDqWdyYXRpb24gZGUgbCdpbnRlcmZhY2UgV2ViIGRhbnMgdW4gY2FkcmUgb3UgdW5lIGJhbGlzZSBpZnJhbWUAUGVybWV0IGwnYWNjw6hzIGF1eCBzYXV2ZWdhcmRlcyBldCBhdXggcmVzdGF1cmF0aW9ucwBQZXJtZXQgZCdhY2PDqWRlciDDoCBsYSB2aXNpb25uZXVzZSBHLWNvZGUgc2kgbCdhdXRvcmlzYXRpb24gIlTDqWzDqWNoYXJnZW1lbnQgZGUgZmljaGllciIgZXN0IMOpZ2FsZW1lbnQgZMOpZmluaWUuAFBlcm1ldCBkJ2FkbWluaXN0cmVyIHRvdXRlcyBsZXMgY2zDqXMgZCdhcHBsaWNhdGlvbgBQZXJtZXQgbGEgZ2VzdGlvbiBkZXMgYWJvbm5lbWVudHMgYXV4IMOpdsOpbmVtZW50cy4AUGVybWV0IGRlIG1vZGlmaWVyIGxlcyBwYXJhbcOodHJlcyBkdSBUaW1lbGFwc2UsIGRlIHN1cHByaW1lciBvdSBkZSByZW5kcmUgbGVzIFRpbWVsYXBzZXMgbm9uIHJlbmR1cy4gSW5jbHV0IGxlcyBhdXRvcmlzYXRpb25zICJMaXN0ZSBUaW1lbGFwc2UiLCAiU3VwcHJpbWVyIFRpbWVsYXBzZSIgZXQgIiBUw6lsw6ljaGFyZ2VtZW50IFRpbWVsYXBzZSIAUGVybWV0IGRlIHbDqXJpZmllciBsZXMgbWlzZXMgw6Agam91ciBsb2dpY2llbGxlcwBQZXJtZXQgZCdlZmZhY2VyIGxlcyBub3RpZmljYXRpb25zIGRlIGwnaW1wcmltYW50ZQBQZXJtZXQgZGUgY29uZmlndXJlciBsYSBtaXNlIMOgIGpvdXIgZHUgbG9naWNpZWwAQXV0b3Jpc2UgbGEgY29ubmVjdGlvbiBldCBkw6ljb25uZWN0aW9uIGQndW5lIGltcHJpbWFudGUAUGVybWV0IGRlIGNvbnRyw7RsZXIgbCdpbXByaW1hbnRlIGVuIHV0aWxpc2FudCBsZXMgY29tbWFuZGVzIGRlIHRlbXDDqXJhdHVyZSwgbCdvbmdsZXQgZGUgY29tbWFuZGUgb3UgbCdlbnZvaSBkZSBjb21tYW5kZXMgdmlhIGxlIHRlcm1pbmFsLgBQZXJtZXQgZGUgc3VwcHJpbWVyIGxlcyB2aWTDqW9zIFRpbWVsYXBzZSBldCBsZXMgVGltZWxhcHNlcyBub24gcmVuZHVzAFBlcm1ldCBkZSB0w6lsw6ljaGFyZ2VyIGV0IGRlIHN1cHByaW1lciBkZXMgZmljaGllcnMgam91cm5hdXggZXQgZGUgcsOpcGVydG9yaWVyIGV0IGRlIGTDqWZpbmlyIGRlcyBuaXZlYXV4IGRlIGpvdXJuYWwuAFBlcm1ldCBkZSB0w6lsw6ljaGFyZ2VyIGRlcyB2aWTDqW9zIFRpbWVsYXBzZQBQZXJtZXQgZCdhY3RpdmVyLCBkZSBkw6lzYWN0aXZlciBldCBkZSBkw6lzaW5zdGFsbGVyIGxlcyBleHRlbnNpb25zIGluc3RhbGzDqWVzLgBBdXRvcmlzZSBsZSByZWN1ZWlsIGRlcyBpbmZvcm1hdGlvbnMgZGUgYmFzZSBzdXIgbGUgc3RhdHV0LCBwYXIgZXhlbXBsZSBsJ2F2YW5jZW1lbnQgZHUgdHJhdmFpbCwgbCfDqXRhdCBkZSBsJ2ltcHJpbWFudGUsIGxlcyB0ZW1ww6lyYXR1cmVzLCAuLi4gT2JsaWdhdG9pcmUgcG91ciBxdWUgbCdpbnRlcmZhY2UgdXRpbGlzYXRldXIgcGFyIGTDqWZhdXQgZm9uY3Rpb25uZQBQZXJtZXQgZCdpbnN0YWxsZXIgZGUgbm91dmVsbGVzIGV4dGVuc2lvbnMuIEluY2x1dCBsJ2F1dG9yaXNhdGlvbiAiR8OpcmVyIGxlcyBleHRlbnNpb25zIi4AUGVybWV0IGRlIGxpc3RlciBsZXMgdmlkw6lvcyBUaW1lbGFwc2UAUGVybWV0IGRlIGfDqXJlciBsZXMgYWJvbm5lbWVudHMgYXV4IGFubm9uY2VzLiBDb21wcmVuZCBsJ2F1dG9yaXNhdGlvbiAiTGlyZSBsZXMgYW5ub25jZXMiAFBlcm1ldCBkZSBnw6lyZXIgbGVzIHBhcmFtw6h0cmVzIGV0IMOpZ2FsZW1lbnQgZGUgbGlyZSBsZXMgcGFyYW3DqHRyZXMgc2Vuc2libGVzAFBlcm1ldCBkJ2VmZmVjdHVlciBkZXMgbWlzZXMgw6Agam91ciBsb2dpY2llbGxlcwBQZXJtZXQgZGUgbGlyZSBsZXMgYW5ub25jZXMAUGVybWV0IGRlIGxpcmUgbGVzIHBhcmFtw6h0cmVzIG5vbiBzZW5zaWJsZXMuIE9ibGlnYXRvaXJlIHBvdXIgcXVlIGwnaW50ZXJmYWNlIHV0aWxpc2F0ZXVyIHBhciBkw6lmYXV0IGZvbmN0aW9ubmUuAEF1dG9yaXNlIGxhIHLDqWN1cMOpcmF0aW9uIGRlIGxhIGxpc3RlIGRlIHRvdXMgbGVzIGZpY2hpZXJzIHTDqWzDqWNoYXJnw6lzLCB5IGNvbXByaXMgbGV1cnMgbcOpdGFkb25uw6llcyAocGFyIGV4ZW1wbGUgZGF0ZSwgdGFpbGxlIGR1IGZpY2hpZXIsIHLDqXN1bHRhdHMgZCdhbmFseXNlLCAuLi4pAFBlcm1ldCBkJ2V4w6ljdXRlciBkZXMgY29tbWFuZGVzIHN5c3TDqG1lLCBwYXIgZXhlbXBsZSBkZSByZWTDqW1hcnJlciBPY3RvUHJpbnQsIGQnYXJyw6p0ZXIgb3UgZGUgcsOpaW5pdGlhbGlzZXIgbGUgc3lzdMOobWUsIGV0IGRlIHLDqWN1cMOpcmVyIGRlcyBpbmZvcm1hdGlvbnMgc3VyIGxlIHN5c3TDqG1lIGV0IHNvbiB1dGlsaXNhdGlvbgBQZXJtZXQgZGUgdm9pciBldCBkJ2ludGVyYWdpciBhdmVjIGxlcyBpbnZpdGVzIGRlIGwnaW1wcmltYW50ZQBQZXJtZXQgZGUgdm9pciBsZXMgbm90aWZpY2F0aW9ucyBkZSBsJ2ltcHJpbWFudGUAUGVybWV0IGRlIHPDqWxlY3Rpb25uZXIgdW4gZmljaGllciDDoCBpbXByaW1lcgBQZXJtZXQgZGUgZMOpY291cGVyIGRlcyBmaWNoaWVycwBQZXJtZXQgZGUgZMOpbWFycmVyLCBzdXNwZW5kcmUgZXQgYW5udWxlciB1biB0cmF2YWlsIGQnaW1wcmVzc2lvbgBQZXJtZXQgZGUgcmVnYXJkZXIgbCdvbmdsZXQgZHUgdGVybWluYWwgbWFpcyBwYXMgZCdlbnZveWVyIGRlcyBjb21tYW5kZXMgw6AgbCdpbXByaW1hbnRlIGRlcHVpcyBjZWx1aS1jaQBBdXRvcmlzZSBsZSB2aXNpb25uZW1lbnQgZHUgZmx1eCBkZSBsYSB3ZWJjYW0AUGVybWV0IGF1eCB1dGlsaXNhdGV1cnMgZGUgc3VwcHJpbWVyIGRlcyBmaWNoaWVycyBldCBkZXMgZG9zc2llcnMuIFNpIGwnYXV0b3Jpc2F0aW9uIGRlIHTDqWzDqWNoYXJnZW1lbnQgZGVzIGZpY2hpZXJzIGVzdCDDqWdhbGVtZW50IGTDqWZpbmllLCBsJ2F1dG9yaXNhdGlvbiBkZSBzdXBwcmVzc2lvbiBkZXMgZmljaGllcnMgcGVybWV0IMOpZ2FsZW1lbnQgZGUgZMOpcGxhY2VyIGRlcyBmaWNoaWVycyBldCBkZXMgZG9zc2llcnMuAFBlcm1ldCBhdXggdXRpbGlzYXRldXJzIGRlIHTDqWzDqWNoYXJnZXIgZGVzIGZpY2hpZXJzLiBMZSB2aXN1YWxpc2V1ciBHQ09ERSBlbiBlc3Qgw6lnYWxlbWVudCBhZmZlY3TDqS4AUGVybWV0IGF1eCB1dGlsaXNhdGV1cnMgZGUgdMOpbMOpY2hhcmdlciBkZXMgbm91dmVhdXggZmljaGllcnMsIGRlIGNyw6llciBkZXMgbm91dmVhdXggZG9zc2llcnMgZXQgZGUgY29waWVyIGxlcyBkb3NzaWVycyBleGlzdGFudHMuIFNpIGwnYXV0b3Jpc2F0aW9uIGRlIHN1cHByZXNzaW9uIGRlcyBmaWNoaWVycyBlc3Qgw6lnYWxlbWVudCBkw6lmaW5pZSwgbGUgdMOpbMOpY2hhcmdlbWVudCBkZXMgZmljaGllcnMgcGVybWV0IMOpZ2FsZW1lbnQgZGUgZMOpcGxhY2VyIGRlcyBmaWNoaWVycyBldCBkZXMgZG9zc2llcnMuAFBlcnNvbm5hbGlzZXogw6lnYWxlbWVudCBsJ2ljw7RuZSBkZSBsJ29uZ2xldCBkdSBuYXZpZ2F0ZXVyAEFmZmljaGVyIMOpZ2FsZW1lbnQgbGEgY291Y2hlIGFjdHVlbGxlAE1vbnRyZXIgw6lnYWxlbWVudCBsYSBjb3VjaGUgc3VpdmFudGUATW9udHJlciDDqWdhbGVtZW50IGxhIGNvdWNoZSBwcsOpY8OpZGVudGUAVG91am91cnMAVG91am91cnMgAFRvdWpvdXJzIHN1cHBvc2VyIHF1ZSBsYSBjYXJ0ZSBTRCBlc3QgcHLDqXNlbnRlAFVuIGNvbXB0ZSBhdmVjIGxlcyBhdXRvcmlzYXRpb25zIHN1aXZhbnRlcyBlc3QgcmVxdWlzOgBBbmFseXNlIGR1IEctY29kZSBwb3VyIGwnZXN0aW1hdGlvbiBkdSB0ZW1wcyBldCBkZSBsYSB0YWlsbGUgZHUgbW9kw6hsZQBBbmFseXPDqQBBbmFseXNzZS4uLgBBbm5vbmNlcwBTdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUAVG91dGUgbW9kaWZpY2F0aW9uIG5lIHByZW5kIGVmZmV0IHF1J2F1IHByb2NoYWluIGTDqW1hcnJhZ2UgZHUgc2VydmV1ci4AVG91dCBjZSBxdWUgdm91cyBtZXR0ZXogaWNpIHNlcmEgZXjDqWN1dMOpIDxlbT5hcHLDqHM8L2VtPiB0b3V0ZXMgbGVzIGxpZ25lcyBkZSB2b3MgZmljaGllcnMuAFRvdXQgY2UgcXVlIHZvdXMgbWV0dGV6IGljaSBzZXJhIGV4w6ljdXTDqSA8ZW0+YXByw6hzPC9lbT4gdG91dGUgY29tbWFuZGUgZGUgY2hhbmdlbWVudCBkZSBidXNlIDxjb2RlPlRuPC9jb2RlPi4AVG91dCBjZSBxdWUgdm91cyBtZXR0ZXogaWNpIHNlcmEgZXjDqWN1dMOpIDxlbT5hdmFudDwvZW0+IHRvdXRlcyBsZXMgbGlnbmVzIGRlIHZvcyBmaWNoaWVycy4AVG91dCBjZSBxdWUgdm91cyBtZXR0ZXogaWNpIHNlcmEgZXjDqWN1dMOpIDxlbT5hdmFudDwvZW0+IHRvdXRlIGNvbW1hbmRlIGRlIGNoYW5nZW1lbnQgZGUgYnVzZSA8Y29kZT5UbjwvY29kZT4uAFRvdXQgY2UgcXVlIHZvdXMgbWV0dGV6IGljaSBuZSBzZXJhIGV4w6ljdXTDqSBxdWUgbG9ycyBkZSBsYSBmZXJtZXR1cmUgYWN0aXZlIGRlIGxhIGNvbm5leGlvbiBzw6lyaWUuIFNpIGxhIGNvbm5leGlvbiBzw6lyaWUgw6AgbCdpbXByaW1hbnRlIGVzdCBzb3VkYWluZW1lbnQgcGVyZHVlLCByaWVuIG5lIHNlcmEgZW52b3nDqS4AQXBwYXJlbmNlAENsw6lzIGQnYXBwbGljYXRpb24ASWRlbnRpZmlhbnQgZGUgbCdhcHBsaWNhdGlvbgBBcHBsaXF1ZXIgbGEgY29ycmVjdGlvbiBkJ2FyYwBBcHBsaXF1ZXIgZGVzIGZpbHRyZXMgYXV4IHLDqXN1bHRhdHMgZGUgcmVjaGVyY2hlAEFwcGxpcXVlciB1bmUgc29sdXRpb24gZGUgY29udG91cm5lbWVudCDDoCBkb3VibGUgcGFyaXTDqSBvdXZlcnRlAFRlbXBzIHRvdGFsIGFwcHJveGltYXRpZgDDinRlcy12b3VzIHPDu3IgZGUgdm91bG9pciB2b3VzIGTDqWNvbm5lY3RlciBkZSBsJ2ltcHJpbWFudGU/AMOKdGVzLXZvdXMgc8O7ciBkZSB2b3Vsb2lyIGNvbnRpbnVlciA/AMOKdGVzIHZvdXMgc8O7ciBkZSB2b3Vsb2lyIG1ldHRyZSDDoCBqb3VyIG1haW50ZW5hbnQgPwDDinRlcy12b3VzIHPDu3IgPwBSYXRpbyBkJ2FzcGVjdCBkdSBmbHV4IHZpZGVvIGRlIGxhIFdlYmNhbSwgMTY6OSBvdSA0OjMAVGVudGUgZOKAmWFiYW5kb25uZXIgbGVzIMOpY2hhdWZmZW1lbnRzIGJsb3F1YW50cyBsb3JzIGRlIGzigJlhbm51bGF0aW9uIHZpYSA8Y29kZT5NMTA4PC9jb2RlPi4AVGVudGF0aXZlIGRlIHJlY29ubmV4aW9uAENvbm5leGlvbiBiYXPDqWUgc3VyIGwnZW4tdMOqdGUgZCdhdXRvcmlzYXRpb24AQ29ubmV4aW9uIGF1dG9tYXRpcXVlIGF1IHJlZMOpbWFycmFnZSBkdSBzZXJ2ZXVyAENvbm5leGlvbiBhdXRvbWF0aXF1ZSDDoCBsJ2ltcHJpbWFudGUgYXUgcmVkw6ltYXJyYWdlIGR1IHNlcnZldXIARMOpdGVjdGlvbiBhdXRvbWF0aXF1ZSBkZXB1aXMgbGUgbmF2aWdhdGV1cgBEw6lsYWkgZOKAmWV4cGlyYXRpb24gZW4gYXV0by1kw6l0ZWN0aW9uAEludGVydmFsbGUgZGUgcmVxdcOqdGUgcG91ciBsZSByYXBwb3J0IGF1dG9tYXRpcXVlIGR1IG1pY3JvIGxvZ2ljaWVsAETDqWZpbGVtZW50IGF1dG9tYXRpcXVlAFBhY2tzIGRlIGxhbmd1ZSBkaXNwb25pYmxlcwBEaXNwb25pYmxlOgBBeGVzAFJldG91cgBTYXV2ZWdhcmRlciAmIFJlc3RhdXJlcgBTYXV2ZWdhcmRlIGNyw6nDqWUgYXZlYyBzdWNjw6hzAEZpY2hpZXIgZGUgc2F1dmVnYXJkZQBTYXV2ZWdhcmRlcwBCYXPDqSBzdXIgdW5lIGFwcHJveGltYXRpb24gbGluw6lhaXJlICh0csOocyBiYXNzZSBwcsOpY2lzaW9uLCBzdXJ0b3V0IGVuIGTDqWJ1dCBkJ2ltcHJlc3Npb24pAEJhc8OpIHN1ciBsZXMgY29waWVzIGR1IG3Dqm1lIG1vZMOobGUgc3VyIGxlIG3Dqm1lIHR5cGUgZCdpbXByaW1hbnRlIGV0IGxlIGNhbGN1bCAoYm9ubmUgZXhhY3RpdHVkZSBnw6luw6lyYWxlbWVudCkAQmFzw6kgc3VyIHVuZSBlc3RpbWF0aW9uIChleGFjdGl0dWRlIG1veWVubmUpAEJhc8OpIHN1ciBsZXMgY29waWVzIGR1IG3Dqm1lIG1vZMOobGUgc3VyIGxlIG3Dqm1lIHR5cGUgZCdpbXByaW1hbnRlIChib25uZSBleGFjdGl0dWRlIGfDqW7DqXJhbGVtZW50KQBCYXPDqSBzdXIgdW5lIGVzdGltYXRpb24gY2FsY3Vsw6llIChtZWlsbGV1ciBleGFjdGl0dWRlKQBCYXPDqSBzdXIgdW5lIGVzdGltYXRpb24gcGFyIGFuYWx5c2UgZHUgZmljaGllciAoZXhhY3RpdHVkZSBtb3llbm5lKQBWaXRlc3NlIGRlIHRyYW5zbWlzc2lvbgBBc3N1cmV6LXZvdXMgZGUgbGlyZSB0b3V0ZXMgbGVzIG5vdGVzIGRlIHB1YmxpY2F0aW9uIGxpw6llcywgZW4gcGFydGljdWxpZXIgY2VsbGVzIHBvdXIgT2N0b1ByaW50IGNhciBlbGxlcyBwZXV2ZW50IGNvbnRlbmlyIGRlcyBpbmZvcm1hdGlvbnMgaW1wb3J0YW50ZXMgcXVlIHZvdXMgZGV2ZXogY29ubmHDrnRyZSA8c3Ryb25nPmF2YW50PC9zdHJvbmc+IGxhIG1pc2Ugw6Agbml2ZWF1LgBQbGF0ZWF1AEEgbGEgcmVwcmlzZSBkZSBsJ2ltcHJlc3Npb24AQXZhbnQgbGUgZMOpbWFycmFnZSBkZSBsJ2ltcHJlc3Npb24AQXZhbnQgbGEgZmVybWV0dXJlIGRlIGxhIGNvbm5leGlvbiBzw6lyaWUgw6AgbCdpbXByaW1hbnRlAEF2YW50IGNoYW5nZW1lbnQgZCdvdXRpbHMAQ29tcG9ydGVtZW50AEJldGEARMOpYml0IGQnZW5jb2RhZ2UgdXRpbGlzw6kgcG91ciBsYSB2aWTDqW8gZHUgVGltZWxhcHNlAFVSTCBkZSBsYSBsaXN0ZSBub2lyZQBDYWNoZSBUVEwgZGUgbGEgbGlzdGUgbm9pcmUAU3VyIExpc3RlIE5vaXJlAETDqWJpdHMgZW4gQmF1ZCBub24gYXV0b3Jpc8OpcwBQb3J0cyBzw6lyaWUgc3VyIGxpc3RlIG5vaXJlAENvbW1hbmRlcyBibG9xdcOpZXMAUGFyY291cmlyLi4uAEdyb3Vww6kATGl2csOpIGF2ZWMgT2N0b1ByaW50AE9jdGV0cyBpbXByaW3DqXMgc3VyIGxlIG5vbWJyZSB0b3RhbCBkJ29jdGV0cyBkdSBmaWNoaWVyAENPUlMASW1wb3NzaWJsZSBkZSBtZXR0cmUgw6Agam91ciBwZW5kYW50IGwnaW1wcmVzc2lvbgBNaXNlIMOgIGpvdXIgaW1wb3NzaWJsZSBwZW5kYW50IGxlIHRyYXZhaWwAQW5udWxlcgBBbm51bGVyIHRvdXRlcyBsZXMgaW1wcmVzc2lvbnMgZW4gY291cnMgbWFpcyByZXN0ZXIgY29ubmVjdMOpIMOgIGwnaW1wcmltYW50ZQBBbm51bGVyIGwnaW1wcmVzc2lvbgBBbm51bGF0aW9uAEFycsOqdGVyIGwnaW1wcmVzc2lvbgBOZSBwZXV0IHBhcyDDqnRyZSBiYXNjdWzDqWUASW1wb3NzaWJsZSDDoCBkw6lzaW5zdGFsbGVyIGRlcHVpcyBPY3RvUHJpbnQASW1wb3NzaWJsZSBkZSB2w6lyaWZpZXIgbGEgbWlzZSDDoCBqb3VyLCBjb25uZXhpb24gZW4gbGlnbmUgbsOpY2Vzc2FpcmUASW1wb3NzaWJsZSBkZSBzdXBwcmltZXIgbGUgcHJvZmlsIHBhciBkw6lmYXV0IG91IGxlIHByb2ZpbCBhY3R1ZWxsZW1lbnQgYWN0aWYuAEltcG9zc2libGUgZCdpbnN0YWxsZXIgY2V0dGUgZXh0ZW5zaW9uICIlKHBsdWdpbilzIiBjYXIgaWwgZXN0IGluY29tcGF0aWJsZSBhdmVjIGNldHRlIHZlcnNpb24gZCdPY3RvUHJpbnQgZXQvb3UgbGUgc3lzdMOobWUgZCdleHBsb2l0YXRpb24gc291cy1qYWNlbnQATGUgcmVuZHUgZHUgVGltZWxhcHNlIGVzdCBpbXBvc3NpYmxlAEltcG9zc2libGUgZGUgZMOpY291cGVyIHN1ciBsZSBtw6ptZSBww6lyaXBow6lyaXF1ZSBwZW5kYW50IGwnaW1wcmVzc2lvbgBJbXBvc3NpYmxlIGRlIGTDqWNvdXBlciwgY2FyIHRvdXMgbGVzIHBhcmFtw6h0cmVzIG4nb250IHBhcyDDqXTDqSBzcMOpY2lmacOpcwBJbXBvc3NpYmxlIGRlIHTDqWzDqXZlcnNlciBzdXIgbGEgY2FydGUgU0QgcGVuZGFudCB1bmUgaW1wcmVzc2lvbgBDYXB0dXJlIGR1IFRpbWVsYXBzZSBkZSBmaW4gZHUgY29udGVudQBQcm92b3F1ZSBsZSByZWNoYXJnZW1lbnQAQXUgY2VudHJlAENlbnRyZXIgbGUgcG9pbnQgZGUgdnVlIHN1ciBsZSBtb2TDqGxlAENoYW1icmUATW9kaWZpZXIgbGUgZMOpY2FsYWdlAENoYW5nZXIgbGUgbW90IGRlIHBhc3NlAENoYW5nZXIgbGUgbW90IGRlIHBhc3NlIHBvdXIgbCd1dGlsaXNhdGV1ciAiJSh1c2VyKXMiAE1vZGlmaWVyIGxlIHRyaQBMZXMgbW9kaWZpY2F0aW9ucyBkZSBsJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBuZSBzZXJvbnQgYWN0aXZlcyBxdSdhcHLDqHMgdW4gcmVjaGFyZ2VtZW50IGRlIGxhIHBhZ2UgZXQgdW5pcXVlbWVudCBzaSBlbGxlcyBuZSBzb250IHBhcyBvdXRyZXBhc3PDqWVzIHBhciBsZXMgcsOpZ2xhZ2VzIGRlIGxhbmd1ZSBkZSBsJ3V0aWxpc2F0ZXVyLgBMZXMgbW9kaWZpY2F0aW9ucyBkZSBsYSBsYW5ndWUgZGUgbCdpbnRlcmZhY2Ugc2Vyb250IGFjdGl2ZXMgYXByw6hzIHJhZnJhw65jaGlzc2VtZW50IGRlIGxhIHBhZ2UuAE1vZGlmaWNhdGlvbiBkZSBsJ29mZnNldCBkZSAlKG5hbWUpcwBMYSBtb2RpZmljYXRpb24gZGUgbGEgcGx1cGFydCBkZSBjZXMgcGFyYW3DqHRyZXMgbsOpY2Vzc2l0ZSBsZSByZWTDqW1hcnJhZ2UgZGUgbGEgY29ubmV4aW9uIGF2ZWMgdm90cmUgaW1wcmltYW50ZSBwb3VyIHF1ZSB2b3MgbW9kaWZpY2F0aW9ucyBzb2llbnQgZWZmZWN0aXZlcy4AVsOpcmlmaWNhdGlvbiBkZXMgbWlzZXMgw6Agam91cnMAVsOpcmlmaWVyIGwnZXJyZXVyIGludGVybmUgbG9ycyBkZSBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIG1pc2Ugw6Agam91cgBJbnRlcnZhbGxlIGRlIGNvbnRyw7RsZQBDb2NoZXogY2V0dGUgY2FzZSBzaSB2b3VzIHNvdWhhaXRleiBxdWUgbGVzIG5vdGlmaWNhdGlvbnMgcydhZmZpY2hlbnQgw6lnYWxlbWVudCBzb3VzIGZvcm1lIGRlIGZlbsOqdHJlcyBjb250ZXh0dWVsbGVzIGVuIHBsdXMgZGUgbGEgbGlzdGUgZGVzIG5vdGlmaWNhdGlvbnMgZGFucyBsYSBiYXJyZSBsYXTDqXJhbGUAQ29jaGV6IGNldHRlIGNhc2Ugc2kgdm90cmUgaW1wcmltYW50ZSBuZSBwb3Nzw6hkZSBxdSd1bmUgc2V1bGUgYnVzZSBldCB1biBzZXVsIHLDqWNoYXVmZmV1ciBwb3VyIHBsdXNpZXVycyBleHRydWRldXNlcyBhdSBsaWV1IGQndW5lIGJ1c2UgZXQgZCd1biBzZXVsIHLDqWNoYXVmZmV1ciBwYXIgZXh0cnVkZXVzZQBDb2NoZXogY2V0dGUgY2FzZSBwb3VyIHF1ZSBsZSBtb2RlIFRpbWVsYXBzZSBldCBsZXMgb3B0aW9ucyBxdWUgdm91cyBhdmV6IHPDqWxlY3Rpb25uw6lzIHNvaWVudCBjb25zZXJ2w6lzIGxvcnMgZGVzIHJlZMOpbWFycmFnZXMuAENocm9tZQBDaXJjdWxhaXJlAE5ldHRveWFnZSBkZSB0b3V0ZXMgbGVzIGRvbm7DqWVzIHJlc3RhbnRlcyBkZSBsJ2V4dGVuc2lvbiAuLi4ATmV0dG95YWdlIGRlcyBkb25uw6llcyBkZSBsJ2V4dGVuc2lvbiAiJShuYW1lKXMiAE5ldHRveWFnZSBkZXMgZG9ubsOpZXMgZGUgbCdleHRlbnNpb24gLi4uAE5ldHRveWVyAE5ldHRveWVyPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcwBOZXR0b3llciBsZXMgZG9ubsOpZXMgZGUgbCdleHRlbnNpb24AVG91dCBuZXR0b3llcgBOZXR0b3llciB0b3V0ZXMgbGVzIGRvbm7DqWVzAFRvdXQgbmV0dG95ZXI6ICUocmVzdWx0KXMARG9ubsOpZXMgbmV0dG95w6llcwBUb3V0IGVmZmFjZXIARWZmYWNlciBsYSBmZW7DqnRyZSBkdSBqb3VybmFsAFN1cHByaW1lciBsZXMgbm90aWZpY2F0aW9ucwBFZmZhY2VyIGxhIHPDqWxlY3Rpb24ARmVybWVyAEZlcm1leiBsZXMgZmVuw6p0cmVzIGVuIGNsaXF1YW50IGVuIGRlaG9ycwBGZXJtw6kAQ291bGV1cgBDb2xvcmlzZXIgbGVzIGZhdmljb24gKGRhbnMgbGVzIG5hdmlnYXRldXJzIGNvbXBhdGlibGVzKQBDb21tYW5kZQDDiWRpdGV1ciBkZSBjb21tYW5kZXMASW5kaWNhdGV1ciBkZSBsaWduZSBkZSBjb21tYW5kZQBDb21tYW5kZSBwb3VyIHJlZMOpbWFycmVyIGxlIHNlcnZldXIgZGUgT2N0b1ByaW50AENvbW1hbmRlIHBvdXIgcmVkw6ltYXJyZXIgbGUgc3lzdMOobWUgc3VyIGxlcXVlbCBPY3RvUHJpbnQgZm9uY3Rpb25uZQBDb21tYW5kZSDDoCBlbnZveWVyIGF1IGZpcm13YXJlIGxvcnMgZGUgbGEgcHJlbWnDqHJlIGNvbm5leGlvbi4AQ29tbWFuZGUgcG91ciDDqXRlaW5kcmUgbGUgc3lzdMOobWUgc3VyIGxlcXVlbCBPY3RvUHJpbnQgZm9uY3Rpb25uZQBDb21tYW5kZXMAQ29tbWFuZGVzIHF1aSBuw6ljZXNzaXRlbnQgdG91am91cnMgdW5lIHNvbW1lIGRlIGNvbnRyw7RsZQBDb21tYW5kZXMgcXVpIG7DqWNlc3NpdGVudCB0b3Vqb3VycyBsJ2Vudm9pIGQndW4gbnVtw6lybyBkZSBsaWduZSBldCBkJ3VuZSBzb21tZSBkZSBjb250csO0bGUuAENvbW1hbmRlcyBuw6ljZXNzaXRhbnRzIHVuIHRlbXBzIGQnZXjDqWN1dGlvbiBpbXBvcnRhbnQgZXQgZG9udCBsZXMgZMOpbGFpcyBkJ2F0dGVudGUgZGV2cmFpdCDDqnRyZSBzdXBwcmltw6lzIHBvdXIgw6p0cmUgdXRpbGlzw6lzLgBDb21tYW5kZXMgcG91ciBuZSBwYXMgcGFzc2VyIGVuIG1hanVzY3VsZSBhdXRvbWF0aXF1ZW1lbnQgZGFucyBsJ29uZ2xldCB0ZXJtaW5hbABFcnJldXIgZGUgY29tbXVuaWNhdGlvbgBEw6lsYWkgZCdleHBpcmF0aW9uIGRlIGxhIGNvbW11bmljYXRpb24AQ29uZmlndXJlciBsZSBTdWl2aSBkJ1V0aWxpc2F0aW9uIEFub255bWUAQ29uZmlndXJlciBsZSB0cmFpdGVtZW50IGRlIGwnZXh0ZW5zaW9uIExpc3RlIE5vaXJlAENvbmZpZ3VyZXIgbGUgY29udHLDtGxlIGRlIGNvbm5lY3Rpdml0w6kAQ2FuYXV4IGNvbmZpZ3Vyw6lzAENvbmZpcm1lcgBDb25maXJtZXIgbGUgbW90IGRlIHBhc3NlAENvbmZpcm1lciBhdmFudCBkJ2FubnVsZXIgbCdpbXByZXNzaW9uAENvbmZpcm1leiBhdmFudCBkZSBkw6lzYWN0aXZlciBs4oCZZXh0ZW5zaW9uAENvbmZpcm1lciBhdmFudCBkJ8OpY3Jhc2VyIHVuIGZpY2hpZXIgcGFyIHTDqWzDqXZlcnNlbWVudABDb25maXJtZXogYXZhbnQgZGUgZMOpbWFycmVyIHVuZSBpbXByZXNzaW9uAENvbmZpcm1hdGlvbnMAQ29ubmVjdGVyAENvbm5lY3TDqSDDoCB1bmUgaW1wcmltYW50ZQBDb25uZXhpb24gSW1wcmltYW50ZQBDb25uZXhpb24gYXUgc2VydmV1ciBkJ09jdG9QcmludCAuLi4AQ29ubmV4aW9uAETDqWxhaSBkJ2V4cGlyYXRpb24gZGUgbGEgY29ubmV4aW9uAFbDqXJpZmljYXRpb24gZGUgbGEgY29ubmVjdGl2aXTDqQBUZW50YXRpdmVzIGRlIHByaXNlIGRlIGNvbnRhY3QgY29uc8OpY3V0aXZlcwBSZXByZW5kcmUAQ29udHLDtGxlAENvcGllAENvcGllciBsYSBjbGVmIGRlIGwnIEFQSSBkYW5zIGxlIHByZXNzZS1wYXBpZXIAVG91dCBjb3BpZXIASW1wb3NzaWJsZSBkJ2Fqb3V0ZXIgbGUgcHJvZmlsAENhcHR1cmUgZCdpbWFnZXMgaW1wb3NzaWJsZQBJbXBvc3NpYmxlIGRlIHN1cHByaW1lciBsZSBwcm9maWwASW1wb3NzaWJsZSBkZSBzdXBwcmltZXIgbGUgVGltZWxhcHNlAEltcG9zc2libGUgZGUgcsOpY3Vww6lyZXIgbCdVUkwgZGUgU25hcHNob3QsIHZldWlsbGV6IHbDqXJpZmllciBsJ1VSTABMZSBkw6ljb3VwYWdlIGRlICUoc3RsKXMgdmVycyAlKGdjb2RlKXMgYSDDqWNob3XDqSA6ICUocmVhc29uKXMASW1wb3NzaWJsZSBkZSBtZXR0cmUgw6Agam91ciBsZSBwcm9maWwASW1wb3NzaWJsZSBkZSB0w6lsw6ljaGFyZ2VyIGxlIGZpY2hpZXIuIEFzc3VyZXotdm91cyBxdSdpbCBzJ2FnaXQgZCd1biBmaWNoaWVyIGF2ZWMgZGVzIGRyb2l0cyBkJ2FjY8OocyB2YWxpZGVzIGV0IHBvcnRhbnQgbCd1bmUgZGVzIGV4dGVuc2lvbnMgc3VpdmFudGVzOiAlKGV4dGVuc2lvbnMpcwBWb3VzIHBvdXZleiByw6ljdXDDqXJlciBsJ1VSTCBkZSBsYSBjYXB0dXJlIGQnaW1hZ2VzLCBtYWlzIGlsIG5lIHJlc3NlbWJsZSBwYXMgw6AgdW5lIGltYWdlLiBlbi10w6p0ZSBkZSB0eXBlIGRlIGNvbnRlbnUgb2J0ZW51OiA8Y29kZT4lKGNvbnRlbnRfdHlwZSlzPC9jb2RlPi4gVmV1aWxsZXogdsOpcmlmaWVyIHF1ZSBsJ1VSTCByZW52b2llIGRlcyBpbWFnZXMgc3RhdGlxdWVzIGV0IG5vbiBkZXMgZG9ubsOpZXMgZW4gcGx1c2lldXJzIHBhcnRpZXMgb3UgZGVzIHZpZMOpb3MuAENvbXB0ZSBkZXMgZGVtYW5kZXMgZGUgcmVudm9pLCBkZXMgbGlnbmVzIHRyYW5zbWlzZXMgZXQgZHUgdGF1eCBkZSByZW52b2kAQ3LDqWVyAENyw6llciB1biBjb21wdGUAQ3LDqWVyIHVuIGRvc3NpZXIAQ3LDqWV6IHVuZSBub3V2ZWxsZSBzYXV2ZWdhcmRlIGRlIGwnw6l0YXQgYWN0dWVsLgBDcsOpZXIgdW5lIHNhdXZlZ2FyZGUAQ3LDqWVyIHVuZSBzYXV2ZWdhcmRlIG1haW50ZW5hbnQAQ3LDqWVyIGxlIGRvc3NpZXIgLi4uAExhIGNyw6lhdGlvbiBkZSBsYSBzYXV2ZWdhcmRlIGEgw6ljaG91w6kAQ3JpdGlxdWUAVGF1eCBkZSByZW52b2kgY3JpdGlxdWUAVGF1eCBkZSByZW52b2kgY3JpdGlxdWUgIQBDbMOpIGRlIGwnQVBJIGNvdXJhbnRlAE9mZmVzdCBhY3R1ZWwATGEgdGVtcMOpcmF0dXJlIGFjdHVlbGxlIGRvbm7DqWUgcGFyIHZvdHJlIGltcHJpbWFudGUAw4l0YXQgZGUgbCdpbXByaW1hbnRlIGNvdXJhbnRlAExhIHRlbXDDqXJhdHVyZSBjaWJsZSBhY3R1ZWxsZSBkb25uw6llIHBhciB2b3RyZSBpbXByaW1hbnRlAENvbmZpZ3VyYXRpb24gYWN0dWVsbGUgZHUgVGltZWxhcHNlAFZlcnNpb25zIGFjdHVlbGxlcwBDaGVtaW4gYWN0dWVsbGVtZW50IGNvbmZpZ3Vyw6kgdmVycyBGRk1QRUcAVVJMIGRlIGNhcHR1cmUgZCdpbWFnZXMgYWN0dWVsbGVtZW50IGNvbmZpZ3Vyw6llAFVybCBkdSBmbHV4IGFjdHVlbGxlbWVudCBjb25maWd1csOpAEFjdHVlbGxlbWVudCBkYW5zAEFjdHVlbGxlbWVudCA6AFBlcnNvbm5hbGlzYXRpb24gZGUgbGEgem9uZSBkZSBkw6lsaW1pdGF0aW9uAERhbmdlcmV1eABEYXRlAETDqWJvZ3VlcgBPcHRpb25zIGRlIGRlYnVnAETDqWZhdXQATGFuZ3VlIHBhciBkw6lmYXV0AFByb2ZpbCBkZSBsJ2ltcHJpbWFudGUgcGFyIGTDqWZhdXQAR3JvdXBlIHBhciBkw6lmYXV0AFN1cHByaW1lcgBTdXBwcmltZXIgbCdvZmZzZXQAU3VwcHJpbWVyIHVuIHByb2ZpbABTdXBwcmltZXIgbGUgZ3JvdXBlAFN1cHByaW1lciBsJ2VucmVnaXN0cmVtZW50IGRlIGNldHRlIGV4dGVuc2lvbiBpbmNvbm51ZQBTdXBwcmltZXIgbGEgc8OpbGVjdGlvbgBTdXBwcmltZXIgbGVzIFRpbWVsYXBzZXMgcGFzIGZpbmFsaXPDqXMAU3VwcHJpbWVyIGzigJl1dGlsaXNhdGV1cgAlKGZpbGVuYW1lKXMgc3VwcHJpbcOpLi4uAFN1cHByZXNzaW9uICUoY291bnQpZCBzYXV2ZWdhcmRlcy4uLgBFZmZhY2UlKGNvdW50KWQgZmljaGllcnMgZGUgY29ubmV4aW9ucyAuLi4AU3VwcHJlc3Npb24gZHUgZmljaGllciBUaW1lbGFwc2UgJShjb3VudClkLi4uAFN1cHByZXNzaW9uIGRlICUoY291bnQpZCBUaW1lbGFwc2VzIG5vbiBmaW5hbGlzw6lzLi4uAFN1cHByZXNzaW9uIGRlIHNhdXZlZ2FyZGVzAEVmZmFjZXIgbGVzIGZpY2hpZXJzIGRlIGNvbm5leGlvbnMAU3VwcHJlc3Npb24gZGVzIGZpY2hpZXJzIFRpbWVsYXBzZQBTdXBwcmVzc2lvbiBkZXMgVGltZWxhcHNlcyBub24gZmluYWxpc8OpcwBFY2hlYyBkZSBsYSBzdXBwcmVzc2lvbiBkZSAlKGZpbGVuYW1lKXMsIHBvdXJzdWl0ZS4uLgBFY2hlYyBkZSBsYSBzdXBwcmVzc2lvbiBkZSAlKGZpbGVuYW1lKXM6JShlcnJvcilzAExhIHN1cHByZXNzaW9uIGRlICUoa2V5KXMgYSDDqWNob3XDqTogJShlcnJvcilzAFJlZnVzZXIAU2Vsb24gbGUgY29udHLDtGxldXIgZGUgdm90cmUgaW1wcmltYW50ZSBldCBsYSBjb25maWd1cmF0aW9uIGfDqW7DqXJhbGUsIGxlIHJlZMOpbWFycmFnZSBkJ09jdG9QcmludCBwZXV0IGVudHJhw65uZXIgbGEgcsOpaW5pdGlhbGlzYXRpb24gZGUgdm90cmUgaW1wcmltYW50ZS4AUHJvZm9uZGV1ciAoWSkARGVzY3JpcHRpb24ARMOpdGFpbHMARMOpdGVjdGlvbiBkZSBsYSBjb25uZXhpb24gc8OpcmllAENvbW1hbmRlIGRlIGRpYWxvZ3VlAERpYW3DqHRyZSAoWC9ZKQBOJ2EgcGFzIHRlcm1pbsOpIGxlIHN0cmVhbWluZyAlKGxvY2FsKXMgZGUgJShyZW1vdGUpcyBzdXIgbGEgY2FydGUgU0QARMOpc2FjdGl2ZXIgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcwBEw6lzYWN0aXZlciBsZSBTdWl2aSBkJ1V0aWxpc2F0aW9uIEFub255bWUARMOpc2FjdGl2ZXIgbGUgY2FuYWwARMOpc2FjdGl2ZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBjb25uZWN0aXZpdMOpAETDqXNhY3RpdmVyIGwnZXh0ZW5zaW9uAETDqXNhY3RpdmVyIGwnZXh0ZW5zaW9uIExpc3RlIE5vaXJlAETDqXNhY3RpdmVyIGxhIGTDqXRlY3Rpb24gZCdpbXByZXNzaW9uIGRlcHVpcyBsYSBjYXJ0ZSBTRABEw6lzYWN0aXZlciBxdWFuZCBtw6ptZQBEw6lzYWN0aXZlciBsYSBkw6l0ZWN0aW9uIGRlIGNoYXVmZmUgZXh0w6lyaWV1cmUARMOpc2FjdGl2ZXIgbCdleHRlbnNpb24ARMOpc2FjdGl2w6kARMOpc2FjdGl2w6kgZW4gcmFpc29uIGR1IG1vZGUgc2FucyDDqWNoZWMgYWN0aWYARMOpc2FjdGl2w6kgZW4gcmFpc29uIGR1IG1vZGUgc2FucyDDqWNoZWMARMOpY29ubmVjdGVyAETDqWNvbm5lY3RlciBkZSBsJ2ltcHJpbWFudGUARMOpY29ubmVjdGVyIGwnaW1wcmltYW50ZQBEaXNjb3JkAExpbWl0ZXMgZGUgc3RvY2thZ2UAQWZmaWNoZXIgZGVzIG5vdGlmaWNhdGlvbnMgcG91ciBsZXMgY29tbWFuZGVzIHN1cHByaW3DqWVzAE4nb3VibGlleiBwYXMgZGUgc2F1dmVnYXJkZXIgZGFucyBsZXMgcGFyYW3DqHRyZXMgcHJpbmNpcGF1eC4ATmUgcmllbiBmYWlyZQBTb3VoYWl0ZXotdm91cyB0b3Vqb3VycyBsZSBkw6lzYWN0aXZlciA/AFZvdWxlei12b3VzIGF1dG9yaXNlciBsJ2FjY8OocyDDoCBjZXR0ZSBhcHBsaWNhdGlvbiBhdmVjIHZvdHJlIGNvbXB0ZSB1dGlsaXNhdGV1cj8AVm91bGV6LXZvdXMgZMOpbWFycmVyIGwnaW1wcmVzc2lvbiBtYWludGVuYW50ID8ARG9jdW1lbnRzAE5lIGZvbmN0aW9ubmUgcGFzIGxvcnMgZCd1bmUgaW1wcmVzc2lvbiDDoCBwYXJ0aXIgZGUgbGEgY2FydGUgU0QgKGltcG9zc2liaWxpdMOpIGRlIGTDqXRlY3RlciBkZSBtYW5pw6hyZSBmaWFibGUgbGVzIGNoYW5nZW1lbnRzIGRlIFopLiBVdGlsaXNleiDDoCBsYSBwbGFjZSBsZSBtb2RlICJDaHJvbm9tw6l0csOpIiBwb3VyIGNlIHR5cGUgZCdpbXByZXNzaW9uLgBUZXJtaW7DqSEAVMOpbMOpY2hhcmdlcgBUw6lsw6ljaGFyZ2VyIGxlIHBhY2sgU3lzdGVtaW5mbwBUw6lsw6ljaGFyZ2VyIGxhIHPDqWxlY3Rpb24ARQDDiWRpdGlvbiBkdSBwcm9maWwgZCdpbXByaW1hbnRlICIlKG5hbWUpcyIAw4lkaXRpb24gZHUgcHJvZmlsAE1vZGlmaWVyIGxlIGdyb3VwZSAiJShuYW1lKXMiAE1vZGlmaWVyIGwndXRpbGlzYXRldXIgIiUobmFtZSlzIgBDb21tYW5kZXMgZCd1cmdlbmNlAEFjdGl2ZXIAQWN0aXZlciBsYSB2w6lyaWZpY2F0aW9uIGRlIG1pc2Ugw6Agam91ciA8Y29kZT5waXA8L2NvZGU+AEFjdGl2ZXIgPGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+AEFjdGl2ZXIgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcwBBY3RpdmVyIGxlIFN1aXZpIGQnVXRpbGlzYXRpb24gQW5vbnltZQBBY3RpdmVyIGxlIGJyaXNldXIgZGUgY2FjaGUAQWN0aXZlciBsZSBjYW5hbABBY3RpdmVyIGxhIHbDqXJpZmljYXRpb24gZGUgY29ubmVjdGl2aXTDqQBBY3RpdmVyIGxlIGNvbnRyw7RsZSBhdSBjbGF2aWVyAEFjdGl2ZXIgbGUgZmlsaWdyYW5lIE9jdG9QcmludCBzdXIgbGVzIFRpbWVsYXBzZXMAQWN0aXZlciBsJ2V4dGVuc2lvbgBBY3RpdmVyIGwnZXh0ZW5zaW9uIExpc3RlIG5vaXJlAEFjdGl2ZXIgbGUgc3VwcG9ydCBkZSBjYXJ0ZSBTRABBY3RpdmVyIGxlIGdyYXBoaXF1ZSBkZSB0ZW1ww6lyYXR1cmUAQWN0aXZlciBsZSBzdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUAQWN0aXZlciBsYSBkw6l0ZWN0aW9uIGF1dG9tYXRpcXVlIGR1IGZpcm13YXJlAEFjdGl2ZXIgbGUgcmFwcG9ydCBkJ2VycmV1cj8AQWN0aXZlciBsZSBzdWl2aSBkZXMgZXJyZXVycwBBY3RpdmVyIGwnZW52b2kgZm9yY8OpIGRlIGxhIGNvbW1hbmRlIGNvbmZpZ3Vyw6llIHBvdXIgY29udG91cm5lciBsZXMgcm91dGluZXMgZGUgYmxvY2FnZSBkdSBmaXJtd2FyZSBzaSBkw6l0ZWN0w6kgY29tbWUgc3VwcG9ydMOpLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGNoYW5nZXIgY2VsYS4AQWN0aXZlciBsYSBkw6l0ZWN0aW9uIGRlIGxhIHRhaWxsZSBkdSBtb2TDqGxlIGV0IGF2ZXJ0aXIgc2kgbGUgbW9kw6hsZSBkw6lwYXNzZSBkdSBwbGF0ZWF1AEFjdGl2ZXIgbGEgbGlzdGUgbm9pcmUgZGVzIGV4dGVuc2lvbnMgYXUgZMOpbWFycmFnZQBBY3RpdmVyIGxlcyBmZW7DqnRyZXMgY29udGV4dHVlbGxlcwBBY3RpdmVyIGxhIHbDqXJpZmljYXRpb24gZGUgY29ubmVjdGl2aXTDqQBBY3RpdmVyIGxlIHNpZ25hbGVtZW50IGF1IGZpcm13YXJlIHF1ZSBub3VzIHN1cHBvcnRvbnMgbCdhY3Rpb24gPGNvZGU+cHJvbXB0Xyo8L2NvZGU+IHNpIGTDqXRlY3TDqSBjb21tZSBzdXBwb3J0w6kuIFZvdXMgbmUgZGV2cmlleiBub3JtYWxlbWVudCBwYXMgYXZvaXIgw6AgY2hhbmdlciBjZWxhLgBBY3RpdmVyIGxlIHN1cHBvcnQAQWN0aXZlciBsZSBjYWNoZSBhc3NvY2nDqSDDoCBsJ1VSTCBkZSBsYSB3ZWJjYW0AQWN0aXZlciBsJ2ltcHJpbWFudGUgdmlydHVlbGxlAEFjdGl2ZXogY2V0dGUgb3B0aW9uIHBvdXIgcXVlIGxlcyBhanVzdGVtZW50cyBkZSB0ZW1ww6lyYXR1cmUgcXVlIHZvdXMgZWZmZWN0dWV6IHZpYSBsZSBib3V0b24gKyBvdSAtIHNvaWVudCBhdXRvbWF0aXF1ZW1lbnQgZW52b3nDqXMgw6AgbCdpbXByaW1hbnRlLgBBY3RpdmVyIGxhIHByaXNlIGVuIGNoYXJnZSBkdSBUaW1lbGFwc2UAQWN0aXZlciBsZSBzdXBwb3J0IGRlIGxhIHdlYmNhbQBBY3RpdsOpAEVudHJleiB1bmUgVVJMLi4uAEVudHJleiBsYSBkaXN0YW5jZSBkZSByw6l0cmFjdGF0aW9uIHV0aWxpc8OpZSBkYW5zIGxlIGZpcm13YXJlIG91IGR1IGTDqWNvdXBldXIgb3UgZHUgZmljaGllciBHLWNvZGUgcG91ciBkw6ljbGVuY2hlciBkZXMgY2FwdHVyZXMgZCdpbWFnZXMgcG91ciBsZSBUaW1lbGFwc2UsIHVuaXF1ZW1lbnQgc2kgdW4gY2hhbmdlbWVudCBkJ3VuZSBsYSBjb3VjaGUgZXN0IGF2w6lyw6kgUG91ciBxdWUgY2VsYSBmb25jdGlvbm5lIGNvcnJlY3RlbWVudCwgdm90cmUgZGlzdGFuY2UgZGUgcsOpdHJhY3RhdGlvbiBkb2l0IMOqdHJlIGRpZmbDqXJlbnRlIGRlIGxhIGhhdXRldXIgZGUgbGEgY291Y2hlICEARXJyZXVyAFN1aXZpIGRlcyBlcnJldXJzAEVycmV1ciBkZSBjb25uZXhpb24gw6AgbCdpbXByaW1hbnRlAEdlc3Rpb24gZGVzIEVycmV1cnMARXJyZXVyIHNpZ25hbMOpZSBwYXIgbCdpbXByaW1hbnRlAEVycmV1ciBsb3JzIGR1IGTDqW1hcnJhZ2UgZCd1bmUgaW1wcmVzc2lvbgBFcnJldXIhAEVycmV1cnMgZGFucyBsYSBjb21tdW5pY2F0aW9uIGF2ZWMgbCdpbXByaW1hbnRlIGV0IC8gb3Ugc2lnbmFsw6llcyBwYXIgbGUgbWljcm9sb2dpY2llbABIYXV0ZXVyIGRlIGxhIGNvdWNoZSBlc3RpbcOpZQBUZW1wcyBkJ2ltcHJlc3Npb24gZXN0aW3DqQBUZW1wcyBlc3RpbcOpIGF2YW50IGxhIGZpbiBkdSB0cmF2YWlsLiBDJ2VzdCBzZXVsZW1lbnQgdW4gdGVtcHMgZXN0aW3DqSwgbGEgcHLDqWNpc2lvbiB2YXJpZSBzdWl2YW50IGJlYXVjb3VwIGRlIGZhY3RldXJzICEAVGVtcHMgdG90YWwgZCdpbXByZXNzaW9uIGVzdGltw6kAVGVtcHMgZCdpbXByZXNzaW9uIHRvdGFsIGVzdGltw6kgYmFzw6kgc3VyIGwnYW5hbHlzZSBkdSBmaWNoaWVyIG91IGRlcyBpbXByZXNzaW9ucyBhbnTDqXJpZXVyZXMAw4l2w6luZW1lbnQAR2VzdGlvbm5haXJlIGQnw6l2w6luZW1lbnRzAMOJdsOpbmVtZW50cyDDoCBzdWl2cmUuIExlIHBpbmcgZXN0IG9ibGlnYXRvaXJlLgBUb3V0IGVzdCDDoCBqb3VyAEV4Y2x1cmUgbGVzIFRpbWVsYXBzZXMgZGUgbGEgc2F1dmVnYXJkZQBFeGNsdXJlIGxlcyBmaWNoaWVycyB0w6lsw6ljaGFyZ8OpcyAoZXQgbGVzIG3DqXRhIGRvbm7DqWVzKSBkZSBsYSBzYXV2ZWdhcmRlAFNhdXZlZ2FyZGVzIGV4aXN0YW50ZXMARXhwb3J0ZXIARXh0cnVkZXIARXh0cnVkZXVyAEZBUQBMaWduZSBkZSBjb21tYW5kZSBGRk1QRUcATGlnbmUgZGUgY29tbWFuZGUgRkZNUEVHIMOgIHV0aWxpc2VyAEluc3RhbmNlcyBGRk1QRUcAw4ljaGVjIHLDqXDDqXTDqWUgcG91ciBjYXB0dXJlciBsZSBUaW1lbGFwc2UgLSBsJ1VSTCBkZSBjYXB0dXJlIGQnaW1hZ2VzIGVzdC1lbGxlIGNvbmZpZ3Vyw6llIGNvcnJlY3RlbWVudCBldCBsYSB3ZWJjYW0gZXN0LWVsbGUgYWN0aXbDqWU/AEltcG9zc2libGUgZGUgc3VwcHJpbWVyIGxlIFRpbWVsYXBzZSAlKG5hbWUpcy48L3A+PHA+TWVyY2kgZGUgY29uc3VsdGVyIGxlIGZpY2hpZXIgb2N0b3ByaW50LmxvZyBwb3VyIHBsdXMgZGUgZMOpdGFpbHMuPC9wPgBGYXV4IGFjY3Vzw6kgZGUgcsOpY2VwdGlvbgBWZW50aWxhdGV1ciDDqXRlaW50AFZlbnRpbGF0ZXVyIGVuIG1hcmNoZQBGb25jdGlvbm5hbGl0w6lzAE1vZGlmaWNhdGlvbiBkZSBsYSB2aXRlc3NlOgBGaWxhbWVudABGaWNoaWVyAExlIGZpY2hpZXIgZXhpc3RlIGTDqWrDoABMZSBmaWNoaWVyIGV4aXN0ZSBkw6lqw6AgOiAlKG5hbWUpcwBQYXJhbcOodHJlcyBkZSBsYSBsaXN0ZSBkZSBmaWNoaWVycwBGaWNoaWVyL1LDqXBlcnRvaXJlIHNlcmEgZMOpcGxhY8OpIGVuIDogAEZpY2hpZXJzAFLDqWdsYWdlIGZpbjogKzHCsEMAUsOpZ2xhZ2UgZmluOiAtMcKwQwBSw6lnbGFnZXMgZmlucwBUZXJtaW7DqQBUaW1lbGFwc2VzIHRlcm1pbsOpcwBGaW5pdGlvbgBGaXJtd2FyZSAmYW1wOyBQcm90b2NvbGUAUGFyYW3DqHRyZXMgc3DDqWNpZmlxdWVzIGR1IEZpcm13YXJlAFByZW1pw6hyZSB0ZW50YXRpdmUgZGUgcHJpc2UgZGUgY29udGFjdABGaXjDqQBMZXMgZ3JvdXBlcyBmaXhlcyBuZSBwZXV2ZW50IHBhcyDDqnRyZSBham91dMOpcyBvdSBzdXBwcmltw6lzIMOgIGQnYXV0cmVzIGdyb3VwZXMuAExlcyBncm91cGVzIGZpeGVzIG5lIHBldXZlbnQgcGFzIMOqdHJlIGFqb3V0w6lzIG91IHN1cHByaW3DqXMgYXV4IHV0aWxpc2F0ZXVycy4AUmV0b3VybmVyIGxhIHdlYmNhbSBob3Jpem9udGFsZW1lbnQAUmV0b3VybmVyIGxhIHdlYmNhbSB2ZXJ0aWNhbGVtZW50AE1vZGlmaWNhdGlvbiBkdSBkw6liaXQgOgBOb20gZHUgZG9zc2llcgBEb3NzaWVycwBQb3VyIGxlcyBpbXByaW1hbnRlcyBhY3J5bGlxdWVzIDspAFBvdXIgcGx1cyBkJ2luZm9ybWF0aW9ucyBzdXIgbGVzIMOpdsOpbmVtZW50cyBPY3RvUHJpbnQgdmV1aWxsZXogY29uc3VsdGVyIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJlciI+bGEgZG9jdW1lbnRhdGlvbiBvZmZpY2llbGxlPC9hPi4AUG91ciBxdWUgbGVzIG1vZGlmaWNhdGlvbnMgcHJlbm5lbnQgZWZmZXQsIHZvdXMgZGV2ZXogcmVkw6ltYXJyZXIgT2N0b1ByaW50IGFwcsOocyBsJ2VucmVnaXN0cmVtZW50LgBQb3VyIGRlcyByYWlzb25zIGRlIHBlcmZvcm1hbmNlLCBsZXMgZMOpY291cGFnZXMgbG9jYXV4IHNvbnQgZMOpc2FjdGl2w6lzIHBlbmRhbnQgbCdpbXByZXNzaW9uAFBvdXIgZGVzIHJhaXNvbnMgZGUgcGVyZm9ybWFuY2VzLCBzZXVsZSB1bmUgcXVhbnRpdMOpIGxpbWl0w6llIGRlIGZvbmN0aW9ubmFsaXTDqXMgc29udCBhY3R1ZWxsZW1lbnQgYWN0aXZlcy4AUG91ciBsYSBzw6ljdXJpdMOpIGRlIHZvdHJlIGltcHJpbWFudGUARm9yY2VyIGxhIHbDqXJpZmljYXRpb24gZGUgbWlzZSDDoCBqb3VyIChvdXRyZXBhc3NlIGxlIGNhY2hlIHV0aWxpc8OpIHBvdXIgdsOpcmlmaWNhdGlvbiBkZSBtaXNlIMOgIGpvdXIpAEZvcmNlciBsJ3V0aWxpc2F0aW9uIGRlIGxhIGZvbmN0aW9ubmFsaXTDqSBmYW50YWlzaXN0ZQBGb3JjZXIgbGEgc29ydGllIHZlcnMgbGUgdGVybWluYWwgZHVyYW50IGwnaW1wcmVzc2lvbgBGb3JjZXIgbCd1dGlsaXNhdGlvbiBkdSBtYXJxdWV1ciBkZSA8Y29kZT4tLXVzZXI8L2NvZGU+IGF2ZWMgPGNvZGU+cGlwIGluc3RhbGw8L2NvZGU+AEZvcmNlciB0b3V0ZXMgbGVzIG1pc2VzIMOgIGpvdXIgKG3Dqm1lIHNpIGF1Y3VuZSBub3V2ZWxsZSB2ZXJzaW9uIG4nZXN0IGRpc3BvbmlibGUpAE1vdCBkZSBwYXNzZSBvdWJsacOpID8ARm9ybWUgZHUgcGxhdGVhdQBGb3J1bQBJbWFnZXMARGlzcG9uaWJsZQBDaGVtaW4gY29tcGxldCB2ZXJzIGwnZXjDqWN1dGFibGUgRkZNUEVHAEwnVVJMIGVudGnDqHJlLCBkb2l0IMOqdHJlIGpvaWduYWJsZSBwYXIgbGUgc2VydmV1ciBPY3RvUHJpbnQAU2NyaXB0cyBHQ29kZQBDb21tYW5kZXMgRy1jb2RlAFZpc3VhbGlzZXVyIGR1IEctY29kZQBTZXVpbCBkZSBsYSB0YWlsbGUgZHUgZmljaGllciBwb3VyIGxhIHZpc2lvbm5ldXNlIEctY29kZQBHw6luw6lyYWwAR8OpbsOpcmVyAE9idGVuaXIgcGx1cwBHaXRodWIgQ29tbWl0AMOJdG9pbGVzIEdpdGh1YgBDbMOpIEFQSSBnbG9iYWxlAEdyYXBoaXF1ZQBMaW1pdGVzIGR1IGdyYXBoaXF1ZQBHcm91cGVzAFBsYXRlYXUgY2hhdWZmYW50AENoYW1icmUgY2hhdWZmw6llAEhhdXRldXIgKFopAEJvbmpvdXIgIQBDYWNoZXIgbGVzIGNvdWNoZXMgdmlkZXMAQ2FjaGVyIGxlcyBmaWNoaWVycyBpbXByaW3DqXMgYXZlYyBzdWNjw6hzAE5vdGU6IEFwcHV5ZXIgc3VyIDxrYmQ+RW50cmVyPC9rYmQ+IGRhbnMgbGUgY2hhbXBzIGRlIHNhaXNpZSBzb3VtZXR0cmEgYXVzc2kgbGUgZm9ybXVsYWlyZQBBc3R1Y2UgOiBTaSB2b3VzIGTDqXBsYWNleiB2b3RyZSBzb3VyaXMgc3VyIGwnaW1hZ2UsIHZvdXMgZW50cmV6IGRhbnMgbGUgbW9kZSBkZSBjb21tYW5kZSBhdSBjbGF2aWVyLgBBc3R1Y2UgOiBWb3VzIHBvdXZleiDDqWdhbGVtZW50IGZhaXJlIHVuIGdsaXNzZXIvZMOpcG9zZXIgZGVzIGZpY2hpZXJzIHN1ciBsYSBwYWdlIHBvdXIgbGVzIHTDqWzDqWNoYXJnZXIuAE9yaWdpbmUgWC9ZAE9yaWdpbmUgWgBQYWdlIGQnYWNjdWVpbABJUCBIw7R0ZQBTZXJ2ZXVyIHF1aSBzZXJ2aXJhIMOgIHbDqXJpZmllciBsYSBjb25uZWN0aW9uIMOgIGludGVybmV0AE5vbSBkJ2jDtHRlAE5vbSBkJ2jDtHRlIMOgIGVzc2F5ZXIgZGUgcsOpc291ZHJlIHBvdXIgdsOpcmlmaWVyIGxhIGNvbm5lY3Rpdml0w6kgaW50ZXJuZXQAQnVzZQBCdXNlcyAmIEV4dHJ1ZGV1cnMARHVyw6llIGR1cmFudCBsYXF1ZWxsZSBjb25zZXJ2ZXIgbGVzIGFubm9uY2VzIGVuIGNhY2hlLCBlbiBtaW51dGVzLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIG1vZGlmaWVyIGNlbGxlLWNpLgBEdXLDqWUgZGUgbWlzZSBlbiBjYWNoZSBkZXMgZG9ubsOpZXMgZHUgZMOpcMO0dCwgZW4gbWludXRlcy4gVm91cyBuZSBkZXZyaWV6IHBhcyBhdm9pciDDoCBsZSBjaGFuZ2VyLgBEdXLDqWUgZGUgbGEgbWlzZSBlbiBjYWNoZSBkZSBsYSBsaXN0ZSBub2lyZSwgZW4gbWludXRlcy4gVm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IHBhcyBhdm9pciDDoCBjaGFuZ2VyIGNlbGEuAElkZW50aWZpYW50AEwnaWRlbnRpZmlhbnQgZG9pdCDDqnRyZSBwYXJhbcOpdHLDqQBTaSBkZXMgYWNjdXPDqXMgZGUgcsOpY2VwdGlvbiAoIm9rIikgZW52b3nDqXMgcGFyIGxlIG1pY3JvbG9naWNpZWwgc29udCBwZXJkdXMgZW4gcmFpc29uIGRlIHByb2Jsw6htZXMgZGUgY29tbXVuaWNhdGlvbiBzw6lyaWUgYXZlYyB2b3RyZSBpbXByaW1hbnRlLCBsYSBjb21tdW5pY2F0aW9uIGF2ZWMgT2N0b1ByaW50IHBldXQgZGV2ZW5pciBibG9xdcOpZS4gU2kgY2VsYSBhcnJpdmUsIGNlbGEgcGV1dCBhaWRlci4gVmV1aWxsZXogbm90ZXIgcXVlIGRlIHRlbGxlcyBvY2N1cnJlbmNlcyBmb250IGFsbHVzaW9uIMOgIGRlcyBwcm9ibMOobWVzIGRlIGNvbW11bmljYXRpb24gZ8OpbsOpcmF1eCBhdmVjIHZvdHJlIGltcHJpbWFudGUgcXVpIGF1cm9udCBwcm9iYWJsZW1lbnQgdW5lIGluZmx1ZW5jZSBuw6lnYXRpdmUgc3VyIHZvcyByw6lzdWx0YXRzIGQnaW1wcmVzc2lvbiBldCBxdWUgdm91cyBkZXZyaWV6IGRvbmMgZXNzYXllciBkZSByw6lzb3VkcmUhAFNpIGTDqXRlY3TDqSBjb21tZSBuw6ljZXNzYWlyZQBTaSBkw6l0ZWN0w6kgY29tbWUgcG90ZW50aWVsbGVtZW50IG7DqWNlc3NhaXJlAFNpIGTDqXRlY3TDqSBjb21tZSBzdXBwb3J0w6kgcGFyIGxlIGZpcm13YXJlIChjYXBhY2l0w6kgPGNvZGU+UFJPTVBUX1NVUFBPUlQ8L2NvZGU+KQBTaSBjZXR0ZSBvcHRpb24gZXN0IGFjdGl2w6llLCBPY3RvUHJpbnQgbidlbnZlcnJhIHBhcyDDoCB2b3RyZSBpbXByaW1hbnRlIGRlIGNvbW1hbmRlcyBkJ291dGlscyBkw6lwYXNzYW50IGxlIG5vbWJyZSBkJ2V4dHJ1ZGV1cnMgY29uZmlndXLDqWVzIGRhbnMgbGUgcHJvZmlsIGQnaW1wcmltYW50ZSBhY3RpZiBvdSBwb3VyIGxlc3F1ZWxsZXMgbGUgZmlybXdhcmUgYSBzaWduYWzDqSB1bmUgZXJyZXVyICJleHRydWRldXJzIG5vbiB2YWxpZGUiLiBOZSBkw6ljb2NoZXogY2V0dGUgY2FzZSBxdWUgc2kgT2N0b1ByaW50IG91IHZvdHJlIGZpcm13YXJlIG1hcnF1ZSBwYXIgZXJyZXVyIGRlcyBvdXRpbHMgdmFsaWRlcyBjb21tZSBub24gdmFsaWRlcyBldCBhc3N1cmV6LXZvdXMgZCdlbiByZWNoZXJjaGVyIGxhIHJhaXNvbiwgaWwgcGV1dCBzJ2FnaXIgZCd1bmUgbWF1dmFpc2UgY29uZmlndXJhdGlvbiBxdWUgdm91cyBkZXZleiBjb3JyaWdlciBwb3VyIHVuIGZvbmN0aW9ubmVtZW50IGNvcnJlY3QuAFMnaWwgZXN0IGFjdGl2w6ksIHVuIHBvcnQgc8OpcmllIHN1cHBsw6ltZW50YWlyZSA8Y29kZT5WSVJUVUVMPC9jb2RlPiBzZXJhIGRpc3BvbmlibGUgcG91ciBsYSBjb25uZXhpb24sIHNvdXRlbnUgcGFyIHVuZSBpbXBsw6ltZW50YXRpb24gZGUgZmF1c3NlIGltcHJpbWFudGUuIFV0aWxlIHBvdXIgbGUgZMOpdmVsb3BwZW1lbnQuAFMnaWwgZXN0IGZvdXJuaSwgbGUgdmlzaW9ubmV1ciBkZSBHLWNvZGUgcmVjaGVyY2hlcmEgdW5lIGxpZ25lIGNvbW1lbsOnYW50IHBhciBjZXR0ZSBjaGHDrm5lLiBTaSBlbGxlIGVzdCB0cm91dsOpZSwgdG91dCBsZSBHLWNvZGUganVzcXUnw6AgY2UgcG9pbnQgc2VyYSBpZ25vcsOpLiBDZWNpIHBldXQgw6p0cmUgdXRpbGlzw6kgcG91ciBpZ25vcmVyIGxlcyBjb21tYW5kZXMgRy1jb2RlICAicHVyZ2UiIG91ICJub3p6bGUgd2lwZSIgZGFucyBsZSB2aXN1YWxpc2V1ci4gTm90ZXogcXVlIGxhIHJlY2hlcmNoZSBlc3Qgc2Vuc2libGUgw6AgbGEgY2Fzc2UuIEV4ZW1wbGUgPGNvZGU+OyBsYXllciAxPC9jb2RlPgBTaSBsJ2VzcGFjZSBkaXNxdWUgcmVzdGFudCBkZXNjZW5kIGVuIGRlc3NvdXMgZGUgY2Ugc2V1aWwsIE9jdG9QcmludCBhdmVydGlyYSBsJ3V0aWxpc2F0ZXVyLgBTaSBsZSBmbHV4IHZpZGVvIGEgdW4gcmF0aW8gZCdhc3BlY3QgZGlmZsOpcmVudCBkZSBjZWx1aSBjb25maWd1csOpIGljaSwgaWwgYXBwYXJhaXRyYSBhdmVjIGRlcyBtYXJnZXMuAFNpIGNldHRlIGNhc2UgZXN0IGNvY2jDqWUsIE9jdG9QcmludCBlc3NhaWVyYSBk4oCZZW52b3llciBsYSBjb21tYW5kZSA8Y29kZT5NMTEyPC9jb2RlPiBhdmFudCB1bmUgZMOpY29ubmV4aW9uIGVuIHJhaXNvbiBkJ3VuZSBlcnJldXIgKGZhdGFsZSkgYWZpbiBkZSBkw6lzYWN0aXZlciBsZSBjaGF1ZmZhZ2UgZXQgbGVzIG1vdGV1cnMuAFNpIHZvdXMgY29jaGV6IGNldHRlIGNhc2UsIE9jdG9QcmludCB2b3VzIGluZm9ybWVyYSDDqWdhbGVtZW50IGRlcyBtaXNlcyDDoCBqb3VyIGRlIGwnb3V0aWwgPGNvZGU+cGlwPC9jb2RlPiwgb3V0aWwgdXRpbGlzw6kgcGFyIE9jdG9QcmludCBwb3VyIGluc3RhbGxlciBsZXMgZXh0ZW5zaW9ucyBldCBsZXMgbWlzZXMgw6Agam91ciBldCB2b3VzIHBlcm1ldHRyZSBkZSBsZXMgbWV0dHJlIMOgIGpvdXIgdmlhIE9jdG9QcmludC4gPGNvZGU+cGlwPC9jb2RlPiBlc3QgaG9ycyBkdSBjb250csO0bGUgZHUgbWFpbnRlbmV1ciBPY3RvUHJpbnQsIGRvbmMgYWN0aXZlei1sZSDDoCB2b3MgcmlzcXVlcyBldCBww6lyaWxzLgBTaSB2b3VzIGTDqXNhY3RpdmV6IGNldHRlIG9wdGlvbiwgbGVzIGVzcGFjZXMgcsOpc2VydsOpcyDDoCA8Y29kZT5jYW5jZWxfcG9zaXRpb248L2NvZGU+IGRhbnMgdm90cmUgc2NyaXB0IGQnYW5udWxhdGlvbiBHLWNvZGUgZXQgbGVzIGRvbm7DqWVzIGNvcnJlc3BvbmRhbnRlcyBkYW5zIGxlcyBkb25uw6llcyBkZSByw6ljdXDDqXJhdGlvbiBkJ2ltcHJlc3Npb24gcmVzdGVyb250IHZpZGVzICEgQ2VwZW5kYW50LCBsJ2FubnVsYXRpb24gZGUgbGEgdml0ZXNzZSBwb3VycmFpdCBzJ2Ftw6lsaW9yZXIgbMOpZ8OocmVtZW50LgBTaSB2b3VzIGTDqXNhY3RpdmV6IGNldHRlIG9wdGlvbiwgbGVzIGVzcGFjZXMgcsOpc2VydsOpcyDDoCA8Y29kZT5wYXVzZV9wb3NpdGlvbjwvY29kZT4gZGFucyB2b3Mgc2NyaXB0cyBHLWNvZGUgZGUgcGF1c2UvcmVwcmlzZSByZXN0ZXJvbnQgdmlkZXMgISBDZXBlbmRhbnQsIGxhIHZpdGVzc2UgZGUgcGF1c2UgcG91cnJhaXQgcydhbcOpbGlvcmVyIGzDqWfDqHJlbWVudC4AU2kgdm91cyBuZSB2b3VsZXogcGFzIGNoYW5nZXIgdm90cmUgbW90IGRlIHBhc3NlLCBsYWlzc2V6IGxlIGNoYW1wIHN1aXZhbnQgdmlkZS4AU2kgdm91cyBhcHByw6ljaWV6IE9jdG9QcmludCAuLi4AU2kgdm91cyBlbiBhdmV6IGJlc29pbiwgdm91cyBwb3V2ZXogdHJvdXZlcjxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5pY2k8L2E+IGxlIHNjcmlwdCBkJ2FubnVsYXRpb24gcGFyIGTDqWZhdXQgZm91cm5pIGF2ZWMgT2N0b1ByaW50LgBTaSB2b3VzIHZveWV6IHZvdHJlIFNuYXBzaG90IGNpLWRlc3NvdXMsIGwnVVJMIGR1IGZsdXggc2Fpc2kgZXN0IGNvcnJlY3RlLgBTaSB2b3VzIHZveWV6IGxlIGZsdXggZGUgdm90cmUgd2ViY2FtIGNpLWRlc3NvdXMsIGwnVVJMIGR1IGZsdXggc2Fpc2kgZXN0IGNvcnJlY3RlLgBTaSB2b3VzIGTDqWNvY2hleiBsYSBjYXNlLCBzZXVscyBsZXMgYWRtaW5pc3RhdGV1cnMgY29ubmVjdMOpcyB2ZXJyb250IGxlcyBub3RpZmljYXRpb25zIGRlIG1pc2Ugw6Agam91ci4gTGVzIG5vdGlmaWNhdGlvbnMgdmlzaWJsZXMgZGVzIGF1dHJlcyB1dGlsaXNhdGV1cnMgbidpbmNsdXJvbnQgcGFzIGxlIGJvdXRvbiAiTWV0dGUgw6Agam91ciBtYWludGVuYW50Ii4AU2kgdm91cyB2b3VsZXogcmVub21tZXIgbGUgZmljaGllciwgdm91cyBwb3V2ZXogbGUgZmFpcmUgY2ktZGVzc291cy4gVW5lIHN1Z2dlc3Rpb24gc2FucyBkdXBsaWNhdGlvbiBhIGTDqWrDoCDDqXTDqSBmYWl0ZS4ASWdub3JlcgBJZ25vcmVyIGxhIHJldHJhbnNtaXNzaW9uIGNvbnPDqWN1dGl2ZSBkZXMgcmVxdcOqdGVzIHBvdXIgbGEgbcOqbWUgbGlnbmUAQ29tbWFuZGVzIGlnbm9yw6llcwBBbm5vbmNlIGltcG9ydGFudGUgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uICIlKG5hbWUpcyIASW5jb21wYXRpYmxlAEluY29tcGF0aWJsZSBhdmVjIE9jdG9QcmludCBvdSBsJ2Vudmlyb25uZW1lbnQgUHl0aG9uIHNvdXMtamFjZW50AElkZW50aWZpYW50IG91IG1vdCBkZSBwYXNzZSBpbmNvcnJlY3QuAEluZm8ARMOpdGVjdGlvbiBkZSBsYSB2aXRlc3NlIGRlIHRyYW5zbWlzc2lvbiBpbml0aWFsZSBlbiBwYXVzZQBJbml0aWFsaXNlciBsYSBjYXJ0ZSBTRABJbnN0YWxsYXRpb24ASW5zdGFsbGVyIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMASW5zdGFsbGVyIGRlIG5vdXZlbGxlcyBleHRlbnNpb25zLi4uAEV4dGVuc2lvbnMgaW5zdGFsbMOpZXMASW5zdGFsbMOpZToASW5zdGFsbGF0aW9uIGRlIGwnZXh0ZW5zaW9uICIlKG5hbWUpcyIgZGVwdWlzICUodXJsKXMuLi4ASW5zdGFsbGF0aW9uIGRlIGzigJlleHRlbnNpb24gIiUocGx1Z2luKXMiLi4uAEluc3RhbGxhdGlvbiBkZSBsJ2V4dGVuc2lvbiBkZXB1aXMgJSh1cmwpcy4uLgBJbnN0YWxsYXRpb24gZHUgcGx1Z2luIMOgIHBhcnRpciBkdSBmaWNoaWVyIGNoYXJnw6kgZW4gY291cnMgLi4uAEluc3RhbGxhdGlvbiBkZSBsJ2V4dGVuc2lvbi4uLgBJRCBkJ2luc3RhbmNlAEludGVyZmFjZQBJbnRlcm5lAEludGVydmFsbGUgcXVpIHNlcnZpcmEgw6AgdsOpcmlmaWVyIGxhIGNvbm5lY3Rpb24gaW50ZXJuZXQASW50ZXJ2YWxsZSBkZSB0ZW1wcyBlbnRyZSBsZXMgcmVxdcOqdGVzIHZlcnMgbGUgbGVjdGV1ciBkZSBjYXJ0ZSBTRCBsb3JzIGRlIGwnaW1wcmVzc2lvbgBJbnRlcnZhbGxlIGRhbnMgbGVxdWVsIHZvdXMgcG91dmV6IG9idGVuaXIgZGVzIGluZm9ybWF0aW9ucyBzdXIgbGEgdGVtcMOpcmF0dXJlIGRlIGwnaW1wcmltYW50ZQBJbnRlcnZhbGxlcyAmYW1wOyBEw6lsYWlzIGQnQXR0ZW50ZQBDYXJhY3TDqHJlcyBpbnZhbGlkZXMsIHNldWxzIGEteiwgQS1aLCAwLTksIC0sIC4sIF8sICggZXQgKSBzb250IGF1dG9yaXPDqXMAT3V0aWwgbm9uIHZhbGlkZSBzaWduYWzDqQBJbnZlcnNlciBsZSBjb250csO0bGUAT2N0b1ByaW50IGVzdC1pbCBjb25uZWN0w6kgw6AgaW50ZXJuZXQgPwBQZXV0IGF2b2lyIHVuIGltcGFjdCBuw6lnYXRpZiBzdXIgbGVzIHBlcmZvcm1hbmNlcyBkJ2ltcHJlc3Npb24gZXQgcHJlbmRyZSBiZWF1Y291cCBkJ2VzcGFjZSBkZSBzdG9ja2FnZSBzZWxvbiBsYSBkdXLDqWUgcXVlIHZvdXMgbGUgbGFpc3NleiBhY3RpdsOpIGV0IG5lIGRvaXQgZG9uYyDDqnRyZSB1dGlsaXPDqSBxdWUgcG91ciBsZSBkw6lib2dhZ2UuAElsIHNlbWJsZSBxdSdpbCBuJ3kgYWl0IGF1Y3VuZXMgZXh0ZW5zaW9ucyBxdWkgY29ycmVzcG9uZGUgw6Agdm9zIGNyaXTDqHJlcyBkZSByZWNoZXJjaGUASWwgc2VtYmxlIHF1ZSB2b3RyZSBpbXByaW1hbnRlIGEgw6l0w6kgcsOpaW5pdGlhbGlzw6llIGFsb3JzIHF1J3VuZSBjb25uZXhpb24gw6l0YWl0IGFjdGl2ZS4gRGUgY2UgZmFpdCwgbGUgdHJhdmFpbCBlbiBjb3VycyBhIMOpdMOpIGludGVycm9tcHUuIFNpIGMnw6l0YWl0IGludGVudGlvbm5lbCwgdm91cyBwb3V2ZXogaWdub3JlciBjZSBtZXNzYWdlLiBTaW5vbiwgdm91cyBkZXZyaWV6IHbDqXJpZmllciBwb3VycXVvaSB2b3RyZSBpbXByaW1hbnRlIHNlIHLDqWluaXRpYWxpc2UsIGNhciBjZWxhIGludGVycm9tcHQgbGVzIGltcHJlc3Npb25zIGV0IGxlcyB0cmFuc2ZlcnRzIGRlIGZpY2hpZXJzIHZlcnMgbGEgY2FydGUgU0QgZGUgdm90cmUgaW1wcmltYW50ZS4ASWwgc2VtYmxlIHF1ZSB2b3RyZSBpbXByaW1hbnRlIGFpdCDDqXTDqSByw6lpbml0aWFsaXPDqWUgYWxvcnMgcXUndW5lIGNvbm5leGlvbiDDqXRhaXQgYWN0aXZlLiBTaSBjZWxhIMOpdGFpdCBpbnRlbnRpb25uZWwsIHZvdXMgcG91dmV6IGlnbm9yZXIgY2UgbWVzc2FnZS4gRGFucyBsZSBjYXMgY29udHJhaXJlLCB2b3VzIGRldmV6IHJlY2hlcmNoZXIgbGVzIHJhaXNvbnMgcG91ciBsZXNxdWVsbGVzIHZvdHJlIGltcHJpbWFudGUgZXN0IHLDqWluaXRpYWxpc8OpZSwgY2FyIGNlbGEgaW50ZXJyb21wdCBsZXMgaW1wcmVzc2lvbnMgZXQgbGVzIHRyYW5zZmVydHMgZGUgZmljaGllcnMgdmVycyBsYSBjYXJ0ZSBTRCBkZSB2b3RyZSBpbXByaW1hbnRlLgBJbCBwZXV0IG5lIHBhcyDDqnRyZSBjb25maWd1csOpIGNvcnJlY3RlbWVudCBvdSBuw6ljZXNzaXRlIHVuZSBhdXRoZW50aWZpY2F0aW9uLiBQb3VyIHLDqXNvdWRyZSBjZSBwcm9ibMOobWUsIGNvbnRhY3RleiB1biBhZG1pbmlzdHJhdGV1ciBkZSBjZXR0ZSBpbnN0YW5jZSBPY3RvUHJpbnQuAElsIHNlIHBldXQgcXUnaWwgbmUgc29pdCBwYXMgY29uZmlndXLDqSBjb3JyZWN0ZW1lbnQgb3UgcXUnaWwgbsOpY2Vzc2l0ZSB1bmUgYXV0aGVudGlmaWNhdGlvbi4gVm91cyBwb3V2ZXogY2hhbmdlciBsJ1VSTCBkdSBmbHV4IHNvdXMgIlBhcmFtw6h0cmVzIE9jdG9QcmludCIgPiAiRm9uY3Rpb25uYWxpdMOpcyIgPiBXZWJjYW0gJiBUaW1lbGFwc2UiID4gIldlYmNhbSIgPiAiU3RyZWFtIFVSTCIuIFNpIHZvdXMgbidhdmV6IHBhcyBkZSB3ZWJjYW0sIHZvdXMgcG91dmV6IHNpbXBsZW1lbnQgZMOpc2FjdGl2ZXIgbGUgc3VwcG9ydCBkZSBsYSB3ZWJjYW0uAENvbnNlcnZlciBsZXMgZG9ubsOpZXMAR2FyZGVyIGFjdGl2w6kATGFpc3NlciBpbnN0YWxsw6kAQ29udHLDtGxlcyBjbGF2aWVyIGFjdGlmAExhbmd1ZQBQYWNrcyBkZSBsYW5ndWUARGVybmllciByYWZyYcOuY2hpc3NlbWVudCBkdSBjYWNoZSA6AERlcm5pZXIgdGVtcHMgZCdpbXByZXNzaW9uAERlcm5pw6hyZSBpbXByZXNzaW9uAERlcm5pw6hyZSBwb3Vzc8OpZSB2ZXJzIGxhIGJyYW5jaGUgcHJpbmNpcGFsZQBEZXJuacOocmUgbWlzZSDDoCBqb3VyIDoAUGx1cyB0YXJkAERlcm5pw6hyZSB2ZXJzaW9uIGV0IGRhdGUASGF1dGV1ciBkZSBsYSBjb3VjaGUASW5mb3JtYXRpb25zIHN1ciBsYSBjb3VjaGUATnVtw6lybyBkZSBsYSBjb3VjaGUAQ291Y2hlIGF2ZWMgZXh0cnVzaW9uAE5pdmVhdQBMaWNlbmNlAENoYXJnZXIAQ2hhcmdlciBldCBpbXByaW1lcgBDaGFyZ2VtZW50IGRlIGwnaW50ZXJmYWNlIE9jdG9QcmludCwgVmV1aWxsZXogcGF0aWVudGVyLi4uAENoYXJnZW1lbnQuLi4AQ29waWUgbG9jYWxlAEpvdXJuYWxpc2VyIGxhIGNvbW11bmljYXRpb24gc3VyIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+AFMnaWRlbnRpZmllcgBMb2cgZGUgcG9zaXRpb24gc3VyIGFubnVsZXIATG9nIGRlIHBvc2l0aW9uIHN1ciBwYXVzZQBTdG9ja2FnZSBkZXMgam91cm5hdXggOgBDb25uZWN0w6kgZW4gdGFudCBxdWUgJShuYW1lKXMATml2ZWF1eCBkZSBqb3VybmFsaXNhdGlvbgBJZGVudGlmaWNhdGlvbgBMJ2lkZW50aWZpY2F0aW9uIGEgw6ljaG91w6kASWRlbnRpZmljYXRpb24gcsOpdXNzaWUAU2UgZMOpY29ubmVjdGVyAExhIGTDqWNvbm5leGlvbiBuJ2VzdCBwYXMgc3VwcG9ydMOpIHBvdXIgJShtZXRob2QpcywgdmV1aWxsZXogZmVybWVyIGxlIG5hdmlnYXRldXIgw6AgbGEgcGxhY2UARMOpY29ubmV4aW9uIGRlIE9jdG9QcmludABEw6ljb25uZXhpb24gcsOpdXNzaWUASm91cm5hdXgARG9zc2llciBkZXMgam91cm5hdXgAQ29tbWFuZGVzIMOgIGxvbmd1ZSBleMOpY3V0aW9uAEVuIGJhcyDDoCBnYXVjaGUAQXNzdXJlei12b3VzIGRlIHJlbnNlaWduZXIgbGUgbm9tYnJlIGQnZXh0cnVkZXVzZXMgZGlzcG9uaWJsZXMgc3VyIHZvdHJlIGltcHJpbWFudGUsIHNpbm9uIHZvdXMgcG91cnJpZXogcmVuY29udHJlciBkZXMgcHJvYmzDqG1lcwBBc3N1cmV6LXZvdXMgZCdhdm9pciBsdSA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIG5vb3BlbmVyIj4iQ29tbWVudCB1dGlsaXNlciBsZXMgY2FuYXV4IGRlIHB1YmxpY2F0aW9uIHBvdXIgYWlkZXIgw6AgdGVzdGVyIGxlcyBjYW5kaWRhdHMgw6AgbGEgcHVibGljYXRpb24iPC9hPiBhdmFudCBkZSBwYXNzZXIgw6AgdW4gY2FuYWwgZGUgcHVibGljYXRpb24gYXV0cmUgcXVlICJTdGFibGUiLgBPY3RvUHJpbnQgZXNzYWllcmEgZGUgc2UgY29ubmVjdGVyIHBlbmRhbnQgbGUgZMOpbWFycmFnZQBHw6lyZXIgbGVzIHBhY2tzIGRlIGxhbmd1ZS4uLgBHw6lyZXIgLi4uAEfDqW7DqXJlciBtYW51ZWxsZW1lbnQgdW5lIGNsw6kgZCdhcHBsaWNhdGlvbgBNYXJxdWVyIGNvbW1lIGRlcm5pw6hyZSBsZWN0dXJlAE1hcnF1ZXIgY29tbWUgbHUAU2kgdm91cyBtYXJxdWV6IHVuIGdyb3VwZSBwYXIgZMOpZmF1dCwgaWwgc2VyYSBwcsOpc8OpbGVjdGlvbm7DqSBsb3JzIGRlIGxhIGNyw6lhdGlvbiBkZSBub3V2ZWF1eCB1dGlsaXNhdGV1cnMuAE1hcmxpbiAyKwBEw6lsYWlzIGQnYXR0ZW50ZSBtYXhpbXVtIGR1cmFudCBsZSB0cmFpdGVtZW50IGQndW5lIGxvbmd1ZSBjb21tYW5kZQBEw6lsYWlzIGQnYXR0ZW50ZSBtYXhpbXVtIGR1cmFudCBsYSBwYXVzZQBEw6lsYWlzIGQnYXR0ZW50ZSBtYXhpbXVtIGR1cmFudCBsJ2ltcHJlc3Npb24ARMOpbGFpcyBkJ2F0dGVudGUgbWF4aW11bSBkdXJhbnQgbGUgdHJhaXRlbWVudCBkJ3VuZSBsb25ndWUgY29tbWFuZGUuIEF1IGRlbMOgLCBsJ2ltcHJpbWFudGUgZXN0IGNvbnNpZMOpcsOpZSBjb21tZSBkw6licmFuY2jDqWUuIFLDqWdsZXogc3VyIDAgcG91ciBkw6lzYWN0aXZlci4ARMOpbGFpcyBkJ2F0dGVudGUgbWF4aW11bSBkdXJhbnQgbGEgcGF1c2UuIFNpIHBsdXMsIGwnaW1wcmltYW50ZSBlc3QgY29uc2lkw6lyw6llIGNvbW1lIGTDqWJyYW5jaMOpZS4gUsOpZ2xleiBzdXIgMCBwb3VyIGTDqXNhY3RpdmVyLgBEw6lsYWlzIGQnYXR0ZW50ZSBtYXhpbXVtIGR1cmFudCBsJ2ltcHJlc3Npb24uIEF1IGRlbMOgLCBsJ2ltcHJpbWFudGUgZXN0IGNvbnNpZMOpcsOpZSBjb21tZSBkw6licmFuY2jDqWUuIFLDqWdsZXogc3VyIDAgcG91ciBkw6lzYWN0aXZlci4AVGFpbGxlIG1heGltYWxlIHBvdXIgbGFxdWVsbGUgbGEgdmlzaW9ubmV1c2UgRy1jb2RlIGNoYXJnZSBhdXRvbWF0aXF1ZW1lbnQgbGUgZmljaGllciBwb3VyIGxhIHByw6l2aXN1YWxpc2F0aW9uAE1lc3NhZ2UgZGUgdm90cmUgaW1wcmltYW50ZQBFc3BhY2UgZGlzcXVlIGxpYnJlIG1pbmltdW0ASW50ZXJ2YWxsZSBtaW5pbXVtAE3DqWxhbmfDqQBNb2TDqGxlAExlIG1vZMOobGUgbmUgY29udGllbnQgYXVjdW5lIGV4dHJ1c2lvbi48YnI+AEluZm9ybWF0aW9ucyBzdXIgbGUgbW9kw6hsZQBUYWlsbGUgZHUgbW9kw6hsZQBQbHVzIGRlAExhIHBsdXBhcnQgZGVzIGZvcmtzIE1hcmxpbiBxdWkgb250IMOpdMOpIGTDqXJpdsOpcyBkZXMgdmVyc2lvbnMgTWFybGluICZsdDsgdjEuMS4wIG4nZW52b2llbnQgcGFzIGQnYWNjdXPDqSBkZSByw6ljZXB0aW9uIDxjb2RlPm9rPC9jb2RlPiBwb3VyIHVuIDxjb2RlPk0yOTwvY29kZT4uIENvY2hleiBjZXR0ZSBjYXNlIHNpIHZvdXMgcmVuY29udHJleiBkZXMgcHJvYmzDqG1lcyBkZSBjb21tdW5pY2F0aW9uIMOgIGxhIHN1aXRlIGR1IHN0cmVhbWluZyBkJ3VuIGZpY2hpZXIgdmVycyBsYSBjYXJ0ZSBTRCBkZSB2b3RyZSBpbXByaW1hbnRlLgBNb3RldXJzIMOpdGVpbnRzAETDqXBsYWNlcgBEw6lwbGFjZXIgdW4gZmljaGllciBvdSB1biBkb3NzaWVyAE4vQQBOb20ATGUgbm9tIHBldXQgw6p0cmUgcsOpc29sdQBMZSBub20gbmUgcGV1dCBwYXMgw6p0cmUgcsOpc29sdQBMZSBub20gZG9pdCDDqnRyZSBwYXJhbcOpdHLDqQBOb20gZHUgZmljaGllciBjb3VyYW50IHPDqWxlY3Rpb25uw6kgcG91ciBsJ2ltcHJlc3Npb24ATGUgbm9tIGRlIGNldHRlIGluc3RhbmNlIGRlIE9jdG9QcmludCBzZXJhIGFmZmljaMOpIGRhbnMgbGEgYmFycmUgZGUgbmF2aWdhdGlvbiBldCBzZXJhIGRpZmZ1c8OpIHN1ciBsZSByw6lzZWF1AE5hdmlnYXRpb24ATsOpY2Vzc2l0ZSB1biByZWTDqW1hcnJhZ2UgZCdPY3RvUHJpbnQuAE7DqWNlc3NpdGUgZGUgcmVkw6ltYXJyZXIARG9pdCDDqnRyZSBhY2Nlc3NpYmxlIGRlcHVpcyBsZSBuYXZpZ2F0ZXVyIGFmZmljaGFudCBsJ2ludGVyZmFjZSB1dGlsaXNhdGV1ciBPY3RvUHJpbnQsIHV0aWxpc8OpZSBwb3VyIGludMOpZ3JlciBsZSBmbHV4IGRlIHdlYmNhbSBkYW5zIGxhIHBhZ2UuAEVycmV1ciBkZSByw6lzZWF1IGxvcnMgZGUgbGEgdsOpcmlmaWNhdGlvbiBkZSBsYSBtaXNlIMOgIGpvdXIASmFtYWlzAE5lIGphbWFpcyBtb250ZXIgbGVzIG5vdGlmaWNhdGlvbnMATm91dmVsIG9mZnNldABOb3V2ZWF1IG1vdCBkZSBwYXNzZQBOb3V2ZWxsZSBjbMOpIGfDqW7DqXLDqWUgIQBMZSByZW5kdSBkdSBub3V2ZWF1IFRpbWVsYXBzZSAlKG1vdmllX3ByZWZpeClzIGVzdCB0ZXJtaW7DqS4ATGVzIHZlcnNpb25zIHBsdXMgcsOpY2VudGVzIGRlIGNldHRlIGV4dGVuc2lvbiBuZSBzb250IHBhcyBjb21wYXRpYmxlcyBhdmVjIGNldHRlIGNvbmZpZ3VyYXRpb24uAFN1aXZhbnQAQ291Y2hlIHN1aXZhbnRlAE5vbgBBdWN1biBwYWNrIGRlIGxhbmd1ZSBuJ2VzdCBpbnN0YWxsw6kgcG91ciBsZSBtb21lbnQuAFBhcyBkZSBjb25uZXhpb24gaW50ZXJuZXQATm9uLCBjb250aW51ZXIgbCdpbXByZXNzaW9uAE5vbiBjb21wYXRpYmxlAEltcG9zc2libGUATm90ZQBSZW1hcnF1ZToAUmVtYXJxdWU6IABSaWVuIMOgIG5ldHRveWVyISBJbCBuJ3kgYSBwbHVzIGRlIHBhcmFtw6h0cmVzIG91IGRlIGRvbm7DqWVzIGRlcyBleHRlbnNpb25zIGTDqXNpbnN0YWxsw6llcy4AQW5ub25jZSBhdSBzdWpldCBkZSBjZXR0ZSBleHRlbnNpb24gIiUobmFtZSlzIgBVUkwgZGVzIGFubm9uY2VzAER1csOpZSBkZSB2aWUgZHUgY2FjaGUgZGVzIGFubm9uY2VzAENvbmZpZ3VyYXRpb24gZGVzIGFubm9uY2VzAENhcHR1cmUgZHUgVGltZWxhcHNlIGRlIGZpbiBkZSBjb250ZW51LCBjZWxhIHByZW5kcmEgYXBwcm94aW1hdGl2ZW1lbnQgJShkdXJhdGlvbilzIChqdXNxdSfDoCAlKHRpbWUpcykuLi4AQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGRlIGNvbnRlbnUsIGNlbGEgcHJlbmRyYSBhcHByb3hpbWF0aXZlbWVudCAlKGR1cmF0aW9uKXMuLi4AQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGRlIGNvbnRlbnUsIGNlbGEgbmUgcHJlbmRyYSBxdSd1biBtb21lbnQuLi4AUmVuZHUgZHUgdGltZWxhcHNlICUobW92aWVfcHJlZml4KXMgZW4gY291cnMuIFBvdXIgZGVzIHJhaXNvbnMgZGUgcGVyZm9ybWFuY2UsIGlsIGVzdCByZWNvbW1hbmTDqSBkZSBuZSBwYXMgbGFuY2VyIGQnaW1wcmVzc2lvbiBwZW5kYW50IHF1ZSBsZSByZW5kdSBlc3QgZW4gY291cnMuAE1pc2Ugw6Agam91ciBkZSAlKG5hbWUpcyB2ZXJzICUodmVyc2lvbilzAE1pc2Ugw6Agam91ciBlbiBjb3VycywgdmV1aWxsZXogcGF0aWVudGVyLgBEaWFtw6h0cmUgZGUgbGEgYnVzZQBOb21icmUgZCdleHRydWRldXJzAE5vbWJyZSBkZSBmaWxzIGQnZW5jb2RhZ2UgRkZNUEVHAEwnb2JqZXQgbmUgY29ycmVzcG9uZCBwYXMgYXUgdm9sdW1lIGQnaW1wcmVzc2lvbgBMJ29iamV0IGVzdCB0cm9wIHByb2ZvbmQuPGJyPgBMJ29iamV0IGVzdCB0cm9wIGhhdXQuPGJyPgBM4oCZb2JqZXQgZXN0IHRyb3AgbGFyZ2UuPGJyPgBMJ29iamV0ICUobmFtZSlzIGEgdW4gdm9sdW1lIGQnaW1wcmVzc2lvbiBwbHVzIGdyYW5kIHF1ZSBsZSBwcm9maWwgc8OpbGVjdGlvbm7DqSwgYXR0ZW50aW9uIGF2ZWMgbCdpbXByZXNzaW9uLgBCb8OudGUgZGUgZMOpbGltaXRhdGlvbiBkZSBsJ29iamV0OiAoJShvYmplY3QubWluWCkuMmYsICUob2JqZWN0Lm1pblkpLjJmLCAlKG9iamVjdC5taW5aKS4yZikgJnRpbWVzOyAoJShvYmplY3QubWF4WCkuMmYsICUob2JqZWN0Lm1heFkpLjJmLCAlKG9iamVjdC5tYXhaKS4yZikAT2N0b1ByaW50AENpYmxlIGRlIDxjb2RlPnBpcDwvY29kZT4gT2N0b1ByaW50AENhbmFsIGRlIG1pc2Ugw6Agam91ciBPY3RvcHJpbnQAUGFyYW3DqHRyZXMgT2N0b1ByaW50AE9jdG9QcmludCBuZSBwZXV0IHBhcyBhY2PDqWRlciDDoCBpbnRlcm5ldC4gU2kgY2Ugbidlc3QgcGFzIHZvdWx1LCB2ZXVpbGxleiB2w6lyaWZpZXIgbGVzIHBhcmFtw6h0cmVzIHLDqXNlYXUgZGUgT2N0b1ByaW50IGV0IGxhIGNvbmZpZ3VyYXRpb24gZGUgbGEgY29ubmV4aW9uLiBMZXMgbWlzZXMgw6Agam91ciwgbGUgZMOpcMO0dCBkZXMgZXh0ZW5zaW9ucyBldCB0b3V0IGNlIHF1aSBuw6ljZXNzaXRlIHVuIGFjY8OocyDDoCBpbnRlcm5ldCBuZSBmb25jdGlvbm5lcm9udCBwYXMuAERvc3NpZXIgZGUgdsOpcmlmaWNhdGlvbiBkZSBPY3RvUHJpbnQAT2N0b1ByaW50IG4nYSBwYXMgcHUgY3LDqWVyIHZvdHJlIHNhdXZlZ2FyZGUuIFZldWlsbGV6IGNvbnN1bHRlciA8Y29kZT4gb2N0b3ByaW50LmxvZyA8L2NvZGU+IHBvdXIgcGx1cyBkZSBkw6l0YWlscy4gRXJyZXVyOiAlKGVycm9yKXMATWlzZSDDoCBKb3VyIGRlIE9jdG9wcmludCBvdSBkJ3VuZSBleHRlbnNpb24gcsOpdXNzaWUgb3Ugw6ljaG91w6llAENvbW1hbmRlcyBsacOpZXMgw6AgT2N0b1ByaW50AFN1aXZpIGRlIHZlcnNpb24gZGUgT2N0b1ByaW50AE9jdG9QcmludCDDqXZhbHVlcmEgbGVzIGluc3RhbnRhbsOpcyBsaW1pdGVzIMOgIGNldCBpbnRlcnZhbGxlIG1pbmltdW0uIENlY2kgcG91ciDDqXZpdGVyIGxlcyBwcm9ibMOobWVzIGRlIHBlcmZvcm1hbmNlcyBhdmVjIGxlIG1vZGUgdmFzZSAvIGltcHJlc3Npb25zIHogZW4gY29udGludS4AT2N0b1ByaW50IHV0aWxpc2VyYSBsJ2ltYWdlIGZpbmFsZSBwb3VyIGFqb3V0ZXIgY2Ugbm9tYnJlIGRlIHNlY29uZGVzIMOgIGxhIGZpbiBkZSB2b3RyZSBUaW1lbGFwc2UuAE9jdG9QcmludCB1dGlsaXNlcmEgY2UgZMOpbGFpIHBvdXIgbGltaXRlciBsZSBub21icmUgZGUgY29tbWFuZGVzIGRlIHRlbXDDqXJhdHVyZSBlbnZvecOpZXMgc2kgdm91cyBlZmZlY3R1ZXogcGx1c2lldXJzIHLDqWdsYWdlcyBwcsOpY2lzIGVuIHBldSBkZSB0ZW1wcy4ATCdpbnRlcmZhY2UgdXRpbGlzYXRldXIgZCdPY3RvUHJpbnQgbsOpY2Vzc2l0ZSBKYXZhU2NyaXB0IHBvdXIgZm9uY3Rpb25uZXIuIFZldWlsbGV6IGFjdGl2ZXIgSmF2YVNjcmlwdCBldCByZWNoYXJnZXIgbGEgcGFnZS4Aw4l0ZWludABJbXByaW1hbnRlIEhvcnMgbGlnbmUARMOpY29ubmVjdMOpIGFwcsOocyB1bmUgZXJyZXVyAETDqWNhbGFnZSBkZSBsYSBidXNlAETDqWNhbGFnZSDDoCBhcHBsaXF1ZXIgYXV4IGNvbW1hbmRlcyBkZSB0ZW1ww6lyYXR1cmUgZW52b3nDqWVzIMOgIHBhcnRpciBkZSBmaWNoaWVycwBTdXIgY2hhbmdlbWVudCBkZSBsJ2F4ZSBaAEFjdGlvbnMgZGUgZMOpY291cGFnZSBpbnRlcm5lAFbDqXJpZmljYXRpb24gZGUgbGEgY29ubmVjdGl2aXTDqSBlbiBsaWduZQBMYSByZXN0YXVyYXRpb24gZW4gbGlnbmUgbidlc3QgcGFzIHByaXNlIGVuIGNoYXJnZSBwYXIgdm90cmUgc3lzdMOobWUuAE5lIGNob2lzaXNzZXogY2V0dGUgb3B0aW9uIHF1ZSBzaSB2b3RyZSBmaXJtd2FyZSBlbnZvaWUgZGVzIG1lc3NhZ2VzIGQnZXJyZXVyIHF1aSBuZSBzb250IHBhcyBkZXMgZXJyZXVycyByw6llbGxlcy4gQ2VsYSBwZXV0IG1hc3F1ZXIgbGVzIHByb2Jsw6htZXMgZOKAmWltcHJpbWFudGUgKG3Dqm1lIGxlcyBlcnJldXJzIGZhdGFsZXMgISksIFNveWV6IHBydWRlbnQgIQBOZSBtb2RpZmllciBxdWUgc2kgb24gdm91cyBsZSBkZW1hbmRlAE1vbnRyZXIgc2V1bGVtZW50ICUodHlwZSlzIGZpY2hpZXIocykATmUgbW9udHJlciBxdWUgbGVzIGV4dGVuc2lvbnMgY29tcGF0aWJsZXMATmUgbW9udHJlciBxdWUgbGVzIGZpY2hpZXJzIGVucmVnaXN0csOpcyBsb2NhbGVtZW50AE5lIG1vbnRyZXIgcXVlIGxlcyBmaWNoaWVycyBlbnJlZ2lzdHLDqXMgc3VyIGxhIGNhcnRlIFNEAE1vbnRyZXIgc2V1bGVtZW50IGxlcyBmaWNoaWVycyBkZSBjb2RlAEFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGZpY2hpZXJzIGRlcyBtb2TDqGxlcwBBZmZpY2hlciB1bmlxdWVtZW50IGxlcyBleHRlbnNpb25zIG5vbiBhYmFuZG9ubsOpcwBOZSBtb250cmVyIHF1ZSBsZXMgZXh0ZW5zaW9ucyBub24gaW5zdGFsbMOpZXMAU2V1bGVtZW50IMOgIGwnYXJyw6p0IChwYXMgZW4gaW1wcmVzc2lvbikAT3V2ZXJ0dXJlIGRlIGxhIGNvbm5leGlvbiBzw6lyaWUASW1wcmltYW50ZSBvcMOpcmF0aW9ubmVsbGUAT3JpZ2luZQBOb20gZGUgc29ydGllIGR1IGZpY2hpZXIAUGFnZSZkYXJyOwBQYWdlJnVhcnI7AE1vdCBkZSBwYXNzZQBMZSBtb3QgZGUgcGFzc2UgbmUgY29ycmVzcG9uZCBwYXMAQ2hlbWluIHZlcnMgRkZNUEVHAFBhdXNlAEVuIHBhdXNlAE1ldHRyZSBsJ2ltcHJlc3Npb24gZW4gcGF1c2UARW4gcGF1c2UATWV0dHJlIGxlcyBjb21tYW5kZXMgZW4gcGF1c2UASW5zdGFsbGF0aW9uIGVuIGF0dGVudGUARMOpc2luc3RhbGxhdGlvbiBlbiBhdHRlbnRlAEF1dG9yaXNhdGlvbnMAUGVyc29ubmFsaXNleiBsYSBjb3VsZXVyIGRlIGxhIGJhcnJlIGRlIG5hdmlnYXRpb24gLSBwZXV0LcOqdHJlIHBvdXIgY29ycmVzcG9uZHJlIMOgIHZvdHJlIGltcHJpbWFudGUgPwBWZXVpbGxleiB0b3Vqb3VycyBwYXJ0YWdlciB1biBlbnNlbWJsZSBTeXN0w6htZSBpbmZvIGxvcnNxdWUgdm91cyBkZW1hbmRleiBkZSBsJ2FpZGUgc3VyIGxlcyBmb3J1bXMgb3UKICAgICBsb3JzIGRlIGwnb3V2ZXJ0dXJlIGQndW4gbm91dmVhdSByYXBwb3J0IGRlIGJvZ3VlwqA6AE1lcmNpIGRlIGNvbmZpZ3VyZXIgcXVlbCBkw6ljb3VwZXVyIGV0IHF1ZWwgcHJvZmlsIGRlIGTDqWNvdXBlIHV0aWxpc2VyIGV0IGxlIG5vbSBkdSBmaWNoaWVyIEctY29kZSDDoCBkw6ljb3VwZXIgY2ktZGVzc291cywgb3UgY2xpcXVleiBzdXIgIkFubnVsZXIiIHNpIHZvdXMgbmUgc291aGFpdGV6IHBhcyBkw6ljb3VwZXIgbGUgZmljaGllciBwb3VyIGwnaW5zdGFudC4ATWVyY2kgZGUgY29uc3VsdGVyIGxlcyBmaWNoaWVycyBvY3RvcHJpbnQubG9nIHBvdXIgcGx1cyBkZSBkw6l0YWlscwBWZXVpbGxleiBkw6lmaW5pciBsYSB2aXRlc3NlIC8gYXZhbmNlIG1heGltYWxlIGRlcyBkaWZmw6lyZW50cyBheGVzIGV0IGluZGlxdWVyIHNpIGxldXIgY29tbWFuZGUgZG9pdCDDqnRyZSBpbnZlcnPDqWUgb3Ugbm9uLgBNZXJjaSBkZSBkw6lmaW5pciBsZSB2b2x1bWUgZCdpbXByZXNzaW9uLgBWZXVpbGxleiB2b3VzIGNvbm5lY3RlcgBBc3N1cmV6LXZvdXMgcXVlIGxlcyBwYXJhbcOodHJlcyBjaS1kZXNzb3VzIGNvcnJlc3BvbmRlbnQgw6Agdm90cmUgaW1wcmltYW50ZS4gU2kgdm91cyBwcsOpdm95ZXogZGUgY29ubmVjdGVyIHBsdXNpZXVycyBpbXByaW1hbnRlcyB2ZXJzIE9jdG9QcmludCwgdm91cyBwb3V2ZXogw6lnYWxlbWVudCBjb25maWd1cmVyIGRlcyBwcm9maWxzIGQnaW1wcmltYW50ZSBzdXBwbMOpbWVudGFpcmVzIGRhbnMgUGFyYW3DqHRyZXMgPiBQcm9maWxzIGQnaW1wcmltYW50ZQBWZXVpbGxleiBub3RlciBxdWUgT2N0b1ByaW50IHNlIGNvbnRlbnRlIGQnaW5jb3Jwb3JlciB1biBmbHV4IGRlIHdlYmNhbSBldCBkJ2FjY8OpZGVyIMOgIHVuZSBVUkwuIElsIG4nZXjDqWN1dGUgcGFzIHLDqWVsbGVtZW50IHNvbiBwcm9wcmUgc2VydmV1ciBkZSB3ZWJjYW0gZXQgbidpbnRlcmFnaXQgcGFzIGRpcmVjdGVtZW50IGF2ZWMgdm90cmUgY2Ftw6lyYS4gSWwgbmUgcGV1dCBkb25jIHBhcyBpbXBvc2VyIGRlIHJlc3RyaWN0aW9ucyBkJ2FjY8OocyDDoCBjZWxsZS1jaSBuaSBhY3RpdmVyL2TDqXNhY3RpdmVyIGxlIGZsdXggcG91ciB2b3VzLiBWZXVpbGxleiBjb25zdWx0ZXIgPGEgaHJlZj0iJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiPmNldHRlIGVudHLDqWUgZGUgbGEgRkFRPC9hPiBwb3VyIHBsdXMgZCdleHBsaWNhdGlvbnMuAFZldWlsbGV6IG5vdGVyIHF1ZSBsZXMgY2hhbmdlbWVudHMgZGUgY2zDqSBkJ0FQSSBzb250IGFwcGxpcXXDqWVzIGltbcOpZGlhdGVtZW50LCBzYW5zIGF2b2lyIMOgICJDb25maXJtZXIiIGF1IHByw6lhbGFibGUuAFZldWlsbGV6IG5vdGVyIHF1ZSBsZXMgY2hhbmdlbWVudHMgZGUgY2zDqSBBUEkgc29udCBhcHBsaXF1w6llcyBpbW3DqWRpYXRlbWVudCwgc2FucyBhdm9pciDDoCAiRW5yZWdpc3RyZXIiIGF1IHByw6lhbGFibGUuAFZldWlsbGV6IG5vdGVyIHF1ZSBzaSB2b3VzIGNob2lzaXNzZXogY2V0dGUgb3B0aW9uLCBPY3RvUHJpbnQgc2UgZMOpY29ubmVjdGVyYSB0b3Vqb3VycyBkZSBsJ2ltcHJpbWFudGUgZW4gY2FzIGQnZXJyZXVycyBmYXRhbGVzIHNpZ25hbMOpZXMgcGFyIHZvdHJlIG1pY3JvcHJvZ3JhbW1lIChwYXIgZXhlbXBsZSwgPGNvZGU+a2lsbCAoKSBjYWxsZWQ8L2NvZGU+LCA8Y29kZT5mYXRhbDo8L2NvZGU+KS4AVmV1aWxsZXogbm90ZXIgcXVlIGxlIHN5c3TDqG1lIGQnZXhwbG9pdGF0aW9uIHN1ciBsZXF1ZWwgY2Ugc2VydmV1ciBPY3RvUHJpbnQgZXN0IGV4w6ljdXTDqSBuZSBwcmVuZCBwYXMgZW4gY2hhcmdlIGxhIHJlc3RhdXJhdGlvbiBhdXRvbWF0aXF1ZSBkZXMgc2F1dmVnYXJkZXMuIFBvdXIgbGUgbW9tZW50LCA8YSBocmVmPSIlKHVybClzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj52b3VzIGRldnJleiByZXN0YXVyZXIgdm9zIHNhdXZlZ2FyZGVzIG1hbnVlbGxlbWVudDwvYT4uAFZldWlsbGV6IG5vdGVyIHF1ZSBsZSBqb3VybmFsIGRlIG1pc2Ugw6Agam91ciBuZSBjb250aWVuZHJhIHF1ZSBkZXMgZW50csOpZXMgcG91ciBsZXMgbWlzZXMgw6Agam91ciBlZmZlY3R1w6llcyB2aWEgbGUgcGx1Zy1pbiBkZSBtaXNlIMOgIGpvdXIgbG9naWNpZWxsZSBkJ09jdG9QcmludC4ATWVyY2kgZGUgcmVjaGFyZ2VyIGxhIHBhZ2UgYWZpbiBxdWUgbGVzIG5vdXZlYXV4IHBhY2tzIGRlIGxhbmd1ZSBkZXZpZW5uZW50IGRpc3BvbmlibGVzLgBWZXVpbGxleiBub3RlciAhAFZldWlsbGV6IG91dnJpciB1biA8YSBocmVmPSclKGJ1Z3JlcG9ydClzJyB0YXJnZXQ9J19ibGFuaycgcmVsPSdub29wZW5lciBub3JlZmVycmVyJz5yYXBwb3J0IGRlIGJvZ3VlPC9hPiDDoCBjZSBzdWpldC4gQXNzdXJlei12b3VzIGTigJlpbmNsdXJlIHRvdXRlcyBsZXMgaW5mb3JtYXRpb25zIGRlbWFuZMOpZXMsIHkgY29tcHJpcyB2b3RyZSA8YSBocmVmPSclKGpzY29uc29sZSlzJyB0YXJnZXQ9J19ibGFuaycgcmVsPSdub29wZW5lciBub3JlZmVycmVyJz5jb25zb2xlIEpTPC9hPiBldCA8Y29kZT5vY3RvcHJpbnQubG9nPC9jb2RlPi4ATWVyY2kgZGUgcmVjaGFyZ2VyAFZldWlsbGV6IHJlY2hhcmdlciBsYSBwYWdlIGFwcsOocyBsJ2FjdGl2YXRpb24gLyBsYSBkw6lzYWN0aXZhdGlvbiBldCBsYSBzYXV2ZWdhcmRlAFZldWlsbGV6IGNvbmZpZ3VyZXIgbGUgY29udHLDtGxlIGQnYWNjw6hzAFZldWlsbGV6IGNvbmZpZ3VyZXIgbGUgc3VpdmkgZGUgbCd1dGlsaXNhdGlvbiBhbm9ueW1lAE1lcmNpIGRlIGNvbmZpZ3VyZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBjb25uZWN0aXZpdMOpIGVuIGxpZ25lAFZldWlsbGV6IGNvbmZpZ3VyZXIgbGUgdHJhaXRlbWVudCAgZGUgbCdleHRlbnNpb24gZGUgbGEgTGlzdGUgTm9pcmUATWVyY2kgZGUgc3DDqWNpZmllciBsZSBub20gZHUgZG9zc2llciDDoCBjcsOpZXIuAFZldWlsbGV6IHNww6ljaWZpZXIgbGUgZMOpY2FsYWdlIGRlIGxhIChkZXMpIGJ1c2UocykgZGUgbCcgKGRlcykgZXh0cnVkZXVzZShzKSBwYXIgcmFwcG9ydCDDoCBsYSBwcmVtacOocmUgYnVzZSBUMCA8c3Ryb25nPnNpIHZvdXMgbmUgbCdhdmV6IHBhcyBkw6lqw6AgZmFpdCBkYW5zIHZvdHJlIGZpcm13YXJlPC9zdHJvbmc+LiBTaW5vbiwgbGFpc3Nlei1sYSAobGVzKSDDoCAoMCwwKS4ARXh0ZW5zaW9uAExpc3RlIE5vaXJlIGRlcyBleHRlbnNpb25zAENvbmZpZ3VyYXRpb24gZHUgR2VzdGlvbm5haXJlIGQnZXh0ZW5zaW9ucwBHZXN0aW9ubmFpcmUgZGVzIGV4dGVuc2lvbnMAVVJMIGRlIGwnZXh0ZW5zaW9uIExpc3RlIE5vaXJlLiBWb3VzIG5lIGRldnJpZXogcGFzIGF2b2lyIMOgIG1vZGlmaWVyIGNlbGEuAEV4dGVuc2lvbiBkZSB0cmFpdGVtZW50IGRlIGxhIExpc3RlIE5vaXJlAERvc3NpZXIgZGUgbCdleHRlbnNpb24ARXh0ZW5zaW9uIGluc3RhbGzDqWUvZMOpc2luc3RhbGzDqWUvYWN0aXbDqWUvZMOpc2FjdGl2w6llAEpvdXJuYWwgZGUgZ2VzdGlvbiBkZXMgZXh0ZW5zaW9ucwBDb25maWd1cmF0aW9uIGR1IGTDqXDDtHQgZCdleHRlbnNpb25zAFBsdWdpbiBwb3VyIGNvbmZpZ3VyZXIgbGVzIGFib25uZW1lbnRzIGF1eCDDqXbDqW5lbWVudHMgZGlzcG9uaWJsZXMgZGFucyBjb25maWcueWFtbC4ARXh0ZW5zaW9ucwBQb3J0AFBvcnQgcXVpIHNlcnZpcmEgw6AgdsOpcmlmaWVyIGxhIGNvbm5lY3Rpb24gw6AgaW50ZXJuZXQASW50ZXJ2YWxsZSBkZSBwb3NpdGlvbiBkYW5zIGxlIHJhcHBvcnQgYXV0b21hdGlxdWUASW50ZXJ2YWxsZSBkZSBwb3NpdGlvbiDDoCBkZW1hbmRlciBhdXggZmlybXdhcmVzIGNvbXBhdGlibGVzIGF2ZWMgbGVzIHJhcHBvcnRzIGF1dG9tYXRpcXVlcy4gVW5lIHZhbGV1ciBkZSAwIGTDqXNhY3RpdmUgbGEgZ8OpbsOpcmF0aW9uIGRlIHJhcHBvcnRzIGF1dG9tYXRpcXVlcyBwYXIgbGUgZmlybXdhcmUuAETDqWxhaSBkJ2V4cGlyYXRpb24gZGUgcG9zaXRpb25uZW1lbnQAQWNjw6hzIGV4dGVybmUgcHJvYmFibGUgZMOpdGVjdMOpAFByw6lyw6lnbGFnZXMAUHLDqWPDqWRlbnQAQ291Y2hlIHByw6ljw6lkZW50ZQBJbXByaW1lcgBUZW1wcyBkJ2ltcHJlc3Npb24AVGVtcHMgcmVzdGFudABQbGF0ZWF1IGQnaW1wcmVzc2lvbiAmIHZvbHVtZSBkJ2ltcHJlc3Npb24ASW1wcmVzc2lvbiBEw6ltYXJyw6llL0FubnVsw6llL1Rlcm1pbsOpZQBWb2x1bWUgZCdpbXByZXNzaW9uIDogKCUocHJvZmlsZS5taW5YKS4yZiwgJShwcm9maWxlLm1pblkpLjJmLCAlKHByb2ZpbGUubWluWikuMmYpICZ0aW1lczsgKCUocHJvZmlsZS5tYXhYKS4yZiwgJShwcm9maWxlLm1heFkpLjJmLCAlKHByb2ZpbGUubWF4WikuMmYpAEltcHJpbcOpAEltcHJpbWFudGUARGlhbG9ndWUgYXZlYyBsJ2ltcHJpbWFudGUATm90aWZpY2F0aW9uIGQnaW1wcmltYW50ZQBOb3RpZmljYXRpb25zIGRlIGwnaW1wcmltYW50ZQBQcm9maWwgZCdpbXByaW1hbnRlAFByb2ZpbCBkZXMgSW1wcmltYW50ZXMAQXZlcnRpc3NlbWVudHMgcmVsYXRpZnMgYXUgY29udHLDtGxlIGRlIHPDqWN1cml0w6kgZGUgbCdpbXByaW1hbnRlAENvbnRyw7RsZSBkZSBsJ2ltcHJpbWFudGUAUsOpaW5pdGlhbGlzYXRpb24gZGUgbCdpbXByaW1hbnRlIGTDqXRlY3TDqWUASW1wcmVzc2lvbgBJbXByZXNzaW9uIGRlcHVpcyBsYSBjYXJ0ZSBTRABQcm9ibMOobWUgbG9ycyBkdSBkZXJuaWVyIGTDqW1hcnJhZ2UAQ29udGludWVyAFByb2dyZXNzaW9uAFLDqWdsYWdlIGZpbiBkdSBwcm90b2NvbGUARm91cm5pciBsZXMgdmFsZXVycyB5IGNvbXByaXMgbCd1bml0w6kgZGUgdGFpbGxlLiBMZXMgdW5pdMOpcyBhZG1pc2VzIHNvbnQgOiBiLCBieXRlLCBieXRlcywga2IsIG1iLCBnYiwgdGIgKG5vbiBzZW5zaWJsZSDDoCBsYSBjYXNzZSkuIFBhciBFeGVtcGxlIDogPGNvZGU+NU1CPC9jb2RlPiwgPGNvZGU+NTAwS0I8L2NvZGU+AEZpcm13YXJlIGRlIFBydXNhAERhdGUgZGUgcHVibGljYXRpb24AUHl0aG9uAERvc3NpZXIgZCdpbnN0YWxsYXRpb24gZHUgcGFja2FnZSBQeXRob24AUVIgQ29kZQBJbnRlcnZhbGxlcyBkZXMgUmVxdcOqdGVzAElEIGQnaW5zdGFuY2UgdW5pcXVlIGFsw6lhdG9pcmUATGUgdGF1eCBsaW1pdGUgZXN0IGTDqXBhc3PDqSBsb3JzIGRlIGxhIHbDqXJpZmljYXRpb24gZGUgbGEgbWlzZSDDoCBqb3VyLCB2ZXVpbGxleiByw6llc3NheWVyIHBsdXMgdGFyZABFbiBzYXZvaXIgcGx1cy4uLgBMaXJlLi4uAFJlZMOpbWFycmVyIGxlIHN5c3TDqG1lAExlIHJlZMOpbWFycmFnZSBkdSBzZXJ2ZXVyIGEgw6ljaG91w6ksIHZldWlsbGV6IGxlIHJlZMOpbWFycmVyIG1hbnVlbGxlbWVudC4gVm91cyBwb3V2ZXogw6lnYWxlbWVudCBjb25zdWx0ZXIgb2N0b3ByaW50LmxvZyBzdXIgY2UgcXVpIHMnZXN0IHBhc3PDqSBpY2kuAFNlIHJlY29ubmVjdGVyIC4uLgBSZWN0YW5ndWxhaXJlAFJhZnJhw65jaGlyAFJhZnJhw65jaGlyIGxlcyBhbm5vbmNlcwBSYWZyYcOuY2hpciBsZXMgZmljaGllcnMgZGUgbGEgY2FydGUgU0QAQWN0dWFsaXNlciBsZXMgb3B0aW9ucyBkZSBjb25uZXhpb24AUmFmcmHDrmNoaXIgbGEgbGlzdGUgZGVzIGZpY2hpZXJzAFJhZnJhw65jaGlyIGxhIGxpc3RlIMOgIHBhcnRpciBkdSBkw6lww7R0AFJhZnJhw65jaGlyIGxlcyBhbm5vbmNlcyBkZXB1aXMgbGUgZMOpcMO0dABBY3R1YWxpc2F0aW9uIGRlIGxhIGxpc3RlIC4uLgBSZWdFeHAAQ2zDqXMgZCdhcHBsaWNhdGlvbiBlbnJlZ2lzdHLDqWVzAFBpbmcgcsOpZ3VsaWVyIHRvdXRlcyBsZXMgMTVtaW4gKGTDqW1hcnJhZ2UgaW5jbHVzKQBQb25nIHLDqWd1bGllciB0b3V0ZXMgbGVzIDI0aCAobGlzdGUgZCdleHRlbnNpb24gaW5jbHVzZXMpAFLDqWluc3RhbGxhdGlvbgBSw6lpbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24gIiUobmFtZSlzIiBkZXB1aXMgJSh1cmwpcy4uLgBSw6lpbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24uLi4ARXh0ZXJuZQBDYW5hbCBkZSBkaWZmdXNpb24gOgBOb3RlcyBkZSB2ZXJzaW9uAE5vdGVzIGRlIHZlcnNpb25zOgBMaWLDqXJlciBsYSBjYXJ0ZSBTRABSZWNoYXJnZXIAVG91dCByZWNoYXJnZXIAUmVjaGFyZ2VyIG1haW50ZW5hbnQAUmVjaGFyZ2VyIHVuaXF1ZW1lbnQgbGVzIG1vZGlmaWNhdGlvbnMgc2FucyBjb25mbGl0cwBTZSBzb3V2ZW5pciBkZSBtb2kAU3VwcHJpbWVyAFJlbm9tbWVyIHBvdXIARmFpcmUgbGUgcmVuZHUgZHUgdGltZWxhcHNlAE9wdGlvbnMgZHUgcmVuZHUAUmVuZHUgZGUgJSh0YXJnZXQpcy4uLgBSZW5kdSBkZSAlKHRhcmdldClzLi4uKCUocHJvZ3Jlc3MpZCUlKQBMZSByZW5kdSBkdSBUaW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBhIMOpY2hvdcOpIMOgIGNhdXNlIGQndW5lIGVycmV1ciBpbmNvbm51ZSwgbWVyY2kgZGUgY29uc3VsdGVyIGxlIGZpY2hpZXIgbG9nAExlIHJlbmR1IGR1IFRpbWVsYXBzZSAlKG1vdmllX3ByZWZpeClzIGEgw6ljaG91w6kgYXZlYyBsZSBjb2RlICUocmV0dXJuY29kZSlzAExlIHJlbmR1IGR1IFRpbWVsYXBzZSAgJShtb3ZpZV9wcmVmaXgpcyBuJ2VzdCBwYXMgcG9zc2libGUgw6l0YW50IGRvbm7DqSBxdeKAmWF1Y3VuZSBpbWFnZSBuJ2VzdCBjYXB0dXLDqWUuIEwnVVJMIGRlcyBTbmFwc2hvdCwgZXN0LWVsbGUgY29uZmlndXLDqWUgY29ycmVjdGVtZW50ID8AUmVuZHUgZHUgVGltZWxhcHNlAExlIHJlbmR1IGR1IFRpbWVsYXBzZSBhIMOpY2hvdcOpAEZpcm13YXJlIFJlcFJhcABSw6lww6l0ZXIgbGUgbW90IGRlIHBhc3NlAFLDqXDDqXRldXIAVVJMIGR1IGTDqXDDtHQAQ2FjaGUgZHUgZMOpcMO0dCBUVEwARGVtYW5kZSB1biBhY2PDqHMgZXhjbHVzaWYgYXUgcG9ydCBzw6lyaWUARGVtYW5kZXIgdW4gbW9kZSDDoCBmYWlibGUgbGF0ZW5jZSBzdXIgbGUgcG9ydCBzw6lyaWUAUmVudm95ZXIgbGUgc3VpdmkAUmVudm95ZXIgbGUgcmF0aW8AU2V1aWwgZHUgcmF0aW8gZGUgcmVudm9pLiBQb3VyY2VudGFnZSBkZSBkZW1hbmRlcyBkZSByZW52b2kgcGFybWkgdG91dGVzIGxlcyBsaWduZXMgZW52b3nDqWVzIMOgIGNvbnNpZMOpcmVyIGNvbW1lIGNyaXRpcXVlcy4AUsOpaW5pdGlhbGlzZXIgbGVzIG9wdG9ucwBSZXRvdXIgw6AgbGEgY29uZmlndXJhdGlvbiBwcsOpY8OpZGVudGUAUmVtaXNlIMOgIGpvdXIgZGUgbGEgdnVlIGRlIGwnaW50ZXJmYWNlAFLDqWFmZmljaGVyIGxlcyBhbm5vbmNlcyBhY3R1ZWxsZXMAUmVkw6ltYXJyZXIAUmVkw6ltYXJyZXIgT2N0b1ByaW50AFJlZMOpbWFycmVyIE9jdG9QcmludCBlbiBtb2RlIHNhbnMgw6ljaGVjAMOJY2hlYyBkdSByZWTDqW1hcnJhZ2UAUmVkw6ltYXJyYWdlIGVuIGNvdXJzAFJlZMOpbWFycmVyIG1haW50ZW5hbnQAUmVkw6ltYXJyYWdlIGRlIE9jdG9QcmludCBuw6ljZXNzYWlyZSBwb3VyIGxhIHByaXNlIGVuIGNvbXB0ZSBkdSBjaGFuZ2VtZW50AFJlZMOpbWFycmUgbGUgc3lzdMOobWUATGUgcmVkw6ltYXJyYWdlIGRlIE9jdG9QcmludCBhIMOpY2hvdcOpLiBWZXVpbGxleiBsZSByZWTDqW1hcnJlciBtYW51ZWxsZW1lbnQuIFZvdXMgcG91dmV6IMOpZ2FsZW1lbnQgY29uc3VsdGVyIG9jdG9wcmludC5sb2cgc3VyIGNlIHF1aSBzJ2VzdCBwYXNzw6kgaWNpLgBSZWTDqW1hcnJlciBsJ2ltcHJlc3Npb24gZGVwdWlzIGxlIGTDqWJ1dABSZXN0YXVyZXIAUmVzdGF1cmVyIGxhIHNhdXZlZ2FyZGUgPwBMYSByZXN0YXVyYXRpb24gYSDDqWNob3XDqSEgVsOpcmlmaWV6IGxlIGNoZW1pbiBjaS1kZXNzdXMgZXQgb2N0b3ByaW50LmxvZyBwb3VyIGNvbm5hw650cmUgbGVzIHJhaXNvbnMuAFJlc3RhdXJlciDDoCBwYXJ0aXIgZCd1bmUgc2F1dmVnYXJkZSA/AFJlc3RhdXJlciDDoCBwYXJ0aXIgZCd1bmUgc2F1dmVnYXJkZSB0w6lsw6ljaGFyZ8OpZQBSZXN0YXVyZXogbGVzIHBhcmFtw6h0cmVzIGV0IGxlcyBmaWNoaWVycyDDoCBwYXJ0aXIgZCd1bmUgYXJjaGl2ZSBkZSBzYXV2ZWdhcmRlIHTDqWzDqWNoYXJnw6llLgBSZXN0YXVyw6kgYXZlYyBzdWNjw6hzISBMZSBzZXJ2ZXVyIHZhIG1haW50ZW5hbnQgw6p0cmUgcmVkw6ltYXJyw6khAFJlc3RhdXJhdGlvbiDDoCBwYXJ0aXIgZCd1bmUgc2F1dmVnYXJkZSAuLi4AUmVwcmVuZHJlAFJlcHJlbmRyZSBsJ2ltcHJlc3Npb24AUmVwcmVuZHJlAFLDqXRyYWN0ZXIARGlzdGFuY2UgZGUgcsOpdHJhY3RhdGlvbgBMYSByw6l2b2NhdGlvbiBkZSAlKGtleSlzIGEgw6ljaG91w6ksIGNvbnRpbnVlciAuLi4AUmV0aXJlcgBSZXRpcmVyIGxhIHPDqWxlY3Rpb24AJShrZXkpcyBSw6l2b3F1w6kuLi4AUsOpdm9xdWUgJShjb3VudClkIGNsw6lzIGQnYXBwbGljYXRpb24gLi4uAFLDqXZvY2F0aW9uIGRlcyBjbMOpcyBkJ2FwcGxpY2F0aW9uAFRvdXJuZXIgbGEgd2ViY2FtIGRlIDkwwrAgZGFucyBsZSBzZW5zIGRlcyBhaWd1aWxsZXMgZCd1bmUgbW9udHJlAEZvbmN0aW9ubmUgbG9jYWxlbWVudABPcMOpcmF0aW9ucyBzdXIgbGEgY2FydGUgU0QAQ2FydGUgU0Qgbm9uIGluaXRpYWxpc8OpZQBJbnRlcnZhbGxlIGQnw6l0YXQgZGUgbGEgY2FydGUgU0QgKHJlcG9ydCBhdXRvbWF0aXF1ZSkASW50ZXJ2YWxsZSBkJ8OpdGF0IGRlIGxhIGNhcnRlIFNEICh2b3RlKQBJbnRlcnZhbGxlIGQnw6l0YXQgZGUgbGEgY2FydGUgU0Qgw6AgZGVtYW5kZXIgw6AgcGFydGlyIGRlIGZpcm13YXJlIGNvbXBhdGlibGUgYXZlYyBsZSBwb3J0IGF1dG9tYXRpcXVlLiBVbmUgdmFsZXVyIGRlIDAgZMOpc2FjdGl2ZSBsZSByYXBwb3J0IGF1dG9tYXRpcXVlIHBhciBsZSBmaXJtd2FyZSBldCBmb3JjZSBsYSByw6ljdXDDqXJhdGlvbi4AT3VwcywgbGUgZMOpcMO0dCBuJ2VzdCBwYXMgZGlzcG9uaWJsZQBNb2RlIHNhbnMgw6ljaGVjIGFjdGlmAFbDqXJpZmljYXRpb24gZGUgbCfDqXRhdCBkZSBmb25jdGlvbm5lbWVudABDb21tYW5kZXMgZGUgbCdvdXRpbCBkZSB2w6lyaWZpY2F0aW9uIGRlIGwnw6l0YXQgZGUgZm9uY3Rpb25uZW1lbnQARW5yZWdpc3RyZXIAU2F1dmVnYXJkZXIgcGFyIGTDqWZhdXQARW5yZWdpc3RyZXIgbGVzIG1vZGlmaWNhdGlvbnMAU2F1dmVnYXJkZXIgbGVzIHBhcmFtw6h0cmVzIGRlIGNvbm5leGlvbgBTYXV2ZWdhcmRlIC4uLgBBbGxlciDDoCBsYSBmaW4AUmVjaGVyY2hlci4uLgBWb2lyIDxhIGhyZWY9JyUodXJsKXMnIHRhcmdldD0nX2JsYW5rJz5pc3N1ZSAjNDExNzwvYT4uAFPDqWxlY3Rpb25uZXIgbGVzIGVtcGxhY2VtZW50cyBkZXMgZmljaGllcnMgZW4gbWludXNjdWxlIGRlIGxhIGNhcnRlIFNEAFPDqWxlY3Rpb25uZXogbGVzIGZpY2hpZXJzIHN1ciBsYSBjYXJ0ZSBTRCBwYXIgbGV1ciBjaGVtaW4gcmVsYXRpZgBTw6lsZWN0aW9ubmVyIHVuIGVucmVnaXN0cmV1ciBkZXMgbG9ncyAuLi4AU8OpbGVjdGlvbm5lciB1biBwcm9maWwgZCdpbXByaW1hbnRlLi4uAFPDqWxlY3Rpb25uZXIgdW4gZMOpY291cGV1ciAuLi4AU8OpbGVjdGlvbm5lciB1biBwcm9maWwgZGUgZMOpY291cGUuLi4AVG91dCBzw6lsZWN0aW9ubmVyAFRvdXQgc8OpbGVjdGlvbm5lciBwYXIgYXBwbGljYXRpb24gLi4uAFRvdXQgc8OpbGVjdGlvbm5lciBwYXIgbCd1dGlsaXNhdGV1ciAuLi4AVG91dCBzw6lsZWN0aW9ubmVyIHN1ciBsYSBwYWdlAFPDqWxlY3Rpb25uZXogbGUgZG9zc2llciBkZSBkZXN0aW5hdGlvbiBwb3VyIABTw6lsZWN0aW9ubmVyIHBvdXIgbCdpbXByZXNzaW9uAEVudm95ZXIARW52b3llciA8Y29kZT5NMTEyPC9jb2RlPiDDoCBsYSBkw6ljb25uZXhpb24gZW4gcmFpc29uIGQndW5lIGVycmV1cgBFbnZveWV6IDxjb2RlPk0yMCBMPC9jb2RlPiBhdSBsaWV1IGRlIDxjb2RlPk0yMDwvY29kZT4gcG91ciB1dGlsaXNlciBkZXMgbGlzdGVzIGRlIGZpY2hpZXJzIFNEIMOpdGVuZHVlcywgc2kgZWxsZXMgc29udCBkw6l0ZWN0w6llcyBjb21tZSBwcmlzZXMgZW4gY2hhcmdlIHBhciBsZSBmaXJtd2FyZSAobWljcm9sb2dpY2llbCkARW52b3llciB1bmUgc29tbWUgZGUgY29udHLDtGxlIGF2ZWMgbGEgY29tbWFuZGUARW52b2kgZGVzIEctY29kZSA8Y29kZT5NMTA4PC9jb2RlPiBldCA8Y29kZT5NNDEwPC9jb2RlPiBkJ3VyZ2VuY2Ugc2FucyBhdHRlbnRlIGQnYWNjdXPDqSBkZSByw6ljZXB0aW9uLCBzaSBjZWxhIGVzdCBkw6l0ZWN0w6kgY29tbWUgw6l0YW50IHByaXMgZW4gY2hhcmdlIHBhciBsZSBmaXJtd2FyZQBNb2RpZmlleiBhdXRvbWF0aXF1ZW1lbnQgbGVzIHLDqWdsYWdlcyBkZSB0ZW1ww6lyYXR1cmUARMOpbGFpIGQnZW52b2kARW52b2kgZHUgZmljaGllciB2ZXJzIGxhIGNhcnRlIFNEAENvbm5leGlvbiBzw6lyaWUAUG9ydCBzw6lyaWUAVml0ZXNzZSBkZSB0cmFuc21pc3Npb24gZHUgcG9ydCBzw6lyaWUsIHBvc2l0aW9ubmVyIGNlIHBhcmFtw6h0cmUgc3VyIEFVVE8gbGFpc3NlcmEgT2N0b1ByaW50IHRlbnRlciBkZSB0cm91dmVyIGF1dG9tYXRpcXVlbWVudCBsZSBib24gcGFyYW3DqHRyZQBFbnJlZ2lzdHJlbWVudCBlbiBzw6lyaWUAUG9ydCBzw6lyaWUgYXVxdWVsIHNlIGNvbm5lY3RlciwgcG9zaXRpb25uZXIgY2UgcGFyYW3DqHRyZSBzdXIgQVVUTyBsYWlzc2VyYSBPY3RvUHJpbnQgdGVudGVyIGRlIHRyb3V2ZXIgYXV0b21hdGlxdWVtZW50IGxlIGJvbiBwYXJhbcOodHJlAFNlcnZldXIAQ29tbWFuZGVzIGR1IHNlcnZldXIATGUgc2VydmV1ciBlc3QgYWN0dWVsbGVtZW50IGhvcnMgbGlnbmUuAExlIHNlcnZldXIgZXN0IGhvcnMgbGlnbmUARMOpbWFycmFnZSBldCBhcnLDqnQgZHUgc2VydmV1cgBGaXhlcgBEw6lmaW5pciAlKG5hbWUpcyAoJSh2YWx1ZSlzKQBFdGFibGlyIGNvbW1lIHByb2ZpbGUgcGFyIGTDqWZhdXQARMOpZmluaXIgbGUgbm9tIGR1IGZpY2hpZXIgZGUgZGVzdGluYXRpb24gAETDqWZpbmlyIGxlIHByb2ZpbCBkZSB0ZW1ww6lyYXR1cmUAUsOpZ2xleiBzdXIgMCBwb3VyIGTDqXNhY3RpdmVyIGxhIGTDqXRlY3Rpb24gZXQgbGEgbWFuaXB1bGF0aW9uIGNvbnPDqWN1dGl2ZXMgZHUgZMOpbGFpcyBkJ2F0dGVudGUuAENvbmZpZ3VyZXIgdm90cmUgcHJvZmlsIGQnaW1wcmltYW50ZQBSw6lnbGFnZSBkYW5zIGNvbmZpZy55YW1sAFBhcmFtw6h0cmVzAE1pc2Ugw6Agam91ciBkZXMgcGFyYW3DqHRyZXMgZMOpdGVjdMOpZQBBc3Npc3RhbnQgZGUgY29uZmlndXJhdGlvbgBCdXNlIGNvbW11bmUAQWZmaWNoZXIgbGEgcG9zaXRpb24gYXBwcm94aW1hdGl2ZSBkZSBsYSB0w6p0ZSBkJ2ltcHJlc3Npb24AQWZmaWNoZXIgbGVzIGV4dGVuc2lvbnMgZm91cm5pZXMgZXQgdGllcmNlcwBBZmZpY2hlciBsZXMgZXh0ZW5zaW9ucyBhY3RpdsOpZXMgZXQgZMOpc2FjdGl2w6llcwBBZmZpY2hlciBsZXMgYXJjcyBkZSBkw6lib2dhZ2UAQWZmaWNoZXIgbGVzIGVzdGltYXRpb25zIGRlIHRlbXBzIGQnaW1wcmVzc2lvbiBmbG91ZQBBZmZpY2hlciBsZSBub20gZHUgZmljaGllciBpbnRlcm5lIGRhbnMgbGEgYmFycmUgbGF0w6lyYWxlIGRlcyBmaWNoaWVycyAoc2kgZGlzcG9uaWJsZSkAQWZmaWNoZXIgbGEgYm/DrnRlIGRlIGTDqWxpbWl0YXRpb24gZGUgbGEgY291Y2hlAE1vbnRyZXIgbGVzIG1vdXZlbWVudHMATW9udHJlciBsZXMgbm90aWZpY2F0aW9ucyAiaW5mbyIgZXQgIndhcm5pbmciAE1vbnRyZXIgbGVzIG5vdGlmaWNhdGlvbnMgIndhcm5pbmciAEFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGV4dGVuc2lvbnMgZm91cm5pZXMAQWZmaWNoZXIgdW5pcXVlbWVudCBsZXMgZXh0ZW5zaW9ucyBkw6lzYWN0aXbDqWVzAEFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGV4dGVuc2lvbnMgYWN0aXbDqWVzAEFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGV4dGVuc2lvbnMgdGllcmNlcwBBZmZpY2hlciBsYSBib8OudGUgZGUgZMOpbGltaXRhdGlvbiBpbXByaW3DqWUATW9udHJlciBsZXMgcsOpdHJhY3Rpb25zAE1vbnRyZSBsZSBkw6lidXQgZHUgc2VnbWVudABJbmRpcXVlciBsZXMgdGVtcMOpcmF0dXJlcyBlbiBkZWdyw6kgRmFocmVuaGVpdCBwbHV0w7R0IHF1J2VuIGRlZ3LDqSBDZWxzaXVzAEFmZmljaGVyIGxlcyBub3RpZmljYXRpb25zIGRlIG1pc2Ugw6Agam91ciDDoCB0b3VzIGxlcyB1dGlsaXNhdGV1cnMAQWZmaWNoZXIgbGUgY2FkcmUgZGUgZMOpbGltaXRhdGlvbiB2aXNpdMOpAMOJdGVpbmRyZSBsZSBzeXN0w6htZQBTaW11bGVyIDxjb2RlPm9rPC9jb2RlPiBwb3VyIDxjb2RlPk0yOTwvY29kZT4AU2ltdWxlcjxjb2RlPm9rPC9jb2RlPiBwb3VyIGxlcyBkZW1hbmRlcyBkZSByZW52b2kAU2l0ZSBwYXIgZMOpZmF1dABUYWlsbGUAU2UgcmVuZHJlIGRpcmVjdGVtZW50IGljaQBQYXNzZXIvY2FjaGVyIGxlIGdjb2RlIGp1c3F1J8OgIGNldHRlIGNoYWluZSBkZSBjYXJhY3TDqHJlcwBEw6ljb3VwZXIARMOpY291cMOpIGRlICUoc3RsKXMgdmVycyAlKGdjb2RlKXMsIGVuICUodGltZSkuMmYgc2Vjb25kZXMARMOpY291cGV1cgBEw6ljb3VwYWdlIGRlICUoZmlsZW5hbWUpcwBEw6ljb3VwYWdlIC4uLgBEw6ljb3VwYWdlIC4uLiAoJShwZXJjZW50YWdlKWQlJSkAUHJvZmlsIGRlIGTDqWNvdXBlAETDqWNvdXBhZ2UgdGVybWluw6kATGUgZMOpY291cGFnZSBhIMOpY2hvdcOpAExlIGTDqWNvdXBhZ2UgZXN0IGTDqXNhY3RpdsOpIGNhciBhdWN1biBkw6ljb3VwZXVyIG4nYSDDqXTDqSBjb25maWd1csOpLiBNZXJjaSBkZSBjb25maWd1cmVyIHVuIGTDqWNvdXBldXIgZGFucyAiUGFyYW3DqHRyZXMiLgBTbW9vdGhpZXdhcmUAVVJMIGR1IFNuYXBzaG90AEludGVydmFsbGUgZGUgY2FwdHVyZSBkJ2ltYWdlcwBUZXN0IGRlIGNhcHR1cmUgZCfDqWNyYW4ATGUgdGVzdCBkZSBjYXB0dXJlIGQndW5lIGltYWdlIGEgw6ljaG91w6kARMOpbGFpcyBkJ2F0dGVudGUgZGUgbGEgY2FwdHVyZSBkJ2ltYWdlcwBNaXNlIMOgIGpvdXIgZHUgbG9naWNpZWwAQ2VydGFpbmVzIGZvcmtzIE1hcmxpbiBzb250IGTDqXBvdXJ2dWVzIGQndW4gYWNjdXPDqSBkZSByw6ljZXB0aW9uIDxjb2RlPm9rPC9jb2RlPiBhdmVjIGxldXJzIGRlbWFuZGVzIGRlIHLDqWV4cMOpZGl0aW9uLiBSw6lnbGV6IGNlIHBhcmFtw6h0cmUgc3VyICJ0b3Vqb3VycyIgb3UgInNpIG7DqWNlc3NhaXJlIiBzaSB2b3VzIHJlbmNvbnRyZXogZGVzIHByb2Jsw6htZXMgZGUgY29tbXVuaWNhdGlvbiBsb3JzIGRlIGRlbWFuZGVzIGRlIHLDqWV4cMOpZGl0aW9uLgBDZXJ0YWlucyBjb250csO0bGV1cnMgb250IGJlc29pbiBkJ3VuIHBldSBkZSB0ZW1wcyBhdmFudCBsYSBkw6l0ZWN0aW9uIGRlIGxhIHZpdGVzc2UgZGUgdHJhbnNtaXNzaW9uIGFwcsOocyBsYSBjb25uZXhpb24gaW5pdGlhbGUuIFNpIGxhIGTDqXRlY3Rpb24gZGUgbGEgdml0ZXNzZSBkZSB0cmFuc21pc3Npb24gw6ljaG91ZSBlbiByYWlzb24gZCd1biBjb250csO0bGV1ciBzdXNwZW5kdSwgZXNzYXlleiBkJ2F1Z21lbnRlciBjZXR0ZSB2YWxldXIuAENlcnRhaW5lcyBmb25jdGlvbm5hbGl0w6lzIGR1IHRlcm1pbmFsIHBldXZlbnQgw6p0cmUgZMOpc2FjdGl2w6llcyBzaSBPY3RvUHJpbnQgZMOpdGVjdGUgcXVlIGxlIG5hdmlnYXRldXIgc3ViaXQgZGVzIHJhbGVudGlzc2VtZW50cy4gVm91cyBwb3V2ZXogcsOpYWN0aXZlciBjZXMgZm9uY3Rpb25zIGljaSBtYWlzIGxlIG5hdmlnYXRldXIgcmlzcXVlIGRlIG5lIHBsdXMgcsOpcG9uZHJlLgBRdWVscXVlIGNob3NlIHMnZXN0IG1hbCBwYXNzw6kAVHJpZXIgcGFyIGZpY2hpZXJzIHB1aXMgZG9zc2llcnMAVHJpZXIgcGFyIGRvc3NpZXJzIHB1aXMgZmljaGllcnMAVHJpZXIgcGFyIMOpdG9pbGVzIEdpdGh1YgBUcmllciBwYXIgbm9tYnJlIGQnaW5zdGFuY2VzIGFjdGl2ZXMAVHJpZXIgcGFyIGRhdGUAVHJpZXIgcGFyIGRhdGUgZGUgZGVybmnDqHJlIGltcHJlc3Npb24AVHJpZXIgcGFyIHRhaWxsZSBkZXMgZmljaGllcnMAVHJpZXIgcGFyIGRhdGUgZGUgZGVybmnDqHJlIGRpZmZ1c2lvbgBUcmllciBwYXIgZGF0ZSBkZSBkZXJuacOocmUgcHVibGljYXRpb24AVHJpZXIgcGFyIGRhdGUgZGUgbW9kaWZpY2F0aW9uAFRyaWVyIHBhciBub20AVHJpZXIgcGFyIGRhdGUgZGUgcHVibGljYXRpb24AVHJpZXIgcGFyIHRpdHJlAFRyaWVyIHBhciBkYXRlIGRlIHTDqWzDqXZlcnNlbWVudABUcmllciBsZXMgY2FscXVlcwBEw6ltYXJyw6kARMOpbWFycmVyIGwnaW1wcmVzc2lvbgBEw6ltYXJyZXIgbGUgZMOpY291cGFnZQBDb21tZW5jZXIgw6Agc3VpdnJlIGxhIGRlbWFuZGUgZGUgcmVudm9pIGFwcsOocyBjZSBub21icmUgZGUgbGlnbmVzIHRyYW5zbWlzZXMuAExhbmNlcgBMYW5jZXIgbCdpbXByZXNzaW9uIGRlcHVpcyBsYSBjYXJ0ZSBTRABEw6lidXQgZHUgdHJhbnNmZXJ0IHZlcnMgbGEgY2FydGUgU0QARMOpbWFycmVyIGwnaW1wcmVzc2lvbgDDiXRhdABSZXN0ZXIgY29ubmVjdMOpAFBhcwBFbiBzdGFiaWxpc2F0aW9uIC4uLgBVUkwgZGUgZGlmZnVzaW9uIGVuIGRpcmVjdABSYXRpb24gZCdhc3BlY3QgZHUgZmx1eCB2aWRlbwBUZXN0IGR1IFN0cmVhbQBEw6lsYWkgZCdhdHRlbnRlIGRlIGZsdXggZMOpcGFzc8OpAERpZmZ1c2lvbiBkZSAlKGxvY2FsKXMgdmVycyAlKHJlbW90ZSlzIHN1ciBsYSBjYXJ0ZSBTRCwgdGVtcHMgOiAlKHRpbWUpLjJmIHNlY29uZGVzAERpZmZ1c2lvbi4uLgBEaWZmdXNpb24gdGVybWluw6llAExlIHN0cmVhbWluZyBhIMOpY2hvdcOpAFNvdXMtZ3JvdXBlcwBTdXBwb3J0IDxjb2RlPlRhcmdldEV4dHIlJW48L2NvZGU+Lzxjb2RlPlRhcmdldEJlZDwvY29kZT4gZm9ybWF0IGRlIHRlbXDDqXJhdHVyZSBjaWJsZQBQcmlzZSBlbiBjaGFyZ2UgZHUgcHJvdG9jb2xlIDxjb2RlPm9jY3Vww6k8L2NvZGU+LCBzJ2lsIGVzdCBkw6l0ZWN0w6kAUHJpc2UgZW4gY2hhcmdlIGRlIGxhIG5vdGlmaWNhdGlvbiBhdXRvbWF0aXF1ZSBkZSBsYSBwb3NpdGlvbiBwYXIgbGUgZmlybXdhcmUsIHNpIGTDqXRlY3TDqQBTdXBwb3J0IGR1IHN0YXR1dCBzZCBhdXRvcmVwb3J0aW5nIHBhciBmaXJtd2FyZSwgc2kgZMOpdGVjdMOpAFN1cHBvcnQgZGUgbGEgdGVtcMOpcmF0dXJlIGF1dG9yZXBvcnRpbmcgcGFyIGZpcm13YXJlLCBzaSBkw6l0ZWN0w6kAQ29tbWFuZGUgc3VwcHJpbcOpZQBDaGFuZ2VyIGQnb3V0aWwuLi4AU3luY2hyb25pc2VyIGF2ZWMgbCdpbXByZXNzaW9uAFN5c3TDqG1lAEluZm9ybWF0aW9ucyBTeXN0w6htZQBDb21tYW5kZXMgc3lzdMOobWUATGUgc3lzdMOobWUgZXN0IHNhdHVyw6kvZGUtc2F0dXLDqSAoQWN0dWVsbGVtZW50IGTDqXRlY3TDqSBzZXVsZW1lbnQgcGFyIFJQaXMpAEluZm9ybWF0aW9uIHN5c3TDqG1lAEVuc2VtYmxlIGQnaW5mb3JtYXRpb25zIHN5c3TDqG1lAENvbW1hbmRlcyBsacOpZXMgYXUgc3lzdMOobWUARmljaGllcnMgdGVtcG9yYWlyZXMgZHUgc3lzdMOobWUATm90ZXogcXVlIHRvdXRlcyBsZXMgZm9uY3Rpb25uYWxpdMOpcyBkZSBnZXN0aW9uIGRlcyBleHRlbnNpb25zIHNvbnQgZMOpc2FjdGl2w6llcyBwZW5kYW50IGzigJlpbXByZXNzaW9uIG91IGxhIHBhdXNlIGRlIHZvdHJlIGltcHJpbWFudGUuAE5vdGV6IHF1ZSBsYSBjb25maWd1cmF0aW9uIGR1IFRpbWVsYXBzZSBlc3QgZMOpc2FjdGl2w6llIHBlbmRhbnQgcXVlIGwnaW1wcmltYW50ZSBmb25jdGlvbm5lLgBDaWJsZQBUZW1ww6lyYXR1cmUASW50ZXJ2YWxsZSBkZSByYWZyYcOuY2hpc3NlbWVudCBkZXMgZG9ubsOpZXMgZGUgdGVtcMOpcmF0dXJlIChyYXBwb3J0IGF1dG9tYXRpcXVlKQBJbnRlcnZhbGxlIGRlIHJhZnJhw65jaGlzc2VtZW50IGRlcyBkb25uw6llcyBkZSB0ZW1ww6lyYXR1cmUgKHNvbmRhZ2UpAEludGVydmFsbGUgZGUgcmFmcmHDrmNoaXNzZW1lbnQgZGVzIHRlbXDDqXJhdHVyZXMgZGVtYW5kw6kgYXV4IGxvZ2ljaWVscyBkaXNwb3NhbnQgZGUgbGEgZm9uY3Rpb24gcmFwcG9ydCBhdXRvbWF0aXF1ZS4gVW5lIHZhbGV1ciBkZSAwIGTDqXNhY3RpdmUgbGUgcmFwcG9ydCBhdXRvbWF0aXF1ZSBkdSBtaWNybyBsb2dpY2llbCBldCBmb3JjZSBsYSByw6ljdXDDqXJhdGlvbiBkZXMgdmFsZXVycy4AVGVtcMOpcmF0dXJlAFRlcm1pbmFsAExpc3RlIE5vaXJlIGVuIG1hanVzY3VsZSBhdXRvbWF0aXF1ZSBkZSBsJ29uZ2xldCBUZXJtaW5hbABGaWx0cmVzIGR1IHRlcm1pbmFsAFRlc3QAVGVzdCBkZSBsJ0jDtHRlIGV0IGR1IFBvcnQAVGVzdCBkZSByw6lzb2x1dGlvbiBkZSBub21zAExhIGNvbW1hbmRlICIlKGNvbW1hbmQpcyIgbidhIHBhcyBwdSDDqnRyZSBleMOpY3V0w6llLgBMYSBjb21tYW5kZSAiJShjb21tYW5kKXMiIGEgw6l0w6kgZXjDqWN1dMOpZSBhdmVjIHN1Y2PDqHMATGEgY29tbWFuZGUgIiUoY29tbWFuZClzIiBhIMOpdMOpIGTDqWNsZW5jaMOpZSBkZSBtYW5pw6hyZSBhc3luY2hyb25lAExhIGNvbW1hbmRlIDxjb2RlPiUoY29tbWFuZClzPC9jb2RlPiBuJ2EgcGFzIMOpdMOpIGVudm95w6kgw6AgbCdpbXByaW1hbnRlOgBMYSB2aXRlc3NlIGRcJ2F2YW5jZSBwZXV0IHNldWxlbWVudCDDqnRyZSByw6lnbMOpZSwgZWxsZSBuZSBwZXV0IHBhcyDDqnRyZSBsdWUgw6AgcGFydGlyIGR1IGZpcm13YXJlIGVuIHJhaXNvbiBkXCd1bmUgbGltaXRhdGlvbiBkdSBwcm90b2NvbGUgZGUgY29tbXVuaWNhdGlvbi4gSWwgblwneSBhIGF1Y3VuIG1veWVuIGRcJ2FmZmljaGVyIGxlIHLDqWdsYWdlIGFjdHVlbC4ATGUgZMOpYml0IHBldXQgc2V1bGVtZW50IMOqdHJlIHLDqWdsw6ksIGlsIG5lIHBldXQgcGFzIMOqdHJlIGx1IMOgIHBhcnRpciBkdSBmaXJtd2FyZSBlbiByYWlzb24gZFwndW5lIGxpbWl0YXRpb24gZHUgcHJvdG9jb2xlIGRlIGNvbW11bmljYXRpb24uIElsIG5cJ3kgYSBhdWN1biBtb3llbiBkXCdhZmZpY2hlciBsZSByw6lnbGFnZSBhY3R1ZWwuAExhIHF1YW50aXTDqSBtaW5pbWFsZSBkJ2VzcGFjZSBkaXNxdWUgZGlzcG9uaWJsZSDDoCBkaXZlcnMgZW5kcm9pdHMgcG91ciBxdWUgT2N0b1ByaW50IHB1aXNzZSDDqnRyZSBtaXMgw6Agam91ci4gTmUgZG9pdCBwYXMgw6p0cmUgZml4w6kgw6AgMC4ATGUgY2hlbWluIG4nZXhpc3RlIHBhcyBldCBuZSBwZXV0IHBhcyDDqnRyZSBjcsOpw6kuAExlIGNoZW1pbiBuJ2V4aXN0ZSBwYXMATGUgY2hlbWluIGVzdCB1biBsaWVuIHN5bWJvbGlxdWUgY2Fzc8OpLgBMZSBjaGVtaW4gbmUgcG9pbnRlIHBhcyBzdXIgdW4gZmljaGllcgBMZSBjaGVtaW4gbidlc3QgcGFzIHVuIGRvc3NpZXIuAExlIGNoZW1pbiBuZSBwb2ludGUgcGFzIHN1ciB1biBleMOpY3V0YWJsZQBMZSBjaGVtaW4gbidlc3QgcGFzIGFjY2Vzc2libGUgZW4gw6ljcml0dXJlLgBDaGVtaW4gdmFsaWRlAExcJ291dGlsIHPDqWxlY3Rpb25uw6kgcGV1dCBzZXVsZW1lbnQgw6p0cmUgZMOpZmluaSwgaWwgbmUgcGV1dCBwYXMgw6p0cmUgbHUgw6AgcGFydGlyIGR1IGZpcm13YXJlIGVuIHJhaXNvbiBkXCd1bmUgbGltaXRhdGlvbiBkdSBwcm90b2NvbGUgZGUgY29tbXVuaWNhdGlvbi4gSWwgblwneSBhIGF1Y3VuIG1veWVuIGRcJ2FmZmljaGVyIGxlIHLDqWdsYWdlIGFjdHVlbC4ATGUgc2VydmV1ciBuJ2EgYXBwYXJlbW1lbnQgcGFzIHJlZMOpbWFycsOpIHBhciBsdWktbcOqbWUsIHZvdXMgZGV2cmV6IGxlIGZhaXJlIG1hbnVlbGxlbWVudC4gVmV1aWxsZXogY29uc3VsdGVyIG9jdG9wcmludC5sb2cgc3VyIGNlIHF1aSBuJ2EgcGFzIGZvbmN0aW9ubsOpLgBMZSBzZXJ2ZXVyIHNlbWJsZSDDqnRyZSBob3JzIGxpZ25lLCBkdSBtb2lucyBqZSBuZSByZcOnb2lzIGF1Y3VuZXMgcsOpcG9uc2VzIGRlIGNlbHVpLWNpLiBKZSA8c3Ryb25nPm4nYWkgcGFzIHB1IG1lIHJlY29ubmVjdGVyIGF1dG9tYXRpcXVlbWVudDwvc3Ryb25nPiwgbWFpcyB2b3VzIHBvdXZleiB0ZW50ZXIgZGUgdm91cyByZWNvbm5lY3RlciBtYW51ZWxsZW1lbnQgZW4gdXRpbGlzYW50IGxlIGJvdXRvbiBjaS1kZXNzb3VzLgBMZSBzZXJ2ZXVyIHNlbWJsZSDDqnRyZSBob3JzIGxpZ25lLCBkdSBtb2lucyBqZSBuZSByZcOnb2lzIGF1Y3VuZXMgcsOpcG9uc2VzIGRlIGNlbHVpLWNpLiBKZSB2YWlzIHRlbnRlciBkZSBtZSByZWNvbm5lY3RlciBhdXRvbWF0aXF1ZW1lbnQgPHN0cm9uZz5kYW5zIGxlcyBtaW51dGVzIHF1aSBzdWl2ZW50PC9zdHJvbmc+LiBRdW9pcXUnaWwgZW4gc29pdCB2b3VzIHBvdXZleiB0ZW50ZXIgZGUgdm91cyByZWNvbm5lY3RlciBtYW51ZWxsZW1lbnQgZW4gdXRpbGlzYW50IGxlIGJvdXRvbiBjaS1kZXNzb3VzLgBMZSBzZXJ2ZXVyIG4nZXN0IHBhcyBhY2Nlc3NpYmxlAExlIHNlcnZldXIgdmEgbWFpbnRlbmFudCByZWTDqW1hcnJlciBlbiBhcnJpw6hyZSBwbGFuAExlIHNlcnZldXIgZXN0IGFjY2Vzc2libGUATCdpbnRlcmZhY2UgZHluYW1pcXVlIGRlIHZvdHJlIGltcHJpbWFudGUATCdVUkwgZGUgbCdpbnN0YW50YW7DqSBldCAvIG91IGxlIGNoZW1pbiBkJ2FjY8OocyDDoCBGRk1QRUcgc29udCBtYW5xdWFudHMuIFBvdXIgcsOpc291ZHJlIGNlIHByb2Jsw6htZSwgY29udGFjdGV6IHVuIGFkbWluaXN0cmF0ZXVyIGRlIGNldHRlIGluc3RhbmNlIE9jdG9QcmludC4ATCdVUkwgZGUgbGEgY2FwdXJlIGQnaW1hZ2VzIGV0IC8gb3UgbGUgY2hlbWluIGQnYWNjw6hzIHZlcnMgRkZNUEVHIHNvbnQgbWFucXVhbnRzLiBWb3VzIHBvdXZleiBtb2RpZmllciBsZXMgZGV1eCBzb3VzICJQYXJhbcOodHJlcyBPY3RvUHJpbnQiID4gIldlYmNhbSAmIFRpbWVsYXBzZSIgPiAiVGltZWxhcHNlIi4gU2kgdm91cyBuZSBwb3Nzw6lkZXogcGFzIGRlIHdlYmNhbSBvdSBzaSB2b3VzIG5lIHNvdWhhaXRleiBwYXMgYWN0aXZlciBsZSBzdXBwb3J0IFRpbWVsYXBzZSwgdm91cyBwb3V2ZXogc2ltcGxlbWVudCBsZSBkw6lzYWN0aXZlciBpY2kuAExhIG1pc2Ugw6Agam91ciBuJ2EgcGFzIHB1IMOqdHJlIGTDqW1hcnLDqWUuIEVzdC1lbGxlIGTDqWrDoCBhY3RpZiA/IFZldWlsbGV6IGNvbnN1bHRlciBvY3RvcHJpbnQubG9nIHBvdXIgcGx1cyBkZSBkw6l0YWlscy4ATGEgbWlzZSDDoCBqb3VyIG4nYSBwYXMgYWJvdXRpLiBWZXVpbGxleiBjb25zdWx0ZXI8Y29kZT5vY3RvcHJpbnQubG9nPC9jb2RlPiBldCA8Y29kZT5wbHVnaW5fc29mdHdhcmV1cGRhdGVfY29uc29sZS5sb2c8L2NvZGU+IHBvdXIgcGx1cyBkZSBkw6l0YWlscy4ATGEgbWlzZSDDoCBqb3VyIGEgw6l0w6kgZWZmZWN0dcOpZSBhdmVjIHN1Y2PDqHMsIGxlIHNlcnZldXIgdmEgbWFpbnRlbmFudCDDqnRyZSByZWTDqW1hcnLDqS4ATGEgbWlzZSDDoCBqb3VyIGEgw6l0w6kgZWZmZWN0dcOpZSBhdmVjIHN1Y2PDqHMsIG1lcmNpIGRlIHJlZMOpbWFycmVyIGxlIHNlcnZldXIgbWFpbnRlbmFudC4ATGEgbWlzZSDDoCBqb3VyIMOgIMOpdMOpIGVmZmVjdHXDqWUgYXZlYyBzdWNjw6hzLCBtZXJjaSBkZSByZWTDqW1hcnJlciBPY3RvUHJpbnQgbWFpbnRlbmFudC4ATGEgbWlzZSDDoCBqb3VyIHMnZXN0IHRlcm1pbsOpZSBhdmVjIHN1Y2PDqHMuAElsIHkgYSAlKGNvdW50KWQgYW5ub25jZXMgKGRvbnQgJShpbXBvcnRhbnQpZCBtYXJxdcOpZXMgY29tbWUgaW1wb3J0YW50ZXMpIGRpc3BvbmlibGVzIGF1IHN1amV0IGRlIGNldHRlIGV4dGVuc2lvbiAtIGNsaXF1ZXogcG91ciBsZXMgYWZmaWNoZXIgIQBJbCB5IGEgJShjb3VudClkIGFubm9uY2VzIGRpc3BvbmlibGVzIGF1IHN1amV0IGRlIGNldHRlIGV4dGVuc2lvbiAtIGNsaXF1ZXogcG91ciBsZXMgYWZmaWNoZXIgIQBJbCB5IGEgJShjb3VudClkIG5vdGlmaWNhdGlvbnMgZW4gcHJvdmVuYW5jZSBkJ2F1IG1vaW5zIGQndW5lIGRlIHZvcyBleHRlbnNpb25zIGluc3RhbGzDqWVzLgBJbCB5IGEgJShjb3VudClkIGV4dGVuc2lvbnMgcXVlIHZvdXMgZGV2cmV6IGluc3RhbGxlciBtYW51ZWxsZW1lbnQgY2FyIGlscyBuZSBzb250IHBhcyBlbnJlZ2lzdHLDqXMgZGFucyBsZSByw6lmw6lyZW50aWVsOgBJbCBuJ3kgYSBhY3R1ZWxsZW1lbnQgYXVjdW5lIG5vdGlmaWNhdGlvbiBkZSB2b3RyZSBpbXByaW1hbnRlLgBJbCBuJ3kgYSBwYXMgZW5jb3JlIGRlIGNsw6lzIGQnYXBwbGljYXRpb24gZW5yZWdpc3Ryw6llcy4ASWwgbid5IGEgcGFzIGVuY29yZSBkZSBzYXV2ZWdhcmRlcy4ASWwgbid5IGEgcGFzIGRlIHNhdXZlZ2FyZGVzLiBQZXV0LcOqdHJlIGVuIGNyw6llciB1bmUgY2ktZGVzc291cz8ASWwgbid5IGEgYXVjdW5lIG5vdGlmaWNhdGlvbiBlbiBwcm92ZW5hbmNlIGRlIGNldHRlIGV4dGVuc2lvbi4gU3VwZXIgIQBJbCB5IGEgZGVzIGFubm9uY2VzIGRpc3BvbmlibGVzIGF1IHN1amV0IGRlIGNldHRlIGV4dGVuc2lvbgBEZXMgbWlzZXMgw6Agam91ciBzb250IGRpc3BvbmlibGVzIHBvdXIgbGVzIGNvbXBvc2FudHMgc3VpdmFudHMgOgBJbCB5IGEgdW5lIGFubm9uY2UgZGlzcG9uaWJsZSBhdSBzdWpldCBkZSBjZXR0ZSBleHRlbnNpb24gLSBjbGlxdWV6IHBvdXIgbCdhZmZpY2hlciAhAElsIHkgYSB1bmUgbm90aWZpY2F0aW9uIGVuIHByb3ZlbmFuY2UgZCd1bmUgZGUgdm9zIGV4dGVuc2lvbnMgaW5zdGFsbMOpZXMuAElsIHkgYSB1bmUgYW5ub25jZSBpbXBvcnRhbnRlIGRpc3BvbmlibGUgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uIC0gY2xpcXVleiBwb3VyIGwnYWZmaWNoZXIgIQBJbCBuJ3kgYSBhY3R1ZWxsZW1lbnQgcGFzIGRlIGTDqXDDtHQgY2VudHJhbCBwb3VyIGxlcyBwYWNrcyBsaW5ndWlzdGlxdWVzIG91IHBvdXIgbGVzIGV4dGVuc2lvbnMgLSB0b3V0ZSBhaWRlIGVzdCBsYSBiaWVudmVudWUgIQBJbCBuJ3kgYSBwYXMgZGUgY29ubmV4aW9uIMOgIGwnSW50ZXJuZXQASWwgeSBhIGV1IHVuZSBlcnJldXIgZGUgY29tbXVuaWNhdGlvbiBhdmVjIHZvdHJlIGltcHJpbWFudGUuIFZldWlsbGV6IGNvbnN1bHRlciBsYSBzb3J0aWUgZHUgdGVybWluYWwgZXQgb2N0b3ByaW50LmxvZyBwb3VyIHBsdXMgZGUgZMOpdGFpbHMuIEVycmV1cjogJShlcnJvcilzAFVuZSBlcnJldXIgcydlc3QgcHJvZHVpdGUgbG9ycyBkZSBsYSB0ZW50YXRpdmUgZGUgY29ubmV4aW9uIMOgIHZvdHJlIGltcHJpbWFudGUuIEVycmV1cjogJShlcnJvcilzAFVuZSBlcnJldXIgcydlc3QgcHJvZHVpdGUgbG9ycyBkZSBsYSB0ZW50YXRpdmUgZGUgZMOpbWFycmFnZSBkJ3VuIHRyYXZhaWwgZCdpbXByZXNzaW9uLiBFcnJldXI6JShlcnJvcilzAElsIHkgYSBldSB1bmUgZXJyZXVyIGluY29ubnVlIGVuIGNvbW11bmlxdWFudCBhdmVjIHZvdHJlIGltcHJpbWFudGUuIFZldWlsbGV6IGNvbnN1bHRlciBsYSBzb3J0aWUgZHUgdGVybWluYWwgZXQgb2N0b3ByaW50LmxvZyBwb3VyIHBsdXMgZGUgZMOpdGFpbHMuIEVycmV1cjogJShlcnJvcilzAElsIHkgYSBldSB1bmUgZXJyZXVyIGluYXR0ZW5kdWUgcGVuZGFudCBsYSBzdXBwcmVzc2lvbiBkdSBwcm9maWwgZCdpbXByaW1hbnRlLCBtZXJjaSBkZSBjb25zdWx0ZXIgbGVzIGxvZ3MuAElsIHkgYSBldSB1bmUgZXJyZXVyIGluYXR0ZW5kdWUgcGVuZGFudCBsJ2VucmVnaXN0cmVtZW50IGR1IHByb2ZpbCBkJ2ltcHJpbWFudGUsIG1lcmNpIGRlIGNvbnN1bHRlciBsZXMgbG9ncy4ASWwgeSBhIGV1IHVuZSBlcnJldXIgaW5hdHRlbmR1ZSBwZW5kYW50IGxhIG1pc2Ugw6Agam91ciBkdSBwcm9maWwgZCdpbXByaW1hbnRlLCBtZXJjaSBkZSBjb25zdWx0ZXIgbGVzIGxvZ3MuAElsIG4neSBhIGFjdHVlbGxlbWVudCBwYXMgYXNzZXogZCdlc3BhY2UgZGlzcXVlIGRpc3BvbmlibGUgcG91ciB1bmUgbWlzZSDDoCBqb3VyIGRpcmVjdGUuAENlIHNvbnQgbGVzIHNhdXZlZ2FyZGVzIGRlIHZvcyBwYXJhbcOodHJlcyBldCB2b3MgZmljaGllcnMgcXVpIGV4aXN0ZW50IGTDqWrDoCBzdXIgY2V0dGUgaW5zdGFuY2UgT2N0b1ByaW50LiBWb3VzIHBvdXZleiBsZXMgc3VwcHJpbWVyLCBsZXMgdMOpbMOpY2hhcmdlciBvdSBsZXMgcmVzdGF1cmVyLgBDZXR0ZSBhY3Rpb24gcGV1dCBwZXJ0dXJiZXIgdG91cyBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZW4gY291cnMuAExhIHRhaWxsZSBkZSBjZXR0ZSBzYXV2ZWdhcmRlIGTDqXBhc3NlIGxhIHRhaWxsZSBtYXhpbWFsZSBhdXRvcmlzw6llIHBvdXIgbGUgdMOpbMOpdmVyc2VtZW50AENlbGEgbmUgcmVzc2VtYmxlIHBhcyDDoCB1bmUgVVJMIHZhbGlkZS4gVW5lIFVSTCBjb21tZW7Dp2FudCBwYXIgaHR0cCwgaHR0cHMgb3UgIDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIj5sZSBmb3JtYXQgVkNTIHN1cHBvcnTDqTwvYT4gZXN0IGF0dGVuZHUuAENlbGEgbmUgcmVzc2VtYmxlIHBhcyDDoCB1bmUgZXh0ZW5zaW9uIGRlIHBhY2sgZGUgbGFuZ3VlIHZhbGlkZS4gTGVzIGV4dGVuc2lvbnMgZGUgcGFjayBkZSBsYW5ndWUgdmFsaWRlcyBkb2l2ZW50IMOqdHJlIGRlcyBmaWNoaWVycyB6aXAgb3UgdGFyYmFsbCBldCBhdm9pciB1bmUgZXh0ZW5zaW9uICIuemlwIiwgIi50YXIuZ3oiLCAiLnRneiIgb3UgIi50YXIiAENlbGEgbmUgcmVzc2VtYmxlIHBhcyDDoCB1bmUgZXh0ZW5zaW9uIHZhbGlkZS4gTGVzIGV4dGVuc2lvbnMgdmFsaWRlcyBkb2l2ZW50IMOqdHJlIGRlcyBmaWNoaWVycyB6aXAgb3UgZGVzIGFyY2hpdmVzIGluc3RhbGxhYmxlcyB2aWEgPGNvZGU+cGlwPC9jb2RlPiBxdWkgb250IGwnZXh0ZW5zaW9uICIuemlwIiwgIi50YXIuZ3oiLCAiLnRneiIgb3UgIi50YXIiLCBvdSBkZXMgYXJjaGl2ZXMgcHl0aG9uIMOgIGZpY2hpZXIgdW5pcXVlIGF2ZWMgbCdleHRlbnNpb24gIi5weSIAQ2UgZ3JvdXBlIG5lIHBldXQgcGFzIGF2b2lyIGQnYXV0b3Jpc2F0aW9ucyBvdSBkZSBzb3VzLWdyb3VwZXMgZGFuZ2VyZXV4LgBDZXR0ZSBpbmZvcm1hdGlvbiBlc3QgdXRpbGlzw6llIHBvdXIgbGUgY29udHLDtGxlIG1hbnVlbCB2aWEgbCdvbmdsZXQgIkNvbnRyw7RsZSIuAENlcyBpbmZvcm1hdGlvbnMgc29udCB1dGlsaXPDqWVzIHBvdXIgbGUgZ3JhcGhpcXVlIGV0IGxlcyBjb250csO0bGVzIGRpc3BvbmlibGVzIGRhbnMgbCdvbmdsZXQgIlRlbXDDqXJhdHVyZSIgZXQgIlZpc3VhbGlzZXVyIGR1IEctY29kZSIsIGxvcnMgZHUgZMOpY291cGFnZSBkZXB1aXMgT2N0b1ByaW50IGV0IHBvdXIgZMOpY2lkZXIgZGVzIGNvbW1hbmRlcyBkZSBjaGFuZ2VtZW50IGQnb3V0aWxzIHBvdXZhbnQgw6p0cmUgZW52b3nDqWVzIHNhbnMgcmlzcXVlIMOgIGwnaW1wcmltYW50ZS4AQ2VzIGluZm9ybWF0aW9ucyBzb250IHV0aWxpc8OpZXMgcG91ciBsJ29uZ2xldCBUZW1ww6lyYXR1cmUsIGxhIGNhc2Ugw6AgY29jaGVyLCBsZSBWaXN1YWxpc2V1ciBHLWNvZGUgZXQvb3UgbG9ycyBkdSBkw6ljb3VwYWdlIMOgIHBhcnRpciBkZSBPY3RvUHJpbnQuAENlY2kgbidlc3QgcGFzIHJlY29tbWFuZMOpAENlY2kgZXN0IHV0aWxpc8OpIHBhciBsJ2FuYWx5c2V1ciBkZSAgRy1jb2RlIGRhbnMgbGUgYmFja2VuZCBldCBsJ2FmZmljaGV1ciBkYW5zIGxlIGZyb250ZW5kIHBvdXIgaW50ZXJwcsOpdGVyIGNvcnJlY3RlbWVudCB2b3MgZmljaGllcnMgZMOpY291cMOpcy4AQ2VsYSBwZXV0IGVudHJhw65uZXIgdW4gY29tcG9ydGVtZW50IGRlIG1pc2UgZW4gY2FjaGUgaW1wcsOpdmlzaWJsZS4gTmUgZMOpc2FjdGl2ZXogcXVlIHNpIHZvdHJlIHNlcnZldXIgZGUgd2ViY2FtIGVzdCBpbmNvbXBhdGlibGUgZXQgbmUgZm9uY3Rpb25uZSBwYXMgZGFucyBsJ2ludGVyZmFjZSB1dGlsaXNhdGV1ciBkJ09jdG9QcmludABDZWxhIGRvaXQgw6p0cmUgZMOpZmluaSBzaSB2b3VzIHPDqWxlY3Rpb25uZXogbGUgc3VpdmkgZGUgdmVyc2lvbiBiYXPDqSBzdXIgbGEgdmFsaWRhdGlvbi4AQ2V0dGUgZXh0ZW5zaW9uIGVzdCBzdXIgbGEgTGlzdGUgTm9pcmUAQ2V0IHV0aWxpc2F0ZXVyIG5lIGRvaXQgcGFzIGF2b2lyIGRlIHBlcm1pc3Npb25zIGRhbmdlcmV1c2VzLgBDZXR0ZSB2ZXJzaW9uIGRlIGwnZW52aXJvbm5lbWVudCBQeXRob24gbidlc3QgcGFzIHByaXNlIGVuIGNoYXJnZSBwb3VyIGxlcyBtaXNlcyDDoCBqb3VyIGRpcmVjdGVzLgBDZWxhIHZhIHN0b3BwZXIgdm90cmUgaW1wcmVzc2lvbi4AQ2VjaSBzdXBwcmltZXJhIGxhIGNsw6kgQVBJLiBFbGxlIGNlc3NlcmEgZGUgZm9uY3Rpb25uZXIgZGUgc3VpdGUuAENlY2kgZ8OpbsOpcmVyYSB1bmUgbm91dmVsbGUgY2zDqSBBUEkuIEwnYW5jaWVubmUgY2zDqSBBUEkgY2Vzc2VyYSBkZSBmb25jdGlvbm5lciBkZSBzdWl0ZS4AQ2VjaSB2YSByZWTDqW1hcnJlciBsJ2ltcHJlc3Npb24gZGVwdWlzIGxlIGTDqWJ1dC4AQ2VsYSB2YSBkw6ltYXJyZXIgdW4gbm91dmVhdSB0cmF2YWlsIGQnaW1wcmVzc2lvbi4gVmV1aWxsZXogdsOpcmlmaWVyIHF1ZSBsZSBwbGF0ZWF1IGQnaW1wcmVzc2lvbiBlc3QgdmlkZS4AQ2VjaSBtZXR0cmEgw6Agam91ciBsZXMgY29tcG9zYW50cyBzdWl2YW50cyBldCByZWTDqW1hcnJlcmEgbGUgc2VydmV1ciA6AENlcyBjb21wb3NhbnRzIHPDqWxlY3Rpb25uw6lzIGF2ZWMgPGkgY2xhc3M9ImZhIGZhLWNoZWNrIj48L2k+IHBldXZlbnQgw6p0cmUgbWlzZSDDoCBqb3VyIGRpcmVjdGVtZW50LgBEw6lsYWkgYXByw6hzIGxlcXVlbCB1bmUgdGVudGF0aXZlIGRlIGNvbm5leGlvbiDDoCBsJ2ltcHJpbWFudGUgc2VyYSBjb25zaWTDqXLDqWUgY29tbWUgYXlhbnQgw6ljaG91w6llAETDqWxhaSBhcHLDqHMgbGVxdWVsIGxhIGNvbW11bmljYXRpb24gYXZlYyB2b3RyZSBpbXByaW1hbnRlIHNlcmEgY29uc2lkw6lyw6llIGNvbW1lIGV4cGlyw6llIHNpIHJpZW4gbidhIMOpdMOpIGVudm95w6kgKGV0IGQndW5lIG5vdXZlbGxlIHRlbnRhdGl2ZSBhcHLDqHMpLiBBdWdtZW50ZXogY2V0dGUgdmFsZXVyIHNpIHZvdHJlIGltcHJpbWFudGUgcHJlbmQgcGx1cyBkZSB0ZW1wcyBwb3VyIGNlcnRhaW5zIG1vdXZlbWVudHMuAER1csOpZSBhcHLDqHMgbGFxdWVsbGUgdW5lIGRlbWFuZGUgZGUgcG9zaXRpb24gZW4gcGF1c2Ugb3UgZW4gYW5udWxhdGlvbiBkb2l0IMOqdHJlIGNvbnNpZMOpcsOpZSBjb21tZSBheWFudCDDqWNob3XDqQBEw6lsYWkgYXByw6hzIGxlcXVlbCBpbCBmYXV0IGNvbnNpZMOpcmVyIHF1ZSBsYSB0ZW50YXRpdmUgZGUgY29ubmV4aW9uIGF1dG9tYXRpcXVlIGEgw6ljaG91ZSwgc2kgYXVjdW5lIGNvbm5leGlvbiByw6l1c3NpZSBuJ2VzdCBkw6l0ZWN0w6llAER1csOpZSBkJ2F0dGVudGUgYXByw6hzIGwnb3V2ZXJ0dXJlIGRlIGxhIGNvbm5leGlvbiBzw6lyaWUgYXZhbnQgZGUgZMOpbWFycmVyIGxhIGTDqXRlY3Rpb24gZGUgbGEgdml0ZXNzZSBkZSB0cmFuc21pc3Npb24AQ2hyb25vbcOpdHLDqQBUaW1lbGFwc2UAQ29uZmlndXJhdGlvbiBkdSBUaW1lbGFwc2UARG9zc2llciBkZXMgVGltZWxhcHNlcwBNb2RlIGR1IFRpbWVsYXBzZQBBcGVyw6d1IGR1IFRpbWVsYXBzZQBFbnJlZ2lzdHJlbWVudCBkdSBUaW1lbGFwc2UAUHJvZ3Jlc3Npb24gZHUgcmVuZHUgZHUgVGltZWxhcHNlAERvc3NpZXIgdGVtcG9yYWlyZSBkZXMgVGltZWxhcHNlcwBEw6liaXQgZHUgVGltZWxhcHNlAFRhdXggZGUgdHJhbWUgcG91ciBsZSBUaW1lbGFwc2UAVGltZWxhcHNlIHBhcyBjb21wbMOodGVtZW50IGNvbmZpZ3Vyw6kAVGltZWxhcHNlIHBvc3QgdHJhaXRlbWVudABMZSBUaW1lbGFwc2UgZXN0IHByw6p0AETDqWxhaSBkJ2V4cGlyYXRpb24gZHUgZMOpY2hhcmdlbWVudCBkdSBmbHV4IHNpIGwnb25nbGV0IGRlIGNvbnRyw7RsZSBuJ2VzdCBwYXMgdmlzaWJsZQBEw6lsYWkgZCdhdHRlbnRlIHBvdXIgcHJlbmRyZSB1biBTbmFwc2hvdABEw6lsYWlzAFRpdHJlAFBvdXIgYXBwbGlxdWVyIGxlcyBtaXNlcyDDoCBqb3VyLCBwcmVuZXogY29udGFjdCBhdmVjIGzigJlhZG1pbmlzdHJhdGV1ciBkZSBjZXR0ZSBpbnN0YW5jZSBkZSBPY3RvcHJpbnQuAFRyb3AgZGUgZmljaGllcnMgc8OpbGVjdGlvbm7DqSBlbiBtw6ptZSB0ZW1wcy4gUsOpZHVpc2V6IGxlIG5vbWJyZXMgZGUgZmljaGllcnMgcG91ciBhY3RpdmVyIGxlIGJvdXRvbiB0w6lsw6ljaGFyZ2VtZW50cy4AQnVzZQBUb3RhbABUZW1wcyBkJ2ltcHJlc3Npb24gdG90YWwganVzcXUnw6AgbWFpbnRlbmFudABCcmFuY2hlIHN1aXZpZQDDiXbDqW5lbWVudHMgc3VpdmlzAENvbW1lbmNlciBsZSBzdWl2aQBUcmFuc2ZlcnQgZGUgZmljaGllciB2ZXJzIGxhIGNhcnRlIFNEAENvdWxldXIgdHJhbnNwYXJlbnRlAENvY2hleiBjZXR0ZSBjYXNlIHNpIHZvdXMgcmVuY29udHJleiBkZXMgcHJvYmzDqG1lcyBkZSBkw6lsYWkgZGUgY29ubmV4aW9uLCBzaSB2b3RyZSBpbXByaW1hbnRlIG1ldCB0cm9wIGRlIHRlbXBzIMOgIHLDqXBvbmRyZSBhdXggdGVudGF0aXZlcyBkJ8OpdGFibGlzc2VtZW50IGRlIGxpYWlzb24gZGUgT2N0b1ByaW50IGxvcnMgZGUgbGEgY29ubmV4aW9uLgBMYSB0ZW50YXRpdmUgZGUgcmVkw6ltYXJyYWdlIGR1IHNlcnZldXIgYSBwcm9kdWl0IHVuZSBlcnJldXJzLiBWw6lyaWZpZXogbGVzIGxvZyBvY3RvUHJpbnQgcG91ciBwbHVzIGRlIGTDqXRhaWxzLiBWb3VzIGRldnJleiByZWTDqW1hcnJlciBtYW51ZWxsZW1lbnQuAFR5cGUAVVJMIGRlIGxhIHNvdXJjZSDDoCBlbXBsb3llciBwb3VyIGxlcyBhbm5vbmNlcy4gVm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IHBhcyBhdm9pciDDoCBtb2RpZmllciBjZWxsZS1jaS4AVVJMIGR1IGTDqXDDtHQgZCdleHRlbnNpb25zIMOgIHV0aWxpc2VyLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGxlIGNoYW5nZXIuAFVSTCDDoCBpbnTDqWdyZXIgZGFucyBsJ2ludGVyZmFjZSBwb3VyIGxlIHZpc2lvbm5lbWVudCBlbiBkaXJlY3QgZHUgZmx1eCBkZSBsYSB3ZWJjYW0AVVJMIMOgIHV0aWxpc2VyIHBvdXIgcsOpY3Vww6lyZXIgbGVzIFNuYXBzaG90cyBkZSBsYSB3ZWJjYW0gdXRpbGlzw6llcyBwb3VyIGxhIGNyw6lhdGlvbiBkdSBUaW1lbGFwc2UAVWx0aW1ha2VyIDIvMisASW1wb3NzaWJsZSBkZSBkw6lwbGFjZXIgbGUgZmljaGllciBvdSBsZSBkb3NzaWVyAETDqWNvY2hleiBjZXR0ZSBjYXNlIHNpIHZvdXMgcmVuY29udHJleiBkZXMgcHJvYmzDqG1lcyBwb3VyIHZvdXMgY29ubmVjdGVyIMOgIHZvdHJlIGltcHJpbWFudGUuAETDqWNvY2hleiBjZXR0ZSBjYXNlIHNpIHZvdHJlIGZpcm13YXJlIG5lIHByZW5kIHBhcyBlbiBjaGFyZ2UgPGNvZGU+IE0xMDggPC9jb2RlPiBwb3VyIGFubnVsZXIgbGUgY2hhdWZmYWdlIGR1IGJsb2MgY2hhdWZmYW50IQBEw6lzaW5zdGFsbGVyAETDqXNpbnN0YWxsZXIgZXQgbmV0dG95ZXIgbGVzIGRvbm7DqWVzAETDqXNpbnN0YWxsZXIgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcwBEw6lzaW5zdGFsbGVyIHVuZSBleHRlbnNpb24ARMOpc2luc3RhbGxhdGlvbiBkZSBsJ2V4dGVuc2lvbiAiJShuYW1lKXMiLi4uAETDqXNpbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24uLi4ASW5jb25udQBFcnJldXIgaW5jb25udWUARXJyZXVyIGluY29ubnVlIGxvcnMgZGUgbGEgdmVyaWZpY2F0aW9uIGRlcyBtaXNlcyDDoCBqb3VyLCB2w6lyaWZpZXIgbGVzIGxvZ3MgcydpbCB2b3VzIHBsYWl0AFbDqXJpZmljYXRpb24gZGUgbWlzZSDDoCBqb3VyIGluY29ubnVlLCBsYSBjb25maWd1cmF0aW9uIGVzdCBjb3JyZWN0ZSA/AFNhdWYgaW5kaWNhdGlvbiBjb250cmFpcmUsIHZvdXMgcG91dmV6IHNhdXRlciBuJ2ltcG9ydGUgcXVlbGxlIHBhZ2UgZGUgbCdhc3Npc3RhbnQgZW4gY2xpcXVhbnQgc3VyICJTdWl2YW50IiBvdSAiVGVybWluZXIiLgBUaW1lbGFwc2VzIHBhcyBmaW5hbGlzw6lzAEVuIGF0dGVudGUgZGUgbGEgbWlzZSDDoCBkaXNwb3NpdGlvbiBkJ3VuIGTDqXDDtHQsIHZldWlsbGV6IHZvdXMgcsOpZsOpcmVyIGF1IDxhIGhyZWY9IiUodXJsKXMiIHRhcmdldD0iX2JsYW5rIiA+d2lraTwvYT4gcG91ciBsYSByw6ljdXDDqXJhdGlvbiBkZSBwYWNrcyBsaW5ndWlzdGlxdWVzIG1pcyDDoCBkaXNwb3NpdGlvbiBwYXIgbGEgY29tbXVuYXV0w6kuAE1ldHRyZSDDoCBqb3VyAE1pc2Ugw6Agam91ciBkaXNwb25pYmxlAE1ldHRyZSDDoCBqb3VyIGwndXRpbGlzYXRldXIAVG91dCBtZXR0cmUgw6Agam91cgBNaXNlIMOgIGpvdXIgZGlzcG9uaWJsZQBNaXNlIMOgIGpvdXIgdGVybWluw6llLCB2ZXVpbGxleiBmZXJtZXIgY2V0dGUgZmVuw6p0cmUuAMOJY2hlYyBkZSBsYSBtaXNlIMOgIGpvdXIgIQBNaXNlIMOgIGpvdXIgZHUgZ3JvdXBlAE1pc2Ugw6Agam91ciBlbiBjb3VycywgdmV1aWxsZXogcGF0aWVudGVyLgBNaXNlIMOgIGpvdXIgZHUgam91cm5hbABNaXNlIMOgIGpvdXIgaW1wb3NzaWJsZQBMYSBtaXNlIMOgIGpvdXIgbidhIHBhcyBkw6ltYXJyw6kgIQBNZXR0cmUgw6Agam91ciBtYWludGVuYW50AE1pc2Ugw6Agam91ciByw6l1c3NpZSAhAE1pc2Ugw6Agam91ciByw6l1c3NpZSwgcmVkw6ltYXJyYWdlIG7DqWNlc3NhaXJlICEATWlzZSDDoCBqb3VyIHLDqXVzc2llLCByZWTDqW1hcnJhZ2UgIQBNaXNlIMOgIGpvdXIgPwBNaXNlIMOgIGpvdXIsIG1lcmNpIGRlIHBhdGllbnRlci4ATWlzZSDDoCBqb3VyLi4uAFTDqWzDqXZlcnNlcgBUw6lsw6ljaGFyZ2VyIGV0IHJlc3RhdXJlcgBUw6lsw6ljaGFyZ2VyICjDqWNyYXNlcikAVMOpbMOpY2hhcmdlciAocmVub21tZXIpAERvc3NpZXIgZGVzIHTDqWzDqWNoYXJnZW1lbnRzAFTDqWzDqXZlcnNlciBkZSBub3V2ZWF1eCBwYWNrcyBkZSBsYW5ndWUARGF0ZSBkZSB0w6lsw6ljaGFyZ2VtZW50IGR1IGZpY2hpZXIgc8OpbGVjdGlvbm7DqSBvdSBlbiBjb3VycyBkJ2ltcHJlc3Npb24AQ2hhcmdlbWVudCBsb2NhbABDaGFyZ2VtZW50IHZlcnMgbGEgY2FydGUgU0QAVMOpbMOpdmVyc8OpAEFqb3V0IC4uLgBVdGlsaXNleiA8Y29kZT4tLXByb2Nlc3MtZGVwZW5kZW5jeS1saW5rczwvY29kZT4gYXZlYyA8Y29kZT5waXAgaW5zdGFsbDwvY29kZT4AVXRpbGlzZXIgbGUgZm9ybXVsYWlyZSBjaS1kZXNzb3VzIHBvdXIgc3DDqWNpZmllciB1biBub3V2ZWF1IGTDqWNhbGFnZSDDoCBhcHBsaXF1ZXIgcG91ciB0b3V0ZXMgbGVzIGNvbW1hbmRlcyBkZSB0ZW1ww6lyYXR1cmUgZW52b3nDqWVzIGRlcHVpcyBsZXMgZmljaGllcnMgaW1wcmltw6lzIHBvdXIgIiUobmFtZSlzIgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gc2kgbGEgY29ubmV4aW9uIMOgIHZvdHJlIGltcHJpbWFudGUgw6ljaG91ZSBhdmVjIDxjb2RlPigyMiwgJ0FyZ3VtZW50IGludmFsaWRlJyk8L2NvZGU+LgBVdGlsaXNleiBjZWNpIHNpIHZvdXMgcmVuY29udHJleiA8YSBocmVmPSIlJSh1cmwpcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcmVyIj5jZSBwcm9ibMOobWU8L2E+LgBVdGlsaXNleiBjZWNpIHBvdXIgZMOpZmluaXIgZGVzPGEgaHJlZj0iJSUoZ2xvYl91cmwpcyI+IG1vZMOobGVzIGdsb2JhdXg8L2E+IGZhaXNhbnQgY29ycmVzcG9uZHJlIGxlcyBwb3J0cyBzw6lyaWUgw6AgbGEgbGlzdGUgbm9pcmUgcG91ciBsYSBjb25uZXhpb24sIHBhciBleGVtcGxlPGNvZGU+IC8gZGV2IC8gdHR5UyAqPC9jb2RlPi4gVW5lIGVudHLDqWUgcGFyIGxpZ25lLgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBkw6lmaW5pciBkZXMgIDxhIGhyZWY9IiUlKGdsb2JfdXJsKXMiPm1vZMOobGVzIGdsb2JhdXg8L2E+IHN1cHBsw6ltZW50YWlyZXMgY29ycmVzcG9uZGFudCBhdXggcG9ydHMgc8OpcmllIMOgIHLDqXBlcnRvcmllciBwb3VyIGxhIGNvbm5leGlvbiwgcGFyIGV4LiA8Y29kZT4vZGV2L3R0eUFNQSo8L2NvZGU+LiBVbmUgZW50csOpZSBwYXIgbGlnbmUuIFZldWlsbGV6IG5vdGVyIHF1ZSBsZXMgcG9ydHMgbmUgc2Vyb250IHByb3Bvc8OpcyDDoCBsYSBjb25uZXhpb24gcXVlIHMnaWxzIHNvbnQgw6lnYWxlbWVudCBkw6l0ZWN0w6lzIHBhciBsZSA8ZW0+c3lzdMOobWUgZCdleHBsb2l0YXRpb248L2VtPi4gQWpvdXRlciB1biBwb3J0IGljaSBuZSBsZSBmZXJhIHBhcyBhcHBhcmHDrnRyZSBjb21tZSBwYXIgbWFnaWUgZGFucyBPY3RvUHJpbnQuIFNpIGxlIHN5c3TDqG1lIGQnZXhwbG9pdGF0aW9uIG5lIHZvaXQgcGFzIHZvdHJlIGltcHJpbWFudGUsIHZvdXMgZGV2ZXogZCdhYm9yZCByw6lzb3VkcmUgY2UgcHJvYmzDqG1lLgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBkw6lmaW5pciBkZXMgdml0ZXNzZXMgZGUgdHJhbnNtaXNzaW9uIHN1cHBsw6ltZW50YWlyZXMgw6AgbGEgbGlzdGUgcG91ciBsYSBjb25uZXhpb24gYXZlYywgcGFyIGV4LiA8Y29kZT4gMTIzNDU2IDwvY29kZT4uIFPDqXBhcsOpZXMgcGFyIGRlcyB2aXJndWxlcy4AVXRpbGlzZXotbGUgcG91ciBkw6lmaW5pciBsZXMgZMOpYml0cyBlbiBCYXVkIGR1IHBvcnQgc8OpcmllIHN1ciBsYSBsaXN0ZSBub2lyZSBwb3VyIGxhIGNvbm5leGlvbiwgcGFyIGV4LiA8Y29kZT4xMjM0NTY8L2NvZGU+LiBTw6lwYXLDqWVzIHBhciBkZXMgdmlyZ3VsZXMuAFV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIGTDqWZpbmlyIGxhIGNvbW1hbmRlLiBMYSB2YWxldXIgcGFyIGTDqWZhdXQgZXN0IDxjb2RlPiBNODc2PC9jb2RlPi4gVm91cyBuZSBkZXZyaWV6IHBhcyBhdm9pciDDoCBjaGFuZ2VyIGNlbGEuAFV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgdW5lIHZhbGV1ciBkaWZmw6lyZW50ZSBwb3VyIGxhIGNvbW1hbmRlIDxjb2RlPk0xMTA8L2NvZGU+IGxvcnMgZGUgbGEgY29ubmV4aW9uIGluaXRpYWxlLgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBzcMOpY2lmaWVyIGRlcyBjb21tYW5kZXMgc3VyIGxlc3F1ZWxsZXMgT2N0b1ByaW50IGRvaXQgc3VzcGVuZHJlIGxlIHRyYXZhaWwgZCdpbXByZXNzaW9uLiBKdXN0ZSBsZSBjb2RlIEcgb3UgTSwgc8OpcGFyw6lzIHBhciB1bmUgdmlyZ3VsZS4gTGEgdmFsZXVyIHBhciBkw6lmYXV0IGVzdCA8Y29kZT5NMDwvY29kZT4sIDxjb2RlPk0xPC9jb2RlPiBldCA8Y29kZT5NMjU8L2NvZGU+LgBVdGlsaXNlei1sZSBwb3VyIHNww6ljaWZpZXIgbGVzIGNvbW1hbmRlcyBxdWkgZG9pdmVudCDDqnRyZSBpZ25vcsOpZXMgc2lsZW5jaWV1c2VtZW50IGV0IG5lIGphbWFpcyDDqnRyZSBlbnZvecOpZXMgw6AgbCdpbXByaW1hbnRlLiBKdXN0ZSBsZSBjb2RlIEcgb3UgTSwgc8OpcGFyw6lzIHBhciBkZXMgdmlyZ3VsZXMuIENvbnRyYWlyZW1lbnQgYXV4IGNvbW1hbmRlcyBibG9xdcOpZXMgY2ktZGVzc3VzLCBpbCBuJ3kgYXVyYSBwYXMgZGUgZmVuw6p0cmUgZCdhdmVydGlzc2VtZW50IGxvcnNxdWUgY2VzIGNvbW1hbmRlcyBzZXJvbnQgcmVuY29udHLDqWVzLgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBzcMOpY2lmaWVyIGRlcyBjb21tYW5kZXMgcXVpIG5lIGRvaXZlbnQgamFtYWlzIMOqdHJlIGVudm95w6llcyDDoCBs4oCZaW1wcmltYW50ZS4gSnVzdGUgbGUgY29kZSBHIG91IE0sIHPDqXBhcsOpcyBwYXIgdW5lIHZpcmd1bGUuIExhIHZhbGV1ciBwYXIgZMOpZmF1dCBlc3QgPGNvZGU+TTA8L2NvZGU+IGV0IDxjb2RlPk0xPC9jb2RlPiBjYXIgbGEgcGx1cGFydCBkZXMgbWljcm9wcm9ncmFtbWVzIHJlc3Rlcm9udCBibG9xdcOpcyBqdXNxdSfDoCBjZSBxdSd1biBib3V0b24gZHUgY29udHLDtGxldXIgc29pdCBlbmZvbmPDqSBzJ2lsIHJlw6dvaXQgbCd1bmUgZGUgY2VzIGRldXggY29tbWFuZGVzLgBVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBzcMOpY2lmaWVyIGRlcyBjb21tYW5kZXMgZCd1cmdlbmNlIHF1aSBkb2l2ZW50IHPigJlpbnPDqXJlciBkYW5zIG4naW1wb3J0ZSBxdWVsbGUgZmlsZSBkJ2F0dGVudGUgZXQsIHNpIGVsbGVzIHNvbnQgcHJpc2VzIGVuIGNoYXJnZSBwYXIgbGUgbWljcm9sb2dpY2llbCwgw6p0cmUgZW52b3nDqWVzIGRlIGZvcmNlLiBKdXN0ZSBsZSBjb2RlIEcgb3UgTSwgc8OpcGFyw6lzIHBhciB1bmUgdmlyZ3VsZS4gTGVzIHZhbGV1cnMgcGFyIGTDqWZhdXQgc29udCA8Y29kZT5NMTEyPC9jb2RlPiwgPGNvZGU+TTEwODwvY29kZT4gZXQgPGNvZGU+TTQxMDwvY29kZT4uAFV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgZGVzIGNvbW1hbmRlcyBjb25udWVzIHBvdXIgcydleMOpY3V0ZXIgc2FucyByZXRvdXIgZHVyYW50IHVuIHRlbXBzIGxvbmcgZXQgcXVpIHBhciBjb25zw6lxdWVudCBwb3VycmFpdCBwcm92b3F1ZXIgdW4gaW5jaWRlbnQgc3VyIGxlIGTDqWxhaSBkJ2F0dGVudGUuIFVuaXF1ZW1lbnQgbGVzIGNvbW1hbmRlcyBHIG91IE0sIHPDqXBhcsOpZXMgcGFyIGRlcyB2aXJndWxlcy4AVXRpbGlzZXogY2V0dGUgb3B0aW9uIHBvdXIgc3DDqWNpZmllciBkZXMgY29tbWFuZGVzIGRvbnQgbGVzIHBhcmFtw6h0cmVzIG5lIGRvaXZlbnQgcGFzIMOqdHJlIGF1dG9tYXRpcXVlbWVudCBtaXMgZW4gbWFqdXNjdWxlcyBkYW5zIGwnb25nbGV0IFllcm1pbmFsLiBKdXN0ZSBsZSBjb2RlIEcgb3UgTSwgc8OpcGFyw6lzIHBhciBkZXMgdmlyZ3VsZXMuAFV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgbGVzIGNvbW1hbmRlcyBxdWkgZG9pdmVudCA8c3Ryb25nPnRvdWpvdXJzPC9zdHJvbmc+IMOqdHJlIGVudm95w6llcyBhdmVjIHVuZSBzb21tZSBkZSBjb250csO0bGUuIFV0aWxpc2V6IHVuZSB2aXJndWxlIHBvdXIgc8OpcGFyZXIgbGVzIGZvbmN0aW9ucy4AVXRpbGlzYXRldXIAUGFyYW3DqHRyZXMgZGUgbCd1dGlsaXNhdGV1cgBVdGlsaXNhdGV1ciBpbmNvbm51LCBtYXV2YWlzIG1vdCBkZSBwYXNzZSBvdSBjb21wdGUgZMOpc2FjdGl2w6kAVXRpbGlzYXRldXIgcXVpIGEgc8OpbGVjdGlvbm7DqSBjZSBmaWNoaWVyIHBvdXIgbCdpbXByZXNzaW9uAE5vbSBkJ3V0aWxpc2F0ZXVyAFV0aWxpc2F0ZXVycwBWYWxpZGVyIFNTTCBzdXIgbCdVUkwgZHUgU25hcHNob3QgKGxlIGNhcyDDqWNow6lhbnQpAENhY2hlIGRlIHZlcnNpb24gVFRMAENvZGVjIHZpZMOpbwBDb2RlYyB2aWTDqW8gdXRpbGlzw6kgcG91ciBsJ2VuY29kYWdlAEF0dGVuZHJlIDxjb2RlPnN0YXJ0PC9jb2RlPiDDoCBsYSBjb25uZXhpb24AQXZlcnRpc3NlbWVudABBdHRlbnRpb246AERvc3NpZXIgc3VydmVpbGzDqQBJbnRlcm5ldABDaGFyZ2VtZW50IGRlIGwnaW50ZXJmYWNlIHdlYgBXZWJjYW0AV2ViY2FtICYgVGltZWxhcHNlAFdlYmNhbSAmYW1wOyBlbnJlZ2lzdHJlbWVudCBkdSBUaW1lbGFwc2UAQ2hhcmdlbWVudCBkdSBmbHV4IHZpZGVvIGRlIGxhIHdlYmNhbS4uLgBGbHV4IHZpZGVvIGRlIGxhIHdlYmNhbSBub24gY2hhcmfDqQBRdWUgZmFpcmUgZW4gY2FzIGQnZXJyZXVyIGRlIGZpcm13YXJlICg8Y29kZT5FcnJvcjo8L2NvZGU+IG91IDxjb2RlPiEhPC9jb2RlPikATG9yc3F1ZSBsJ2ltcHJpbWFudGUgZXN0IGluYWN0aXZlIGV0IHF1J3VuZSB0ZW1ww6lyYXR1cmUgZGUgY29uc2lnbmUgZXN0IHLDqWdsw6llAExvcnMgZGUgbCdpbXByZXNzaW9uAExvcnMgZGUgbCdpbXByZXNzaW9uIMOgIHBhcnRpciBkZSBsYSBjYXJ0ZSBTRCBkZSBsJ2ltcHJpbWFudGUARHVyYW50IGwnaW1wcmVzc2lvbiBvdSBhdSByZXBvcwBCaWVuIHF1ZSBjZWxhIHB1aXNzZSBhdm9pciB1biBpbXBhY3QgbsOpZ2F0aWYgc3VyIGxlcyBwZXJmb3JtYW5jZXMsIGxlIGZpY2hpZXIgPGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+IHBldXQgw6p0cmUgdHLDqHMgdXRpbGUgcG91ciBkZWJ1ZyB0b3VzIHByb2Jsw6htZXMgZGUgcGVyZm9ybWFuY2Ugb2JzZXJ2w6lzIGVuIGRlaG9ycyBkdSBtb2RlIHNhbnMgw6ljaGVjLgBCaWVuIHF1ZSBjZWxhIHB1aXNzZSBhdm9pciB1biBpbXBhY3QgbsOpZ2F0aWYgc3VyIGxlcyBwZXJmb3JtYW5jZXMsIHVuIGZpY2hpZXIgPGNvZGU+c2VyaWFsLmxvZzwvY29kZT4gcGV1dCDDqnRyZSB0csOocyB1dGlsZSBwb3VyIGRlYnVnIHRvdXQgcHJvYmzDqG1lcyBvYnNlcnbDqXMgbG9ycyBkZSBsYSBjb21tdW5pY2F0aW9uIGVudHJlIE9jdG9QcmludCBldCB2b3RyZSBpbXByaW1hbnRlLgBQb3VycXVvaSA/AExhcmdldXIgKFgpAFNhbnMgY2V0dGUgZXh0ZW5zaW9uLCBPY3RvUHJpbnQgbmUgc2VyYSBwbHVzIGVuIG1lc3VyZSBkJ2VmZmVjdHVlciBjZXJ0YWluZXMgw6l0YXBlcyBkZSBjb25maWd1cmF0aW9uIHJlcXVpc2VzIGFwcsOocyB1bmUgbWlzZSDDoCBqb3VyLgBTYW5zIGNldHRlIGV4dGVuc2lvbiwgT2N0b3ByaW50IG5lIHNlcmEgcGx1cyBlbiBtZXN1cmUgZGUgc2UgbWV0dHJlIMOgIGpvdXIgYXV0b21hdGlxdWVtZW50IG5pIGRlIG1ldHRyZSDDoCBqb3VyIGwnZXh0ZW5zaW9uIHF1aSBwb3VycmFpZW50IHJlcHLDqXNlbnRlciB1biByaXNxdWUgcG91ciB2b3RyZSBzeXN0w6htZS4AU2FucyBjZXR0ZSBleHRlbnNpb24sIGxhIHZpc2lvbm5ldXNlIEctY29kZSBkJ09jdG9QcmludCBuZSBzZXJhIHBsdXMgZGlzcG9uaWJsZS4AU2FucyBjZXR0ZSBleHRlbnNpb24sIGxlcyBjbGllbnRzIHRpZXJzIG5lIHBvdXJyb250IHBsdXMgb2J0ZW5pciBkZSBjbMOpIEFQSSBzYW5zIHVuIGNvcGllci1jb2xsZXIgbWFudWVsLgBTYW5zIGNldHRlIGV4dGVuc2lvbiwgdm91cyBwb3VycmlleiBtYW5xdWVyIGQnaW1wb3J0YW50ZXMgbm90aWZpY2F0aW9ucyBjb25jZXJuYW50IGxhIHPDqWN1cml0w6kgb3UgZCfDqXZlbnR1ZWxzIHByb2Jsw6htZXMgY3JpdGlxdWVzIGxpw6lzIMOgIE9jdG9QcmludC4AU2FucyBjZXR0ZSBleHRlbnNpb24sIHZvdXMgbmUgcG91cnJleiBwbHVzIHNhdXZlZ2FyZGVyIG5pIHJlc3RhdXJlciB2b3MgcGFyYW3DqHRyZXMgZXQgdm9zIGRvbm7DqWVzIGQnT2N0b1ByaW50LgBTYW5zIGNldHRlIGV4dGVuc2lvbiwgdm91cyBuZSBwb3VycmV6IHBsdXMgcsOpY3Vww6lyZXIgbGVzIGpvdXJuYXV4IE9jdG9QcmludCBuaSBtb2RpZmllciBsZXMgbml2ZWF1eCBkZSBqb3VybmFsaXNhdGlvbiBhY3R1ZWxzIHZpYSBsJ2ludGVyZmFjZSBXZWIuAFNhbnMgY2V0dGUgZXh0ZW5zaW9uLCB2b3RyZSBpbnN0YW5jZSBkJ09jdG9QcmludCBuZSBwb3VycmEgcGx1cyDDqnRyZSBkw6ljb3V2ZXJ0ZSBzdXIgdm90cmUgcsOpc2VhdSBhdSB0cmF2ZXJzIGRlIHByb3RvY29sZXMgdGVscyBxdWUgQm9uam91ciBldCB1UE5QLgBTYW5zIGNldHRlIGV4dGVuc2lvbiwgdm90cmUgaW1wcmltYW50ZSBuZSBzZXJhIHBsdXMgY2FwYWJsZSBkZSBkw6ljbGVuY2hlciBkZXMgZGVtYW5kZXMgZGUgY29uZmlybWF0aW9uIG91IGRlIHPDqWxlY3Rpb24gZGFucyBPY3RvUHJpbnQAU2FucyBjZXR0ZSBleHRlbnNpb24sIHZvdHJlIGltcHJpbWFudGUgbmUgc2VyYSBwbHVzIGVuIG1lc3VyZSBkZSBkw6ljbGVuY2hlciBkZXMgbm90aWZpY2F0aW9ucyBkYW5zIE9jdG9QcmludABYAEF4ZSBYAENvb3Jkb25uw6llcyBYAFkAQXhlIFkAQ29vcmRvbm7DqWVzIFkAREQvTU0vWVlZWSBISDptbQBERC9NTS9ZWVlZIEhIOm1tOnNzAE91aQBPdWksIGFubnVsZXIgbCdpbXByZXNzaW9uAE91aSwgcydpbCB2b3VzIHBsYcOudCwgdmlzdWFsaXNlICUobmFtZSlzIHNhbnMgdGVuaXIgY29tcHRlIGRlIHNhIHRhaWxsZQBWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBuZXR0b3llciBsZXMgcGFyYW3DqHRyZXMgZXQgbGVzIGRvbm7DqWVzIGRlcyBleHRlbnNpb25zIHF1aSBuZSBzb250IHBsdXMgaW5zdGFsbMOpZXMuIENldHRlIG9ww6lyYXRpb24gZXN0IGlycsOpdmVyc2libGUuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIG5ldHRveWVyIGxlcyBkb25uw6llcyBkZSBsJ2V4dGVuc2lvbiA6ICIlKG5hbWUpcyIuIENldHRlIG9ww6lyYXRpb24gZXN0IGlycsOpdmVyc2libGUuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciAlKGNvdW50KWQgc2F1dmVnYXJkZXMuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGTigJllZmZhY2VyICUoY291bnQpZCBmaWNoaWVyKHMpIGRlIGxvZy4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyICUoY291bnQpZCBmaWNoaWVycyBUaW1lbGFwc2UuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciAlKGNvdW50KWQgVGltZWxhcHNlcyBub24gZmluYWxpc8Opcy4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIGZpY2hpZXIgZGUgc2F1dmVnYXJkZSAiJShuYW1lKXMiLgBWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBzdXBwcmltZXIgbGUgZmljaGllciBqb3VybmFsICIlKG5hbWUpcyIuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciBsZSBkb3NzaWVyICIlKGZvbGRlcilzIiBxdWkgY29udGllbnQgZGVzIGZpY2hpZXJzIGV0L291IHNvdXMgZG9zc2llcnMuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciBsZSBncm91cGUgIiUobmFtZSlzIi4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIHByb2ZpbCBkJ2ltcHJlc3Npb24gIiUobmFtZSlzIi4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGwnZW5yZWdpc3RyZW1lbnQgZGUgY2V0dGUgZXh0ZW5zaW9uIGluY29ubnVzIGxvcnMgZGUgbGEgZGVybmnDqHJlIHJlc3RhdXJhdGlvbi4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGwndXRpbGlzYXRldXIgIiUobmFtZSlzIi4AVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIGZpY2hpZXIgVGltZWxhcHNlICIlKG5hbWUpcyIuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciBsZSBUaW1lbGFwc2UgIiUobmFtZSlzIiBub24gZmluYWxpc8OpLgBWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBkw6lzYWN0aXZlciAiJShuYW1lKXMiAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIGTDqXNhY3RpdmVyICIlKG5hbWUpcyIuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHJlc3RhdXJlciBsZSBmaWNoaWVyIGRlIHNhdXZlZ2FyZGUgIiUobmFtZSlzIi4gw4dhIG5lIHBldXQgcGFzIMOqdHJlIGFubnVsw6kuAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHLDqXZvcXVlciAlKGNvdW50KWQgbGVzIGNsw6lzIGQnYXBwbGljYXRpb24uAFZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHLDqXZvcXVlciBsYSBjbMOpIGQnYXBwbGljYXRpb24gIiUoa2V5KXMiLgBWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBkw6lzaW5zdGFsbGVyIGwnZXh0ZW5zaW9uICIlKG5hbWUpcyIAVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgdMOpbMOpY2hhcmdlciBldCBkZSByZXN0YXVyZXIgbGUgZmljaGllciBkZSBzYXV2ZWdhcmRlICIlKG5hbWUpcyIuIMOHYSBuZSBwZXV0IHBhcyDDqnRyZSBhbm51bMOpLgBWb3VzIMOqdGVzIG1haW50ZW5hbnQgY29ubmVjdMOpIGVuIHRhbnQgcXVlICIlKHVzZXJuYW1lKXMiAFZvdXMgw6p0ZXMgbWFpbnRlbmFudCBkw6ljb25uZWN0w6kAVm91cyB1dGlsaXNleiB0b3Vqb3VycyBQeXRob27CoDIAVm91cyBwb3VycmV6IG1vZGlmaWVyIHZvcyBhYm9ubmVtZW50cyBhdXggYW5ub25jZXMgdmlhIGxhIHBhZ2UgUGFyYW3DqHRyZXMgPiBBbm5vbmNlcy4AVm91cyBwb3V2ZXogdHJvdXZlciBwbHVzIGQnaW5mbyBzdXIgY2UgcHJvYmzDqG1lIGRhbnMgbGEgRkFRIGljaSAlKHVybClzAFZvdXMgcG91dmV6IGZhaXJlIGFwcGFyYcOudHJlIGNlIG1lc3NhZ2Ugw6Agbm91dmVhdSBkYW5zIFBhcmFtw6h0cmUiID4gTWlzZSDDoCBqb3VyIGxvZ2ljaWVsID4gVsOpcmlmaWVyIGRlcyBtaXNlcyDDoCBqb3VyIG1haW50ZW5hbnQAVm91cyBwb3V2ZXogdG91am91cnMgYWN0aXZlciBsZSBzdWl2aSBkZXMgZXJyZXVycyB2aWEgIFBhcmFtw6h0cmVzID4gU3VpdmkgZGVzIGVycmV1cnMuAFZvdXMgcG91dmV6IGNvbnN1bHRlciBsZXMgZW5zZW1ibGVzIFN5c3TDqG1lIGluZm8gc3VyIDxhIGhyZWY9Imh0dHBzOi8vYnVuZGxldmlld2VyLm9jdG9wcmludC5vcmciIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmJ1bmRsZXZpZXdlci5vY3RvcHJpbnQub3JnPC9hPgBWb3VzIGF2ZXogYWN0dWVsbGVtZW50IDxjb2RlPiUobG9nZmlsZSlzPC9jb2RlPiBhY3RpdsOpLiBOJ291YmxpZXogcGFzIGRlIGxlIGTDqXNhY3RpdmVyIMOgIG5vdXZlYXUgdW5lIGZvaXMgbGUgZMOpYm9nYWdlIHRlcm1pbsOpLCBxdWVsIHF1ZSBzb2l0IGxlIHByb2Jsw6htZSBxdWkgdm91cyBhIGluY2l0w6kgw6AgbGUgcsOpYWN0aXZlci4AVm91cyBuZSBzZW1ibGV6IHBhcyBhdm9pciBhY3RpdsOpIEphdmFTY3JpcHQAVm91cyBhdmV6IGRlcyBtb2RpZmljYXRpb25zIG5vbi1lbnJlZ2lzdHLDqWVzLCBwZW5zZXogw6AgbGVzIHNhdXZlZ2FyZGVyLgBWb3VzIG4nYXZleiBwYXMgZW5jb3JlIGTDqWNpZMOpIGQnYWN0aXZlciBvdSBkZSBkw6lzYWN0aXZlciBsZSBzdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUuIFZvdXMgZGV2ZXogbCdhY3RpdmVyIG91IGxlIGTDqXNhY3RpdmVyIGF2YW50IGRlIGNvbnRpbnVlci4AVm91cyBuJ2F2ZXogcGFzIGVuY29yZSBkw6ljaWTDqSBkJ2FjdGl2ZXIgb3UgZGUgZMOpc2FjdGl2ZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBsYSBjb25uZWN0aW9uIGVuIGxpZ25lLiBWb3VzIGRldmV6IHNvaXQgbCdhY3RpdmVyIG91IGxhIGTDqXNhY3RpdmVyIGF2YW50IGRlIGNvbnRpbnVlci4AVm91cyBuJ2F2ZXogcGFzIGVuY29yZSBkw6ljaWTDqSBkJ2FjdGl2ZXIgb3UgZGUgZMOpc2FjdGl2ZXIgbCdleHRlbnNpb24gOiBMaXN0ZSBOb2lyZS4gVm91cyBkZXZleiBsJ2FjdGl2ZXIgb3UgbGUgZMOpc2FjdGl2ZXIgYXZhbnQgZGUgY29udGludWVyLgBWb3VzIG4nYXZleiBwYXMgZW5jb3JlIG1pcyBlbiBwbGFjZSBsZSBjb250csO0bGUgZCdhY2PDqHMuIFZvdXMgZGV2ZXogZMOpZmluaXIgdW4gbm9tIGQndXRpbGlzYXRldXIgZXQgdW4gbW90IGRlIHBhc3NlIHB1aXMgY2xpcXVlciAiQ3LDqWVyIHVuIGNvbXB0ZSIgYXZhbnQgZGUgcG91dm9pciBjb250aW51ZXIuAFZvdXMgbidhdmV6IHBhcyBsZXMgYXV0b3Jpc2F0aW9ucyBkJ2FkbWluaXN0cmF0aW9uLgBWb3VzIG5lIHBvdXZleiBwYXMgc3VwcHJpbWVyIHZvdHJlIHByb3ByZSBjb21wdGUuAFZvdXMgbmUgZGV2cmlleiBub3JtYWxlbWVudCA8c3Ryb25nPnBhcyBhdm9pciDDoCBtb2RpZmllciBsJ3VuIGRlcyBwYXJhbcOodHJlcyBzdWl2YW50czwvc3Ryb25nPiwgaWxzIHNvbnQgcHVyZW1lbnQgZm91cm5pcyBwb3VyIHBsdXMgZGUgY29tbW9kaXTDqSBpY2kuAFZvdXMgbmUgZGV2cmlleiBub3JtYWxlbWVudCBwYXMgYXZvaXIgw6AgY2hhbmdlciBjZWxhLgBMJ2VzcGFjZSBkaXNxdWUgZGlzcG9uaWJsZSBlc3QgZGFuZ2VyZXVzZW1lbnQgZmFpYmxlLgBMJ2VzcGFjZSBkaXNxdWUgZGlzcG9uaWJsZSBlc3QgZmFpYmxlLgBWb3RyZSB1dGlsaXNhdGlvbiBkdSBkaXNxdWUuAFZvdHJlIGltcHJpbWFudGUgaW5kaXF1ZSBxdWUgbCdvdXRpbCBUJSh0b29sKWQgZXN0IGludmFsaWRlLCBldCBlc3QgcmV2ZW51IMOgIFQlKGZhbGxiYWNrKWQATGUgZmlybXdhcmUgZGUgdm90cmUgaW1wcmltYW50ZSBhIHNpZ25hbMOpIHVuZSBlcnJldXIuIEMnZXN0IHBvdXJxdW9pIE9jdG9QcmludCB2YSBzZSBkw6ljb25uZWN0ZXIuIEVycmV1ciBzaWduYWzDqWU6ICUoZXJyb3IpcwBMZSBmaXJtd2FyZSBkZSB2b3RyZSBpbXByaW1hbnRlIGEgc2lnbmFsw6kgdW5lIGVycmV1ci4gRW4gcmFpc29uIGRlIGNlbGEsIGxlIHRyYXZhaWwgZCdpbXByZXNzaW9uIGVuIGNvdXJzIHNlcmEgYW5udWzDqS4gRXJyZXVyIHNpZ25hbMOpZTogJShmaXJtd2FyZUVycm9yKXMAVm90cmUgc3lzdMOobWUgZXN0IGFjdHVlbGxlbWVudCBlbiBjb3VycyBkZSB0cmF2YWlsLiBPY3RvUHJpbnQgcmVmdXNlIGRlIGZhaXJlIGxlcyBtaXNlcyDDoCBqb3VyIGVuIGNlIG1vbWVudCBhZmluIGQnw6l2aXRlciBkZXMgcHJvYmzDqG1lcyBkJ2luc3RhYmlsaXTDqS4AWgBBeGUgWgBDb29yZG9ubsOpZXMgWgBab29tZXIgc3VyIGxlIG1vZMOobGUAcXVlbHF1ZXMgc2Vjb25kZXMAdW5lIG1pbnV0ZQBhc2NlbmRhbnQAbm9pcgBibGV1AHBhciBkw6lmYXV0AGRlc2NlbmRhbnQAaXBzAHZlcnQAbW9pbnMgZCd1bmUgbWludXRlAG1pbmkAbW0Aw6l0ZWludAB0YWlsbGUgZHUgdGFtcG9uIG9rAHN1ciBsZSBidXJlYXUAc3VyIG1vYmlsZQBvcmFuZ2UAcGlwAGNvbmZpZ3VyYXRpb24gZGUgcGlwAGV4dGVuc2lvbnMgYWZmaWNow6lzAHBsdWdpbnRpbWluZ3MubG9nIGVzdCBhY3RpdsOpAHJvdWdlAHJlbnZveWVyIGxhIHJhdGlvAHJlbnZveWVyIGxlcyByZXF1w6p0ZXMAcwBzZXJpYWwubG9nIGVzdCBhY3RpdsOpAG91dGlscyBkZSBjb25maWd1cmF0aW9uAGFmZmljaGFnZSBkZSAlKGRpc3BsYXllZClkIGxpZ25lcwBhZmZpY2hhZ2UgZGUgJShkaXNwbGF5ZWQpZCBsaWduZXMgKCUoZmlsdGVyZWQpZCBkZSAlKHRvdGFsKWQgbGlnbmVzIHRvdGFsZXMgZmlsdHLDqWVzKQBhZmZpY2hhZ2UgZGUgJShkaXNwbGF5ZWQpZCBsaWduZXMgKCUoZmlsdGVyZWQpZCBkZSAlKHRvdGFsKWQgbGlnbmVzIGF1IHRvdGFsIGZpbHRyw6llcywgbcOpbW9pcmUgdGFtcG9uIHBsZWluZSkAYWZmaWNoYWdlIGRlICUoZGlzcGxheWVkKWQgbGlnbmVzIChtw6ltb2lyZSB0YW1wb24gcGxlaW5lKQDDoABsaWduZXMgdHJhbnNtaXNlcwBpbmNvbm51AHZpb2xldABibGFuYwBqYXVuZQB2b3VzIGF2ZXoAUEsDBAoAAAAAAA66CVMiydVJPFIFADxSBQAaAAAAZnIvTENfTUVTU0FHRVMvbWVzc2FnZXMucG8jIFRyYW5zbGF0aW9ucyB0ZW1wbGF0ZSBmb3IgT2N0b1ByaW50LgojIENvcHlyaWdodCAoQykgMjAyMSBUaGUgT2N0b1ByaW50IFByb2plY3QKIyBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHNhbWUgbGljZW5zZSBhcyB0aGUgT2N0b1ByaW50IHByb2plY3QuCiMKIyBUcmFuc2xhdG9yczoKIyBBbG9hZGUsIDIwMjEKIyBDw6lkcmljIERlYm9pcyA8Y2VkZGVib2lzQGdtYWlsLmNvbT4sIDIwMjAKIyBjb3lvdHRlIHF1YXJhbnRlZG91emUgPGNveW90dGU0MDEyQGdtYWlsLmNvbT4sIDIwMTgKIyBDeXJpbCA8Z3VpbG91ejZAaG90bWFpbC5jb20+LCAyMDE5CiMgQWxvYWRlLCAyMDIxCiMgNmZjNTRjNTVhNjAyMWZmOTM4MWU3MDI2NTVmOWE4MzYsIDIwMTcKIyBDaXJhbjI4IDxjaXJhbi4yODk4QGZyZWUuZnI+LCAyMDE4CiMgRm9vQiAuIDxmYWJyaWNlLmdlcmRvbGxlQGdtYWlsLmNvbT4sIDIwMTcKIyBnaXNjbGFjZSA8Z2lzY2xhY2VAZ21haWwuY29tPiwgMjAxNi0yMDE4CiMgR3VpbGxhdW1lIENsYXVzIDxndWlsbGF1bWUuY2xhdXNAd29ybGRvbmxpbmUuZnI+LCAyMDIwCiMgZy51aWxsYXVtZSB0cnAgPGcudHJpcGllckBpLXIzZC5mcj4sIDIwMTYKIyBKZWFuLUJhcHRpc3RlIER1Y2xvcywgMjAyMQojIGptIGdvbGYgPGptZ29sZjM1QGdtYWlsLmNvbT4sIDIwMTgtMjAyMQojIGptIGdvbGYgPGptZ29sZjM1QGdtYWlsLmNvbT4sIDIwMTgKIyBKUCBqcCA8aG9yZmVlQGdtYWlsLmNvbT4sIDIwMjAKIyBMYXVyZW50IEJPVVFVRVQgPGwuYm91cXVldEBpLXIzZC5mcj4sIDIwMTYKIyBMYXVyZW50IFRlcnJpZXIgPHRlcnJpZXIubEBsaXZlLmZyPiwgMjAxOQojIEx1ZG92aWMgQk9MRFUgPGxib2xkdUBmcmVlLmZyPiwgMjAxNwojIE1hdGhpZXUgQnJ1Z2lyb3V4IDxtYnJ1Z2lyb3V4QGdtYWlsLmNvbT4sIDIwMTgKIyBNYXRoaWV1IFJpYmVpcm8gPG1hdGhpZXUucmliZWlyby5jb2VsaG9AZ21haWwuY29tPiwgMjAyMQojIE1hdGhpZXUgVkFTU0VVUiA8ZmF1c3RfOEBob3RtYWlsLmZyPiwgMjAyMQojIFBvdWxpemFjIDxmcmFuY2lzQHBvdWxpemFjLmZyPiwgMjAyMAojIFNpbW9uIEtFR0hJQU4sIDIwMjEKIyBTb2x5a1ogPHNvbHlrekBnbWFpbC5jb20+LCAyMDE3CiMgWWFuIFNVRVVSIDxuZW9zbHVnbWFuQGdtYWlsLmNvbT4sIDIwMTkKbXNnaWQgIiIKbXNnc3RyICIiCiJQcm9qZWN0LUlkLVZlcnNpb246IE9jdG9QcmludFxuIgoiUmVwb3J0LU1zZ2lkLUJ1Z3MtVG86IGkxOG5Ab2N0b3ByaW50Lm9yZ1xuIgoiUE9ULUNyZWF0aW9uLURhdGU6IDIwMjEtMDgtMDQgMTA6NTgrMDIwMFxuIgoiUE8tUmV2aXNpb24tRGF0ZTogMjAyMS0wOC0wOSAyMzoxNiswMjAwXG4iCiJMYXN0LVRyYW5zbGF0b3I6IEplYW4tQmFwdGlzdGUgRHVjbG9zXG4iCiJMYW5ndWFnZS1UZWFtOiBGcmVuY2ggKEZyYW5jZSkgKGh0dHA6Ly93d3cudHJhbnNpZmV4LmNvbS9vY3RvcHJpbnQvb2N0b3ByaW50L2xhbmd1YWdlL2ZyX0ZSLylcbiIKIk1JTUUtVmVyc2lvbjogMS4wXG4iCiJDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLThcbiIKIkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXRcbiIKIkdlbmVyYXRlZC1CeTogQmFiZWwgMi44LjBcbiIKIkxhbmd1YWdlOiBmcl9GUlxuIgoiUGx1cmFsLUZvcm1zOiBucGx1cmFscz0yOyBwbHVyYWw9KG4gPiAxKTtcbiIKIlgtR2VuZXJhdG9yOiBQb2VkaXQgMy4wXG4iCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weToyODMKbXNnaWQgIkFkbWluIGlzIGFsbG93ZWQgdG8gZG8gZXZlcnl0aGluZyIKbXNnc3RyICJMJ2FkbWluaXN0cmF0ZXVyIHBvc3PDqGRlIHRvdXRlcyBsZXMgYXV0b3Jpc2F0aW9ucyIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjI5MQptc2dpZCAiQWxsb3dzIHRvIGdhdGhlciBiYXNpYyBzdGF0dXMgaW5mb3JtYXRpb24sIGUuZy4gam9iIHByb2dyZXNzLCBwcmludGVyIHN0YXRlLCB0ZW1wZXJhdHVyZXMsIC4uLiBNYW5kYXRvcnkgZm9yIHRoZSBkZWZhdWx0IFVJIHRvIHdvcmsiCm1zZ3N0ciAiQXV0b3Jpc2UgbGUgcmVjdWVpbCBkZXMgaW5mb3JtYXRpb25zIGRlIGJhc2Ugc3VyIGxlIHN0YXR1dCwgcGFyIGV4ZW1wbGUgbCdhdmFuY2VtZW50IGR1IHRyYXZhaWwsIGwnw6l0YXQgZGUgbCdpbXByaW1hbnRlLCBsZXMgdGVtcMOpcmF0dXJlcywgLi4uIE9ibGlnYXRvaXJlIHBvdXIgcXVlIGwnaW50ZXJmYWNlIHV0aWxpc2F0ZXVyIHBhciBkw6lmYXV0IGZvbmN0aW9ubmUiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTozMDIKbXNnaWQgIkFsbG93cyB0byBjb25uZWN0IHRvIGFuZCBkaXNjb25uZWN0IGZyb20gYSBwcmludGVyIgptc2dzdHIgIkF1dG9yaXNlIGxhIGNvbm5lY3Rpb24gZXQgZMOpY29ubmVjdGlvbiBkJ3VuZSBpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9hY2Nlc3MvcGVybWlzc2lvbnMucHk6MzA5Cm1zZ2lkICJBbGxvd3MgdG8gd2F0Y2ggdGhlIHdlYmNhbSBzdHJlYW0iCm1zZ3N0ciAiQXV0b3Jpc2UgbGUgdmlzaW9ubmVtZW50IGR1IGZsdXggZGUgbGEgd2ViY2FtIgoKIzogc3JjL29jdG9wcmludC9hY2Nlc3MvcGVybWlzc2lvbnMucHk6MzE2Cm1zZ2lkICJBbGxvd3MgdG8gcnVuIHN5c3RlbSBjb21tYW5kcywgZS5nLiByZXN0YXJ0IE9jdG9QcmludCwgc2h1dGRvd24gb3IgcmVib290IHRoZSBzeXN0ZW0sIGFuZCB0byByZXRyaWV2ZSBzeXN0ZW0gYW5kIHVzYWdlIGluZm9ybWF0aW9uIgptc2dzdHIgIlBlcm1ldCBkJ2V4w6ljdXRlciBkZXMgY29tbWFuZGVzIHN5c3TDqG1lLCBwYXIgZXhlbXBsZSBkZSByZWTDqW1hcnJlciBPY3RvUHJpbnQsIGQnYXJyw6p0ZXIgb3UgZGUgcsOpaW5pdGlhbGlzZXIgbGUgc3lzdMOobWUsIGV0IGRlIHLDqWN1cMOpcmVyIGRlcyBpbmZvcm1hdGlvbnMgc3VyIGxlIHN5c3TDqG1lIGV0IHNvbiB1dGlsaXNhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjMyNgptc2dpZCAiQWxsb3dzIHRvIHJldHJpZXZlIGEgbGlzdCBvZiBhbGwgdXBsb2FkZWQgZmlsZXMgYW5kIGZvbGRlcnMsIGluY2x1ZGluZ3RoZWlyIG1ldGFkYXRhIChlLmcuIGRhdGUsIGZpbGUgc2l6ZSwgYW5hbHlzaXMgcmVzdWx0cywgLi4uKSIKbXNnc3RyICJBdXRvcmlzZSBsYSByw6ljdXDDqXJhdGlvbiBkZSBsYSBsaXN0ZSBkZSB0b3VzIGxlcyBmaWNoaWVycyB0w6lsw6ljaGFyZ8OpcywgeSBjb21wcmlzIGxldXJzIG3DqXRhZG9ubsOpZXMgKHBhciBleGVtcGxlIGRhdGUsIHRhaWxsZSBkdSBmaWNoaWVyLCByw6lzdWx0YXRzIGQnYW5hbHlzZSwgLi4uKSIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjMzNQptc2dpZCAiQWxsb3dzIHVzZXJzIHRvIHVwbG9hZCBuZXcgZmlsZXMsIGNyZWF0ZSBuZXcgZm9sZGVycyBhbmQgY29weSBleGlzdGluZyBvbmVzLiBJZiB0aGUgRmlsZSBEZWxldGUgcGVybWlzc2lvbiBpcyBhbHNvIHNldCwgRmlsZSBVcGxvYWQgYWxzbyBhbGxvd3MgbW92aW5nIGZpbGVzIGFuZCBmb2xkZXJzLiIKbXNnc3RyICJQZXJtZXQgYXV4IHV0aWxpc2F0ZXVycyBkZSB0w6lsw6ljaGFyZ2VyIGRlcyBub3V2ZWF1eCBmaWNoaWVycywgZGUgY3LDqWVyIGRlcyBub3V2ZWF1eCBkb3NzaWVycyBldCBkZSBjb3BpZXIgbGVzIGRvc3NpZXJzIGV4aXN0YW50cy4gU2kgbCdhdXRvcmlzYXRpb24gZGUgc3VwcHJlc3Npb24gZGVzIGZpY2hpZXJzIGVzdCDDqWdhbGVtZW50IGTDqWZpbmllLCBsZSB0w6lsw6ljaGFyZ2VtZW50IGRlcyBmaWNoaWVycyBwZXJtZXQgw6lnYWxlbWVudCBkZSBkw6lwbGFjZXIgZGVzIGZpY2hpZXJzIGV0IGRlcyBkb3NzaWVycy4iCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTozNDUKbXNnaWQgIkFsbG93cyB1c2VycyB0byBkb3dubG9hZCBmaWxlcy4gVGhlIEdDT0RFIHZpZXdlciBpcyBhZmZlY3RlZCBieSB0aGlzIGFzIHdlbGwuIgptc2dzdHIgIlBlcm1ldCBhdXggdXRpbGlzYXRldXJzIGRlIHTDqWzDqWNoYXJnZXIgZGVzIGZpY2hpZXJzLiBMZSB2aXN1YWxpc2V1ciBHQ09ERSBlbiBlc3Qgw6lnYWxlbWVudCBhZmZlY3TDqS4iCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTozNTQKbXNnaWQgIkFsbG93cyB1c2VycyB0byBkZWxldGUgZmlsZXMgYW5kIGZvbGRlcnMuIElmIHRoZSBGaWxlIFVwbG9hZCBwZXJtaXNzaW9uIGlzIGFsc28gc2V0LCBGaWxlIERlbGV0ZSBhbHNvIGFsbG93cyBtb3ZpbmcgZmlsZXMgYW5kIGZvbGRlcnMuIgptc2dzdHIgIlBlcm1ldCBhdXggdXRpbGlzYXRldXJzIGRlIHN1cHByaW1lciBkZXMgZmljaGllcnMgZXQgZGVzIGRvc3NpZXJzLiBTaSBsJ2F1dG9yaXNhdGlvbiBkZSB0w6lsw6ljaGFyZ2VtZW50IGRlcyBmaWNoaWVycyBlc3Qgw6lnYWxlbWVudCBkw6lmaW5pZSwgbCdhdXRvcmlzYXRpb24gZGUgc3VwcHJlc3Npb24gZGVzIGZpY2hpZXJzIHBlcm1ldCDDqWdhbGVtZW50IGRlIGTDqXBsYWNlciBkZXMgZmljaGllcnMgZXQgZGVzIGRvc3NpZXJzLiIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjM2Mwptc2dpZCAiQWxsb3dzIHRvIHNlbGVjdCBhIGZpbGUgZm9yIHByaW50aW5nIgptc2dzdHIgIlBlcm1ldCBkZSBzw6lsZWN0aW9ubmVyIHVuIGZpY2hpZXIgw6AgaW1wcmltZXIiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTozNzAKbXNnaWQgIkFsbG93cyB0byBzdGFydCwgcGF1c2UgYW5kIGNhbmNlbCBhIHByaW50IGpvYiIKbXNnc3RyICJQZXJtZXQgZGUgZMOpbWFycmVyLCBzdXNwZW5kcmUgZXQgYW5udWxlciB1biB0cmF2YWlsIGQnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjM3Nwptc2dpZCAiQWxsb3dzIGFjY2VzcyB0byB0aGUgR0NPREUgdmlld2VyIGlmIHRoZSBcIkZpbGUgRG93bmxvYWRcInBlcm1pc3Npb24gaXMgYWxzbyBzZXQuIgptc2dzdHIgIlBlcm1ldCBkJ2FjY8OpZGVyIMOgIGxhIHZpc2lvbm5ldXNlIEctY29kZSBzaSBsJ2F1dG9yaXNhdGlvbiBcIlTDqWzDqWNoYXJnZW1lbnQgZGUgZmljaGllclwiIGVzdCDDqWdhbGVtZW50IGTDqWZpbmllLiIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjM4Nwptc2dpZCAiQWxsb3dzIHRvIHdhdGNoIHRoZSB0ZXJtaW5hbCB0YWIgYnV0IG5vdCB0byBzZW5kIGNvbW1hbmRzIHRvIHRoZSBwcmludGVyIGZyb20gaXQiCm1zZ3N0ciAiUGVybWV0IGRlIHJlZ2FyZGVyIGwnb25nbGV0IGR1IHRlcm1pbmFsIG1haXMgcGFzIGQnZW52b3llciBkZXMgY29tbWFuZGVzIMOgIGwnaW1wcmltYW50ZSBkZXB1aXMgY2VsdWktY2kiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTozOTcKbXNnaWQgIkFsbG93cyB0byBjb250cm9sIG9mIHRoZSBwcmludGVyIGJ5IHVzaW5nIHRoZSB0ZW1wZXJhdHVyZSBjb250cm9scyx0aGUgY29udHJvbCB0YWIgb3Igc2VuZGluZyBjb21tYW5kcyB0aHJvdWdoIHRoZSB0ZXJtaW5hbC4iCm1zZ3N0ciAiUGVybWV0IGRlIGNvbnRyw7RsZXIgbCdpbXByaW1hbnRlIGVuIHV0aWxpc2FudCBsZXMgY29tbWFuZGVzIGRlIHRlbXDDqXJhdHVyZSwgbCdvbmdsZXQgZGUgY29tbWFuZGUgb3UgbCdlbnZvaSBkZSBjb21tYW5kZXMgdmlhIGxlIHRlcm1pbmFsLiIKCiM6IHNyYy9vY3RvcHJpbnQvYWNjZXNzL3Blcm1pc3Npb25zLnB5OjQwNwptc2dpZCAiQWxsb3dzIHRvIHNsaWNlIGZpbGVzIgptc2dzdHIgIlBlcm1ldCBkZSBkw6ljb3VwZXIgZGVzIGZpY2hpZXJzIgoKIzogc3JjL29jdG9wcmludC9hY2Nlc3MvcGVybWlzc2lvbnMucHk6NDE0Cm1zZ2lkICJBbGxvd3MgdG8gbGlzdCB0aW1lbGFwc2UgdmlkZW9zIgptc2dzdHIgIlBlcm1ldCBkZSBsaXN0ZXIgbGVzIHZpZMOpb3MgVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC9hY2Nlc3MvcGVybWlzc2lvbnMucHk6NDIwCm1zZ2lkICJBbGxvd3MgdG8gZG93bmxvYWQgdGltZWxhcHNlIHZpZGVvcyIKbXNnc3RyICJQZXJtZXQgZGUgdMOpbMOpY2hhcmdlciBkZXMgdmlkw6lvcyBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTo0MjYKbXNnaWQgIkFsbG93cyB0byBkZWxldGUgdGltZWxhcHNlIHZpZGVvcyBhbmQgdW5yZW5kZXJlZCB0aW1lbGFwc2VzIgptc2dzdHIgIlBlcm1ldCBkZSBzdXBwcmltZXIgbGVzIHZpZMOpb3MgVGltZWxhcHNlIGV0IGxlcyBUaW1lbGFwc2VzIG5vbiByZW5kdXMiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTo0MzIKbXNnaWQgIkFsbG93cyB0byBjaGFuZ2UgdGhlIHRpbWVsYXBzZSBzZXR0aW5ncyBhbmQgZGVsZXRlIG9yIHJlbmRlciB1bnJlbmRlcmVkIHRpbWVsYXBzZXMuIEluY2x1ZGVzIHRoZSBcIlRpbWVsYXBzZSBMaXN0XCIsXCJUaW1lbGFwc2UgRGVsZXRlXCIgYW5kIFwiVGltZWxhcHNlIERvd25sb2FkXCIgcGVybWlzc2lvbnMiCm1zZ3N0ciAiUGVybWV0IGRlIG1vZGlmaWVyIGxlcyBwYXJhbcOodHJlcyBkdSBUaW1lbGFwc2UsIGRlIHN1cHByaW1lciBvdSBkZSByZW5kcmUgbGVzIFRpbWVsYXBzZXMgbm9uIHJlbmR1cy4gSW5jbHV0IGxlcyBhdXRvcmlzYXRpb25zIFwiTGlzdGUgVGltZWxhcHNlXCIsIFwiU3VwcHJpbWVyIFRpbWVsYXBzZVwiIGV0IFwiIFTDqWzDqWNoYXJnZW1lbnQgVGltZWxhcHNlXCIiCgojOiBzcmMvb2N0b3ByaW50L2FjY2Vzcy9wZXJtaXNzaW9ucy5weTo0NDUKbXNnaWQgIkFsbG93cyB0byByZWFkIG5vbiBzZW5zaXRpdmUgc2V0dGluZ3MuIE1hbmRhdG9yeSBmb3IgdGhlIGRlZmF1bHQgVUkgdG8gd29yay4iCm1zZ3N0ciAiUGVybWV0IGRlIGxpcmUgbGVzIHBhcmFtw6h0cmVzIG5vbiBzZW5zaWJsZXMuIE9ibGlnYXRvaXJlIHBvdXIgcXVlIGwnaW50ZXJmYWNlIHV0aWxpc2F0ZXVyIHBhciBkw6lmYXV0IGZvbmN0aW9ubmUuIgoKIzogc3JjL29jdG9wcmludC9hY2Nlc3MvcGVybWlzc2lvbnMucHk6NDU0Cm1zZ2lkICJBbGxvd3MgdG8gbWFuYWdlIHNldHRpbmdzIGFuZCBhbHNvIHRvIHJlYWQgc2Vuc2l0aXZlIHNldHRpbmdzIgptc2dzdHIgIlBlcm1ldCBkZSBnw6lyZXIgbGVzIHBhcmFtw6h0cmVzIGV0IMOpZ2FsZW1lbnQgZGUgbGlyZSBsZXMgcGFyYW3DqHRyZXMgc2Vuc2libGVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi9fX2luaXRfXy5weTozNQptc2dpZCAiQWxsb3dzIHRvIHNlZSBwcmludGVyIG5vdGlmaWNhdGlvbnMiCm1zZ3N0ciAiUGVybWV0IGRlIHZvaXIgbGVzIG5vdGlmaWNhdGlvbnMgZGUgbCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi9fX2luaXRfXy5weTo0Mgptc2dpZCAiQWxsb3dzIHRvIGNsZWFyIHByaW50ZXIgbm90aWZpY2F0aW9ucyIKbXNnc3RyICJQZXJtZXQgZCdlZmZhY2VyIGxlcyBub3RpZmljYXRpb25zIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vX19pbml0X18ucHk6OTUgc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi9fX2luaXRfXy5weToxMDAKbXNnaWQgIlByaW50ZXIgTm90aWZpY2F0aW9ucyIKbXNnc3RyICJOb3RpZmljYXRpb25zIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vX19pbml0X18ucHk6MTQyCm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIHlvdXIgcHJpbnRlciB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIHRyaWdnZXIgbm90aWZpY2F0aW9ucyBpbiBPY3RvUHJpbnQiCm1zZ3N0ciAiU2FucyBjZXR0ZSBleHRlbnNpb24sIHZvdHJlIGltcHJpbWFudGUgbmUgc2VyYSBwbHVzIGVuIG1lc3VyZSBkZSBkw6ljbGVuY2hlciBkZXMgbm90aWZpY2F0aW9ucyBkYW5zIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vc3RhdGljL2pzL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi5qczo3Ngptc2dpZCAiUHJpbnRlciBOb3RpZmljYXRpb24iCm1zZ3N0ciAiTm90aWZpY2F0aW9uIGQnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbl9zZXR0aW5ncy5qaW5qYTI6MQptc2dpZCAiQWN0aW9uIENvbW1hbmQgTm90aWZpY2F0aW9uIFNldHRpbmdzIgptc2dzdHIgIlBhcmFtw6h0cmVzIGRlIG5vdGlmaWNhdGlvbiBkZXMgY29tbWFuZGVzIGQnYWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfbm90aWZpY2F0aW9uX3NldHRpbmdzLmppbmphMjo3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9lcnJvcnRyYWNraW5nL3N0YXRpYy9qcy9lcnJvcnRyYWNraW5nLmpzOjcwCm1zZ2lkICJFbmFibGUiCm1zZ3N0ciAiQWN0aXZlciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbl9zZXR0aW5ncy5qaW5qYTI6MTQKbXNnaWQgIkVuYWJsZSBwb3B1cHMiCm1zZ3N0ciAiQWN0aXZlciBsZXMgZmVuw6p0cmVzIGNvbnRleHR1ZWxsZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfbm90aWZpY2F0aW9uL3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb25fc2V0dGluZ3MuamluamEyOjE1Cm1zZ2lkICJDaGVjayB0aGlzIGlmIHlvdSB3YW50IG5vdGlmaWNhdGlvbnMgdG8gYWxzbyBzaG93IHVwIGFzIHBvcHVwcyBpbiBhZGRpdGlvbiB0byB0aGUgbm90aWZpY2F0aW9uIGxpc3QgaW4gdGhlIHNpZGViYXIiCm1zZ3N0ciAiQ29jaGV6IGNldHRlIGNhc2Ugc2kgdm91cyBzb3VoYWl0ZXogcXVlIGxlcyBub3RpZmljYXRpb25zIHMnYWZmaWNoZW50IMOpZ2FsZW1lbnQgc291cyBmb3JtZSBkZSBmZW7DqnRyZXMgY29udGV4dHVlbGxlcyBlbiBwbHVzIGRlIGxhIGxpc3RlIGRlcyBub3RpZmljYXRpb25zIGRhbnMgbGEgYmFycmUgbGF0w6lyYWxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfbm90aWZpY2F0aW9uX3NpZGViYXIuamluamEyOjggc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbi90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfbm90aWZpY2F0aW9uX3NpZGViYXJfaGVhZGVyLmppbmphMjoyCm1zZ2lkICJDbGVhciBub3RpZmljYXRpb25zIgptc2dzdHIgIlN1cHByaW1lciBsZXMgbm90aWZpY2F0aW9ucyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbl9zaWRlYmFyLmppbmphMjoxMQptc2dpZCAiVGhlcmUgYXJlIGN1cnJlbnRseSBubyBub3RpZmljYXRpb25zIGZyb20geW91ciBwcmludGVyLiIKbXNnc3RyICJJbCBuJ3kgYSBhY3R1ZWxsZW1lbnQgYXVjdW5lIG5vdGlmaWNhdGlvbiBkZSB2b3RyZSBpbXByaW1hbnRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9ub3RpZmljYXRpb24vdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX25vdGlmaWNhdGlvbl9zaWRlYmFyX2hlYWRlci5qaW5qYTI6OAptc2dpZCAiQ2hhbmdlIHNvcnRpbmciCm1zZ3N0ciAiTW9kaWZpZXIgbGUgdHJpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX3Byb21wdC9fX2luaXRfXy5weTo3NAptc2dpZCAiQWxsb3dzIHRvIHNlZSBhbmQgaW50ZXJhY3Qgd2l0aCBwcmludGVyIHByb21wdHMiCm1zZ3N0ciAiUGVybWV0IGRlIHZvaXIgZXQgZCdpbnRlcmFnaXIgYXZlYyBsZXMgaW52aXRlcyBkZSBsJ2ltcHJpbWFudGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L19faW5pdF9fLnB5OjE1Ngptc2dpZCAiUHJpbnRlciBEaWFsb2dzIgptc2dzdHIgIkRpYWxvZ3VlIGF2ZWMgbCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX3Byb21wdC9fX2luaXRfXy5weToyOTMKbXNnaWQgIldpdGhvdXQgdGhpcyBwbHVnaW4geW91ciBwcmludGVyIHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gdHJpZ2dlciBjb25maXJtYXRpb24gb3Igc2VsZWN0aW9uIHByb21wdHMgaW4gT2N0b1ByaW50Igptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCB2b3RyZSBpbXByaW1hbnRlIG5lIHNlcmEgcGx1cyBjYXBhYmxlIGRlIGTDqWNsZW5jaGVyIGRlcyBkZW1hbmRlcyBkZSBjb25maXJtYXRpb24gb3UgZGUgc8OpbGVjdGlvbiBkYW5zIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9wcm9tcHQvc3RhdGljL2pzL2FjdGlvbl9jb21tYW5kX3Byb21wdC5qczo0NyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9wcm9tcHRfbmF2YmFyLmppbmphMjoxCm1zZ2lkICJNZXNzYWdlIGZyb20geW91ciBwcmludGVyIgptc2dzdHIgIk1lc3NhZ2UgZGUgdm90cmUgaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9wcm9tcHQvdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX3Byb21wdF9zZXR0aW5ncy5qaW5qYTI6MQptc2dpZCAiQWN0aW9uIENvbW1hbmQgUHJvbXB0IFNldHRpbmdzIgptc2dzdHIgIlBhcmFtw6h0cmVzIGR1IGNob2l4IGRlIGNvbW1hbmRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX3Byb21wdC90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0X3NldHRpbmdzLmppbmphMjo1Cm1zZ2lkICJFbmFibGUgc3VwcG9ydCIKbXNnc3RyICJBY3RpdmVyIGxlIHN1cHBvcnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9wcm9tcHRfc2V0dGluZ3MuamluamEyOjgKbXNnaWQgIklmIGRldGVjdGVkIGFzIHN1cHBvcnRlZCBieSB0aGUgZmlybXdhcmUgKDxjb2RlPlBST01QVF9TVVBQT1JUPC9jb2RlPiBjYXBhYmlsaXR5KSIKbXNnc3RyICJTaSBkw6l0ZWN0w6kgY29tbWUgc3VwcG9ydMOpIHBhciBsZSBmaXJtd2FyZSAoY2FwYWNpdMOpIDxjb2RlPlBST01QVF9TVVBQT1JUPC9jb2RlPikiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9wcm9tcHRfc2V0dGluZ3MuamluamEyOjExIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6ODMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjozMzkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MDcKbXNnaWQgIkFsd2F5cyIKbXNnc3RyICJUb3Vqb3VycyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9wcm9tcHQvdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX3Byb21wdF9zZXR0aW5ncy5qaW5qYTI6MTQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mZWF0dXJlcy5qaW5qYTI6Nzkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo5MCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjM0MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQxMAptc2dpZCAiTmV2ZXIiCm1zZ3N0ciAiSmFtYWlzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX3Byb21wdC90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0X3NldHRpbmdzLmppbmphMjoxOSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6Nzkgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjMzMCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo5NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjIyNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjM0OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ1NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3dlYmNhbS5qaW5qYTI6MTQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy93ZWJjYW0uamluamEyOjMxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5CbGFja2xpc3QuamluamEyOjUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZXJtaW5hbC5qaW5qYTI6MzUKbXNnaWQgIkFkdmFuY2VkIG9wdGlvbnMiCm1zZ3N0ciAiT3B0aW9ucyBhdmFuY8OpZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9wcm9tcHRfc2V0dGluZ3MuamluamEyOjIyCm1zZ2lkICJEaWFsb2cgY29tbWFuZCIKbXNnc3RyICJDb21tYW5kZSBkZSBkaWFsb2d1ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hY3Rpb25fY29tbWFuZF9wcm9tcHQvdGVtcGxhdGVzL2FjdGlvbl9jb21tYW5kX3Byb21wdF9zZXR0aW5ncy5qaW5qYTI6MjUKbXNnaWQgIlVzZSB0aGlzIHRvIGRlZmluZSB0aGUgZGlhbG9nIGNvbW1hbmQuIERlZmF1bHQgaXMgPGNvZGU+TTg3NjwvY29kZT4uIFlvdSBub3JtYWxseSBzaG91bGQgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIGTDqWZpbmlyIGxhIGNvbW1hbmRlLiBMYSB2YWxldXIgcGFyIGTDqWZhdXQgZXN0IDxjb2RlPiBNODc2PC9jb2RlPi4gVm91cyBuZSBkZXZyaWV6IHBhcyBhdm9pciDDoCBjaGFuZ2VyIGNlbGEuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FjdGlvbl9jb21tYW5kX3Byb21wdC90ZW1wbGF0ZXMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0X3NldHRpbmdzLmppbmphMjozMQptc2dpZCAiRW5hYmxlIGZvcmNlIHNlbmRpbmcgb2YgdGhlIGNvbmZpZ3VyZWQgY29tbWFuZCB0byBieXBhc3MgYmxvY2tpbmcgZmlybXdhcmUgcm91dGluZXMgaWYgZGV0ZWN0ZWQgYXMgc3VwcG9ydGVkLiBZb3Ugbm9ybWFsbHkgc2hvdWxkIG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLiIKbXNnc3RyICJBY3RpdmVyIGwnZW52b2kgZm9yY8OpIGRlIGxhIGNvbW1hbmRlIGNvbmZpZ3Vyw6llIHBvdXIgY29udG91cm5lciBsZXMgcm91dGluZXMgZGUgYmxvY2FnZSBkdSBmaXJtd2FyZSBzaSBkw6l0ZWN0w6kgY29tbWUgc3VwcG9ydMOpLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGNoYW5nZXIgY2VsYS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYWN0aW9uX2NvbW1hbmRfcHJvbXB0L3RlbXBsYXRlcy9hY3Rpb25fY29tbWFuZF9wcm9tcHRfc2V0dGluZ3MuamluamEyOjM4Cm1zZ2lkICJFbmFibGUgc2lnbmFsaW5nIHRvIHRoZSBmaXJtd2FyZSB0aGF0IHdlIHN1cHBvcnQgPGNvZGU+cHJvbXB0Xyo8L2NvZGU+IGFjdGlvbnMgaWYgZGV0ZWN0ZWQgYXMgc3VwcG9ydGVkLiBZb3Ugbm9ybWFsbHkgc2hvdWxkIG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLiIKbXNnc3RyICJBY3RpdmVyIGxlIHNpZ25hbGVtZW50IGF1IGZpcm13YXJlIHF1ZSBub3VzIHN1cHBvcnRvbnMgbCdhY3Rpb24gPGNvZGU+cHJvbXB0Xyo8L2NvZGU+IHNpIGTDqXRlY3TDqSBjb21tZSBzdXBwb3J0w6kuIFZvdXMgbmUgZGV2cmlleiBub3JtYWxlbWVudCBwYXMgYXZvaXIgw6AgY2hhbmdlciBjZWxhLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hbm5vdW5jZW1lbnRzL19faW5pdF9fLnB5OjU4Cm1zZ2lkICJBbGxvd3MgdG8gcmVhZCBhbm5vdW5jZW1lbnRzIgptc2dzdHIgIlBlcm1ldCBkZSBsaXJlIGxlcyBhbm5vbmNlcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hbm5vdW5jZW1lbnRzL19faW5pdF9fLnB5OjY1Cm1zZ2lkICJBbGxvd3MgdG8gbWFuYWdlIGFubm91bmNlbWVudCBzdWJzY3JpcHRpb25zLiBJbmNsdWRlcyBcIlJlYWQgYW5ub3VuY2VtZW50c1wiIHBlcm1pc3Npb24iCm1zZ3N0ciAiUGVybWV0IGRlIGfDqXJlciBsZXMgYWJvbm5lbWVudHMgYXV4IGFubm9uY2VzLiBDb21wcmVuZCBsJ2F1dG9yaXNhdGlvbiBcIkxpcmUgbGVzIGFubm9uY2VzXCIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy9fX2luaXRfXy5weToxNzcgc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvdGVtcGxhdGVzL2Fubm91bmNlbWVudHMuamluamEyOjQgc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvdGVtcGxhdGVzL2Fubm91bmNlbWVudHNfbmF2YmFyLmppbmphMjoxCm1zZ2lkICJBbm5vdW5jZW1lbnRzIgptc2dzdHIgIkFubm9uY2VzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvX19pbml0X18ucHk6NjI5Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIHlvdSBtaWdodCBtaXNzIGltcG9ydGFudCBhbm5vdW5jZW1lbnRzIHJlZ2FyZGluZyBzZWN1cml0eSBvciBvdGhlciBjcml0aWNhbCBpc3N1ZXMgY29uY2VybmluZyBPY3RvUHJpbnQuIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCB2b3VzIHBvdXJyaWV6IG1hbnF1ZXIgZCdpbXBvcnRhbnRlcyBub3RpZmljYXRpb25zIGNvbmNlcm5hbnQgbGEgc8OpY3VyaXTDqSBvdSBkJ8OpdmVudHVlbHMgcHJvYmzDqG1lcyBjcml0aXF1ZXMgbGnDqXMgw6AgT2N0b1ByaW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hbm5vdW5jZW1lbnRzL3N0YXRpYy9qcy9hbm5vdW5jZW1lbnRzLmpzOjU5Cm1zZ2lkICJDYW5ub3QgYmUgdG9nZ2xlZCIKbXNnc3RyICJOZSBwZXV0IHBhcyDDqnRyZSBiYXNjdWzDqWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy9zdGF0aWMvanMvYW5ub3VuY2VtZW50cy5qczo2MQptc2dpZCAiRGlzYWJsZSBDaGFubmVsIgptc2dzdHIgIkTDqXNhY3RpdmVyIGxlIGNhbmFsIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvc3RhdGljL2pzL2Fubm91bmNlbWVudHMuanM6NjIKbXNnaWQgIkVuYWJsZSBDaGFubmVsIgptc2dzdHIgIkFjdGl2ZXIgbGUgY2FuYWwiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy9zdGF0aWMvanMvYW5ub3VuY2VtZW50cy5qczozMzgKbXNnaWQgIllvdSBjYW4gZWRpdCB5b3VyIGFubm91bmNlbWVudCBzdWJzY3JpcHRpb25zIHVuZGVyIFNldHRpbmdzID4gQW5ub3VuY2VtZW50cy4iCm1zZ3N0ciAiVm91cyBwb3VycmV6IG1vZGlmaWVyIHZvcyBhYm9ubmVtZW50cyBhdXggYW5ub25jZXMgdmlhIGxhIHBhZ2UgUGFyYW3DqHRyZXMgPiBBbm5vbmNlcy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy9zdGF0aWMvanMvYW5ub3VuY2VtZW50cy5qczozNTEgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTYyNSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjE1Nwptc2dpZCAiTGF0ZXIiCm1zZ3N0ciAiUGx1cyB0YXJkIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvc3RhdGljL2pzL2Fubm91bmNlbWVudHMuanM6MzU4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjE2MzYKbXNnaWQgIk1hcmsgcmVhZCIKbXNnc3RyICJNYXJxdWVyIGNvbW1lIGx1IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvc3RhdGljL2pzL2Fubm91bmNlbWVudHMuanM6MzY1Cm1zZ2lkICJSZWFkLi4uIgptc2dzdHIgIkxpcmUuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy90ZW1wbGF0ZXMvYW5ub3VuY2VtZW50cy5qaW5qYTI6MzEKbXNnaWQgIk1hcmsgYXMgbGFzdCByZWFkIgptc2dzdHIgIk1hcnF1ZXIgY29tbWUgZGVybmnDqHJlIGxlY3R1cmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy90ZW1wbGF0ZXMvYW5ub3VuY2VtZW50cy5qaW5qYTI6NDQgc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXMuamluamEyOjM2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MTI2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvdGVtcGxhdGVzL2V2ZW50bWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NjIgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIwMCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzQ2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjIxMSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo3MzQgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6MTA0NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2Fib3V0LmppbmphMjo1MSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo1MyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjEzOSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3RpbWVsYXBzZS5qaW5qYTI6MTAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjE2OAptc2dpZCAiQ2xvc2UiCm1zZ3N0ciAiRmVybWVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvdGVtcGxhdGVzL2Fubm91bmNlbWVudHNfc2V0dGluZ3MuamluamEyOjEKbXNnaWQgIkNvbmZpZ3VyZWQgQ2hhbm5lbHMiCm1zZ3N0ciAiQ2FuYXV4IGNvbmZpZ3Vyw6lzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvdGVtcGxhdGVzL2Fubm91bmNlbWVudHNfc2V0dGluZ3MuamluamEyOjYgc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjozNyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MzAgc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjcwIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy90ZXJtaW5hbGZpbHRlcnMuamluamEyOjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjEyMyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6NSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6NzMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckdlbmVyYWwuamluamEyOjMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVzLmppbmphMjo0IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxNDAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE4Nwptc2dpZCAiTmFtZSIKbXNnc3RyICJOb20iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYW5ub3VuY2VtZW50cy90ZW1wbGF0ZXMvYW5ub3VuY2VtZW50c19zZXR0aW5ncy5qaW5qYTI6NyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTI4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxNjggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjEyNgptc2dpZCAiQWN0aW9ucyIKbXNnc3RyICJBY3Rpb25zIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Fubm91bmNlbWVudHMvdGVtcGxhdGVzL2Fubm91bmNlbWVudHNfc2V0dGluZ3MuamluamEyOjM1Cm1zZ2lkICJSZWZyZXNoIEFubm91bmNlbWVudHMiCm1zZ3N0ciAiUmFmcmHDrmNoaXIgbGVzIGFubm9uY2VzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvX19pbml0X18ucHk6MTIzCm1zZ2lkICJBbGxvd3MgYWRtaW5pc3RyYXRpbmcgYWxsIGFwcGxpY2F0aW9uIGtleXMiCm1zZ3N0ciAiUGVybWV0IGQnYWRtaW5pc3RyZXIgdG91dGVzIGxlcyBjbMOpcyBkJ2FwcGxpY2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvX19pbml0X18ucHk6MTM0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL19faW5pdF9fLnB5OjEzNQptc2dpZCAiQXBwbGljYXRpb24gS2V5cyIKbXNnc3RyICJDbMOpcyBkJ2FwcGxpY2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvX19pbml0X18ucHk6NDg0Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIHRoaXJkIHBhcnR5IGNsaWVudHMgd2lsbCBubyBsb25nZXIgYmUgYWJsZSB0byBvYnRhaW4gYW4gQVBJIGtleSB3aXRob3V0IHlvdSBtYW51YWxseSBjb3B5LXBhc3RpbmcgaXQuIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCBsZXMgY2xpZW50cyB0aWVycyBuZSBwb3Vycm9udCBwbHVzIG9idGVuaXIgZGUgY2zDqSBBUEkgc2FucyB1biBjb3BpZXItY29sbGVyIG1hbnVlbC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczo5OSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczoyOTAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byByZXZva2UgdGhlIGFwcGxpY2F0aW9uIGtleSBcIiUoa2V5KXNcIi4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgcsOpdm9xdWVyIGxhIGNsw6kgZCdhcHBsaWNhdGlvbiBcIiUoa2V5KXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczoxMTUKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiXCI8c3Ryb25nPiUoYXBwKXM8L3N0cm9uZz5cIiBoYXMgcmVxdWVzdGVkIGFjY2VzcyB0byBjb250cm9sIE9jdG9QcmludCB0aHJvdWdoIHRoZSBBUEkuIgptc2dzdHIgIlwiPHN0cm9uZz4lKGFwcClzPC9zdHJvbmc+XCJhIGRlbWFuZMOpIGwnYWNjw6hzIHBvdXIgY29udHLDtGxlciBPY3RvUHJpbnQgdmlhIGwnQVBJLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjEyMwptc2dpZCAiRG8geW91IHdhbnQgdG8gYWxsb3cgYWNjZXNzIHRvIHRoaXMgYXBwbGljYXRpb24gd2l0aCB5b3VyIHVzZXIgYWNjb3VudD8iCm1zZ3N0ciAiVm91bGV6LXZvdXMgYXV0b3Jpc2VyIGwnYWNjw6hzIMOgIGNldHRlIGFwcGxpY2F0aW9uIGF2ZWMgdm90cmUgY29tcHRlIHV0aWxpc2F0ZXVyPyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjEyOAptc2dpZCAiQWNjZXNzIFJlcXVlc3QiCm1zZ3N0ciAiRGVtYW5kZSBkJ2FjY8OocyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjEzNgptc2dpZCAiQWxsb3ciCm1zZ3N0ciAiQXV0b3Jpc2VyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvc3RhdGljL2pzL2FwcGtleXMuanM6MTQzCm1zZ2lkICJEZW55Igptc2dzdHIgIlJlZnVzZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczoyNzkKbXNnaWQgIk5ldyBrZXkgZ2VuZXJhdGVkISIKbXNnc3RyICJOb3V2ZWxsZSBjbMOpIGfDqW7DqXLDqWUgISIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjMwNgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIHJldm9rZSAlKGNvdW50KWQgYXBwbGljYXRpb24ga2V5cy4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgcsOpdm9xdWVyICUoY291bnQpZCBsZXMgY2zDqXMgZCdhcHBsaWNhdGlvbi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczozNTYKbXNnaWQgIlJldm9raW5nIGFwcGxpY2F0aW9uIGtleXMiCm1zZ3N0ciAiUsOpdm9jYXRpb24gZGVzIGNsw6lzIGQnYXBwbGljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy9zdGF0aWMvanMvYXBwa2V5cy5qczozNTcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiUmV2b2tpbmcgJShjb3VudClkIGFwcGxpY2F0aW9uIGtleXMuLi4iCm1zZ3N0ciAiUsOpdm9xdWUgJShjb3VudClkIGNsw6lzIGQnYXBwbGljYXRpb24gLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvc3RhdGljL2pzL2FwcGtleXMuanM6MzY1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlJldm9rZWQgJShrZXkpcy4uLiIKbXNnc3RyICIlKGtleSlzIFLDqXZvcXXDqS4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjM3MwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJSZXZvY2F0aW9uIG9mICUoa2V5KXMgZmFpbGVkLCBjb250aW51aW5nLi4uIgptc2dzdHIgIkxhIHLDqXZvY2F0aW9uIGRlICUoa2V5KXMgYSDDqWNob3XDqSwgY29udGludWVyIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3N0YXRpYy9qcy9hcHBrZXlzLmpzOjM3NwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJEZWxldGlvbiBvZiAlKGtleSlzIGZhaWxlZDogJShlcnJvcilzIgptc2dzdHIgIkxhIHN1cHByZXNzaW9uIGRlICUoa2V5KXMgYSDDqWNob3XDqTogJShlcnJvcilzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXMuamluamEyOjkgc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjM2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjo2NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjo4Cm1zZ2lkICJVc2VyIgptc2dzdHIgIlV0aWxpc2F0ZXVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXMuamluamEyOjE1IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjozNyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5c19zZXR0aW5ncy5qaW5qYTI6NzIgc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfdXNlcnNldHRpbmdzLmppbmphMjoxMCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5c191c2Vyc2V0dGluZ3MuamluamEyOjM4Cm1zZ2lkICJBcHBsaWNhdGlvbiBpZGVudGlmaWVyIgptc2dzdHIgIklkZW50aWZpYW50IGRlIGwnYXBwbGljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5cy5qaW5qYTI6MjEgc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjQ1IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3VzZXJzZXR0aW5ncy5qaW5qYTI6MTYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy91c2Vyc2V0dGluZ3MvYWNjZXNzLmppbmphMjoyMiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjoyNAptc2dpZCAiQVBJIEtleSIKbXNnc3RyICJDbMOpIGRlIGwnQVBJIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXMuamluamEyOjI0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjo0NSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5c191c2Vyc2V0dGluZ3MuamluamEyOjE2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjI1Cm1zZ2lkICJDb3B5IEFQSSBLZXkgdG8gY2xpcGJvYXJkIgptc2dzdHIgIkNvcGllciBsYSBjbGVmIGRlIGwnIEFQSSBkYW5zIGxlIHByZXNzZS1wYXBpZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5cy5qaW5qYTI6Mjggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcGkuamluamEyOjM4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6MzYKbXNnaWQgIlFSIENvZGUiCm1zZ3N0ciAiUVIgQ29kZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjoxIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3VzZXJzZXR0aW5ncy5qaW5qYTI6MQptc2dpZCAiUmVnaXN0ZXJlZCBhcHBsaWNhdGlvbiBrZXlzIgptc2dzdHIgIkNsw6lzIGQnYXBwbGljYXRpb24gZW5yZWdpc3Ryw6llcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjo0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3VzZXJzZXR0aW5ncy5qaW5qYTI6NAptc2dpZCAiVGhlcmUgYXJlIG5vIGFwcGxpY2F0aW9uIGtleXMgcmVnaXN0ZXJlZCB5ZXQuIgptc2dzdHIgIklsIG4neSBhIHBhcyBlbmNvcmUgZGUgY2zDqXMgZCdhcHBsaWNhdGlvbiBlbnJlZ2lzdHLDqWVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjoxMSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjI1IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3RlbXBsYXRlcy9sb2dnaW5nX3NldHRpbmdzLmppbmphMjoxNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTI3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxNzUKbXNnaWQgIlNlbGVjdCBhbGwgb24gdGhpcyBwYWdlIgptc2dzdHIgIlRvdXQgc8OpbGVjdGlvbm5lciBzdXIgbGEgcGFnZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjoxMiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjI2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3RlbXBsYXRlcy9sb2dnaW5nX3NldHRpbmdzLmppbmphMjoxOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTI4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxNzYKbXNnaWQgIlNlbGVjdCBhbGwiCm1zZ3N0ciAiVG91dCBzw6lsZWN0aW9ubmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjE1Cm1zZ2lkICJTZWxlY3QgYWxsIGJ5IHVzZXIuLi4iCm1zZ3N0ciAiVG91dCBzw6lsZWN0aW9ubmVyIHBhciBsJ3V0aWxpc2F0ZXVyIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjoyMQptc2dpZCAiU2VsZWN0IGFsbCBieSBhcHAuLi4iCm1zZ3N0ciAiVG91dCBzw6lsZWN0aW9ubmVyIHBhciBhcHBsaWNhdGlvbiAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5c19zZXR0aW5ncy5qaW5qYTI6Mjcgc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjoyOCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MjAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjEzMCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTc4Cm1zZ2lkICJDbGVhciBzZWxlY3Rpb24iCm1zZ3N0ciAiRWZmYWNlciBsYSBzw6lsZWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjMwCm1zZ2lkICJSZXZva2Ugc2VsZWN0ZWQiCm1zZ3N0ciAiUmV0aXJlciBsYSBzw6lsZWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjM4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3VzZXJzZXR0aW5ncy5qaW5qYTI6MTEgc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo0MCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MzMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZXMuamluamEyOjYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE0MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTkwCm1zZ2lkICJBY3Rpb24iCm1zZ3N0ciAiQWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjQ2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3VzZXJzZXR0aW5ncy5qaW5qYTI6MTcKbXNnaWQgIlJldm9rZSIKbXNnc3RyICJSZXRpcmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfc2V0dGluZ3MuamluamEyOjQ2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNjMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NQptc2dpZCAiRGV0YWlscyIKbXNnc3RyICJEw6l0YWlscyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9hcHBrZXlzL3RlbXBsYXRlcy9hcHBrZXlzX3NldHRpbmdzLmppbmphMjo2MiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYXBwa2V5cy90ZW1wbGF0ZXMvYXBwa2V5c191c2Vyc2V0dGluZ3MuamluamEyOjM0Cm1zZ2lkICJNYW51YWxseSBnZW5lcmF0ZSBhbiBhcHBsaWNhdGlvbiBrZXkiCm1zZ3N0ciAiR8OpbsOpcmVyIG1hbnVlbGxlbWVudCB1bmUgY2zDqSBkJ2FwcGxpY2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2FwcGtleXMvdGVtcGxhdGVzL2FwcGtleXNfdXNlcnNldHRpbmdzLmppbmphMjo0Ngptc2dpZCAiR2VuZXJhdGUiCm1zZ3N0ciAiR8OpbsOpcmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9fX2luaXRfXy5weTo4Nwptc2dpZCAiQWxsb3dzIGFjY2VzcyB0byBiYWNrdXBzIGFuZCByZXN0b3JlcyIKbXNnc3RyICJQZXJtZXQgbCdhY2PDqHMgYXV4IHNhdXZlZ2FyZGVzIGV0IGF1eCByZXN0YXVyYXRpb25zIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9fX2luaXRfXy5weToxMjYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjkyCm1zZ2lkICJCYWNrdXAgJiBSZXN0b3JlIgptc2dzdHIgIlNhdXZlZ2FyZGVyICYgUmVzdGF1cmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9fX2luaXRfXy5weToxMjcKbXNnaWQgIlJlc3RvcmUgQmFja3VwPyIKbXNnc3RyICJSZXN0YXVyZXIgbGEgc2F1dmVnYXJkZSA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9fX2luaXRfXy5weToxNDE0Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIHlvdSB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIGJhY2t1cCAmIHJlc3RvcmUgeW91ciBPY3RvUHJpbnQgc2V0dGluZ3MgYW5kIGRhdGEuIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCB2b3VzIG5lIHBvdXJyZXogcGx1cyBzYXV2ZWdhcmRlciBuaSByZXN0YXVyZXIgdm9zIHBhcmFtw6h0cmVzIGV0IHZvcyBkb25uw6llcyBkJ09jdG9QcmludC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6OTUKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgYmFja3VwIGZpbGUgXCIlKG5hbWUpc1wiLiIKbXNnc3RyICJWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBzdXBwcmltZXIgbGUgZmljaGllciBkZSBzYXV2ZWdhcmRlIFwiJShuYW1lKXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6MTIwCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gcmVzdG9yZSB0aGUgYmFja3VwIGZpbGUgXCIlKG5hbWUpc1wiLiBUaGlzIGNhbm5vdCBiZSB1bmRvbmUuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHJlc3RhdXJlciBsZSBmaWNoaWVyIGRlIHNhdXZlZ2FyZGUgXCIlKG5hbWUpc1wiLiDDh2EgbmUgcGV1dCBwYXMgw6p0cmUgYW5udWzDqS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6MTUwCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gdXBsb2FkIGFuZCByZXN0b3JlIHRoZSBiYWNrdXAgZmlsZSBcIiUobmFtZSlzXCIuIFRoaXMgY2Fubm90IGJlIHVuZG9uZS4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgdMOpbMOpY2hhcmdlciBldCBkZSByZXN0YXVyZXIgbGUgZmljaGllciBkZSBzYXV2ZWdhcmRlIFwiJShuYW1lKXNcIi4gw4dhIG5lIHBldXQgcGFzIMOqdHJlIGFubnVsw6kuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjE2Ngptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGhlIHJlY29yZCBvZiBwbHVnaW5zIHVua25vd24gZHVyaW5nIHRoZSBsYXN0IHJlc3RvcmUuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciBsJ2VucmVnaXN0cmVtZW50IGRlIGNldHRlIGV4dGVuc2lvbiBpbmNvbm51cyBsb3JzIGRlIGxhIGRlcm5pw6hyZSByZXN0YXVyYXRpb24uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjE5OQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSAlKGNvdW50KWQgYmFja3Vwcy4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyICUoY291bnQpZCBzYXV2ZWdhcmRlcy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6MjIyCm1zZ2lkICJCYWNrdXAgY3JlYXRlZCBzdWNjZXNzZnVsbHkiCm1zZ3N0ciAiU2F1dmVnYXJkZSBjcsOpw6llIGF2ZWMgc3VjY8OocyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvc3RhdGljL2pzL2JhY2t1cC5qczoyMzEKbXNnaWQgIkNyZWF0aW5nIHRoZSBiYWNrdXAgZmFpbGVkIgptc2dzdHIgIkxhIGNyw6lhdGlvbiBkZSBsYSBzYXV2ZWdhcmRlIGEgw6ljaG91w6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6MjMzCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk9jdG9QcmludCBjb3VsZCBub3QgY3JlYXRlIHlvdXIgYmFja3VwLiBQbGVhc2UgY29uc3VsdCA8Y29kZT5vY3RvcHJpbnQubG9nPC9jb2RlPiBmb3IgZGV0YWlscy4gRXJyb3I6ICUoZXJyb3IpcyIKbXNnc3RyICJPY3RvUHJpbnQgbidhIHBhcyBwdSBjcsOpZXIgdm90cmUgc2F1dmVnYXJkZS4gVmV1aWxsZXogY29uc3VsdGVyIDxjb2RlPiBvY3RvcHJpbnQubG9nIDwvY29kZT4gcG91ciBwbHVzIGRlIGTDqXRhaWxzLiBFcnJldXI6ICUoZXJyb3IpcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvc3RhdGljL2pzL2JhY2t1cC5qczoyNDMgc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjoxMjAKbXNnaWQgIlJlc3RvcmluZyBmcm9tIGJhY2t1cC4uLiIKbXNnc3RyICJSZXN0YXVyYXRpb24gw6AgcGFydGlyIGQndW5lIHNhdXZlZ2FyZGUgLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjI1MAptc2dpZCAiUmVzdG9yZSBmYWlsZWQhIENoZWNrIHRoZSBhYm92ZSBvdXRwdXQgYW5kIG9jdG9wcmludC5sb2cgZm9yIHJlYXNvbnMgYXMgdG8gd2h5LiIKbXNnc3RyICJMYSByZXN0YXVyYXRpb24gYSDDqWNob3XDqSEgVsOpcmlmaWV6IGxlIGNoZW1pbiBjaS1kZXNzdXMgZXQgb2N0b3ByaW50LmxvZyBwb3VyIGNvbm5hw650cmUgbGVzIHJhaXNvbnMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjI1OQptc2dpZCAiUmVzdG9yZSBzdWNjZXNzZnVsISBUaGUgc2VydmVyIHdpbGwgbm93IGJlIHJlc3RhcnRlZCEiCm1zZ3N0ciAiUmVzdGF1csOpIGF2ZWMgc3VjY8OocyEgTGUgc2VydmV1ciB2YSBtYWludGVuYW50IMOqdHJlIHJlZMOpbWFycsOpISIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvc3RhdGljL2pzL2JhY2t1cC5qczoyNjgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiSW5zdGFsbGluZyBwbHVnaW4gXCIlKHBsdWdpbilzXCIuLi4iCm1zZ3N0ciAiSW5zdGFsbGF0aW9uIGRlIGzigJlleHRlbnNpb24gXCIlKHBsdWdpbilzXCIuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6Mjc3CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkNhbm5vdCBpbnN0YWxsIHBsdWdpbiBcIiUocGx1Z2luKXNcIiBkdWUgdG8gaXQgYmVpbmcgaW5jb21wYXRpYmxlIHRvIHRoaXMgT2N0b1ByaW50IHZlcnNpb24gYW5kL29yIHVuZGVybHlpbmcgb3BlcmF0aW5nIHN5c3RlbSIKbXNnc3RyICJJbXBvc3NpYmxlIGQnaW5zdGFsbGVyIGNldHRlIGV4dGVuc2lvbiBcIiUocGx1Z2luKXNcIiBjYXIgaWwgZXN0IGluY29tcGF0aWJsZSBhdmVjIGNldHRlIHZlcnNpb24gZCdPY3RvUHJpbnQgZXQvb3UgbGUgc3lzdMOobWUgZCdleHBsb2l0YXRpb24gc291cy1qYWNlbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6Mjg5CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlRoZXJlIGFyZSAlKGNvdW50KWQgcGx1Z2lucyB5b3UnbGwgbmVlZCB0byBpbnN0YWxsIG1hbnVhbGx5IHNpbmNlIHRoZXkgYXJlbid0IHJlZ2lzdGVyZWQgb24gdGhlIHJlcG9zaXRvcnk6Igptc2dzdHIgIklsIHkgYSAlKGNvdW50KWQgZXh0ZW5zaW9ucyBxdWUgdm91cyBkZXZyZXogaW5zdGFsbGVyIG1hbnVlbGxlbWVudCBjYXIgaWxzIG5lIHNvbnQgcGFzIGVucmVnaXN0csOpcyBkYW5zIGxlIHLDqWbDqXJlbnRpZWw6IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjMzMAptc2dpZCAiRGVsZXRpbmcgYmFja3VwcyIKbXNnc3RyICJTdXBwcmVzc2lvbiBkZSBzYXV2ZWdhcmRlcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvc3RhdGljL2pzL2JhY2t1cC5qczozMzEKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRGVsZXRpbmcgJShjb3VudClkIGJhY2t1cHMuLi4iCm1zZ3N0ciAiU3VwcHJlc3Npb24gJShjb3VudClkIHNhdXZlZ2FyZGVzLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC9zdGF0aWMvanMvYmFja3VwLmpzOjMzOSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9zdGF0aWMvanMvbG9nZ2luZy5qczozNDUgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjQ3OSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NTExCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkRlbGV0ZWQgJShmaWxlbmFtZSlzLi4uIgptc2dzdHIgIiUoZmlsZW5hbWUpcyBzdXBwcmltw6kuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3N0YXRpYy9qcy9iYWNrdXAuanM6MzQ3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3N0YXRpYy9qcy9sb2dnaW5nLmpzOjM1MyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NDg3IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo1MjAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRGVsZXRpb24gb2YgJShmaWxlbmFtZSlzIGZhaWxlZCwgY29udGludWluZy4uLiIKbXNnc3RyICJFY2hlYyBkZSBsYSBzdXBwcmVzc2lvbiBkZSAlKGZpbGVuYW1lKXMsIHBvdXJzdWl0ZS4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvc3RhdGljL2pzL2JhY2t1cC5qczozNTEgc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvc3RhdGljL2pzL2xvZ2dpbmcuanM6MzU3IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo0OTEKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRGVsZXRpb24gb2YgJShmaWxlbmFtZSlzIGZhaWxlZDogJShlcnJvcilzIgptc2dzdHIgIkVjaGVjIGRlIGxhIHN1cHByZXNzaW9uIGRlICUoZmlsZW5hbWUpczolKGVycm9yKXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjIKbXNnaWQgIiIKIlxuIgoiICAgIFNvbWUgcGx1Z2lucyBkdXJpbmcgdGhlIGxhc3QgcmVzdG9yZSBjb3VsZCBub3QgYmUgaWRlbnRpZmllZCBhbmQgaGVuY2Ugbm90IGF1dG9tYXRpY2FsbHkgaW5zdGFsbGVkLlxuIgoiICAgIFBsZWFzZSBpbnN0YWxsIHRoZW0gbWFudWFsbHksIHRoZXkgYXJlIGxpc3RlZCBiZWxvdyBpbmNsdWRpbmcgdGhlaXIgc3RhdGVkIGhvbWVwYWdlczpcbiIKIiAgICAiCm1zZ3N0ciAiIgoiXG4iCiIgICBDZXJ0YWluZXMgZXh0ZW5zaW9ucyBsb3JzIGRlIGxhIGRlcm5pw6hyZSByZXN0YXVyYXRpb24gbidvbnQgcGFzIHB1IMOqdHJlIGlkZW50aWZpw6llcyBldCBkb25jIHBhcyBpbnN0YWxsw6llcyBhdXRvbWF0aXF1ZW1lbnQuXG4iCiIgICBWZXVpbGxleiBsZXMgaW5zdGFsbGVyIG1hbnVlbGxlbWVudC4gRWxsZXMgc29udCByw6lwZXJ0b3Jpw6llcyBjaS1kZXNzb3VzLCB5IGNvbXByaXMgbGV1cnMgcGFnZXMgZCdhY2N1ZWlsIGTDqWNsYXLDqWVzOlxuIgoiICAgIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo5Cm1zZ2lkICJEZWxldGUgcmVjb3JkIG9mIHVua25vd24gcGx1Z2lucyIKbXNnc3RyICJTdXBwcmltZXIgbCdlbnJlZ2lzdHJlbWVudCBkZSBjZXR0ZSBleHRlbnNpb24gaW5jb25udWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjEzIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjoxMjAKbXNnaWQgIkV4aXN0aW5nIGJhY2t1cHMiCm1zZ3N0ciAiU2F1dmVnYXJkZXMgZXhpc3RhbnRlcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MTYKbXNnaWQgIlRoZXJlIGFyZSBubyBiYWNrdXBzLiBNYXliZSBjcmVhdGUgb25lIGJlbG93PyIKbXNnc3RyICJJbCBuJ3kgYSBwYXMgZGUgc2F1dmVnYXJkZXMuIFBldXQtw6p0cmUgZW4gY3LDqWVyIHVuZSBjaS1kZXNzb3VzPyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MTkKbXNnaWQgIlRoZXNlIGFyZSB0aGUgYmFja3VwcyBvZiB5b3VyIHNldHRpbmdzIGFuZCBmaWxlcyB0aGF0IGFscmVhZHkgZXhpc3Qgb24gdGhpcyBPY3RvUHJpbnQgaW5zdGFuY2UuIFlvdSBtYXkgZGVsZXRlLCBkb3dubG9hZCBvciByZXN0b3JlIHRoZW0uIgptc2dzdHIgIkNlIHNvbnQgbGVzIHNhdXZlZ2FyZGVzIGRlIHZvcyBwYXJhbcOodHJlcyBldCB2b3MgZmljaGllcnMgcXVpIGV4aXN0ZW50IGTDqWrDoCBzdXIgY2V0dGUgaW5zdGFuY2UgT2N0b1ByaW50LiBWb3VzIHBvdXZleiBsZXMgc3VwcHJpbWVyLCBsZXMgdMOpbMOpY2hhcmdlciBvdSBsZXMgcmVzdGF1cmVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MzEgc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjIzIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxMzMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE4MQptc2dpZCAiRGVsZXRlIHNlbGVjdGVkIgptc2dzdHIgIlN1cHByaW1lciBsYSBzw6lsZWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjozOCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MzIgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjEyNQptc2dpZCAiRGF0ZSIKbXNnc3RyICJEYXRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjozOSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MzEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjEyNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjoyMiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjozNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo0OSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTQxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxODkKbXNnaWQgIlNpemUiCm1zZ3N0ciAiVGFpbGxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo0OAptc2dpZCAiVGhpcyBiYWNrdXAgZXhjZWVkcyB0aGUgbWF4aW11bSBhbGxvd2VkIHVwbG9hZCBzaXplIgptc2dzdHIgIkxhIHRhaWxsZSBkZSBjZXR0ZSBzYXV2ZWdhcmRlIGTDqXBhc3NlIGxhIHRhaWxsZSBtYXhpbWFsZSBhdXRvcmlzw6llIHBvdXIgbGUgdMOpbMOpdmVyc2VtZW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo0OSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hY2Nlc3MuanM6MzI5IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczo2NjEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjoxMDQKbXNnaWQgIkRlbGV0ZSIKbXNnc3RyICJTdXBwcmltZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjQ5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjoxMzcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6MjUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6MzkKbXNnaWQgIkRvd25sb2FkIgptc2dzdHIgIlTDqWzDqWNoYXJnZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjQ5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjoxMzYKbXNnaWQgIlJlc3RvcmUiCm1zZ3N0ciAiUmVzdGF1cmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo2NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6MTQzCm1zZ2lkICJOb3RlOiIKbXNnc3RyICJSZW1hcnF1ZToiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjY3CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiIKIlxuIgoiICAgICAgICAgICAgT2N0b1ByaW50IGN1cnJlbnRseSBvbmx5IGFsbG93cyB1cGxvYWRpbmcgYmFja3VwcyBvZiBhIG1heGltdW0gc2l6ZSBvZlxuIgoiICAgICAgICAgICAgJShwbHVnaW5fYmFja3VwX21heF91cGxvYWRfc2l6ZV9zdHIpcyB2aWEgdGhlIFVJLiBCYWNrdXBzIGxhcmdlciB0aGFuIHRoaXMgY2FuIG9ubHkgYmUgcmVzdG9yZWQgYnkgY29tbWFuZCBsaW5lLFxuIgoiICAgICAgICAgICAgb3IgYnkgYWRqdXN0aW5nIHRoZSBzaXplIGJ5IHJlbW92aW5nIGxhcmdlIGNvbnRlbnRzIChsaWtlIHRpbWVsYXBzZXMpIGZyb20gdGhlXG4iCiIgICAgICAgICAgICB6aXAgcHJpb3IgdG8gdXBsb2FkaW5nLiBCYWNrdXBzIGV4Y2VlZGluZyB0aGlzIHNpemUgbGltaXQgYXJlIG1hcmtlZCB3aXRoIGFcbiIKIiAgICAgICAgICAgICUobWFya2VyKXMgdXAgdGhlcmUuXG4iCiIgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIiAgICAgICAgICAgICBPY3RvUHJpbnQgbmUgcGVybWV0IGFjdHVlbGxlbWVudCBsZSB0w6lsw6ljaGFyZ2VtZW50IGRlIHNhdXZlZ2FyZGVzIHZpYSBs4oCZaW50ZXJmYWNlIHV0aWxpc2F0ZXVyIHF1ZSBk4oCZdW5lIHRhaWxsZSBtYXhpbWFsZSBkZVxuIgoiJShwbHVnaW5fYmFja3VwX21heF91cGxvYWRfc2l6ZV9zdHIpcyBwZXV2ZW50IMOqdHJlIHJlc3RhdXLDqWVzIHNvaXQgOlxuIgoiICAgICAgICAgICAgICAgICAtIHBhciBsaWduZSBkZSBjb21tYW5kZSxcbiIKIiAgICAgICAgICAgICAgICAgLSBlbiBkaW1pbnVhbnQgbGV1ciB0YWlsbGUgcGFyIGxhIHN1cHByZXNzaW9uIGRlIGdyb3MgY29udGVudXMgKGNvbW1lIGxlcyB0aW1lbGFwc2VzKSBkdSBmaWNoaWVyIFxuIgoiemlwIGF2YW50IGxlIHTDqWzDqWNoYXJnZW1lbnQuXG4iCiIgTGVzIHNhdXZlZ2FyZGVzIGRvbnQgbGEgdGFpbGxlIGTDqXBhc3NlIGNldHRlIGxpbWl0ZSBzb250IG1hcnF1w6llcyBhdmVjXG4iCiIlKG1hcmtlcilzLlxuIgoiwqAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjc3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjo5NQptc2dpZCAiQ3JlYXRlIGJhY2t1cCIKbXNnc3RyICJDcsOpZXIgdW5lIHNhdXZlZ2FyZGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjc5Cm1zZ2lkICJDcmVhdGUgYSBuZXcgYmFja3VwIG9mIHRoZSBjdXJyZW50IHN0YXRlLiIKbXNnc3RyICJDcsOpZXogdW5lIG5vdXZlbGxlIHNhdXZlZ2FyZGUgZGUgbCfDqXRhdCBhY3R1ZWwuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjo4MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6OTcKbXNnaWQgIkFsbCBmaWxlcyBpbiB0aGUgdXBsb2FkcyBmb2xkZXIgYW5kIHN1YmZvbGRlcnMuIFRoZXNlIGFyZSB0aGUgZmlsZXMgaW4gdGhlIEZpbGVzIExpc3QsIHBsdXMgYW55IG1ldGFkYXRhIHRoYXQgaGFzIGJlZW4gZ2VuZXJhdGVkIGZvciB0aG9zZSBmaWxlcy4iCm1zZ3N0ciAiUGVybWV0IGRlIGfDqXJlciBsZXMgYWJvbm5lbWVudHMgYXV4IMOpdsOpbmVtZW50cy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfc2V0dGluZ3MuamluamEyOjg1IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjoxMDAKbXNnaWQgIkV4Y2x1ZGUgdXBsb2FkZWQgZmlsZXMgKCYgYXNzb2NpYXRlZCBtZXRhZGF0YSkgZnJvbSBiYWNrdXAiCm1zZ3N0ciAiRXhjbHVyZSBsZXMgZmljaGllcnMgdMOpbMOpY2hhcmfDqXMgKGV0IGxlcyBtw6l0YSBkb25uw6llcykgZGUgbGEgc2F1dmVnYXJkZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6OTMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjEwOAptc2dpZCAiRXhjbHVkZSB0aW1lbGFwc2VzIGZyb20gYmFja3VwIgptc2dzdHIgIkV4Y2x1cmUgbGVzIFRpbWVsYXBzZXMgZGUgbGEgc2F1dmVnYXJkZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MTAwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjoxMTUKbXNnaWQgIkNyZWF0ZSBiYWNrdXAgbm93Igptc2dzdHIgIkNyw6llciB1bmUgc2F1dmVnYXJkZSBtYWludGVuYW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjoxMDYKbXNnaWQgIlJlc3RvcmUgZnJvbSB1cGxvYWRlZCBiYWNrdXAiCm1zZ3N0ciAiUmVzdGF1cmVyIMOgIHBhcnRpciBkJ3VuZSBzYXV2ZWdhcmRlIHTDqWzDqWNoYXJnw6llIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvYmFja3VwX3NldHRpbmdzLmppbmphMjoxMDgKbXNnaWQgIlJlc3RvcmUgc2V0dGluZ3MgJiBmaWxlcyBmcm9tIGFuIHVwbG9hZGVkIGJhY2t1cCBhcmNoaXZlLiIKbXNnc3RyICJSZXN0YXVyZXogbGVzIHBhcmFtw6h0cmVzIGV0IGxlcyBmaWNoaWVycyDDoCBwYXJ0aXIgZCd1bmUgYXJjaGl2ZSBkZSBzYXV2ZWdhcmRlIHTDqWzDqWNoYXJnw6llLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF9zZXR0aW5ncy5qaW5qYTI6MTE1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlBsZWFzZSBub3RlIHRoYXQgdGhlIG9wZXJhdGluZyBzeXN0ZW0gdGhhdCB0aGlzIE9jdG9QcmludCBzZXJ2ZXIgaXMgcnVubmluZyBvbiBkb2VzIG5vdCBzdXBwb3J0IGF1dG9tYXRpY2FsbHkgcmVzdG9yaW5nIGJhY2t1cHMuIFlvdSB3aWxsIGhhdmUgdG8gPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+cmVzdG9yZSB5b3VyIGJhY2t1cHMgbWFudWFsbHkgZm9yIG5vdzwvYT4uIgptc2dzdHIgIlZldWlsbGV6IG5vdGVyIHF1ZSBsZSBzeXN0w6htZSBkJ2V4cGxvaXRhdGlvbiBzdXIgbGVxdWVsIGNlIHNlcnZldXIgT2N0b1ByaW50IGVzdCBleMOpY3V0w6kgbmUgcHJlbmQgcGFzIGVuIGNoYXJnZSBsYSByZXN0YXVyYXRpb24gYXV0b21hdGlxdWUgZGVzIHNhdXZlZ2FyZGVzLiBQb3VyIGxlIG1vbWVudCwgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+dm91cyBkZXZyZXogcmVzdGF1cmVyIHZvcyBzYXV2ZWdhcmRlcyBtYW51ZWxsZW1lbnQ8L2E+LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL2JhY2t1cF93aXphcmQuamluamEyOjEKbXNnaWQgIlJlc3RvcmUgZnJvbSBhIGJhY2t1cD8iCm1zZ3N0ciAiUmVzdGF1cmVyIMOgIHBhcnRpciBkJ3VuZSBzYXV2ZWdhcmRlID8iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9iYWNrdXBfd2l6YXJkLmppbmphMjozCm1zZ2lkICIiCiI8cD5cbiIKIiAgICBJZiB5b3Ugd291bGQgbGlrZSB0byByZXN0b3JlIE9jdG9QcmludCBjb25maWd1cmF0aW9uIGZyb20gYSBiYWNrdXAgbm93IGlzIHRoZSB0aW1lLlxuIgoiPC9wPiIKbXNnc3RyICIiCiI8cD5cbiIKIiAgICBTaSB2b3VzIHNvdWhhaXRleiByZXN0YXVyZXIgbGEgY29uZmlndXJhdGlvbiBkJ09jdG9QcmludCDDoCBwYXJ0aXIgZCd1bmUgc2F1dmVnYXJkZSwgYydlc3QgbGUgbW9tZW50IGRlIGxlIGZhaXJlLlxuIgoiPC9wPiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9iYWNrdXAvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbi9iYWNrdXAvYmFja3VwX3BsdWdpbl91cGxvYWRfZm9ybS5qaW5qYTI6Mwptc2dpZCAiQmFja3VwIGZpbGUiCm1zZ3N0ciAiRmljaGllciBkZSBzYXV2ZWdhcmRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2JhY2t1cC90ZW1wbGF0ZXMvc25pcHBldHMvcGx1Z2luL2JhY2t1cC9iYWNrdXBfcGx1Z2luX3VwbG9hZF9mb3JtLmppbmphMjo3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjozMTkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjoxMjYKbXNnaWQgIkJyb3dzZS4uLiIKbXNnc3RyICJQYXJjb3VyaXIuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvYmFja3VwL3RlbXBsYXRlcy9zbmlwcGV0cy9wbHVnaW4vYmFja3VwL2JhY2t1cF9wbHVnaW5fdXBsb2FkX2Zvcm0uamluamEyOjE3Cm1zZ2lkICJVcGxvYWQgJiByZXN0b3JlIgptc2dzdHIgIlTDqWzDqWNoYXJnZXIgZXQgcmVzdGF1cmVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvX19pbml0X18ucHk6MTM0Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIE9jdG9QcmludCB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIHBlcmZvcm0gc2V0dXAgc3RlcHMgdGhhdCBtaWdodCBiZSByZXF1aXJlZCBhZnRlciBhbiB1cGRhdGUuIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCBPY3RvUHJpbnQgbmUgc2VyYSBwbHVzIGVuIG1lc3VyZSBkJ2VmZmVjdHVlciBjZXJ0YWluZXMgw6l0YXBlcyBkZSBjb25maWd1cmF0aW9uIHJlcXVpc2VzIGFwcsOocyB1bmUgbWlzZSDDoCBqb3VyLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3N1YndpemFyZHMucHk6NDEgc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfc2VydmVyY29tbWFuZHNfd2l6YXJkLmppbmphMjoxCm1zZ2lkICJTZXJ2ZXIgQ29tbWFuZHMiCm1zZ3N0ciAiQ29tbWFuZGVzIGR1IHNlcnZldXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdWJ3aXphcmRzLnB5OjYwIHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjEwMzMKbXNnaWQgIldlYmNhbSAmIFRpbWVsYXBzZSIKbXNnc3RyICJXZWJjYW0gJiBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdWJ3aXphcmRzLnB5Ojc1IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX2FjbF93aXphcmQuamluamEyOjEgc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6MTA1MCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wuamluamEyOjEKbXNnaWQgIkFjY2VzcyBDb250cm9sIgptc2dzdHIgIkNvbnRyw7RsZSBkJ2FjY8OocyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3N1YndpemFyZHMucHk6MTI3Cm1zZ2lkICJPbmxpbmUgQ29ubmVjdGl2aXR5IENoZWNrIgptc2dzdHIgIlbDqXJpZmljYXRpb24gZGUgbGEgY29ubmVjdGl2aXTDqSBlbiBsaWduZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3N1YndpemFyZHMucHk6MTQ1Cm1zZ2lkICJQbHVnaW4gQmxhY2tsaXN0Igptc2dzdHIgIkxpc3RlIE5vaXJlIGRlcyBleHRlbnNpb25zIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvc3Vid2l6YXJkcy5weToxNjYKbXNnaWQgIkRlZmF1bHQgUHJpbnRlciBQcm9maWxlIgptc2dzdHIgIlByb2ZpbCBkZSBsJ2ltcHJpbWFudGUgcGFyIGTDqWZhdXQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdGF0aWMvanMvY29yZXdpemFyZC5qczo1OQptc2dpZCAiUGxlYXNlIHNldCB1cCBBY2Nlc3MgQ29udHJvbCIKbXNnc3RyICJWZXVpbGxleiBjb25maWd1cmVyIGxlIGNvbnRyw7RsZSBkJ2FjY8OocyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3N0YXRpYy9qcy9jb3Jld2l6YXJkLmpzOjYwCm1zZ2lkICJZb3UgaGF2ZW4ndCB5ZXQgc2V0IHVwIGFjY2VzcyBjb250cm9sLiBZb3UgbmVlZCB0byBzZXR1cCBhIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhbmQgY2xpY2sgXCJDcmVhdGUgQWNjb3VudFwiIGJlZm9yZSBjb250aW51aW5nLiIKbXNnc3RyICJWb3VzIG4nYXZleiBwYXMgZW5jb3JlIG1pcyBlbiBwbGFjZSBsZSBjb250csO0bGUgZCdhY2PDqHMuIFZvdXMgZGV2ZXogZMOpZmluaXIgdW4gbm9tIGQndXRpbGlzYXRldXIgZXQgdW4gbW90IGRlIHBhc3NlIHB1aXMgY2xpcXVlciBcIkNyw6llciB1biBjb21wdGVcIiBhdmFudCBkZSBwb3V2b2lyIGNvbnRpbnVlci4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdGF0aWMvanMvY29yZXdpemFyZC5qczoxOTYKbXNnaWQgIlBsZWFzZSBzZXQgdXAgdGhlIG9ubGluZSBjb25uZWN0aXZpdHkgY2hlY2siCm1zZ3N0ciAiTWVyY2kgZGUgY29uZmlndXJlciBsYSB2w6lyaWZpY2F0aW9uIGRlIGNvbm5lY3Rpdml0w6kgZW4gbGlnbmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdGF0aWMvanMvY29yZXdpemFyZC5qczoxOTcKbXNnaWQgIllvdSBoYXZlbid0IHlldCBkZWNpZGVkIG9uIHdoZXRoZXIgdG8gZW5hYmxlIG9yIGRpc2FibGUgdGhlIG9ubGluZSBjb25uZWN0aXZpdHkgY2hlY2suIFlvdSBuZWVkIHRvIGVpdGhlciBlbmFibGUgb3IgZGlzYWJsZSBpdCBiZWZvcmUgY29udGludWluZy4iCm1zZ3N0ciAiVm91cyBuJ2F2ZXogcGFzIGVuY29yZSBkw6ljaWTDqSBkJ2FjdGl2ZXIgb3UgZGUgZMOpc2FjdGl2ZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBsYSBjb25uZWN0aW9uIGVuIGxpZ25lLiBWb3VzIGRldmV6IHNvaXQgbCdhY3RpdmVyIG91IGxhIGTDqXNhY3RpdmVyIGF2YW50IGRlIGNvbnRpbnVlci4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC9zdGF0aWMvanMvY29yZXdpemFyZC5qczoyODMKbXNnaWQgIlBsZWFzZSBzZXQgdXAgdGhlIHBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZyIKbXNnc3RyICJWZXVpbGxleiBjb25maWd1cmVyIGxlIHRyYWl0ZW1lbnQgIGRlIGwnZXh0ZW5zaW9uIGRlIGxhIExpc3RlIE5vaXJlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvc3RhdGljL2pzL2NvcmV3aXphcmQuanM6Mjg0Cm1zZ2lkICJZb3UgaGF2ZW4ndCB5ZXQgZGVjaWRlZCBvbiB3aGV0aGVyIHRvIGVuYWJsZSBvciBkaXNhYmxlIHRoZSBwbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmcuIFlvdSBuZWVkIHRvIGVpdGhlciBlbmFibGUgb3IgZGlzYWJsZSBpdCBiZWZvcmUgY29udGludWluZy4iCm1zZ3N0ciAiVm91cyBuJ2F2ZXogcGFzIGVuY29yZSBkw6ljaWTDqSBkJ2FjdGl2ZXIgb3UgZGUgZMOpc2FjdGl2ZXIgbCdleHRlbnNpb24gOiBMaXN0ZSBOb2lyZS4gVm91cyBkZXZleiBsJ2FjdGl2ZXIgb3UgbGUgZMOpc2FjdGl2ZXIgYXZhbnQgZGUgY29udGludWVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX2FjbF93aXphcmQuamluamEyOjMKbXNnaWQgIiIKIjxwPlxuIgoiICAgIEl0IGxvb2tzIGxpa2UgeW91IGhhdmVuJ3QgY29uZmlndXJlZCBhY2Nlc3MgY29udHJvbCB5ZXQsIHdoaWNoIGlzIG5vdyBtYW5kYXRvcnkuXG4iCiIgICAgUGxlYXNlIDxzdHJvbmc+c2V0IHVwIGEgdXNlcm5hbWUgYW5kIHBhc3N3b3JkPC9zdHJvbmc+IGZvciB0aGVcbiIKIiAgICBpbml0aWFsIGFkbWluaXN0cmF0b3IgYWNjb3VudCB3aG8gd2lsbCBoYXZlIGZ1bGwgYWNjZXNzIHRvIGJvdGggdGhlIHByaW50ZXIgYW5kXG4iCiIgICAgT2N0b1ByaW50J3Mgc2V0dGluZ3M6XG4iCiI8L3A+Igptc2dzdHIgIiIKIjxwPlxuIgoiICAgIElsIHNlbWJsZSBxdWUgdm91cyBuJ2F5ZXogcGFzIGVuY29yZSBjb25maWd1csOpIGxlIGNvbnRyw7RsZSBkJ2FjY8OocywgY2UgcXVpIGVzdCBtYWludGVuYW50IG9ibGlnYXRvaXJlLiBcbiIKIiAgICBWZXVpbGxleiA8c3Ryb25nPmNyw6llciB1biB1dGlsaXNhdGV1ciBhdmVjIHNvbiBtb3QgZGUgcGFzc2U8L3N0cm9uZz4gcXVpIHNlcmFcbiIKIiAgICBhZG1pbmlzdHJhdGV1ciBpbml0aWFsIGV0IGF1cmEgdW4gYWNjw6hzIHRvdGFsIMOgIGwnaW1wcmltYW50ZSBhaW5zaSBxdSdhdXggcGFyYW3DqHRyZXMgZCdPY3RvUHJpbnQ6XG4iCiI8L3A+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfYWNsX3dpemFyZC5qaW5qYTI6MTEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvbG9naW4uamluamEyOjUzIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL25hdmJhci9sb2dpbi5qaW5qYTI6NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvbG9naW4uamluamEyOjggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6ODMKbXNnaWQgIlVzZXJuYW1lIgptc2dzdHIgIk5vbSBkJ3V0aWxpc2F0ZXVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfYWNsX3dpemFyZC5qaW5qYTI6MTcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy91c2Vyc2V0dGluZ3MvYWNjZXNzLmppbmphMjozIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo1NCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvbG9naW4uamluamEyOjEwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL25hdmJhci9sb2dpbi5qaW5qYTI6MTEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6ODkKbXNnaWQgIlBhc3N3b3JkIgptc2dzdHIgIk1vdCBkZSBwYXNzZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX2FjbF93aXphcmQuamluamEyOjIzCm1zZ2lkICJDb25maXJtIFBhc3N3b3JkIgptc2dzdHIgIkNvbmZpcm1lciBsZSBtb3QgZGUgcGFzc2UiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9hY2xfd2l6YXJkLmppbmphMjoyNiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3VzZXJzZXR0aW5ncy9hY2Nlc3MuamluamEyOjE3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjk4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjE1MAptc2dpZCAiUGFzc3dvcmRzIGRvIG5vdCBtYXRjaCIKbXNnc3RyICJMZSBtb3QgZGUgcGFzc2UgbmUgY29ycmVzcG9uZCBwYXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9hY2xfd2l6YXJkLmppbmphMjozMAptc2dpZCAiQ3JlYXRlIEFjY291bnQiCm1zZ3N0ciAiQ3LDqWVyIHVuIGNvbXB0ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX29ubGluZWNoZWNrX3dpemFyZC5qaW5qYTI6MQptc2dpZCAiQ29uZmlndXJlIHRoZSBjb25uZWN0aXZpdHkgY2hlY2siCm1zZ3N0ciAiQ29uZmlndXJlciBsZSBjb250csO0bGUgZGUgY29ubmVjdGl2aXTDqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX29ubGluZWNoZWNrX3dpemFyZC5qaW5qYTI6NQptc2dpZCAiIgoiXG4iCiIgICAgSWYgaXQgaXMgZGlzYWJsZWQgT2N0b1ByaW50IHdpbGwgYWx3YXlzIGFzc3VtZSB0byBoYXZlIGEgd29ya2luZyBjb25uZWN0aW9uIHRvIHRoZSBpbnRlcm5ldC5cbiIKIiAgICBJZiB0aGF0IHNob3VsZCBub3QgYWN0dWFsbHkgYmUgdGhlIGNhc2UsIHNlcnZlciBzdGFydHVwcywgdXBkYXRlIGNoZWNrcyBhbmQgdGhlIGxpa2UgbWlnaHQgdGFrZSBsb25nZXIuXG4iCm1zZ3N0ciAiIgoiXG4iCiJTJ2lsIGVzdCBkw6lzYWN0aXbDqSBPY3RvUHJpbnQgY29uc2lkw6lyZXJhIHF1ZSB2b3RyZSBjb25uZXhpb24gw6AgaW50ZXJuZXQgZm9uY3Rpb25uZSB0b3Vqb3Vycy5cbiIKIlNpIGNlbGEgbidlc3QgZW4gZmFpdCBwYXMgbGUgY2FzLCBsZSBkw6ltYXJyYWdlIGR1IHNlcnZldXIsIGxhIHbDqXJpZmljYXRpb24gZGVzIG1pc2VzIMOgIGpvdXIgb3UgYXV0cmVzIHBldXZlbnQgcHJlbmRyZSBwbHVzIGRlIHRlbXBzLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfb25saW5lY2hlY2tfd2l6YXJkLmppbmphMjoxMAptc2dpZCAiIgoiXG4iCiIgICAgT2N0b1ByaW50IGNvbWVzIHByZWNvbmZpZ3VyZWQgdG8gcGVyZm9ybSB0aGUgY29ubmVjdGl2aXR5IGNoZWNrIGV2ZXJ5IDE1IG1pbnV0ZXMuIFlvdSBtYXkgY2hhbmdlIHRoZSB2YWx1ZSBoZXJlLlxuIgptc2dzdHIgIiIKIlxuIgoiT2N0b3ByaW50IGVzdCBwcsOpLWNvbmZpZ3Vyw6kgcG91ciBlZmZlY3R1ZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBsYSBjb25uZWN0aW9uIHRvdXRlcyBsZXMgMTUgbWludXRlcy4gVm91cyBwb3V2ZXogY2hhbmdlciBjZXR0ZSB2YWxldXIgaWNpLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfb25saW5lY2hlY2tfd2l6YXJkLmppbmphMjoxOAptc2dpZCAiIgoiXG4iCiIgICAgT2N0b1ByaW50IGNvbWVzIHByZWNvbmZpZ3VyZWQgdG8gdXRpbGl6ZSBHb29nbGUncyBETlMgc2VydmVyIDxjb2RlPjguOC44Ljg8L2NvZGU+LCBwb3J0IDUzIGZvciB0aGUgY29ubmVjdGl2aXR5IGNoZWNrIChpZlxuIgoiICAgIGl0J3MgZW5hYmxlZCkuIElmIHlvdSBoYXZlIGNvbmNlcm5zIGFib3V0IHVzaW5nIHRoYXQsIGRlZmluZSB0aGUgSVAgYW5kIHBvcnQgb2YgYSBkaWZmZXJlbnQgb25saW5lIHNlcnZlciB0aGF0IHlvdVxuIgoiICAgIHRydXN0IGFuZCB0aGF0IGhhcyBhIGhpZ2ggYXZhaWxhYmlsaXR5LlxuIgptc2dzdHIgIiIKIlxuIgoiT2N0b1ByaW50IGVzdCBwcsOpLWNvbmZpZ3Vyw6kgcG91ciB1dGlsaXNlciBsZSBzZXJ2ZXVyIEROUyBkZSBHb29nbGUgPGNvZGU+OC44LjguODwvY29kZT4sIHBvcnQgNTMgcG91ciBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIGNvbm5lY3Rpb24gKHNpIGVsbGUgZXN0IGFjdGl2w6llKS4gU2kgdm91cyBuZSBzb3VoYWl0ZXogcGFzIGwndXRpbGlzZXIsIGTDqWZpbmlzc2V6IGwnYWRyZXNzZSBJUCBldCBsZSBwb3J0IGQndW4gYXV0cmUgc2VydmV1ciBlbiBsaWduZSBkZSBjb25maWFuY2UgZXQgcXVpIGVzdCBmb3J0ZW1lbnQgZGlzcG9uaWJsZS5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX29ubGluZWNoZWNrX3dpemFyZC5qaW5qYTI6MzAKbXNnaWQgIiIKIlxuIgoiICAgIElmIHlvdSBhbHNvIHdhbnQgdG8gY2hlY2sgaWYgbmFtZSByZXNvbHV0aW9uIHdvcmtzIChzdHJvbmdseSByZWNvbW1lbmRlZCksIGRlZmluZSBhIGhvc3QgbmFtZVxuIgoiICAgIHRvIGNoZWNrIG5hbWUgcmVzb2x1dGlvbiBhZ2FpbnN0LiBJZiB5b3UgZG9uJ3Qga25vdyB3aGF0IHRvIHNldCBoZXJlLCB0aGUgZGVmYXVsdCB2YWx1ZVxuIgoiICAgIChPY3RvUHJpbnQncyBkb21haW4pIHNob3VsZCB3b3JrLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBwZXJmb3JtIHJlZ3VsYXIgcmVzb2x1dGlvbiBjaGVja3MgYWxvbmdcbiIKIiAgICBzaWRlIHdpdGggdGhlIGdlbmVyYWwgY29ubmVjdGl2aXR5IGNoZWNrLCBsZWF2ZSB0aGUgZmllbGQgZW1wdHkuXG4iCm1zZ3N0ciAiIgoiXG4iCiJTaSB2b3VzIHNvdWhhaXRleiDDqWdhbGVtZW50IHbDqXJpZmllciBzaSBsYSByw6lzb2x1dGlvbiBkZXMgbm9tcyBmb25jdGlvbm5lIChmb3J0ZW1lbnQgcmVjb21tYW5kw6kpLCBkw6lmaW5pc3NleiB1biBub20gZCdow7R0ZSBwb3VyIHbDqXJpZmllciBsYSByw6lzb2x1dGlvbiBkdSBub20uIFNpIHZvdXMgbmUgc2F2ZXogcGFzIGNlIHF1ZSB2b3VzIGRldmV6IGTDqWZpbmlyIGljaSwgbGEgdmFsZXVyIHBhciBkw6lmYXV0IChkb21haW5lIGRlIE9jdG9QcmludCkgZGV2cmFpdCBmb25jdGlvbm5lci4gU2kgdm91cyBuZSBzb3VoYWl0ZXogcGFzIGVmZmVjdHVlciBkZXMgY29udHLDtGxlcyBkZSByw6lzb2x1dGlvbiByw6lndWxpZXJzIGVuIHBsdXMgZHUgIGNvbnRyw7RsZSBnw6luw6lyYWwgZGUgbGEgY29ubmVjdGl2aXTDqSwgbGFpc3NleiBsZSBjaGFtcCB2aWRlLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfb25saW5lY2hlY2tfd2l6YXJkLmppbmphMjo0NAptc2dpZCAiIgoiXG4iCiIgICAgRmluYWxseSwgcGxlYXNlIGRlY2lkZSBvbiB3aGV0aGVyIHRvIGVuYWJsZSBvciBkaXNhYmxlIHRoZSBjb25uZWN0aXZpdHkgY2hlY2suIFlvdSBtYXkgY2hhbmdlIHRoZSBjb25maWd1cmF0aW9uIGF0XG4iCiIgICAgYW55IHRpbWUgdGhyb3VnaCBTZXR0aW5ncyA+IFNlcnZlciByaWdodCBmcm9tIHdpdGhpbiBPY3RvUHJpbnQuXG4iCm1zZ3N0ciAiIgoiXG4iCiJFbmZpbiwgdmV1aWxsZXogZMOpY2lkZXIgZCdhY3RpdmVyIG91IGRlIGTDqXNhY3RpdmVyIGxlIGNvbnRyw7RsZSBkZSBjb25uZWN0aXZpdMOpLiBWb3VzIHBvdXZleiBjaGFuZ2VyIGxhIGNvbmZpZ3VyYXRpb24gw6AgICB0b3V0IG1vbWVudCB2aWEgUGFyYW3DqHRyZXMgPiBTZXJ2ZXVyIGRpcmVjdGVtZW50IGRlcHVpcyBPY3RvUHJpbnQuXG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9vbmxpbmVjaGVja193aXphcmQuamluamEyOjUxCm1zZ2lkICJEaXNhYmxlIENvbm5lY3Rpdml0eSBDaGVjayIKbXNnc3RyICJEw6lzYWN0aXZlciBsYSB2w6lyaWZpY2F0aW9uIGRlIGNvbm5lY3Rpdml0w6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9vbmxpbmVjaGVja193aXphcmQuamluamEyOjU0Cm1zZ2lkICJFbmFibGUgQ29ubmVjdGl2aXR5IENoZWNrIgptc2dzdHIgIkFjdGl2ZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBjb25uZWN0aXZpdMOpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfb25saW5lY2hlY2tfd2l6YXJkLmppbmphMjo1OQptc2dpZCAiIgoiXG4iCiIgICAgICAgIENvbm5lY3Rpdml0eSBjaGVjayBpcyA8c3Ryb25nIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+ZW5hYmxlZDwvc3Ryb25nPi5cbiIKIiAgICAiCm1zZ3N0ciAiIgoiXG4iCiJDb250csO0bGUgZCdhY2PDqHMgPHN0cm9uZyBjbGFzcz1cInRleHQtc3VjY2Vzc1wiPmFjdGl2w6k8L3N0cm9uZz5cbiIKIiAgICAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9vbmxpbmVjaGVja193aXphcmQuamluamEyOjYyCm1zZ2lkICIiCiJcbiIKIiAgICAgICAgQ29ubmVjdGl2aXR5IGNoZWNrIGlzIDxzdHJvbmcgY2xhc3M9XCJ0ZXh0LWRhbmdlclwiPmRpc2FibGVkPC9zdHJvbmc+LlxuIgoiICAgICIKbXNnc3RyICIiCiJcbiIKIkNvbnRyw7RsZSBkJ2FjY8OocyA8c3Ryb25nIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+ZMOpc2FjdGl2w6k8L3N0cm9uZz4uXG4iCiIgICAgIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfcGx1Z2luYmxhY2tsaXN0X3dpemFyZC5qaW5qYTI6MQptc2dpZCAiQ29uZmlndXJlIHBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZyIKbXNnc3RyICJDb25maWd1cmVyIGxlIHRyYWl0ZW1lbnQgZGUgbCdleHRlbnNpb24gTGlzdGUgTm9pcmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wbHVnaW5ibGFja2xpc3Rfd2l6YXJkLmppbmphMjozCm1zZ2lkICIiCiJcbiIKIiAgICBUbyBwcm90ZWN0IGFnYWluc3Qga25vd24gc2V2ZXJlIGlzc3VlcyB3aXRoIGNlcnRhaW4gdmVyc2lvbnMgb2YgdGhpcmQgcGFydHkgcGx1Z2lucywgT2N0b1ByaW50IHN1cHBvcnRzIHRoZSB1c2VcbiIKIiAgICBvZiBhIGNlbnRyYWxpemVkIHBsdWdpbiB2ZXJzaW9uIGJsYWNrbGlzdCB0byBhdXRvbWF0aWNhbGx5IGRpc2FibGUgc3VjaCBwbHVnaW4gdmVyc2lvbnMgYmVmb3JlIHRoZXkgY2FuIGludGVyZmVyZSB3aXRoXG4iCiIgICAgbm9ybWFsIG9wZXJhdGlvbiwgYWxsb3dpbmcgeW91IHRvIHVuaW5zdGFsbCBvciB1cGRhdGUgdGhlbSB0byBhIG5ld2VyIHZlcnNpb24uXG4iCm1zZ3N0ciAiIgoiXG4iCiJQb3VyIHZvdXMgcHJvdMOpZ2VyIGRlIHPDqXbDqHJlcyBmYWlsbGVzIGNvbm51ZXMgYXZlYyBjZXJ0YWluZXMgZXh0ZW5zaW9ucywgT2N0b1ByaW50IHN1cHBvcnRlIHVuZSBMaXN0ZSBOb2lyZSBjZW50cmFsaXPDqWUgZCdleHRlbnNpb25zIHBvdXIgZMOpc2FjdGl2ZXIgYXV0b21hdGlxdWVtZW50IGxlcyB2ZXJzaW9ucyBkZSBjZXMgZXh0ZW5zaW9ucyBhdmFudCBxdSdlbGxlcyBuJ2ludGVyZsOocmVudCAgYXZlYyBsZSBmb25jdGlvbm5lbWVudCBub3JtYWwgZGUgdm90cmUgc3lzdMOobWUuIFRvdXQgZW4gdm91cyBsYWlzc2FudCBsYSBwb3NzaWJpbGl0w6kgZGUgZMOpc2luc3RhbGxlciBvdSBtZXR0cmUgw6Agam91ciB2ZXJzIHVuZSBub3V2ZWxsZSB2ZXJzaW9uLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfcGx1Z2luYmxhY2tsaXN0X3dpemFyZC5qaW5qYTI6OSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyUGx1Z2luQmxhY2tsaXN0RGVzY3JpcHRpb24uamluamEyOjcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiIgoiXG4iCiIgICAgQnkgZGVmYXVsdCwgT2N0b1ByaW50IHdpbGwgdXNlIHRoZSBibGFja2xpc3QgaG9zdGVkIGF0IDxjb2RlPnBsdWdpbnMub2N0b3ByaW50Lm9yZy9ibGFja2xpc3QuanNvbjwvY29kZT4gd2hpY2ggeW91XG4iCiIgICAgY2FuIGFsc28gdGFrZSBhIGxvb2sgYXQgaW4gYSBtb3JlIGh1bWFuIHJlYWRhYmxlIGZvcm1hdCA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiPmhlcmU8L2E+LlxuIgptc2dzdHIgIiIKIlxuIgoiUGFyIGTDqWZhdXQsIE9jdG9QcmludCB1dGlsaXNlIHVuZSBMaXN0ZSBub2lyZSBkJ2V4dGVuc2lvbnMgaMOpYmVyZ8OpZSBzdXIgPGNvZGU+cGx1Z2lucy5vY3RvcHJpbnQub3JnL2JsYWNrbGlzdC5qc29uPC9jb2RlPiwgcG91ciBsYXF1ZWxsZSBleGlzdGUgdW5lIHZlcnNpb24gcGx1cyBsaXNpYmxlIHBhciB1biBodW1haW4gPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5pY2k8L2E+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wbHVnaW5ibGFja2xpc3Rfd2l6YXJkLmppbmphMjoxNAptc2dpZCAiIgoiXG4iCiIgICAgUGxlYXNlIGRlY2lkZSB3aGV0aGVyIHRvIGFsbG93IGZldGNoIGFuZCB1c2Ugb2YgdGhpcyBjZW50cmFsaXplZCBibGFja2xpc3Qgc3RhcnRpbmcgd2l0aCB0aGUgbmV4dCBzZXJ2ZXIgc3RhcnQuXG4iCiIgICAgWW91IG1heSBhbHNvIGNoYW5nZSB5b3VyIGRlY2lzaW9uIGF0IGFueSB0aW1lIHRocm91Z2ggU2V0dGluZ3MgPiBTZXJ2ZXIgcmlnaHQgZnJvbSB3aXRoaW4gT2N0b1ByaW50LlxuIgptc2dzdHIgIiIKIlxuIgoiQ2hvaXNpc3NleiBzJ2lsIGZhdXQgYXV0b3Jpc2VyIGxhIHLDqWN1cMOpcmF0aW9uIGV0IGwndXRpbGlzYXRpb24gZGUgY2V0dGUgTGlzdGUgTm9pcmUgY2VudHJhbGlzw6llIGF1IHByb2NoYWluIGxhbmNlbWVudCBkdSBzZXJ2ZXVyLlxuIgoiVm91cyBwb3V2ZXogbW9kaWZpZXIgY2UgY2hvaXggw6AgdG91dCBtb21lbnQgZGFucyBQYXJhbcOodHJlcyA+IFNlcnZldXIgZGlyZWN0ZW1lbnQgZGVwdWlzIE9jdG9QcmludC5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3BsdWdpbmJsYWNrbGlzdF93aXphcmQuamluamEyOjIxCm1zZ2lkICJEaXNhYmxlIFBsdWdpbiBCbGFja2xpc3QgUHJvY2Vzc2luZyIKbXNnc3RyICJEw6lzYWN0aXZlciBsJ2V4dGVuc2lvbiBMaXN0ZSBOb2lyZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3BsdWdpbmJsYWNrbGlzdF93aXphcmQuamluamEyOjI0Cm1zZ2lkICJFbmFibGUgUGx1Z2luIEJsYWNrbGlzdCBQcm9jZXNzaW5nIgptc2dzdHIgIkFjdGl2ZXIgbCdleHRlbnNpb24gTGlzdGUgbm9pcmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wbHVnaW5ibGFja2xpc3Rfd2l6YXJkLmppbmphMjoyOQptc2dpZCAiIgoiXG4iCiIgICAgICAgIFBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZyBpcyA8c3Ryb25nIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+ZW5hYmxlZDwvc3Ryb25nPi5cbiIKIiAgICAiCm1zZ3N0ciAiIgoiXG4iCiJMJ2V4dGVuc2lvbiBMaXN0ZSBOb2lyZSBlc3QgPHN0cm9uZyBjbGFzcz1cInRleHQtc3VjY2Vzc1wiPmFjdGl2ZTwvc3Ryb25nPi5cbiIKIiAgICAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wbHVnaW5ibGFja2xpc3Rfd2l6YXJkLmppbmphMjozMgptc2dpZCAiIgoiXG4iCiIgICAgICAgIFBsdWdpbiBibGFja2xpc3QgcHJvY2Vzc2luZyBpcyA8c3Ryb25nIGNsYXNzPVwidGV4dC1kYW5nZXJcIj5kaXNhYmxlZDwvc3Ryb25nPi5cbiIKIiAgICAiCm1zZ3N0ciAiIgoiXG4iCiJMJ2V4dGVuc2lvbiBMaXN0ZSBOb2lyZSBlc3QgPHN0cm9uZyBjbGFzcz1cInRleHQtZGFuZ2VyXCI+aW5hY3RpdmU8L3N0cm9uZz4uXG4iCiIgICAgIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfcHJpbnRlcnByb2ZpbGVfd2l6YXJkLmppbmphMjoxCm1zZ2lkICJTZXQgdXAgeW91ciBwcmludGVyIHByb2ZpbGUiCm1zZ3N0ciAiQ29uZmlndXJlciB2b3RyZSBwcm9maWwgZCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfcHJpbnRlcnByb2ZpbGVfd2l6YXJkLmppbmphMjoyCm1zZ2lkICIiCiJQbGVhc2UgbWFrZSBzdXJlIHRoZSBzZXR0aW5ncyBiZWxvdyBtYXRjaCB5b3VyIHByaW50ZXIuIElmIHlvdSBwbGFuIG9uIGNvbm5lY3RpbmcgbW9yZSB0aGFuIG9uZSBwcmludGVyXG4iCiJ0byBPY3RvUHJpbnQsIHlvdSBjYW4gYWxzbyBjb25maWd1cmUgYWRkaXRpb25hbCBwcmludGVyIHByb2ZpbGVzIHVuZGVyIFNldHRpbmdzID4gUHJpbnRlciBQcm9maWxlcyIKbXNnc3RyICJBc3N1cmV6LXZvdXMgcXVlIGxlcyBwYXJhbcOodHJlcyBjaS1kZXNzb3VzIGNvcnJlc3BvbmRlbnQgw6Agdm90cmUgaW1wcmltYW50ZS4gU2kgdm91cyBwcsOpdm95ZXogZGUgY29ubmVjdGVyIHBsdXNpZXVycyBpbXByaW1hbnRlcyB2ZXJzIE9jdG9QcmludCwgdm91cyBwb3V2ZXogw6lnYWxlbWVudCBjb25maWd1cmVyIGRlcyBwcm9maWxzIGQnaW1wcmltYW50ZSBzdXBwbMOpbWVudGFpcmVzIGRhbnMgUGFyYW3DqHRyZXMgPiBQcm9maWxzIGQnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3ByaW50ZXJwcm9maWxlX3dpemFyZC5qaW5qYTI6NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjYwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjcwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yLmppbmphMjo5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6MTMyCm1zZ2lkICJHZW5lcmFsIgptc2dzdHIgIkfDqW7DqXJhbCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3ByaW50ZXJwcm9maWxlX3dpemFyZC5qaW5qYTI6OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvci5qaW5qYTI6MTAKbXNnaWQgIlByaW50IGJlZCAmIGJ1aWxkIHZvbHVtZSIKbXNnc3RyICJQbGF0ZWF1IGQnaW1wcmVzc2lvbiAmIHZvbHVtZSBkJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wcmludGVycHJvZmlsZV93aXphcmQuamluamEyOjkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3IuamluamEyOjExCm1zZ2lkICJBeGVzIgptc2dzdHIgIkF4ZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF9wcmludGVycHJvZmlsZV93aXphcmQuamluamEyOjEwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yLmppbmphMjoxMgptc2dpZCAiSG90ZW5kICYgZXh0cnVkZXIiCm1zZ3N0ciAiQnVzZXMgJiBFeHRydWRldXJzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfc2VydmVyY29tbWFuZHNfd2l6YXJkLmppbmphMjozCm1zZ2lkICIiCiI8cD5cbiIKIiAgICBPY3RvUHJpbnQgc3VwcG9ydHMgY2FsbGluZyBleHRlcm5hbCBjb21tYW5kcyBpbiBvcmRlciB0byByZXN0YXJ0IGl0c2VsZiBvciByZXN0YXJ0aW5nIGFuZC9vciBzaHV0dGluZ1xuIgoiICAgIGRvd24gdGhlIHN5c3RlbSBpdCBpcyBydW5uaW5nIG9uLiBZb3UgbWF5IGNvbmZpZ3VyZSB0aG9zZSBoZXJlLlxuIgoiPC9wPiIKbXNnc3RyICI8cD5PY3RvUHJpbnQgcHJlbmQgZW4gY2hhcmdlIGxlcyBjb21tYW5kZXMgZXh0ZXJuZXMgYWZpbiBkZSByZWTDqW1hcnJlciBldCAvIG91IGRlIGZlcm1lciBsZSBzeXN0w6htZSAgc3VyIGxlcXVlbCBpbCBmb25jdGlvbm5lLiBWb3VzIHBvdXZleiBsZSBjb25maWd1cmVyIGljaS48L3A+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2NvcmV3aXphcmQvdGVtcGxhdGVzL2NvcmV3aXphcmRfc2VydmVyY29tbWFuZHNfd2l6YXJkLmppbmphMjo4Cm1zZ2lkICJPY3RvUHJpbnQgcmVsYXRlZCBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgbGnDqWVzIMOgIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3NlcnZlcmNvbW1hbmRzX3dpemFyZC5qaW5qYTI6MTQKbXNnaWQgIlN5c3RlbSByZWxhdGVkIGNvbW1hbmRzIgptc2dzdHIgIkNvbW1hbmRlcyBsacOpZXMgYXUgc3lzdMOobWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF93ZWJjYW1fd2l6YXJkLmppbmphMjoxCm1zZ2lkICJXZWJjYW0gJmFtcDsgVGltZWxhcHNlIFJlY29yZGluZ3MiCm1zZ3N0ciAiV2ViY2FtICZhbXA7IGVucmVnaXN0cmVtZW50IGR1IFRpbWVsYXBzZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3dlYmNhbV93aXphcmQuamluamEyOjMKbXNnaWQgIiIKIjxwPlxuIgoiICAgIElmIHlvdSBoYXZlIGEgd2ViY2FtLCB5b3UgbWF5IG5vdyBjb25maWd1cmUgaXQgaGVyZS5cbiIKIjwvcD4iCm1zZ3N0ciAiPHA+U2kgdm91cyBhdmV6IHVuZSB3ZWJjYW0sIHZvdXMgcG91dmV6IG1haW50ZW5hbnQgbGEgY29uZmlndXJlciBpY2kuPC9wPiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3dlYmNhbV93aXphcmQuamluamEyOjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy93ZWJjYW0uamluamEyOjUKbXNnaWQgIldlYmNhbSIKbXNnc3RyICJXZWJjYW0iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF93ZWJjYW1fd2l6YXJkLmppbmphMjo5Cm1zZ2lkICIiCiI8cD5cbiIKIiAgICBUaGUgPHN0cm9uZz5TdHJlYW0gVVJMPC9zdHJvbmc+IGlzIHRoZSBVUkwgT2N0b1ByaW50IHVzZXMgdG8gZW1iZWQgdGhlXG4iCiIgICAgYWN0dWFsIHdlYmNhbSBzdHJlYW0gKHdoaWNoIHNob3VsZCBiZSBhbiBNSlBHIHN0cmVhbSkgaW50byB0aGUgd2ViXG4iCiIgICAgaW50ZXJmYWNlLiBUaGlzIG5lZWRzIHRvIGJlIHJlYWNoYWJsZSA8c3Ryb25nPmZyb20geW91ciBicm93c2VyPC9zdHJvbmc+LlxuIgoiPC9wPjxwPlxuIgoiICAgIEl0IG1heSBiZVxuIgoiICAgIDx1bD5cbiIKIiAgICAgICAgPGxpPmEgZnVsbHkgcXVhbGlmaWVkIFVSTCAoPGNvZGU+aHR0cDovL2hvc3Q6cG9ydC9wYXRoPC9jb2RlPiksPC9saT5cbiIKIiAgICAgICAgPGxpPmEgVVJMIGRlZmF1bHRpbmcgdG8gdGhlIHByb3RvY29sIHVzZWQgZm9yIGFjY2Vzc2luZyB0aGUgd2ViXG4iCiIgICAgICAgICAgICBpbnRlcmZhY2UgKGUuZy4gPGNvZGU+Ly9ob3N0OnBvcnQvcGF0aDwvY29kZT4pLDwvbGk+XG4iCiIgICAgICAgIDxsaT5hbiBhYnNvbHV0ZSBwYXRoIG9uIHRoZSBzYW1lIGhvc3QgYXMgT2N0b1ByaW50IChlLmcuIDxjb2RlPi9hYnNvbHV0ZS9wYXRoPC9jb2RlPikgb3I8L2xpPlxuIgoiICAgICAgICA8bGk+YSByZWxhdGl2ZSBwYXRoIG9uIHRoZSBzYW1lIGhvc3QgYXMgT2N0b1ByaW50IChlLmcuIDxjb2RlPnJlbGF0aXZlL3BhdGg8L2NvZGU+KTwvbGk+XG4iCiIgICAgPC91bD5cbiIKIjwvcD48cD5cbiIKIiAgICBUaGUgPHN0cm9uZz5TbmFwc2hvdCBVUkw8L3N0cm9uZz4gaXMgdGhlIFVSTCBPY3RvUHJpbnQgdXNlcyB0byBmZXRjaCBzaW5nbGVcbiIKIiAgICBpbWFnZXMgZnJvbSB0aGUgd2ViY2FtIGZvciBjcmVhdGluZyB0aW1lbGFwc2UgcmVjb3JkaW5ncy4gVGhpcyBuZWVkcyB0byBiZVxuIgoiICAgIGEgZnVsbHkgcXVhbGlmaWVkIFVSTCByZWFjaGFibGUgPHN0cm9uZz5mcm9tIHRoZSBPY3RvUHJpbnQgc2VydmVyPC9zdHJvbmc+LlxuIgoiPC9wPiIKbXNnc3RyICIiCiI8cD5cbiIKIiAgICBMJzxzdHJvbmc+VVJMIGR1IGZsdXg8L3N0cm9uZz4gZXN0IGwnVVJMIHV0aWxpc8OpZSBwYXIgT2N0b1ByaW50IHBvdXIgaW50w6lncmVyXG4iCiIgICAgbGUgZmx1eCBkZSBsYSB3ZWJjYW0gKHF1aSBkb2l0IMOqdHJlIHVuIGZsdXggTUpQRykgZGFucyBsJ2ludGVyZmFjZSBXZWIuXG4iCiIgICAgQ2VsYSBkb2l0IMOqdHJlIGFjY2Vzc2libGUgPHN0cm9uZz4gZGVwdWlzIHZvdHJlIG5hdmlnYXRldXI8L3N0cm9uZz4uXG4iCiI8L3A+PC9wPlxuIgoiICAgIElsIHBldXQgcydhZ2lyXG4iCiIgICAgPHVsPlxuIgoiICAgICAgICA8bGk+ZCd1bmUgVVJMIGNvbXBsw6h0ZSg8Y29kZT5odHRwOi8vaG9zdDpwb3J0L3BhdGg8L2NvZGU+KSw8L2xpPlxuIgoiICAgICAgICA8bGk+dW5lIFVSTCBwYXIgZMOpZmF1dCBwb3VyIGxlIHByb3RvY29sZSB1dGlsaXPDqSBwb3VyIGFjY8OpZGVyIMOgXG4iCiIgICAgICAgICAgICBsJ2ludGVyZmFjZSB3ZWIgKGUuZy4gPGNvZGU+Ly9ob3N0OnBvcnQvcGF0aDwvY29kZT4pLDwvbGk+XG4iCiIgICAgICAgIDxsaT51biBjaGVtaW4gYWJzb2x1IHN1ciBsZSBtw6ptZSBow7R0ZSBxdWUgT2N0b1ByaW50KGUuZy4gPGNvZGU+L2Fic29sdXRlL3BhdGg8L2NvZGU+KSBvcjwvbGk+XG4iCiIgICAgICAgIDxsaT51biBjaGVtaW4gcmVsYXRpZiBzdXIgbGUgbcOqbWUgaMO0dGUgcXVlIE9jdG9QcmludChlLmcuIDxjb2RlPnJlbGF0aXZlL3BhdGg8L2NvZGU+KTwvbGk+XG4iCiIgICAgPC91bD5cbiIKIjwvcD48L3A+XG4iCiIgICAgTCc8c3Ryb25nPlVSTCBkdSBTbmFwc2hvdCA8L3N0cm9uZz5lc3QgbCdVUkwgdXRpbGlzw6llIHBhciBPY3RvUHJpbnQgcG91ciBleHRyYWlyZVxuIgoiICAgIGRlcyBpbWFnZXMgaW5kaXZpZHVlbGxlcyBkZSBsYSB3ZWJjYW0gcG91ciBjcsOpZXIgZGVzIFRpbWVsYXBzZS4gSWwgZG9pdCBzJ2FnaXJcbiIKIiAgICBkJ3VuZSBVUkwgYWNjZXNzaWJsZSDDoCBwYXJ0aXIgPHN0cm9uZz5kdSBzZXJ2ZXVyIE9jdG9QcmludDwvc3Ryb25nPi5cbiIKIjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvY29yZXdpemFyZC90ZW1wbGF0ZXMvY29yZXdpemFyZF93ZWJjYW1fd2l6YXJkLmppbmphMjozMyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3dlYmNhbS5qaW5qYTI6MjIKbXNnaWQgIlRpbWVsYXBzZSBSZWNvcmRpbmdzIgptc2dzdHIgIkVucmVnaXN0cmVtZW50IGR1IFRpbWVsYXBzZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9jb3Jld2l6YXJkL3RlbXBsYXRlcy9jb3Jld2l6YXJkX3dlYmNhbV93aXphcmQuamluamEyOjM1Cm1zZ2lkICIiCiI8cD5cbiIKIiAgICBUbyByZW5kZXIgdGhlIHNuYXBzaG90cyBpbnRvIHRpbWVsYXBzZSByZWNvcmRpbmdzLCBPY3RvUHJpbnQgYWxzbyBuZWVkcyB0b1xuIgoiICAgIGtub3cgdGhlIGNvcnJlY3QgPHN0cm9uZz5wYXRoIHRvIEZGTVBFRzwvc3Ryb25nPi5cbiIKIjwvcD4iCm1zZ3N0ciAiPHA+IEFmaW4gY29udmVydGlyIGxlcyBjYXB0dXJlcyBkJ8OpY3JhbiBlbiBUaW1lbHBhc2UsIE9jdG9QcmludCBkb2l0IGNvbm5hw650cmUgbGUgYm9uIDxzdHJvbmc+Y2hlbWluIHBvdXIgRkZNUEVHPC9zdHJvbmc+LjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZGlzY292ZXJ5L19faW5pdF9fLnB5OjgyNgptc2dpZCAiV2l0aG91dCB0aGlzIHBsdWdpbiB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSB3aWxsIG5vIGxvbmdlciBiZSBkaXNjb3ZlcmFibGUgb24gdGhlIG5ldHdvcmsgdmlhIEJvbmpvdXIgYW5kIHVQblAuIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCB2b3RyZSBpbnN0YW5jZSBkJ09jdG9QcmludCBuZSBwb3VycmEgcGx1cyDDqnRyZSBkw6ljb3V2ZXJ0ZSBzdXIgdm90cmUgcsOpc2VhdSBhdSB0cmF2ZXJzIGRlIHByb3RvY29sZXMgdGVscyBxdWUgQm9uam91ciBldCB1UE5QLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9lcnJvcnRyYWNraW5nL19faW5pdF9fLnB5Ojg3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9lcnJvcnRyYWNraW5nL3RlbXBsYXRlcy9lcnJvcnRyYWNraW5nX3NldHRpbmdzLmppbmphMjoxCm1zZ2lkICJFcnJvciBUcmFja2luZyIKbXNnc3RyICJTdWl2aSBkZXMgZXJyZXVycyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9lcnJvcnRyYWNraW5nL3N0YXRpYy9qcy9lcnJvcnRyYWNraW5nLmpzOjM5Cm1zZ2lkICJFbmFibGUgZXJyb3IgcmVwb3J0aW5nPyIKbXNnc3RyICJBY3RpdmVyIGxlIHJhcHBvcnQgZCdlcnJldXI/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Vycm9ydHJhY2tpbmcvc3RhdGljL2pzL2Vycm9ydHJhY2tpbmcuanM6NDAKbXNnaWQgIjxwPkl0IGxvb2tzIGxpa2UgeW91IGFyZSB0cmFja2luZyBhbiBPY3RvUHJpbnQgUkMgcmVsZWFzZSBjaGFubmVsLiBJdCB3b3VsZCBiZSBncmVhdCBpZiB5b3Ugd291bGQgZW5hYmxlIGVycm9yIHJlcG9ydGluZyBzbyB0aGF0IGFueSBraW5kIG9mIGVycm9ycyB0aGF0IG9jY3VyIHdpdGggYW4gUkMgY2FuIGJlIGxvb2tlZCBpbnRvIG1vcmUgZWFzaWx5LiBUaGFuayB5b3UhPC9wPjxwPjxzbWFsbD5Zb3UgY2FuIGZpbmQgbW9yZSBpbmZvcm1hdGlvbiBvbiBlcnJvciByZXBvcnRpbmcgdW5kZXIgU2V0dGluZ3MgPiBFcnJvciBUcmFja2luZzwvc21hbGw+PC9wPiIKbXNnc3RyICI8cD5JbCBzZW1ibGVyYWl0IHF1ZSB2b3VzIHN1aXZpZXogdW4gY2FuYWwgZGUgcHVibGljYXRpb24gT2N0b1ByaW50IFJDLiBDZSBzZXJhaXQgYmllbiBzaSB2b3VzIHBvdXZpZXogYWN0aXZlciBsZSBzaWduYWxlbWVudCBkZXMgZXJyZXVycyBhZmluIHF1ZSB0b3V0IHR5cGUgZCdlcnJldXIgcG91dmFudCBzdXJ2ZW5pciBhdmVjIHVuIFJDIHB1aXNzZSDDqnRyZSBhbmFseXPDqSBwbHVzIGZhY2lsZW1lbnQuIE1lcmNpITwvcD48cD48c21hbGw+Vm91cyB0cm91dmVyZXogcGx1cyBk4oCZaW5mb3JtYXRpb25zIHN1ciBsZSBzaWduYWxlbWVudCBkZXMgZXJyZXVycyBzb3VzIFBhcmFtw6h0cmVzPiBTdWl2aSBkZXMgZXJyZXVycy48L3NtYWxsPjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXJyb3J0cmFja2luZy9zdGF0aWMvanMvZXJyb3J0cmFja2luZy5qczo1MiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjUwNiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjUzNyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjE0NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUwNAptc2dpZCAiSWdub3JlIgptc2dzdHIgIklnbm9yZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXJyb3J0cmFja2luZy9zdGF0aWMvanMvZXJyb3J0cmFja2luZy5qczo1Nwptc2dpZCAiWW91IGNhbiBzdGlsbCBlbmFibGUgZXJyb3IgdHJhY2tpbmcgdmlhIFwiU2V0dGluZ3NcIiA+IFwiRXJyb3IgVHJhY2tpbmdcIiIKbXNnc3RyICJWb3VzIHBvdXZleiB0b3Vqb3VycyBhY3RpdmVyIGxlIHN1aXZpIGRlcyBlcnJldXJzIHZpYSAgUGFyYW3DqHRyZXMgPiBTdWl2aSBkZXMgZXJyZXVycy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXJyb3J0cmFja2luZy90ZW1wbGF0ZXMvZXJyb3J0cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6Mwptc2dpZCAiIgoiXG4iCiI8cD5cbiIKIiAgICBFcnJvciB0cmFja2luZyB3aWxsIGNhdXNlIGFueSBsb2dnZWQgZXhjZXB0aW9ucyBpbiB0aGUgc2VydmVyIGFuZCB0aGUgYnJvd3NlciBpbnRlcmZhY2UgdG8gYmUgc2VudFxuIgoiICAgIHRvIE9jdG9QcmludCdzIDxhIGhyZWY9XCJodHRwczovL3NlbnRyeS5pby9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVyZXJcIj5TZW50cnkgaW5zdGFuY2U8L2E+LlxuIgoiPC9wPlxuIgoiPHA+XG4iCiIgICAgQnkgZW5hYmxpbmcgaXQgeW91IGhlbHAgdG8gZ2F0aGVyIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHRoZSBjYXVzZSBvZiBidWdzIG9yIG90aGVyIGlzc3Vlcy4gVGhpcyBpcyBlc3BlY2lhbGx5IHZhbHVhYmxlXG4iCiIgICAgb24gcmVsZWFzZSBjYW5kaWRhdGVzLCB3aGljaCBpcyB3aHkgdGhpcyBwbHVnaW4gd2lsbCBhbHNvIHByb21wdCB5b3UgdG8gZW5hYmxlIGVycm9yIHRyYWNraW5nIGlmIGl0IGRldGVjdHMgdGhhdFxuIgoiICAgIHlvdSBhcmUgc3Vic2NyaWJlZCB0byBhbiBSQyByZWxlYXNlIGNoYW5uZWwuXG4iCiI8L3A+XG4iCiI8cD5cbiIKIiAgICBQbGVhc2UgZW5hYmxlIHRoaXMgaWYgeW91IGFyZSBydW5uaW5nIGEgcmVsZWFzZSBjYW5kaWRhdGUsIG9yIGFyZSBwcm9tcHRlZCB0byBkbyBzbyB3aGlsZSBkZWJ1Z2dpbmcgYW4gaXNzdWUgdGhhdCB5b3UgcmVwb3J0ZWQuXG4iCiI8L3A+XG4iCm1zZ3N0ciAiIgoiXG4iCiI8cD4gTGUgc3VpdmkgZGVzIGVycmV1cnMgZW50cmHDrm5lcmEgbCdlbnZvaSBkZXMgZXhjZXB0aW9ucyBjb25zaWduw6llcyBzdXIgbGUgc2VydmV1ciBldCBsJ2ludGVyZmFjZSBkdSBuYXZpZ2F0ZXVyLlxuIgoiICAgIGNoZXogT2N0b1ByaW50IDxhIGhyZWY9XCJodHRwczovL3NlbnRyeS5pby9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVyZXJcIj4gRXhlbXBsZSBTZW50aW5lbGxlIDwvYT48L3A+XG4iCiI8cD4gRW4gbCdhY3RpdmFudCwgdm91cyBhaWRleiDDoCByZWN1ZWlsbGlyIGRlcyBpbmZvcm1hdGlvbnMgZMOpdGFpbGzDqWVzIHN1ciBsYSBjYXVzZSBkZXMgYm9ndWVzIG91IGQnYXV0cmVzIHByb2Jsw6htZXMuIENlY2kgZXN0IHBhcnRpY3VsacOocmVtZW50IHByw6ljaWV1eCDDoCBsYSBwdWJsaWNhdGlvbiBkZXMgY2FuZGlkYXRzLCBj4oCZZXN0IHBvdXJxdW9pIGNlIHBsdWdpbiB2b3VzIGludml0ZXJhIMOpZ2FsZW1lbnQgw6AgYWN0aXZlciBsZSBzdWl2aSBkZXMgZXJyZXVycyBz4oCZaWwgZMOpdGVjdGUgcXVlIHZvdXMgw6p0ZXMgYWJvbm7DqSDDoCB1biBjYW5hbCBkZSBkaWZmdXNpb24gUkMuPC9wPlxuIgoiPHA+IEFjdGl2ZXogY2V0dGUgb3B0aW9uIHNpIHZvdXMgZXjDqWN1dGV6IHVuZSB2ZXJzaW9uIGNhbmRpZGF0ZSBvdSBzaSB2b3VzIMOqdGVzIGludml0w6kgw6AgbGUgZmFpcmUgbG9ycyBkdSBkw6lib2dhZ2UgZCd1biBwcm9ibMOobWUgcXVlIHZvdXMgYXZleiBzaWduYWzDqS48L3A+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXJyb3J0cmFja2luZy90ZW1wbGF0ZXMvZXJyb3J0cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6MjIKbXNnaWQgIkVuYWJsZSBlcnJvciB0cmFja2luZyIKbXNnc3RyICJBY3RpdmVyIGxlIHN1aXZpIGRlcyBlcnJldXJzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Vycm9ydHJhY2tpbmcvdGVtcGxhdGVzL2Vycm9ydHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjI0Cm1zZ2lkICJQbGVhc2UgcmVsb2FkIHRoZSBwYWdlIGFmdGVyIGVuYWJsaW5nL2Rpc2FibGluZyAmIHNhdmluZyIKbXNnc3RyICJWZXVpbGxleiByZWNoYXJnZXIgbGEgcGFnZSBhcHLDqHMgbCdhY3RpdmF0aW9uIC8gbGEgZMOpc2FjdGl2YXRpb24gZXQgbGEgc2F1dmVnYXJkZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9lcnJvcnRyYWNraW5nL3RlbXBsYXRlcy9lcnJvcnRyYWNraW5nX3NldHRpbmdzLmppbmphMjoyOCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3NldHRpbmdzLmppbmphMjoxNAptc2dpZCAiUmFuZG9tIHVuaXF1ZSBpbnN0YW5jZSBJRCIKbXNnc3RyICJJRCBkJ2luc3RhbmNlIHVuaXF1ZSBhbMOpYXRvaXJlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Vycm9ydHJhY2tpbmcvdGVtcGxhdGVzL2Vycm9ydHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjI4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjE0Cm1zZ2lkICJJbnN0YW5jZSBJRCIKbXNnc3RyICJJRCBkJ2luc3RhbmNlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2Vycm9ydHJhY2tpbmcvdGVtcGxhdGVzL2Vycm9ydHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjM1Cm1zZ2lkICIiCiJcbiIKIjxwPlxuIgoiICAgIFRoZSBFcnJvciBUcmFja2luZyBwbHVnaW4gaXMgdXNpbmcgYSBTZW50cnkgaW5zdGFuY2Uga2luZGx5IHByb3ZpZGVkIGJ5XG4iCiIgICAgPGEgaHJlZj1cImh0dHBzOi8vc2VudHJ5LmlvL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPnNlbnRyeS5pbzwvYT4uIEZvciBpbmZvcm1hdGlvbiBvbiB0aGVpciBzZXJ2aWNlXG4iCiIgICAgcGxlYXNlIHJlZmVyIHRvIHRoZWlyIDxhIGhyZWY9XCJodHRwczovL3NlbnRyeS5pby9zZWN1cml0eS9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVyZXJcIj5TZWN1cml0eSAmIENvbXBsaWFuY2UgZG9jdW1lbnRhdGlvbjwvYT5cbiIKIiAgICBhbmQgdGhlaXIgPGEgaHJlZj1cImh0dHBzOi8vc2VudHJ5LmlvL3ByaXZhY3kvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcmVyXCI+UHJpdmFjeSBQb2xpY3k8L2E+LlxuIgoiPC9wPlxuIgptc2dzdHIgIiIKIlxuIgoiPHA+IEwnZXh0ZW5zaW9uIEVycm9yIFRyYWNraW5nIHV0aWxpc2UgdW5lIGluc3RhbmNlIFNlbnRpbmVsbGUgYWltYWJsZW1lbnQgZm91cm5pZSBwYXIgPGEgaHJlZj1cImh0dHBzOi8vc2VudHJ5LmlvL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPnNlbnRyeS5pbzwvYT4uIFBvdXIgcGx1cyBkJ2luZm9ybWF0aW9ucyBzdXIgbGV1ciBzZXJ2aWNlIHZldWlsbGV6IHZvdXMgcsOpZsOpcmVyIMOgIGxldXIgPGEgaHJlZj1cImh0dHBzOi8vc2VudHJ5LmlvL3NlY3VyaXR5L1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPiBEb2N1bWVudGF0aW9uIGRlIHPDqWN1cml0w6kgZXQgZGUgY29uZm9ybWl0w6kgPC9hPmV0IGxldXIgPGEgaHJlZj1cImh0dHBzOi8vc2VudHJ5LmlvL3ByaXZhY3kvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcmVyXCI+IFBvbGl0aXF1ZSBkZSBjb25maWRlbnRpYWxpdMOpPC9hPi48L3A+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXZlbnRtYW5hZ2VyL19faW5pdF9fLnB5OjM5IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvX19pbml0X18ucHk6NTcKbXNnaWQgIkV2ZW50IE1hbmFnZXIiCm1zZ3N0ciAiR2VzdGlvbm5haXJlIGQnw6l2w6luZW1lbnRzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci9fX2luaXRfXy5weTo0OAptc2dpZCAiQWxsb3dzIGZvciB0aGUgbWFuYWdlbWVudCBvZiBldmVudCBzdWJzY3JpcHRpb25zLiIKbXNnc3RyICJQZXJtZXQgbGEgZ2VzdGlvbiBkZXMgYWJvbm5lbWVudHMgYXV4IMOpdsOpbmVtZW50cy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXZlbnRtYW5hZ2VyL19faW5pdF9fLnB5OjYxCm1zZ2lkICJQbHVnaW4gdG8gY29uZmlndXJlIGV2ZW50IHN1YnNjcmlwdGlvbnMgYXZhaWxhYmxlIGluIGNvbmZpZy55YW1sLiIKbXNnc3RyICJQbHVnaW4gcG91ciBjb25maWd1cmVyIGxlcyBhYm9ubmVtZW50cyBhdXggw6l2w6luZW1lbnRzIGRpc3BvbmlibGVzIGRhbnMgY29uZmlnLnlhbWwuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIE9jdG9QcmludCBldmVudHMgcGxlYXNlIHNlZSA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPnRoZSBvZmZpY2lhbCBkb2N1bWVudGF0aW9uPC9hPi4iCm1zZ3N0ciAiUG91ciBwbHVzIGQnaW5mb3JtYXRpb25zIHN1ciBsZXMgw6l2w6luZW1lbnRzIE9jdG9QcmludCB2ZXVpbGxleiBjb25zdWx0ZXIgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVyZXJcIj5sYSBkb2N1bWVudGF0aW9uIG9mZmljaWVsbGU8L2E+LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvdGVtcGxhdGVzL2V2ZW50bWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mwptc2dpZCAiV2FybmluZzoiCm1zZ3N0ciAiQXR0ZW50aW9uOiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvdGVtcGxhdGVzL2V2ZW50bWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mwptc2dpZCAiRm9yIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QgeW91IG11c3QgcmVzdGFydCBPY3RvUHJpbnQgYWZ0ZXIgc2F2aW5nLiIKbXNnc3RyICJQb3VyIHF1ZSBsZXMgbW9kaWZpY2F0aW9ucyBwcmVubmVudCBlZmZldCwgdm91cyBkZXZleiByZWTDqW1hcnJlciBPY3RvUHJpbnQgYXByw6hzIGwnZW5yZWdpc3RyZW1lbnQuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjo2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvdGVtcGxhdGVzL2V2ZW50bWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzAKbXNnaWQgIkV2ZW50Igptc2dzdHIgIsOJdsOpbmVtZW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjo3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9ldmVudG1hbmFnZXIvdGVtcGxhdGVzL2V2ZW50bWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzYKbXNnaWQgIkNvbW1hbmQiCm1zZ3N0ciAiQ29tbWFuZGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXZlbnRtYW5hZ2VyL3RlbXBsYXRlcy9ldmVudG1hbmFnZXJfc2V0dGluZ3MuamluamEyOjkKbXNnaWQgIkFkZCIKbXNnc3RyICJBam91dGVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNgptc2dpZCAiQ29tbWFuZCBFZGl0b3IiCm1zZ3N0ciAiw4lkaXRldXIgZGUgY29tbWFuZGVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjo0Mgptc2dpZCAiVHlwZSIKbXNnc3RyICJUeXBlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2V2ZW50bWFuYWdlci90ZW1wbGF0ZXMvZXZlbnRtYW5hZ2VyX3NldHRpbmdzLmppbmphMjo0OCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTE3Cm1zZ2lkICJFbmFibGVkIgptc2dzdHIgIkFjdGl2w6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXZlbnRtYW5hZ2VyL3RlbXBsYXRlcy9ldmVudG1hbmFnZXJfc2V0dGluZ3MuamluamEyOjU0Cm1zZ2lkICJEZWJ1ZyIKbXNnc3RyICJEw6lib2d1ZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZXZlbnRtYW5hZ2VyL3RlbXBsYXRlcy9ldmVudG1hbmFnZXJfc2V0dGluZ3MuamluamEyOjYyCm1zZ2lkICJEbyBub3QgZm9yZ2V0IHRvIHNhdmUgaW4gbWFpbiBzZXR0aW5ncy4iCm1zZ3N0ciAiTidvdWJsaWV6IHBhcyBkZSBzYXV2ZWdhcmRlciBkYW5zIGxlcyBwYXJhbcOodHJlcyBwcmluY2lwYXV4LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9fX2luaXRfXy5weTo3NCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjoxCm1zZ2lkICJHQ29kZSBWaWV3ZXIiCm1zZ3N0ciAiVmlzdWFsaXNldXIgZHUgRy1jb2RlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL19faW5pdF9fLnB5Ojc3Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIHRoZSBHQ29kZSBWaWV3ZXIgaW4gT2N0b1ByaW50IHdpbGwgbm8gbG9uZ2VyIGJlIGF2YWlsYWJsZS4iCm1zZ3N0ciAiU2FucyBjZXR0ZSBleHRlbnNpb24sIGxhIHZpc2lvbm5ldXNlIEctY29kZSBkJ09jdG9QcmludCBuZSBzZXJhIHBsdXMgZGlzcG9uaWJsZS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvc3RhdGljL2pzL2djb2Rldmlld2VyLmpzOjE5Cm1zZ2lkICJMb2FkaW5nLi4uIgptc2dzdHIgIkNoYXJnZW1lbnQuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvc3RhdGljL2pzL2djb2Rldmlld2VyLmpzOjI3Cm1zZ2lkICJBbmFseXppbmcuLi4iCm1zZ3N0ciAiQW5hbHlzc2UuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvc3RhdGljL2pzL2djb2Rldmlld2VyLmpzOjM0Cm1zZ2lkICJBbmFseXplZCIKbXNnc3RyICJBbmFseXPDqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NjY0IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjk4MAptc2dpZCAiTW9kZWwgc2l6ZSIKbXNnc3RyICJUYWlsbGUgZHUgbW9kw6hsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6Njc0Cm1zZ2lkICJFc3RpbWF0ZWQgbGF5ZXIgaGVpZ2h0Igptc2dzdHIgIkhhdXRldXIgZGUgbGEgY291Y2hlIGVzdGltw6llIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3N0YXRpYy9qcy9nY29kZXZpZXdlci5qczo2Nzcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjY5Cm1zZ2lkICJtbSIKbXNnc3RyICJtbSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NjgwCm1zZ2lkICJFc3RpbWF0ZWQgdG90YWwgcHJpbnQgdGltZSIKbXNnc3RyICJUZW1wcyB0b3RhbCBkJ2ltcHJlc3Npb24gZXN0aW3DqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6Njg1Cm1zZ2lkICJMYXllcnMgd2l0aCBleHRydXNpb24iCm1zZ3N0ciAiQ291Y2hlIGF2ZWMgZXh0cnVzaW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3N0YXRpYy9qcy9nY29kZXZpZXdlci5qczo3MTgKbXNnaWQgIkxheWVyIG51bWJlciIKbXNnc3RyICJOdW3DqXJvIGRlIGxhIGNvdWNoZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NzE5Cm1zZ2lkICJMYXllciBoZWlnaHQiCm1zZ3N0ciAiSGF1dGV1ciBkZSBsYSBjb3VjaGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvc3RhdGljL2pzL2djb2Rldmlld2VyLmpzOjcyMAptc2dpZCAiR0NPREUgY29tbWFuZHMiCm1zZ3N0ciAiQ29tbWFuZGVzIEctY29kZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NzI0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NzMzIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjk5NSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMDExCm1zZ2lkICJGaWxhbWVudCIKbXNnc3RyICJGaWxhbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci9zdGF0aWMvanMvZ2NvZGV2aWV3ZXIuanM6NzM1IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2NvbnRyb2wuanM6ODUgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTAxMyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MzU3IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjE0NiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90ZW1wZXJhdHVyZS5qczoxNTcgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6Mzc3Cm1zZ2lkICJUb29sIgptc2dzdHIgIkJ1c2UiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvc3RhdGljL2pzL2djb2Rldmlld2VyLmpzOjc0NyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMDIzCm1zZ2lkICJFc3RpbWF0ZWQgcHJpbnQgdGltZSIKbXNnc3RyICJUZW1wcyBkJ2ltcHJlc3Npb24gZXN0aW3DqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfc2V0dGluZ3MuamluamEyOjMKbXNnaWQgIk1heGltdW0gc2l6ZSBmb3Igd2hpY2ggdGhlIEdDb2RlIFZpZXdlciBhdXRvbG9hZHMgdGhlIGZpbGUgZm9yIHByZXZpZXciCm1zZ3N0ciAiVGFpbGxlIG1heGltYWxlIHBvdXIgbGFxdWVsbGUgbGEgdmlzaW9ubmV1c2UgRy1jb2RlIGNoYXJnZSBhdXRvbWF0aXF1ZW1lbnQgbGUgZmljaGllciBwb3VyIGxhIHByw6l2aXN1YWxpc2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl9zZXR0aW5ncy5qaW5qYTI6NAptc2dpZCAiR0NvZGUgVmlld2VyIGZpbGUgc2l6ZSB0aHJlc2hvbGQiCm1zZ3N0ciAiU2V1aWwgZGUgbGEgdGFpbGxlIGR1IGZpY2hpZXIgcG91ciBsYSB2aXNpb25uZXVzZSBHLWNvZGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjo5Cm1zZ2lkICJvbiBkZXNrdG9wIgptc2dzdHIgInN1ciBsZSBidXJlYXUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjoxNQptc2dpZCAib24gbW9iaWxlIgptc2dzdHIgInN1ciBtb2JpbGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjoxOSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjg1Cm1zZ2lkICJQcm92aWRlIHZhbHVlcyBpbmNsdWRpbmcgc2l6ZSB1bml0LiBBbGxvd2VkIHVuaXRzIGFyZTogYiwgYnl0ZSwgYnl0ZXMsIGtiLCBtYiwgZ2IsIHRiIChjYXNlIGluc2Vuc2l0aXZlKS4gRXhhbXBsZTogPGNvZGU+NU1CPC9jb2RlPiwgPGNvZGU+NTAwS0I8L2NvZGU+Igptc2dzdHIgIkZvdXJuaXIgbGVzIHZhbGV1cnMgeSBjb21wcmlzIGwndW5pdMOpIGRlIHRhaWxsZS4gTGVzIHVuaXTDqXMgYWRtaXNlcyBzb250IDogYiwgYnl0ZSwgYnl0ZXMsIGtiLCBtYiwgZ2IsIHRiIChub24gc2Vuc2libGUgw6AgbGEgY2Fzc2UpLiBQYXIgRXhlbXBsZSA6IDxjb2RlPjVNQjwvY29kZT4sIDxjb2RlPjUwMEtCPC9jb2RlPiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfc2V0dGluZ3MuamluamEyOjIzCm1zZ2lkICJTa2lwL2hpZGUgZ2NvZGUgdW50aWwgdGhpcyBzdHJpbmciCm1zZ3N0ciAiUGFzc2VyL2NhY2hlciBsZSBnY29kZSBqdXNxdSfDoCBjZXR0ZSBjaGFpbmUgZGUgY2FyYWN0w6hyZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjoyNAptc2dpZCAiU2tpcCB0byB0aGlzIgptc2dzdHIgIlNlIHJlbmRyZSBkaXJlY3RlbWVudCBpY2kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3NldHRpbmdzLmppbmphMjoyOAptc2dpZCAiSWYgcHJvdmlkZWQsIHRoZSBHQ29kZSBWaWV3ZXIgd2lsbCBzZWFyY2ggZm9yIGEgbGluZSBiZWdpbm5pbmcgd2l0aCB0aGlzIHN0cmluZy4gSWYgZm91bmQsIGFsbCBHQ29kZSB1cCB0byB0aGF0IHBvaW50IHdpbGwgYmUgc2tpcHBlZC4gVGhpcyBjYW4gYmUgdXNlZCB0byBza2lwIFwicHVyZ2Uvbm96emxlIHdpcGVcIiBHQ29kZSBpbiB0aGUgdmlld2VyLiBOb3RlIHRoZSBzZWFyY2ggaXMgY2FzZSBzZW5zaXRpdmUuIEV4YW1wbGU6IDxjb2RlPjsgbGF5ZXIgMTwvY29kZT4iCm1zZ3N0ciAiUydpbCBlc3QgZm91cm5pLCBsZSB2aXNpb25uZXVyIGRlIEctY29kZSByZWNoZXJjaGVyYSB1bmUgbGlnbmUgY29tbWVuw6dhbnQgcGFyIGNldHRlIGNoYcOubmUuIFNpIGVsbGUgZXN0IHRyb3V2w6llLCB0b3V0IGxlIEctY29kZSBqdXNxdSfDoCBjZSBwb2ludCBzZXJhIGlnbm9yw6kuIENlY2kgcGV1dCDDqnRyZSB1dGlsaXPDqSBwb3VyIGlnbm9yZXIgbGVzIGNvbW1hbmRlcyBHLWNvZGUgIFwicHVyZ2VcIiBvdSBcIm5venpsZSB3aXBlXCIgZGFucyBsZSB2aXN1YWxpc2V1ci4gTm90ZXogcXVlIGxhIHJlY2hlcmNoZSBlc3Qgc2Vuc2libGUgw6AgbGEgY2Fzc2UuIEV4ZW1wbGUgPGNvZGU+OyBsYXllciAxPC9jb2RlPiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjoxMQptc2dpZCAiUHJldmlvdXMgbGF5ZXIiCm1zZ3N0ciAiQ291Y2hlIHByw6ljw6lkZW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjoxNAptc2dpZCAiTmV4dCBsYXllciIKbXNnc3RyICJDb3VjaGUgc3VpdmFudGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MjYKbXNnaWQgIk1vZGVsIGluZm8iCm1zZ3N0ciAiSW5mb3JtYXRpb25zIHN1ciBsZSBtb2TDqGxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjI5Cm1zZ2lkICJMYXllciBpbmZvIgptc2dzdHIgIkluZm9ybWF0aW9ucyBzdXIgbGEgY291Y2hlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjMzCm1zZ2lkICJSZW5kZXJlciBvcHRpb25zIgptc2dzdHIgIk9wdGlvbnMgZHUgcmVuZHUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MzcKbXNnaWQgIlN5bmMgd2l0aCBqb2IgcHJvZ3Jlc3MiCm1zZ3N0ciAiU3luY2hyb25pc2VyIGF2ZWMgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjQyCm1zZ2lkICJDZW50ZXIgdmlld3BvcnQgb24gbW9kZWwiCm1zZ3N0ciAiQ2VudHJlciBsZSBwb2ludCBkZSB2dWUgc3VyIGxlIG1vZMOobGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6NDUKbXNnaWQgIlpvb20gaW4gb24gbW9kZWwiCm1zZ3N0ciAiWm9vbWVyIHN1ciBsZSBtb2TDqGxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjUxCm1zZ2lkICJTaG93IG1vdmVzIgptc2dzdHIgIk1vbnRyZXIgbGVzIG1vdXZlbWVudHMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6NTQKbXNnaWQgIlNob3cgcmV0cmFjdHMiCm1zZ3N0ciAiTW9udHJlciBsZXMgcsOpdHJhY3Rpb25zIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjU3Cm1zZ2lkICJTaG93IGFwcHJveC4gcHJpbnQgaGVhZCBwb3NpdGlvbiIKbXNnc3RyICJBZmZpY2hlciBsYSBwb3NpdGlvbiBhcHByb3hpbWF0aXZlIGRlIGxhIHTDqnRlIGQnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo2Mwptc2dpZCAiQWxzbyBzaG93IHByZXZpb3VzIGxheWVyIgptc2dzdHIgIk1vbnRyZXIgw6lnYWxlbWVudCBsYSBjb3VjaGUgcHLDqWPDqWRlbnRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjY2Cm1zZ2lkICJBbHNvIHNob3cgY3VycmVudCBsYXllciIKbXNnc3RyICJBZmZpY2hlciDDqWdhbGVtZW50IGxhIGNvdWNoZSBhY3R1ZWxsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo2OQptc2dpZCAiQWxzbyBzaG93IG5leHQgbGF5ZXIiCm1zZ3N0ciAiTW9udHJlciDDqWdhbGVtZW50IGxhIGNvdWNoZSBzdWl2YW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo3NAptc2dpZCAiUmVsb2FkIgptc2dzdHIgIlJlY2hhcmdlciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo3NQptc2dpZCAiUmVzZXQgdmlld3BvcnQiCm1zZ3N0ciAiUmVtaXNlIMOgIGpvdXIgZGUgbGEgdnVlIGRlIGwnaW50ZXJmYWNlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjgzCm1zZ2lkICJTaG93IHZpc2l0ZWQgYm91bmRpbmcgYm94Igptc2dzdHIgIkFmZmljaGVyIGxlIGNhZHJlIGRlIGTDqWxpbWl0YXRpb24gdmlzaXTDqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo4Ngptc2dpZCAiU2hvdyBwcmludGVkIGJvdW5kaW5nIGJveCIKbXNnc3RyICJBZmZpY2hlciBsYSBib8OudGUgZGUgZMOpbGltaXRhdGlvbiBpbXByaW3DqWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6ODkKbXNnaWQgIlNob3cgbGF5ZXIgYm91bmRpbmcgYm94Igptc2dzdHIgIkFmZmljaGVyIGxhIGJvw650ZSBkZSBkw6lsaW1pdGF0aW9uIGRlIGxhIGNvdWNoZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjo5Mgptc2dpZCAiU2hvdyBzZWdtZW50IHN0YXJ0cyIKbXNnc3RyICJNb250cmUgbGUgZMOpYnV0IGR1IHNlZ21lbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6OTUKbXNnaWQgIlNob3cgZGVidWcgYXJjcyIKbXNnc3RyICJBZmZpY2hlciBsZXMgYXJjcyBkZSBkw6lib2dhZ2UiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6OTgKbXNnaWQgIkFwcGx5IGFyYyBmaXgiCm1zZ3N0ciAiQXBwbGlxdWVyIGxhIGNvcnJlY3Rpb24gZCdhcmMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6OTgKbXNnaWQgIkNocm9tZSIKbXNnc3RyICJDaHJvbWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6OTkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiU2VlIDxhIGhyZWY9JyUodXJsKXMnIHRhcmdldD0nX2JsYW5rJz5pc3N1ZSAjNDExNzwvYT4uIgptc2dzdHIgIlZvaXIgPGEgaHJlZj0nJSh1cmwpcycgdGFyZ2V0PSdfYmxhbmsnPmlzc3VlICM0MTE3PC9hPi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MTA0Cm1zZ2lkICJIaWRlIGVtcHR5IGxheWVycyIKbXNnc3RyICJDYWNoZXIgbGVzIGNvdWNoZXMgdmlkZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MTA0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9nY29kZXZpZXdlci90ZW1wbGF0ZXMvZ2NvZGV2aWV3ZXJfdGFiLmppbmphMjoxMDcKbXNnaWQgIkNhdXNlcyByZWxvYWQiCm1zZ3N0ciAiUHJvdm9xdWUgbGUgcmVjaGFyZ2VtZW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjEwNwptc2dpZCAiU29ydCBsYXllcnMiCm1zZ3N0ciAiVHJpZXIgbGVzIGNhbHF1ZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MTExCm1zZ2lkICJSZXNldCBvcHRpb25zIgptc2dzdHIgIlLDqWluaXRpYWxpc2VyIGxlcyBvcHRvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MTE5Cm1zZ2lkICIiCiJcbiIKIiAgICAgICAgICAgIE5vdGUgdGhhdCB0aGUgdGltZSBhbmQgdXNhZ2UgdmFsdWVzIGluIHRoaXMgdGFiIGFyZSA8c3Ryb25nPmVzdGltYXRlZDwvc3Ryb25nPiBieSB0aGUgR0NPREUgdmlld2VyIGluIHlvdXJcbiIKIiAgICAgICAgICAgIGJyb3dzZXIgYW5kIG1pZ2h0IGRpZmZlciBmcm9tIHRoZSB2YWx1ZXMgPHN0cm9uZz5lc3RpbWF0ZWQ8L3N0cm9uZz4gYnkgdGhlIHNlcnZlciB0aGF0IGFyZSBkaXNwbGF5ZWQgaW4gdGhlXG4iCiIgICAgICAgICAgICBcIlN0YXRlXCIgYW5kIFwiRmlsZXNcIiBwYW5lbHMgaW4gdGhlIHNpZGViYXIgZHVlIHRvIHNsaWdodGx5IGRpZmZlcmVudCBpbXBsZW1lbnRhdGlvbnMuIEFsc28gbm90ZSB0aGF0IHRoZXNlXG4iCiIgICAgICAgICAgICA8c3Ryb25nPmVzdGltYXRlZDwvc3Ryb25nPiB2YWx1ZXMgbWF5IGJlIGluYWNjdXJhdGUgc2luY2UgdGhleSBjYW4gYWxzbyB0YWtlIGluZm9ybWF0aW9uIHByZXNlbnQgaW4gdGhlXG4iCiIgICAgICAgICAgICBHQ09ERSBmaWxlIGludG8gYWNjb3VudC5cbiIKIiAgICAgICAgIgptc2dzdHIgIiIKIlxuIgoiTm90ZXogcXVlIGxlIHRlbXBzIGRvbm7DqSBkYW5zIGNldHRlIHBhcnRpZSBlc3QgPHN0cm9uZz5lc3RpbcOpPC9zdHJvbmc+IHBhciBsZSB2aXN1YWxpc2V1ciBkdSBHLWNvZGUgYXZlYyB2b3RyZSBuYXZpZ2F0ZXVyIGV0IHBldXQgZGlmZsOpcmVyIGRlIGxhIHZhbGV1ciA8c3Ryb25nPmVzdGltw6llPC9zdHJvbmc+IHBhciBsZSBzZXJ2ZXVyIHF1aSBlc3QgYWZmaWNow6llIGRhbnMgbGEgZmVuw6p0cmUgXCLDiXRhdFwiIGV0IFwiRmljaGllcnNcIiBkYW5zIGxlIHBhbm5lYXUgw6AgZ2F1Y2hlLiBOb3RleiDDqWdhbGVtZW50IHF1ZSBjZXR0ZSA8c3Ryb25nPmVzdGlsYXRpb248L3N0cm9uZz4gcGV1dCB2YXJpZXIsIMOpdGFudCBkb25uw6kgcXUnZWxsZSBwcmVuZCBlbiBjb21wdGUgZGVzIGluZm9ybWF0aW9ucyBwcsOpc2VudGVzIGRhbnMgbGUgZmljaGllciBkdSBHLWNvZGUuICAgICAgICAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvZ2NvZGV2aWV3ZXIvdGVtcGxhdGVzL2djb2Rldmlld2VyX3RhYi5qaW5qYTI6MTI5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6NzMgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxMDEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1MDQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1MjAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1Mjkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1NDQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjg3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5UaW1pbmdzLmppbmphMjo0IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1DYWNoZUJ1c3Rlci5qaW5qYTI6Nwptc2dpZCAiV2FybmluZyIKbXNnc3RyICJBdmVydGlzc2VtZW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjEzMAptc2dpZCAiIgoiPHA+XG4iCiIgICAgICAgIFlvdSd2ZSBzZWxlY3RlZCA8c3Ryb25nIGRhdGEtYmluZD1cInRleHQ6IHNlbGVjdGVkRmlsZS5uYW1lXCI+PC9zdHJvbmc+IGZvciBwcmludGluZyB3aGljaCBoYXMgYSBzaXplIG9mXG4iCiIgICAgICAgIDxzdHJvbmcgZGF0YS1iaW5kPVwidGV4dDogZm9ybWF0U2l6ZShzZWxlY3RlZEZpbGUuc2l6ZSgpKVwiPjwvc3Ryb25nPi4gRGVwZW5kaW5nIG9uIHlvdXIgbWFjaGluZSB0aGlzXG4iCiIgICAgICAgIG1pZ2h0IGJlIHRvbyBsYXJnZSBmb3IgcmVuZGVyaW5nIGFuZCBjYXVzZSB5b3VyIGJyb3dzZXIgdG8gYmVjb21lIHVucmVzcG9uc2l2ZSBvciBjcmFzaC5cbiIKIiAgICA8L3A+XG4iCiJcbiIKIiAgICA8cD5cbiIKIiAgICAgICAgQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHZpc3VhbGl6ZSB0aGlzIGZpbGUgbmV2ZXJ0aGVsZXNzP1xuIgoiICAgIDwvcD4iCm1zZ3N0ciAiIgoiPHA+Vm91cyBhdmV6IHPDqWxlY3Rpb25uw6kgbGUgZmljaGllciA8c3Ryb25nIGRhdGEtYmluZD1cInRleHQ6IHNlbGVjdGVkRmlsZS5uYW1lXCI+PC9zdHJvbmc+IHBvdXIgbCdpbXByaW1lciBkJ3VuZSB0YWlsbGUgZGUgPHN0cm9uZyBkYXRhLWJpbmQ9XCJ0ZXh0OiBmb3JtYXRTaXplKHNlbGVjdGVkRmlsZS5zaXplKCkpXCI+PC9zdHJvbmc+LiBFbiBmb25jdGlvbiBkZSB2b3RyZSBtYWNoaW5lLCBjZSBmaWNoaWVyIHBvdXJyYWl0IMOqdHJlIHRyb3Agdm9sdW1pbmV1eCBldCBwb3VycmFpdCBwbGFudGVyIHZvdHJlIG5hdmlnYXRldXIuPC9wPlxuIgoiPHA+IFNvdWhhaXRlei12b3VzIHRvdXQgZGUgbcOqbWUgdmlzdWFsaXNlciBjZSBmaWNoaWVyID88L3A+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2djb2Rldmlld2VyL3RlbXBsYXRlcy9nY29kZXZpZXdlcl90YWIuamluamEyOjE0MQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZZXMsIHBsZWFzZSB2aXN1YWxpemUgJShuYW1lKXMgcmVnYXJkbGVzcyBvZiBpdHMgc2l6ZSIKbXNnc3RyICJPdWksIHMnaWwgdm91cyBwbGHDrnQsIHZpc3VhbGlzZSAlKG5hbWUpcyBzYW5zIHRlbmlyIGNvbXB0ZSBkZSBzYSB0YWlsbGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9fX2luaXRfXy5weTo0NAptc2dpZCAiQWxsb3dzIHRvIGRvd25sb2FkIGFuZCBkZWxldGUgbG9nIGZpbGVzIGFuZCBsaXN0IGFuZCBzZXQgbG9nIGxldmVscy4iCm1zZ3N0ciAiUGVybWV0IGRlIHTDqWzDqWNoYXJnZXIgZXQgZGUgc3VwcHJpbWVyIGRlcyBmaWNoaWVycyBqb3VybmF1eCBldCBkZSByw6lwZXJ0b3JpZXIgZXQgZGUgZMOpZmluaXIgZGVzIG5pdmVhdXggZGUgam91cm5hbC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9fX2luaXRfXy5weToyODUKbXNnaWQgIldpdGhvdXQgdGhpcyBwbHVnaW4geW91IHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gcmV0cmlldmUgT2N0b1ByaW50J3MgbG9ncyBvciBtb2RpZnkgdGhlIGN1cnJlbnQgbG9nZ2luZyBsZXZlbHMgdGhyb3VnaCB0aGUgd2ViIGludGVyZmFjZS4iCm1zZ3N0ciAiU2FucyBjZXR0ZSBleHRlbnNpb24sIHZvdXMgbmUgcG91cnJleiBwbHVzIHLDqWN1cMOpcmVyIGxlcyBqb3VybmF1eCBPY3RvUHJpbnQgbmkgbW9kaWZpZXIgbGVzIG5pdmVhdXggZGUgam91cm5hbGlzYXRpb24gYWN0dWVscyB2aWEgbCdpbnRlcmZhY2UgV2ViLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3N0YXRpYy9qcy9sb2dnaW5nLmpzOjEzOAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgY3VycmVudGx5IGhhdmUgPGNvZGU+JShsb2dmaWxlKXM8L2NvZGU+IGVuYWJsZWQuIFBsZWFzZSByZW1lbWJlciB0byB0dXJuIGl0IG9mZiBhZ2FpbiBvbmNlIHlvdXIgYXJlIGRvbmUgZGVidWdnaW5nIHdoYXRldmVyIGlzc3VlIHByb21wdGVkIHlvdSB0byB0dXJuIGl0IG9uLiIKbXNnc3RyICJWb3VzIGF2ZXogYWN0dWVsbGVtZW50IDxjb2RlPiUobG9nZmlsZSlzPC9jb2RlPiBhY3RpdsOpLiBOJ291YmxpZXogcGFzIGRlIGxlIGTDqXNhY3RpdmVyIMOgIG5vdXZlYXUgdW5lIGZvaXMgbGUgZMOpYm9nYWdlIHRlcm1pbsOpLCBxdWVsIHF1ZSBzb2l0IGxlIHByb2Jsw6htZSBxdWkgdm91cyBhIGluY2l0w6kgw6AgbGUgcsOpYWN0aXZlci4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9zdGF0aWMvanMvbG9nZ2luZy5qczoxNDUKbXNnaWQgIkl0IGNhbiBuZWdhdGl2ZWx5IGltcGFjdCBwcmludCBwZXJmb3JtYW5jZSBhbmQgYWxzbyB0YWtlIHVwIGEgbG90IG9mIHN0b3JhZ2Ugc3BhY2UgZGVwZW5kaW5nIG9uIGhvdyBsb25nIHlvdSBrZWVwIGl0IGVuYWJsZWQgYW5kIHRodXMgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgZGVidWdnaW5nLiIKbXNnc3RyICJQZXV0IGF2b2lyIHVuIGltcGFjdCBuw6lnYXRpZiBzdXIgbGVzIHBlcmZvcm1hbmNlcyBkJ2ltcHJlc3Npb24gZXQgcHJlbmRyZSBiZWF1Y291cCBkJ2VzcGFjZSBkZSBzdG9ja2FnZSBzZWxvbiBsYSBkdXLDqWUgcXVlIHZvdXMgbGUgbGFpc3NleiBhY3RpdsOpIGV0IG5lIGRvaXQgZG9uYyDDqnRyZSB1dGlsaXPDqSBxdWUgcG91ciBsZSBkw6lib2dhZ2UuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvc3RhdGljL2pzL2xvZ2dpbmcuanM6MTU1Cm1zZ2lkICJMb2cgc3RvcmFnZToiCm1zZ3N0ciAiU3RvY2thZ2UgZGVzIGpvdXJuYXV4IDoiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9zdGF0aWMvanMvbG9nZ2luZy5qczoyMjIKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgbG9nIGZpbGUgXCIlKG5hbWUpc1wiLiIKbXNnc3RyICJWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBzdXBwcmltZXIgbGUgZmljaGllciBqb3VybmFsIFwiJShuYW1lKXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9zdGF0aWMvanMvbG9nZ2luZy5qczoyNjkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgJShjb3VudClkIGxvZyBmaWxlcy4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZOKAmWVmZmFjZXIgJShjb3VudClkIGZpY2hpZXIocykgZGUgbG9nLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3N0YXRpYy9qcy9sb2dnaW5nLmpzOjMzNgptc2dpZCAiRGVsZXRpbmcgbG9nIGZpbGVzIgptc2dzdHIgIkVmZmFjZXIgbGVzIGZpY2hpZXJzIGRlIGNvbm5leGlvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy9zdGF0aWMvanMvbG9nZ2luZy5qczozMzcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRGVsZXRpbmcgJShjb3VudClkIGxvZyBmaWxlcy4uLiIKbXNnc3RyICJFZmZhY2UlKGNvdW50KWQgZmljaGllcnMgZGUgY29ubmV4aW9ucyAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19uYXZiYXJfcGx1Z2ludGltaW5nc2xvZy5qaW5qYTI6MQptc2dpZCAicGx1Z2ludGltaW5ncy5sb2cgaXMgZW5hYmxlZCIKbXNnc3RyICJwbHVnaW50aW1pbmdzLmxvZyBlc3QgYWN0aXbDqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3RlbXBsYXRlcy9sb2dnaW5nX25hdmJhcl9wbHVnaW50aW1pbmdzbG9nLmppbmphMjoxCm1zZ2lkICI8Y29kZT5wbHVnaW50aW1pbmdzLmxvZzwvY29kZT4gaXMgZW5hYmxlZCIKbXNnc3RyICI8Y29kZT5wbHVnaW50aW1pbmdzLmxvZzwvY29kZT4gZXN0IGFjdGl2w6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19uYXZiYXJfc2VyaWFsbG9nLmppbmphMjoxCm1zZ2lkICJzZXJpYWwubG9nIGlzIGVuYWJsZWQiCm1zZ3N0ciAic2VyaWFsLmxvZyBlc3QgYWN0aXbDqSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3RlbXBsYXRlcy9sb2dnaW5nX25hdmJhcl9zZXJpYWxsb2cuamluamEyOjEKbXNnaWQgIjxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IGlzIGVuYWJsZWQiCm1zZ3N0ciAiPGNvZGU+c2VyaWFsLmxvZzwvY29kZT4gZXN0IGFjdGl2w6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MQptc2dpZCAiTG9ncyIKbXNnc3RyICJKb3VybmF1eCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9sb2dnaW5nL3RlbXBsYXRlcy9sb2dnaW5nX3NldHRpbmdzLmppbmphMjo3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXNfaGVhZGVyLmppbmphMjo4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxMTcKbXNnaWQgIlNvcnQgYnkgbmFtZSIKbXNnc3RyICJUcmllciBwYXIgbm9tIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjcgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIzMCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTE3Cm1zZ2lkICJhc2NlbmRpbmciCm1zZ3N0ciAiYXNjZW5kYW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjgKbXNnaWQgIlNvcnQgYnkgbW9kaWZpY2F0aW9uIGRhdGUiCm1zZ3N0ciAiVHJpZXIgcGFyIGRhdGUgZGUgbW9kaWZpY2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjggc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjkgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIzMSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjMyIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyMzMgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIzNCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjM1IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXNfaGVhZGVyLmppbmphMjo5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXNfaGVhZGVyLmppbmphMjoxMCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MTEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjExOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTE5Cm1zZ2lkICJkZXNjZW5kaW5nIgptc2dzdHIgImRlc2NlbmRhbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6OSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MTEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjExOQptc2dpZCAiU29ydCBieSBmaWxlIHNpemUiCm1zZ3N0ciAiVHJpZXIgcGFyIHRhaWxsZSBkZXMgZmljaGllcnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6MjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjEzNAptc2dpZCAiRG93bmxvYWQgc2VsZWN0ZWQiCm1zZ3N0ciAiVMOpbMOpY2hhcmdlciBsYSBzw6lsZWN0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjY2Cm1zZ2lkICJMb2dnaW5nIExldmVscyIKbXNnc3RyICJOaXZlYXV4IGRlIGpvdXJuYWxpc2F0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL2xvZ2dpbmcvdGVtcGxhdGVzL2xvZ2dpbmdfc2V0dGluZ3MuamluamEyOjcxCm1zZ2lkICJMZXZlbCIKbXNnc3RyICJOaXZlYXUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6ODggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6Mjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6NDEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6NTIKbXNnaWQgIlJlbW92ZSIKbXNnc3RyICJTdXBwcmltZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvbG9nZ2luZy90ZW1wbGF0ZXMvbG9nZ2luZ19zZXR0aW5ncy5qaW5qYTI6OTUKbXNnaWQgIlNlbGVjdCBhIGxvZ2dlci4uLiIKbXNnc3RyICJTw6lsZWN0aW9ubmVyIHVuIGVucmVnaXN0cmV1ciBkZXMgbG9ncyAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9fX2luaXRfXy5weToyMzIKbXNnaWQgIkFsbG93cyB0byBlbmFibGUsIGRpc2FibGUgYW5kIHVuaW5zdGFsbCBpbnN0YWxsZWQgcGx1Z2lucy4iCm1zZ3N0ciAiUGVybWV0IGQnYWN0aXZlciwgZGUgZMOpc2FjdGl2ZXIgZXQgZGUgZMOpc2luc3RhbGxlciBsZXMgZXh0ZW5zaW9ucyBpbnN0YWxsw6llcy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9fX2luaXRfXy5weToyNDEKbXNnaWQgIkFsbG93cyB0byBpbnN0YWxsIG5ldyBwbHVnaW5zLiBJbmNsdWRlcyB0aGUgXCJNYW5hZ2UgcGx1Z2luc1wiIHBlcm1pc3Npb24uIgptc2dzdHIgIlBlcm1ldCBkJ2luc3RhbGxlciBkZSBub3V2ZWxsZXMgZXh0ZW5zaW9ucy4gSW5jbHV0IGwnYXV0b3Jpc2F0aW9uIFwiR8OpcmVyIGxlcyBleHRlbnNpb25zXCIuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvX19pbml0X18ucHk6MzI1Cm1zZ2lkICJQbHVnaW4gTWFuYWdlciIKbXNnc3RyICJHZXN0aW9ubmFpcmUgZGVzIGV4dGVuc2lvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoyNTgKbXNnaWQgIlRoZXJlIGFyZSBubyBwbHVnaW4gbm90aWNlcy4gR3JlYXQhIgptc2dzdHIgIklsIG4neSBhIGF1Y3VuZSBub3RpZmljYXRpb24gZW4gcHJvdmVuYW5jZSBkZSBjZXR0ZSBleHRlbnNpb24uIFN1cGVyICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoyNjAKbXNnaWQgIlRoZXJlIGlzIGEgcGx1Z2luIG5vdGljZSBmb3Igb25lIG9mIHlvdXIgaW5zdGFsbGVkIHBsdWdpbnMuIgptc2dzdHIgIklsIHkgYSB1bmUgbm90aWZpY2F0aW9uIGVuIHByb3ZlbmFuY2UgZCd1bmUgZGUgdm9zIGV4dGVuc2lvbnMgaW5zdGFsbMOpZXMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MjY1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlRoZXJlIGFyZSAlKGNvdW50KWQgcGx1Z2luIG5vdGljZXMgZm9yIG9uZSBvciBtb3JlIG9mIHlvdXIgaW5zdGFsbGVkIHBsdWdpbnMuIgptc2dzdHIgIklsIHkgYSAlKGNvdW50KWQgbm90aWZpY2F0aW9ucyBlbiBwcm92ZW5hbmNlIGQnYXUgbW9pbnMgZCd1bmUgZGUgdm9zIGV4dGVuc2lvbnMgaW5zdGFsbMOpZXMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6NDI2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjg2Nwptc2dpZCAiSW5zdGFsbGluZyBwbHVnaW4uLi4iCm1zZ3N0ciAiSW5zdGFsbGF0aW9uIGRlIGwnZXh0ZW5zaW9uLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6NDI3Cm1zZ2lkICJJbnN0YWxsaW5nIHBsdWdpbiBmcm9tIHVwbG9hZGVkIGZpbGUuLi4iCm1zZ3N0ciAiSW5zdGFsbGF0aW9uIGR1IHBsdWdpbiDDoCBwYXJ0aXIgZHUgZmljaGllciBjaGFyZ8OpIGVuIGNvdXJzIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjQ1NSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo3MzYgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6OTAxIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjk1NSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMDExIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEwNDkgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTM0OCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvc3RhdGljL2pzL3VzYWdlLmpzOjEwMQptc2dpZCAiU29tZXRoaW5nIHdlbnQgd3JvbmciCm1zZ3N0ciAiUXVlbHF1ZSBjaG9zZSBzJ2VzdCBtYWwgcGFzc8OpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6NDU2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjczNyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo5MDIgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6OTU2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEwMTIgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTA1MAptc2dpZCAiUGxlYXNlIGNvbnN1bHQgb2N0b3ByaW50LmxvZyBmb3IgZGV0YWlscyIKbXNnc3RyICJNZXJjaSBkZSBjb25zdWx0ZXIgbGVzIGZpY2hpZXJzIG9jdG9wcmludC5sb2cgcG91ciBwbHVzIGRlIGTDqXRhaWxzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6NzcwCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gZGlzYWJsZSBcIiUobmFtZSlzXCIuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIGTDqXNhY3RpdmVyIFwiJShuYW1lKXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo3NzYKbXNnaWQgIlRoaXMgaXMgbm90IHJlY29tbWVuZGVkIgptc2dzdHIgIkNlY2kgbidlc3QgcGFzIHJlY29tbWFuZMOpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6Nzc4Cm1zZ2lkICJEbyB5b3Ugc3RpbGwgd2FudCB0byBkaXNhYmxlIGl0PyIKbXNnc3RyICJTb3VoYWl0ZXotdm91cyB0b3Vqb3VycyBsZSBkw6lzYWN0aXZlciA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6Nzc5IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjc5Mwptc2dpZCAiS2VlcCBlbmFibGVkIgptc2dzdHIgIkdhcmRlciBhY3RpdsOpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6NzgwCm1zZ2lkICJEaXNhYmxlIGFueXdheSIKbXNnc3RyICJEw6lzYWN0aXZlciBxdWFuZCBtw6ptZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjc5MAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIGRpc2FibGUgXCIlKG5hbWUpc1wiIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIGTDqXNhY3RpdmVyIFwiJShuYW1lKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjc5NAptc2dpZCAiRGlzYWJsZSBwbHVnaW4iCm1zZ3N0ciAiRMOpc2FjdGl2ZXIgbCdleHRlbnNpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo4NzAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiSW5zdGFsbGluZyBwbHVnaW4gXCIlKG5hbWUpc1wiIGZyb20gJSh1cmwpcy4uLiIKbXNnc3RyICJJbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24gXCIlKG5hbWUpc1wiIGRlcHVpcyAlKHVybClzLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6ODc0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkluc3RhbGxpbmcgcGx1Z2luIGZyb20gJSh1cmwpcy4uLiIKbXNnc3RyICJJbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24gZGVwdWlzICUodXJsKXMuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo4NzkKbXNnaWQgIlJlaW5zdGFsbGluZyBwbHVnaW4uLi4iCm1zZ3N0ciAiUsOpaW5zdGFsbGF0aW9uIGRlIGwnZXh0ZW5zaW9uLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6ODgxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlJlaW5zdGFsbGluZyBwbHVnaW4gXCIlKG5hbWUpc1wiIGZyb20gJSh1cmwpcy4uLiIKbXNnc3RyICJSw6lpbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24gXCIlKG5hbWUpc1wiIGRlcHVpcyAlKHVybClzLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6OTQyCm1zZ2lkICJVbmluc3RhbGxpbmcgcGx1Z2luLi4uIgptc2dzdHIgIkTDqXNpbnN0YWxsYXRpb24gZGUgbCdleHRlbnNpb24uLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo5NDMKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVW5pbnN0YWxsaW5nIHBsdWdpbiBcIiUobmFtZSlzXCIiCm1zZ3N0ciAiRMOpc2luc3RhbGxhdGlvbiBkZSBsJ2V4dGVuc2lvbiBcIiUobmFtZSlzXCIuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo5NjgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byB1bmluc3RhbGwgdGhlIHBsdWdpbiBcIiUobmFtZSlzXCIiCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgZMOpc2luc3RhbGxlciBsJ2V4dGVuc2lvbiBcIiUobmFtZSlzXCIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo5NzEKbXNnaWQgIktlZXAgaW5zdGFsbGVkIgptc2dzdHIgIkxhaXNzZXIgaW5zdGFsbMOpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6OTcyCm1zZ2lkICJVbmluc3RhbGwiCm1zZ3N0ciAiRMOpc2luc3RhbGxlciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjk3Mgptc2dpZCAiVW5pbnN0YWxsICYgY2xlYW4gdXAgZGF0YSIKbXNnc3RyICJEw6lzaW5zdGFsbGVyIGV0IG5ldHRveWVyIGxlcyBkb25uw6llcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjk5OAptc2dpZCAiQ2xlYW5pbmcgdXAgcGx1Z2luIGRhdGEuLi4iCm1zZ3N0ciAiTmV0dG95YWdlIGRlcyBkb25uw6llcyBkZSBsJ2V4dGVuc2lvbiAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczo5OTkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiQ2xlYW5pbmcgdXAgZGF0YSBvZiBwbHVnaW4gXCIlKG5hbWUpc1wiIgptc2dzdHIgIk5ldHRveWFnZSBkZXMgZG9ubsOpZXMgZGUgbCdleHRlbnNpb24gXCIlKG5hbWUpc1wiIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTAyNAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIGNsZWFudXAgdGhlIHBsdWdpbiBkYXRhIG9mIFwiJShuYW1lKXNcIi4gVGhpcyBvcGVyYXRpb24gY2Fubm90IGJlIHJldmVyc2VkLiIKbXNnc3RyICJWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBuZXR0b3llciBsZXMgZG9ubsOpZXMgZGUgbCdleHRlbnNpb24gOiBcIiUobmFtZSlzXCIuIENldHRlIG9ww6lyYXRpb24gZXN0IGlycsOpdmVyc2libGUuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTAyOSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMDY0Cm1zZ2lkICJLZWVwIGRhdGEiCm1zZ3N0ciAiQ29uc2VydmVyIGxlcyBkb25uw6llcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEwMzAKbXNnaWQgIkNsZWFudXAgZGF0YSIKbXNnc3RyICJEb25uw6llcyBuZXR0b3nDqWVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTA0Mgptc2dpZCAiQ2xlYW5pbmcgdXAgYWxsIGxlZnQgb3ZlciBwbHVnaW4gZGF0YS4uLiIKbXNnc3RyICJOZXR0b3lhZ2UgZGUgdG91dGVzIGxlcyBkb25uw6llcyByZXN0YW50ZXMgZGUgbCdleHRlbnNpb24gLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTA2MQptc2dpZCAiWW91IGFyZSBhYm91dCB0byBjbGVhbnVwIGxlZnQgb3ZlciBwbHVnaW4gc2V0dGluZ3MgYW5kIGRhdGEgb2YgcGx1Z2lucyBubyBsb25nZXIgaW5zdGFsbGVkLiBUaGlzIG9wZXJhdGlvbiBjYW5ub3QgYmUgcmV2ZXJzZWQuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIG5ldHRveWVyIGxlcyBwYXJhbcOodHJlcyBldCBsZXMgZG9ubsOpZXMgZGVzIGV4dGVuc2lvbnMgcXVpIG5lIHNvbnQgcGx1cyBpbnN0YWxsw6llcy4gQ2V0dGUgb3DDqXJhdGlvbiBlc3QgaXJyw6l2ZXJzaWJsZS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMDY1Cm1zZ2lkICJDbGVhbnVwIGFsbCBkYXRhIgptc2dzdHIgIk5ldHRveWVyIHRvdXRlcyBsZXMgZG9ubsOpZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMjA5Cm1zZ2lkICJSZWluc3RhbGwiCm1zZ3N0ciAiUsOpaW5zdGFsbGF0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTIxMCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzA4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjozMjQKbXNnaWQgIkluc3RhbGwiCm1zZ3N0ciAiSW5zdGFsbGF0aW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTIxMiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTE4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNjAKbXNnaWQgIkRpc2FibGVkIgptc2dzdHIgIkTDqXNhY3RpdsOpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTIxMwptc2dpZCAiSW5jb21wYXRpYmxlIgptc2dzdHIgIkluY29tcGF0aWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEyNDAKbXNnaWQgIlBsdWdpbiBtYW5hZ2VtZW50IGxvZyIKbXNnc3RyICJKb3VybmFsIGRlIGdlc3Rpb24gZGVzIGV4dGVuc2lvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMjQ4CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUoY291bnQpZCBlYXJsaWVyIGFjdGlvbnMuLi4iCm1zZ3N0ciAiJShjb3VudClkICBhY3Rpb24gcHLDqWPDqWRlbnRlLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTI1MAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICIlKGNvdW50KWQgZWFybGllciBhY3Rpb24iCm1zZ3N0ciAiJShjb3VudClkIGFjdGlvbiBwcsOpY8OpZGVudGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMjYyCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkluc3RhbGwgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcyIKbXNnc3RyICJJbnN0YWxsZXIgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEyNjYKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVW5pbnN0YWxsIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMiCm1zZ3N0ciAiRMOpc2luc3RhbGxlciA8ZW0+JShwbHVnaW4pczwvZW0+OiAlKHJlc3VsdClzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTI3MAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJFbmFibGUgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcyIKbXNnc3RyICJBY3RpdmVyIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMjc0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkRpc2FibGUgPGVtPiUocGx1Z2luKXM8L2VtPjogJShyZXN1bHQpcyIKbXNnc3RyICJEw6lzYWN0aXZlciA8ZW0+JShwbHVnaW4pczwvZW0+OiAlKHJlc3VsdClzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTI3OAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJDbGVhbnVwIDxlbT4lKHBsdWdpbilzPC9lbT46ICUocmVzdWx0KXMiCm1zZ3N0ciAiTmV0dG95ZXI8ZW0+JShwbHVnaW4pczwvZW0+OiAlKHJlc3VsdClzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTI4MgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJDbGVhbnVwIGFsbDogJShyZXN1bHQpcyIKbXNnc3RyICJUb3V0IG5ldHRveWVyOiAlKHJlc3VsdClzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTMwMAptc2dpZCAiV2h5PyIKbXNnc3RyICJQb3VycXVvaSA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTMxNAptc2dpZCAiQSByZXN0YXJ0IGlzIG5lZWRlZCBmb3IgdGhlIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QuIgptc2dzdHIgIlVuIHJlZMOpbWFycmFnZSBlc3QgbsOpY2Vzc2FpcmUgcG91ciBxdWUgbGVzIG1vZGlmaWNhdGlvbnMgcHJlbm5lbnQgZWZmZXQuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTMyNAptc2dpZCAiUmVzdGFydCBub3ciCm1zZ3N0ciAiUmVkw6ltYXJyZXIgbWFpbnRlbmFudCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEzMjkKbXNnaWQgIjxzdHJvbmc+VGhpcyB3aWxsIHJlc3RhcnQgeW91ciBPY3RvUHJpbnQgc2VydmVyLjwvc3Ryb25nPjwvcD48cD5UaGlzIGFjdGlvbiBtYXkgZGlzcnVwdCBhbnkgb25nb2luZyBwcmludCBqb2JzIChkZXBlbmRpbmcgb24geW91ciBwcmludGVyJ3MgY29udHJvbGxlciBhbmQgZ2VuZXJhbCBzZXR1cCB0aGF0IG1pZ2h0IGFsc28gYXBwbHkgdG8gcHJpbnRzIHJ1biBkaXJlY3RseSBmcm9tIHlvdXIgcHJpbnRlcidzIGludGVybmFsIHN0b3JhZ2UpLiIKbXNnc3RyICI8c3Ryb25nPkNlbGEgcmVkw6ltYXJyZXJhIHZvdHJlIHNlcnZldXIgT2N0b1ByaW50Ljwvc3Ryb25nPjwvcD48cD4gQ2V0dGUgYWN0aW9uIHBldXQgcGVydHVyYmVyIHRvdXMgbGVzIHRyYXZhdXggZCdpbXByZXNzaW9uIGVuIGNvdXJzIChlbiBmb25jdGlvbiBkdSBjb250csO0bGV1ciBkZSB2b3RyZSBpbXByaW1hbnRlIGV0IGRlIGxhIGNvbmZpZ3VyYXRpb24gZ8OpbsOpcmFsZSBxdWkgcGV1dCDDqWdhbGVtZW50IHMnYXBwbGlxdWVyIGF1eCBpbXByZXNzaW9ucyBleMOpY3V0w6llcyBkaXJlY3RlbWVudCDDoCBwYXJ0aXIgZHUgc3RvY2thZ2UgaW50ZXJuZSBkZSB2b3RyZSBpbXByaW1hbnRlKS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxMzM4Cm1zZ2lkICJSZXN0YXJ0IGluIHByb2dyZXNzIgptc2dzdHIgIlJlZMOpbWFycmFnZSBlbiBjb3VycyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEzNDEKbXNnaWQgIlRoZSBzZXJ2ZXIgaXMgbm93IGJlaW5nIHJlc3RhcnRlZCBpbiB0aGUgYmFja2dyb3VuZCIKbXNnc3RyICJMZSBzZXJ2ZXVyIHZhIG1haW50ZW5hbnQgcmVkw6ltYXJyZXIgZW4gYXJyacOocmUgcGxhbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEzNTEKbXNnaWQgIlRyeWluZyB0byByZXN0YXJ0IHRoZSBzZXJ2ZXIgcHJvZHVjZWQgYW4gZXJyb3IsIHBsZWFzZSBjaGVjayBvY3RvcHJpbnQubG9nIGZvciBkZXRhaWxzLiBZb3UnbGwgaGF2ZSB0byByZXN0YXJ0IG1hbnVhbGx5LiIKbXNnc3RyICJMYSB0ZW50YXRpdmUgZGUgcmVkw6ltYXJyYWdlIGR1IHNlcnZldXIgYSBwcm9kdWl0IHVuZSBlcnJldXJzLiBWw6lyaWZpZXogbGVzIGxvZyBvY3RvUHJpbnQgcG91ciBwbHVzIGRlIGTDqXRhaWxzLiBWb3VzIGRldnJleiByZWTDqW1hcnJlciBtYW51ZWxsZW1lbnQuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTM2OQptc2dpZCAiQSByZWZyZXNoIGlzIG5lZWRlZCBmb3IgdGhlIGNoYW5nZXMgdG8gdGFrZSBlZmZlY3QuIgptc2dzdHIgIlVuIHJhZnJhaWNoaXNzZW1lbnQgZXN0IG7DqWNlc3NhaXJlIHBvdXIgcXVlIGxlcyBtb2RpZmljYXRpb25zIHByZW5uZW50IGVmZmV0LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjEzNzggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvb3ZlcmxheXMvcmVsb2FkdWkuamluamEyOjE0Cm1zZ2lkICJSZWxvYWQgbm93Igptc2dzdHIgIlJlY2hhcmdlciBtYWludGVuYW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTM5MAptc2dpZCAiQSByZWNvbm5lY3QgdG8gdGhlIHByaW50ZXIgaXMgbmVlZGVkIGZvciB0aGUgY2hhbmdlcyB0byB0YWtlIGVmZmVjdC4iCm1zZ3N0ciAiVW5lIHJlY29ubmV4aW9uIMOgIGwnaW1wcmltYW50ZSBlc3QgbsOpY2Vzc2FpcmUgcG91ciBxdWUgbGVzIG1vZGlmaWNhdGlvbnMgcHJlbm5lbnQgZWZmZXQuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTQ0OQptc2dpZCAiRXJyb3IhIgptc2dzdHIgIkVycmV1ciEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNDU0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBjYW4gZmluZCBtb3JlIGluZm8gb24gdGhpcyBpc3N1ZSBpbiB0aGUgRkFRIGF0ICUodXJsKXMiCm1zZ3N0ciAiVm91cyBwb3V2ZXogdHJvdXZlciBwbHVzIGQnaW5mbyBzdXIgY2UgcHJvYmzDqG1lIGRhbnMgbGEgRkFRIGljaSAlKHVybClzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTQ2Mwptc2dpZCAiRG9uZSEiCm1zZ3N0ciAiVGVybWluw6khIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTUwNAptc2dpZCAiQmxhY2tsaXN0ZWQiCm1zZ3N0ciAiU3VyIExpc3RlIE5vaXJlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvc3RhdGljL2pzL3BsdWdpbm1hbmFnZXIuanM6MTUwNgptc2dpZCAiRGlzYWJsZWQgZHVlIHRvIGFjdGl2ZSBzYWZlIG1vZGUiCm1zZ3N0ciAiRMOpc2FjdGl2w6kgZW4gcmFpc29uIGR1IG1vZGUgc2FucyDDqWNoZWMgYWN0aWYiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTA4Cm1zZ2lkICJFbmFibGUgUGx1Z2luIgptc2dzdHIgIkFjdGl2ZXIgbCdleHRlbnNpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTExCm1zZ2lkICJEaXNhYmxlIFBsdWdpbiIKbXNnc3RyICJEw6lzYWN0aXZlciBsJ2V4dGVuc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjE1MzQKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVGhlcmUgYXJlICUoY291bnQpZCBub3RpY2VzICglKGltcG9ydGFudClkIG1hcmtlZCBhcyBpbXBvcnRhbnQpIGF2YWlsYWJsZSByZWdhcmRpbmcgdGhpcyBwbHVnaW4gLSBjbGljayB0byBzaG93ISIKbXNnc3RyICJJbCB5IGEgJShjb3VudClkIGFubm9uY2VzIChkb250ICUoaW1wb3J0YW50KWQgbWFycXXDqWVzIGNvbW1lIGltcG9ydGFudGVzKSBkaXNwb25pYmxlcyBhdSBzdWpldCBkZSBjZXR0ZSBleHRlbnNpb24gLSBjbGlxdWV6IHBvdXIgbGVzIGFmZmljaGVyICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTQxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlRoZXJlIGFyZSAlKGNvdW50KWQgbm90aWNlcyBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIC0gY2xpY2sgdG8gc2hvdyEiCm1zZ3N0ciAiSWwgeSBhICUoY291bnQpZCBhbm5vbmNlcyBkaXNwb25pYmxlcyBhdSBzdWpldCBkZSBjZXR0ZSBleHRlbnNpb24gLSBjbGlxdWV6IHBvdXIgbGVzIGFmZmljaGVyICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTQ5Cm1zZ2lkICJUaGVyZSBpcyBhbiBpbXBvcnRhbnQgbm90aWNlIGF2YWlsYWJsZSByZWdhcmRpbmcgdGhpcyBwbHVnaW4gLSBjbGljayB0byBzaG93ISIKbXNnc3RyICJJbCB5IGEgdW5lIGFubm9uY2UgaW1wb3J0YW50ZSBkaXNwb25pYmxlIGF1IHN1amV0IGRlIGNldHRlIGV4dGVuc2lvbiAtIGNsaXF1ZXogcG91ciBsJ2FmZmljaGVyICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTUzCm1zZ2lkICJUaGVyZSBpcyBhIG5vdGljZSBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIC0gY2xpY2sgdG8gc2hvdyEiCm1zZ3N0ciAiSWwgeSBhIHVuZSBhbm5vbmNlIGRpc3BvbmlibGUgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uIC0gY2xpcXVleiBwb3VyIGwnYWZmaWNoZXIgISIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjE1NzAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiSW1wb3J0YW50IG5vdGljZSByZWdhcmRpbmcgcGx1Z2luIFwiJShuYW1lKXNcIiIKbXNnc3RyICJBbm5vbmNlIGltcG9ydGFudGUgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uIFwiJShuYW1lKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjE1NzQKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiTm90aWNlIHJlZ2FyZGluZyBwbHVnaW4gXCIlKG5hbWUpc1wiIgptc2dzdHIgIkFubm9uY2UgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uIFwiJShuYW1lKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3N0YXRpYy9qcy9wbHVnaW5tYW5hZ2VyLmpzOjE1ODkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiQWZmZWN0ZWQgdmVyc2lvbnM6ICUodmVyc2lvbnMpcyIKbXNnc3RyICJWZXJzaW9uIGFmZmVjdMOpZXMgOiAlKHZlcnNpb25zKXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNTk0Cm1zZ2lkICJBZmZlY3RlZCB2ZXJzaW9uczogYWxsIgptc2dzdHIgIlZlcnNpb25zIGFmZmVjdMOpZXMgOiB0b3V0ZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci9zdGF0aWMvanMvcGx1Z2lubWFuYWdlci5qczoxNjAzCm1zZ2lkICJSZWFkIG1vcmUuLi4iCm1zZ3N0ciAiRW4gc2F2b2lyIHBsdXMuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mwptc2dpZCAiVGFrZSBub3RlIHRoYXQgYWxsIHBsdWdpbiBtYW5hZ2VtZW50IGZ1bmN0aW9uYWxpdHkgaXMgZGlzYWJsZWQgd2hpbGUgeW91ciBwcmludGVyIGlzIHByaW50aW5nIG9yIHBhdXNlZC4iCm1zZ3N0ciAiTm90ZXogcXVlIHRvdXRlcyBsZXMgZm9uY3Rpb25uYWxpdMOpcyBkZSBnZXN0aW9uIGRlcyBleHRlbnNpb25zIHNvbnQgZMOpc2FjdGl2w6llcyBwZW5kYW50IGzigJlpbXByZXNzaW9uIG91IGxhIHBhdXNlIGRlIHZvdHJlIGltcHJpbWFudGUuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjgKbXNnaWQgIiIKIlxuIgoiICAgIFRoZSA8Y29kZT5waXA8L2NvZGU+IGNvbW1hbmQgY291bGQgbm90IGJlIGZvdW5kIG9yIGRvZXMgbm90IHdvcmsgY29ycmVjdGx5XG4iCiIgICAgZm9yIHRoaXMgaW5zdGFsbGF0aW9uIG9mIE9jdG9QcmludCAtIHBsZWFzZSBjb25zdWx0IHRoZSBsb2cgZmlsZSBmb3IgZGV0YWlsc1xuIgoiICAgIGFuZCBpZiBuZWNlc3NhcnkgY29uZmlndXJlIGl0IG1hbnVhbGx5LiBObyBpbnN0YWxsYXRpb24gYW5kIHVuaW5zdGFsbGF0aW9uIG9mIHBsdWdpblxuIgoiICAgIHBhY2thZ2VzIGlzIHBvc3NpYmxlIHdoaWxlIDxjb2RlPnBpcDwvY29kZT4gaXMgdW5hdmFpbGFibGUuXG4iCm1zZ3N0ciAiIgoiXG4iCiJMYSBjb21tYW5kZSA8Y29kZT4gcGlwIDwvY29kZT4gbidhIHBhcyBwdSDDqnRyZSB0cm91dsOpZSBvdSBuZSBmb25jdGlvbm5lIHBhcyBjb3JyZWN0ZW1lbnQgcG91ciBjZXR0ZSBpbnN0YWxsYXRpb24gZGUgT2N0b1ByaW50IC0gdmV1aWxsZXogY29uc3VsdGVyIGxlcyBsb2dzIHBvdXIgcGx1cyBkZSBkw6l0YWlscyBldCBzaSBuw6ljZXNzYWlyZSBjb25maWd1cmVyIG1hbnVlbGxlbWVudC4gQXVjdW5lIGluc3RhbGxhdGlvbiBldCBkw6lzaW5zdGFsbGF0aW9uIGRlcyBwYWNrYWdlcyBkZSBjZXR0ZSBleHRlbnNpb24gbidlc3QgcG9zc2libGUgdGFudCBxdWUgPGNvZGU+IHBpcCA8L2NvZGU+IG4nZXN0IHBhcyBkaXNwb25pYmxlLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjE3Cm1zZ2lkICIiCiJcbiIKIiAgICBTYWZlIG1vZGUgaXMgY3VycmVudGx5IGFjdGl2ZS4gQWxsIHRoaXJkIHBhcnR5IHBsdWdpbnMgYXJlIGRpc2FibGVkIGFuZCBjYW5ub3QgYmVcbiIKIiAgICBlbmFibGVkLiBJbnN0YWxsYXRpb24gb2YgcGx1Z2luIHBhY2thZ2VzIGlzIGRpc2FibGVkLlxuIgptc2dzdHIgIiIKIlxuIgoiTGUgbW9kZSBzYW5zIMOpY2hlYyBlc3QgYWN0aWYuIFRvdXMgbGVzIGV4dGVuc2lvbnMgdGllcnMgc29udCBkw6lzYWN0aXbDqWVzIGV0IG5lIHBldXZlbnQgcGFzIMOqdHJlIGFjdGl2w6llcy4gTCdpbnN0YWxsYXRpb24gZGVzIHBhY2thZ2VzIGRlIGNldHRlIGV4dGVuc2lvbiBlc3QgZMOpc2FjdGl2w6llLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjI0Cm1zZ2lkICIiCiJcbiIKIiAgICBUaGUgc3lzdGVtIE9jdG9QcmludCBpcyBydW5uaW5nIG9uIGlzIGN1cnJlbnRseSB0aHJvdHRsZWQuIER1ZSB0byB0aGF0IGl0J3Mgbm90IHBvc3NpYmxlIHRvIGluc3RhbGwgbmV3XG4iCiIgICAgcGx1Z2lucyBpbiBvcmRlciB0byBhdm9pZCBwb3NzaWJsZSBpc3N1ZXMgY2F1c2VkIGJ5IHN5c3RlbSBpbnN0YWJpbGl0eS4gUmVhZCBtb3JlIG9uXG4iCiIgICAgdGhpcyBpbiA8YSBocmVmPVwiaHR0cHM6Ly9mYXEub2N0b3ByaW50Lm9yZy9waS1pc3N1ZXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+dGhlIEZBUTwvYT4uXG4iCm1zZ3N0ciAiIgoiXG4iCiJMZSBzeXN0w6htZSBzdXIgbGVxdWVsIE9jdG9QcmludCBzJ2V4w6ljdXRlIGVzdCBhY3R1ZWxsZW1lbnQgbGltaXTDqS4gUG91ciBjZXR0ZSByYWlzb24sIGlsIG4nZXN0IHBhcyBwb3NzaWJsZSBkJ2luc3RhbGxlciBkZSBub3V2ZWF1eFxuIgoiICAgICBwbHVnaW5zIGFmaW4gZCfDqXZpdGVyIGQnw6l2ZW50dWVscyBwcm9ibMOobWVzIGNhdXPDqXMgcGFyIGwnaW5zdGFiaWxpdMOpIGR1IHN5c3TDqG1lLiBMaXJlIGxhIHN1aXRlIMOgXG4iCiIgICAgIGNlIHByb3BvcyBkYW5zIDxhIGhyZWY9XCJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3BpLWlzc3Vlc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5sYSBGQVE8L2E+LlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjMyCm1zZ2lkICIiCiJcbiIKIiAgICBJdCBsb29rcyBsaWtlIE9jdG9QcmludCBoYXMgY3VycmVudGx5IG5vIGNvbm5lY3Rpb24gdG8gdGhlIGludGVybmV0LiBEdWUgdG8gdGhhdCBpdCdzIG5vdCBwb3NzaWJsZVxuIgoiICAgIHRvIGluc3RhbGwgbmV3IHBsdWdpbnMgZnJvbSB0aGUgcGx1Z2luIHJlcG9zaXRvcnkgb3IgYXJjaGl2ZSBVUkxzLlxuIgptc2dzdHIgIiIKIlxuIgoiSWwgc2VtYmxlcmFpdCBxdWUgT2N0b1ByaW50IG4nYSBhY3R1ZWxsZW1lbnQgYXVjdW5lIGNvbm5leGlvbiDDoCBpbnRlcm5ldC4gSWwgZXN0IGRvbmMgaW1wb3NzaWJsZSBkJ2luc3RhbGxlciBsYSBub3V2ZWxsZSBleHRlbnNpb24gZGVwdWlzIGxlIHLDqXBlcnRvaXJlIGRlcyBleHRlbnNpb25zIG91IMOgIHBhcnRpciBkZXMgVVJMLlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM5Cm1zZ2lkICIiCiJcbiIKIiAgICBUaGVyZSBhcHBlYXJzIHRvIGhhdmUgYmVlbiBhbiBlcnJvciByZXRyaWV2aW5nIHRoZSBwbHVnaW4gZGF0YSBmcm9tIHRoZSBiYWNrZW5kLiBQbGVhc2UgcmVwb3J0IHRoaXNcbiIKIiAgICBpbiB0aGUgYnVnIHRyYWNrZXIgJiBiZSBzdXJlIHRvIGluY2x1ZGUgYWxsIHJlcXVlc3RlZCBpbmZvcm1hdGlvbi5cbiIKbXNnc3RyICIiCiJcbiIKIklsIHNlbWJsZSB5IGF2b2lyIGV1IHVuZSBlcnJldXIgbG9ycyBkZSBsYSByw6ljdXDDqXJhdGlvbiBkZXMgZG9ubsOpZXMgZHUgcGx1Z2luIGRlcHVpcyBsJ2FycmnDqHJlLXBsYW4uIFZldWlsbGV6IGxlIHNpZ25hbGVyXG4iCiIgICAgIGRhbnMgbGUgc3VpdmkgZGVzIGJvZ3VlcyBldCBhc3N1cmV6LXZvdXMgZCdpbmNsdXJlIHRvdXRlcyBsZXMgaW5mb3JtYXRpb25zIGRlbWFuZMOpZXMuXG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NDcgc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6ODE3Cm1zZ2lkICJQbHVnaW5zIgptc2dzdHIgIkV4dGVuc2lvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NTAgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjE2MAptc2dpZCAiQ2xlYW51cCIKbXNnc3RyICJOZXR0b3llciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjo2NAptc2dpZCAiR2V0IE1vcmUiCm1zZ3N0ciAiT2J0ZW5pciBwbHVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjY1Cm1zZ2lkICJFeHBvcnQiCm1zZ3N0ciAiRXhwb3J0ZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NjYgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM1MyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo5MCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoxNTcKbXNnaWQgIlBsdWdpbiBDb25maWd1cmF0aW9uIgptc2dzdHIgIkNvbmZpZ3VyYXRpb24gZHUgR2VzdGlvbm5haXJlIGQnZXh0ZW5zaW9ucyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjo2Nwptc2dpZCAiSW5mbyIKbXNnc3RyICJJbmZvIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjk3Cm1zZ2lkICJSZXNob3cgY3VycmVudCBub3RpY2VzIgptc2dzdHIgIlLDqWFmZmljaGVyIGxlcyBhbm5vbmNlcyBhY3R1ZWxsZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6OTgKbXNnaWQgIlJlZnJlc2ggbm90aWNlcyBmcm9tIHJlcG9zaXRvcnkiCm1zZ3N0ciAiUmFmcmHDrmNoaXIgbGVzIGFubm9uY2VzIGRlcHVpcyBsZSBkw6lww7R0IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjEwNAptc2dpZCAiSW5zdGFsbGVkIFBsdWdpbnMiCm1zZ3N0ciAiRXh0ZW5zaW9ucyBpbnN0YWxsw6llcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMDcgc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIyMiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjozCm1zZ2lkICJTZWFyY2guLi4iCm1zZ3N0ciAiUmVjaGVyY2hlci4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMTEKbXNnaWQgIlNob3cgYm90aCBidW5kbGVkIGFuZCB0aGlyZC1wYXJ0eSBwbHVnaW5zIgptc2dzdHIgIkFmZmljaGVyIGxlcyBleHRlbnNpb25zIGZvdXJuaWVzIGV0IHRpZXJjZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTEyCm1zZ2lkICJTaG93IG9ubHkgYnVuZGxlZCBwbHVnaW5zIgptc2dzdHIgIkFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGV4dGVuc2lvbnMgZm91cm5pZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTEyCm1zZ2lkICJCdW5kbGVkIgptc2dzdHIgIkdyb3Vww6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTEzCm1zZ2lkICJTaG93IG9ubHkgdGhpcmQtcGFydHkgcGx1Z2lucyIKbXNnc3RyICJBZmZpY2hlciB1bmlxdWVtZW50IGxlcyBleHRlbnNpb25zIHRpZXJjZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTEzCm1zZ2lkICIzcmQgcGFydHkiCm1zZ3N0ciAiM8OobWUgcGFydGllIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjExNgptc2dpZCAiU2hvdyBib3RoIGVuYWJsZWQgYW5kIGRpc2FibGVkIHBsdWdpbnMiCm1zZ3N0ciAiQWZmaWNoZXIgbGVzIGV4dGVuc2lvbnMgYWN0aXbDqWVzIGV0IGTDqXNhY3RpdsOpZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTE3Cm1zZ2lkICJTaG93IG9ubHkgZW5hYmxlZCBwbHVnaW5zIgptc2dzdHIgIkFmZmljaGVyIHVuaXF1ZW1lbnQgbGVzIGV4dGVuc2lvbnMgYWN0aXbDqWVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjExOAptc2dpZCAiU2hvdyBvbmx5IGRpc2FibGVkIHBsdWdpbnMiCm1zZ3N0ciAiQWZmaWNoZXIgdW5pcXVlbWVudCBsZXMgZXh0ZW5zaW9ucyBkw6lzYWN0aXbDqWVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjEzNAptc2dpZCAiQnVuZGxlZCB3aXRoIE9jdG9QcmludCIKbXNnc3RyICJMaXZyw6kgYXZlYyBPY3RvUHJpbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTM0Cm1zZ2lkICJDYW5ub3QgYmUgdW5pbnN0YWxsZWQgdGhyb3VnaCBPY3RvUHJpbnQiCm1zZ3N0ciAiSW1wb3NzaWJsZSDDoCBkw6lzaW5zdGFsbGVyIGRlcHVpcyBPY3RvUHJpbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTM0IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNTkKbXNnaWQgIkluY29tcGF0aWJsZSB0byBPY3RvUHJpbnQgb3IgdGhlIHVuZGVybHlpbmcgUHl0aG9uIGVudmlyb25tZW50Igptc2dzdHIgIkluY29tcGF0aWJsZSBhdmVjIE9jdG9QcmludCBvdSBsJ2Vudmlyb25uZW1lbnQgUHl0aG9uIHNvdXMtamFjZW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjEzNAptc2dpZCAiUmVzdGFydCBvZiBPY3RvUHJpbnQgbmVlZGVkIGZvciBjaGFuZ2VzIHRvIHRha2UgZWZmZWN0Igptc2dzdHIgIlJlZMOpbWFycmFnZSBkZSBPY3RvUHJpbnQgbsOpY2Vzc2FpcmUgcG91ciBsYSBwcmlzZSBlbiBjb21wdGUgZHUgY2hhbmdlbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMzQKbXNnaWQgIlBlbmRpbmcgaW5zdGFsbCIKbXNnc3RyICJJbnN0YWxsYXRpb24gZW4gYXR0ZW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMzQKbXNnaWQgIlBlbmRpbmcgdW5pbnN0YWxsIgptc2dzdHIgIkTDqXNpbnN0YWxsYXRpb24gZW4gYXR0ZW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxMzQKbXNnaWQgIkRpc2FibGVkIGR1ZSB0byBzYWZlIG1vZGUiCm1zZ3N0ciAiRMOpc2FjdGl2w6kgZW4gcmFpc29uIGR1IG1vZGUgc2FucyDDqWNoZWMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTM0Cm1zZ2lkICJUaGVyZSBhcmUgbm90aWNlcyBhdmFpbGFibGUgcmVnYXJkaW5nIHRoaXMgcGx1Z2luIgptc2dzdHIgIklsIHkgYSBkZXMgYW5ub25jZXMgZGlzcG9uaWJsZXMgYXUgc3VqZXQgZGUgY2V0dGUgZXh0ZW5zaW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjEzNAptc2dpZCAiVGhpcyBwbHVnaW4gaXMgYmxhY2tsaXN0ZWQiCm1zZ3N0ciAiQ2V0dGUgZXh0ZW5zaW9uIGVzdCBzdXIgbGEgTGlzdGUgTm9pcmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTM2IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNjQKbXNnaWQgIkhvbWVwYWdlIgptc2dzdHIgIlBhZ2UgZCdhY2N1ZWlsIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjE0OCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTc3Cm1zZ2lkICJDbGVhbnVwIFBsdWdpbiBEYXRhIgptc2dzdHIgIk5ldHRveWVyIGxlcyBkb25uw6llcyBkZSBsJ2V4dGVuc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxNDgKbXNnaWQgIlVuaW5zdGFsbCBQbHVnaW4iCm1zZ3N0ciAiRMOpc2luc3RhbGxlciB1bmUgZXh0ZW5zaW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjE1Nwptc2dpZCAiUmVmcmVzaCIKbXNnc3RyICJSYWZyYcOuY2hpciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxNjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JHZW5lcmFsLmppbmphMjoxMAptc2dpZCAiSWRlbnRpZmllciIKbXNnc3RyICJJZGVudGlmaWFudCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoxODQKbXNnaWQgIkNsZWFudXAgYWxsIgptc2dzdHIgIlRvdXQgbmV0dG95ZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MTg3Cm1zZ2lkICJOb3RoaW5nIHRvIGNsZWFudXAhIFRoZXJlIGFyZSBubyBzZXR0aW5ncyBvciBkYXRhIGxlZnQgb3ZlciBmcm9tIHBsdWdpbnMgd2hpY2ggYXJlIG5vIGxvbmdlciBpbnN0YWxsZWQuIgptc2dzdHIgIlJpZW4gw6AgbmV0dG95ZXIhIElsIG4neSBhIHBsdXMgZGUgcGFyYW3DqHRyZXMgb3UgZGUgZG9ubsOpZXMgZGVzIGV4dGVuc2lvbnMgZMOpc2luc3RhbGzDqWVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyMDcKbXNnaWQgIkluc3RhbGwgbmV3IFBsdWdpbnMuLi4iCm1zZ3N0ciAiSW5zdGFsbGVyIGRlIG5vdXZlbGxlcyBleHRlbnNpb25zLi4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIxNwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICIuLi4gZnJvbSB0aGUgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5QbHVnaW4gUmVwb3NpdG9yeTwvYT4iCm1zZ3N0ciAiLi4uIGRlcHVpcyBsZSA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiPmTDqXDDtHQgZGVzIGV4dGVuc2lvbnM8L2E+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIzMAptc2dpZCAiU29ydCBieSB0aXRsZSIKbXNnc3RyICJUcmllciBwYXIgdGl0cmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjMxCm1zZ2lkICJTb3J0IGJ5IHB1YmxpY2F0aW9uIGRhdGUiCm1zZ3N0ciAiVHJpZXIgcGFyIGRhdGUgZGUgcHVibGljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjMyCm1zZ2lkICJTb3J0IGJ5IGxhc3QgcmVsZWFzZSBkYXRlIgptc2dzdHIgIlRyaWVyIHBhciBkYXRlIGRlIGRlcm5pw6hyZSBwdWJsaWNhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyMzMKbXNnaWQgIlNvcnQgYnkgbGFzdCBwdXNoIGRhdGUiCm1zZ3N0ciAiVHJpZXIgcGFyIGRhdGUgZGUgZGVybmnDqHJlIGRpZmZ1c2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyMzQKbXNnaWQgIlNvcnQgYnkgYWN0aXZlIGluc3RhbmNlIGNvdW50Igptc2dzdHIgIlRyaWVyIHBhciBub21icmUgZCdpbnN0YW5jZXMgYWN0aXZlcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyMzUKbXNnaWQgIlNvcnQgYnkgR2l0aHViIHN0YXJzIgptc2dzdHIgIlRyaWVyIHBhciDDqXRvaWxlcyBHaXRodWIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjM3Cm1zZ2lkICJPbmx5IHNob3cgdW5pbnN0YWxsZWQgcGx1Z2lucyIKbXNnc3RyICJOZSBtb250cmVyIHF1ZSBsZXMgZXh0ZW5zaW9ucyBub24gaW5zdGFsbMOpZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjM4Cm1zZ2lkICJPbmx5IHNob3cgY29tcGF0aWJsZSBwbHVnaW5zIgptc2dzdHIgIk5lIG1vbnRyZXIgcXVlIGxlcyBleHRlbnNpb25zIGNvbXBhdGlibGVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjIzOQptc2dpZCAiT25seSBzaG93IHVuYWJhbmRvbmVkIHBsdWdpbnMiCm1zZ3N0ciAiQWZmaWNoZXIgdW5pcXVlbWVudCBsZXMgZXh0ZW5zaW9ucyBub24gYWJhbmRvbm7DqXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjQxCm1zZ2lkICJSZWZyZXNoIGxpc3QgZnJvbSByZXBvc2l0b3J5Igptc2dzdHIgIlJhZnJhw65jaGlyIGxhIGxpc3RlIMOgIHBhcnRpciBkdSBkw6lww7R0IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjI1NAptc2dpZCAiXCJXaHk/XCIiCm1zZ3N0ciAiXCJQb3VycXVvaSA/XCIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjU4Cm1zZ2lkICJBYmFuZG9uZWQgYnkgaXRzIG1haW50YWluZXIiCm1zZ3N0ciAiQWJhbmRvbm7DqSBwYXIgc29uIGTDqXRlbnRldXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjY5Cm1zZ2lkICJMaWNlbnNlIgptc2dzdHIgIkxpY2VuY2UiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjcwCm1zZ2lkICJQdWJsaWNhdGlvbiBkYXRlIgptc2dzdHIgIkRhdGUgZGUgcHVibGljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MjcxCm1zZ2lkICJBY3RpdmUgaW5zdGFuY2VzIHBhc3QgbW9udGgiCm1zZ3N0ciAiSW5zdGFuY2VzIGFjdGl2ZXMgbGUgbW9pcyBkZXJuaWVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjI3Mgptc2dpZCAiR2l0aHViIHN0YXJzIgptc2dzdHIgIsOJdG9pbGVzIEdpdGh1YiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyNzMKbXNnaWQgIkxhc3QgcHVzaCB0byBtYWluIGJyYW5jaCIKbXNnc3RyICJEZXJuacOocmUgcG91c3PDqWUgdmVycyBsYSBicmFuY2hlIHByaW5jaXBhbGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mjc0Cm1zZ2lkICJMYXRlc3QgcmVsZWFzZSAmIGRhdGUiCm1zZ3N0ciAiRGVybmnDqHJlIHZlcnNpb24gZXQgZGF0ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyODEKbXNnaWQgInBsdWdpbnMgZGlzcGxheWVkIgptc2dzdHIgImV4dGVuc2lvbnMgYWZmaWNow6lzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjI4Ngptc2dpZCAiU2FkbHkgdGhlIHJlcG9zaXRvcnkgaXMgY3VycmVudGx5IG5vdCBhdmFpbGFibGUiCm1zZ3N0ciAiT3VwcywgbGUgZMOpcMO0dCBuJ2VzdCBwYXMgZGlzcG9uaWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjoyODkKbXNnaWQgIklzIHlvdXIgT2N0b1ByaW50IGluc3RhbGxhdGlvbiBjb25uZWN0ZWQgdG8gdGhlIGludGVybmV0PyIKbXNnc3RyICJPY3RvUHJpbnQgZXN0LWlsIGNvbm5lY3TDqSDDoCBpbnRlcm5ldCA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjI5Ngptc2dpZCAiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgbm8gcGx1Z2lucyB0aGF0IG1hdGNoIHlvdXIgc2VhcmNoIGNyaXRlcmlhIgptc2dzdHIgIklsIHNlbWJsZSBxdSdpbCBuJ3kgYWl0IGF1Y3VuZXMgZXh0ZW5zaW9ucyBxdWkgY29ycmVzcG9uZGUgw6Agdm9zIGNyaXTDqHJlcyBkZSByZWNoZXJjaGUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzAxCm1zZ2lkICIuLi4gZnJvbSBVUkwiCm1zZ3N0ciAiLi4uIGRlcHVpcyBsJ1VSTCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjozMDYKbXNnaWQgIkVudGVyIFVSTC4uLiIKbXNnc3RyICJFbnRyZXogdW5lIFVSTC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjozMTAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVGhpcyBkb2VzIG5vdCBsb29rIGxpa2UgYSB2YWxpZCBVUkwuIEV4cGVjdGVkIGh0dHAsIGh0dHBzIG9yIGFueSBvZiB0aGUgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5zdXBwb3J0ZWQgVkNTIFVSTHM8L2E+LiIKbXNnc3RyICJDZWxhIG5lIHJlc3NlbWJsZSBwYXMgw6AgdW5lIFVSTCB2YWxpZGUuIFVuZSBVUkwgY29tbWVuw6dhbnQgcGFyIGh0dHAsIGh0dHBzIG91ICA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiPmxlIGZvcm1hdCBWQ1Mgc3VwcG9ydMOpPC9hPiBlc3QgYXR0ZW5kdS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzEzCm1zZ2lkICIuLi4gZnJvbSBhbiB1cGxvYWRlZCBmaWxlIgptc2dzdHIgIi4uLiDDoCBwYXJ0aXIgZCd1biBmaWNoaWVyIHTDqWzDqWNoYXJnw6kiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzI2Cm1zZ2lkICJUaGlzIGRvZXMgbm90IGxvb2sgbGlrZSBhIHZhbGlkIHBsdWdpbi4gVmFsaWQgcGx1Z2lucyBzaG91bGQgYmUgZWl0aGVyIHppcCBmaWxlcyBvciB0YXJiYWxscyBpbnN0YWxsYWJsZSB2aWEgPGNvZGU+cGlwPC9jb2RlPiB0aGF0IGhhdmUgdGhlIGV4dGVuc2lvbiBcIi56aXBcIiwgXCIudGFyLmd6XCIsIFwiLnRnelwiIG9yIFwiLnRhclwiLCBvciBzaW5nbGUgZmlsZSBweXRob24gcGx1Z2lucyB3aXRoIHRoZSBleHRlbnNpb24gXCIucHlcIiIKbXNnc3RyICJDZWxhIG5lIHJlc3NlbWJsZSBwYXMgw6AgdW5lIGV4dGVuc2lvbiB2YWxpZGUuIExlcyBleHRlbnNpb25zIHZhbGlkZXMgZG9pdmVudCDDqnRyZSBkZXMgZmljaGllcnMgemlwIG91IGRlcyBhcmNoaXZlcyBpbnN0YWxsYWJsZXMgdmlhIDxjb2RlPnBpcDwvY29kZT4gcXVpIG9udCBsJ2V4dGVuc2lvbiBcIi56aXBcIiwgXCIudGFyLmd6XCIsIFwiLnRnelwiIG91IFwiLnRhclwiLCBvdSBkZXMgYXJjaGl2ZXMgcHl0aG9uIMOgIGZpY2hpZXIgdW5pcXVlIGF2ZWMgbCdleHRlbnNpb24gXCIucHlcIiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjozMzYKbXNnaWQgIlVzZSA8Y29kZT4tLXByb2Nlc3MtZGVwZW5kZW5jeS1saW5rczwvY29kZT4gd2l0aCA8Y29kZT5waXAgaW5zdGFsbDwvY29kZT4iCm1zZ3N0ciAiVXRpbGlzZXogPGNvZGU+LS1wcm9jZXNzLWRlcGVuZGVuY3ktbGlua3M8L2NvZGU+IGF2ZWMgPGNvZGU+cGlwIGluc3RhbGw8L2NvZGU+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM1OAptc2dpZCAiQ29uZmlybWF0aW9ucyIKbXNnc3RyICJDb25maXJtYXRpb25zIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM2MCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzYzCm1zZ2lkICJDb25maXJtIGJlZm9yZSBkaXNhYmxpbmcgYSBwbHVnaW4iCm1zZ3N0ciAiQ29uZmlybWV6IGF2YW50IGRlIGTDqXNhY3RpdmVyIGzigJlleHRlbnNpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzY5Cm1zZ2lkICJZb3Ugc2hvdWxkIG5vcm1hbGx5IDxzdHJvbmc+bm90PC9zdHJvbmc+IGhhdmUgdG8gY2hhbmdlIDxzdHJvbmc+YW55PC9zdHJvbmc+IG9mIHRoZSBmb2xsb3dpbmcgc2V0dGluZ3MsIHRoZXkgYXJlIHB1cmVseSBwcm92aWRlZCBmb3IgY29udmVuaWVuY2UgaGVyZS4iCm1zZ3N0ciAiVm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IDxzdHJvbmc+cGFzIGF2b2lyIMOgIG1vZGlmaWVyIGwndW4gZGVzIHBhcmFtw6h0cmVzIHN1aXZhbnRzPC9zdHJvbmc+LCBpbHMgc29udCBwdXJlbWVudCBmb3VybmlzIHBvdXIgcGx1cyBkZSBjb21tb2RpdMOpIGljaS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzcyCm1zZ2lkICJQbHVnaW4gcmVwb3NpdG9yeSBjb25maWd1cmF0aW9uIgptc2dzdHIgIkNvbmZpZ3VyYXRpb24gZHUgZMOpcMO0dCBkJ2V4dGVuc2lvbnMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mzc0Cm1zZ2lkICJVUkwgb2YgdGhlIFBsdWdpbiBSZXBvc2l0b3J5IHRvIHVzZS4gWW91IHNob3VsZCBub3JtYWxseSBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4iCm1zZ3N0ciAiVVJMIGR1IGTDqXDDtHQgZCdleHRlbnNpb25zIMOgIHV0aWxpc2VyLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGxlIGNoYW5nZXIuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM3NQptc2dpZCAiUmVwb3NpdG9yeSBVUkwiCm1zZ3N0ciAiVVJMIGR1IGTDqXDDtHQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzgwCm1zZ2lkICJIb3cgbG9uZyB0byBjYWNoZSByZXBvc2l0b3J5IGRhdGEsIGluIG1pbnV0ZXMuIFlvdSBzaG91bGQgbm9ybWFsbHkgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuIgptc2dzdHIgIkR1csOpZSBkZSBtaXNlIGVuIGNhY2hlIGRlcyBkb25uw6llcyBkdSBkw6lww7R0LCBlbiBtaW51dGVzLiBWb3VzIG5lIGRldnJpZXogcGFzIGF2b2lyIMOgIGxlIGNoYW5nZXIuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjM4MQptc2dpZCAiUmVwb3NpdG9yeSBjYWNoZSBUVEwiCm1zZ3N0ciAiQ2FjaGUgZHUgZMOpcMO0dCBUVEwiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6MzkyCm1zZ2lkICJOb3RpY2VzIGNvbmZpZ3VyYXRpb24iCm1zZ3N0ciAiQ29uZmlndXJhdGlvbiBkZXMgYW5ub25jZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mzk0Cm1zZ2lkICJVUkwgb2YgdGhlIE5vdGljZXMgc291cmNlIHRvIHVzZS4gWW91IHNob3VsZCBub3JtYWxseSBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4iCm1zZ3N0ciAiVVJMIGRlIGxhIHNvdXJjZSDDoCBlbXBsb3llciBwb3VyIGxlcyBhbm5vbmNlcy4gVm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IHBhcyBhdm9pciDDoCBtb2RpZmllciBjZWxsZS1jaS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6Mzk1Cm1zZ2lkICJOb3RpY2VzIFVSTCIKbXNnc3RyICJVUkwgZGVzIGFubm9uY2VzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjQwMAptc2dpZCAiSG93IGxvbmcgdG8gY2FjaGUgbm90aWNlcywgaW4gbWludXRlcy4gWW91IHNob3VsZCBub3JtYWxseSBub3QgaGF2ZSB0byBjaGFuZ2UgdGhpcy4iCm1zZ3N0ciAiRHVyw6llIGR1cmFudCBsYXF1ZWxsZSBjb25zZXJ2ZXIgbGVzIGFubm9uY2VzIGVuIGNhY2hlLCBlbiBtaW51dGVzLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIG1vZGlmaWVyIGNlbGxlLWNpLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9wbHVnaW5tYW5hZ2VyL3RlbXBsYXRlcy9wbHVnaW5tYW5hZ2VyX3NldHRpbmdzLmppbmphMjo0MDEKbXNnaWQgIk5vdGljZXMgY2FjaGUgVFRMIgptc2dzdHIgIkR1csOpZSBkZSB2aWUgZHUgY2FjaGUgZGVzIGFubm9uY2VzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjQxMgptc2dpZCAicGlwIGNvbmZpZ3VyYXRpb24iCm1zZ3N0ciAiY29uZmlndXJhdGlvbiBkZSBwaXAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NDE0Cm1zZ2lkICJBZGRpdGlvbmFsIGFyZ3VtZW50cyBmb3IgdGhlIHBpcCBjb21tYW5kLiBZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLiIKbXNnc3RyICJBcmd1bWVudHMgc3VwcGzDqW1lbnRhaXJlcyBwb3VyIGxhIGNvbW1hbmRlIHBpcC4gTm9ybWFsZW1lbnQsIHZvdXMgbmUgZGV2ZXogcGFzIGNoYW5nZXIgY2VsYS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NDE1Cm1zZ2lkICJBZGRpdGlvbmFsIGFyZ3VtZW50cyIKbXNnc3RyICJBcmd1bWVudHMgYWRkaXRpb25uZWxzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3BsdWdpbm1hbmFnZXIvdGVtcGxhdGVzL3BsdWdpbm1hbmFnZXJfc2V0dGluZ3MuamluamEyOjQyMwptc2dpZCAiRm9yY2UgdGhlIHVzZSBvZiB0aGUgPGNvZGU+LS11c2VyPC9jb2RlPiBmbGFnIHdpdGggPGNvZGU+cGlwIGluc3RhbGw8L2NvZGU+Igptc2dzdHIgIkZvcmNlciBsJ3V0aWxpc2F0aW9uIGR1IG1hcnF1ZXVyIGRlIDxjb2RlPi0tdXNlcjwvY29kZT4gYXZlYyA8Y29kZT5waXAgaW5zdGFsbDwvY29kZT4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NDMyIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE5NiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo4MDEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6MTggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6NDYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6Njkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zbGljaW5nLmppbmphMjo1NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3RlbXBlcmF0dXJlLmppbmphMjozMSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjozMQptc2dpZCAiQ2FuY2VsIgptc2dzdHIgIkFubnVsZXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvcGx1Z2lubWFuYWdlci90ZW1wbGF0ZXMvcGx1Z2lubWFuYWdlcl9zZXR0aW5ncy5qaW5qYTI6NDMzIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE5NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo1NCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3RlbXBlcmF0dXJlLmppbmphMjozMgptc2dpZCAiU2F2ZSIKbXNnc3RyICJFbnJlZ2lzdHJlciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9fX2luaXRfXy5weToxNDgKbXNnaWQgIkFsbG93cyB0byBjaGVjayBmb3Igc29mdHdhcmUgdXBkYXRlcyIKbXNnc3RyICJQZXJtZXQgZGUgdsOpcmlmaWVyIGxlcyBtaXNlcyDDoCBqb3VyIGxvZ2ljaWVsbGVzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjE1NQptc2dpZCAiQWxsb3dzIHRvIHBlcmZvcm0gc29mdHdhcmUgdXBkYXRlcyIKbXNnc3RyICJQZXJtZXQgZCdlZmZlY3R1ZXIgZGVzIG1pc2VzIMOgIGpvdXIgbG9naWNpZWxsZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvX19pbml0X18ucHk6MTYzCm1zZ2lkICJBbGxvd3MgdG8gY29uZmlndXJlIHNvZnR3YXJlIHVwZGF0ZSIKbXNnc3RyICJQZXJtZXQgZGUgY29uZmlndXJlciBsYSBtaXNlIMOgIGpvdXIgZHUgbG9naWNpZWwiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvX19pbml0X18ucHk6MTE3Mgptc2dpZCAiUHl0aG9uIHBhY2thZ2UgaW5zdGFsbGF0aW9uIGZvbGRlciIKbXNnc3RyICJEb3NzaWVyIGQnaW5zdGFsbGF0aW9uIGR1IHBhY2thZ2UgUHl0aG9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjExNzMKbXNnaWQgIlBsdWdpbiBmb2xkZXIiCm1zZ3N0ciAiRG9zc2llciBkZSBsJ2V4dGVuc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9fX2luaXRfXy5weToxMTc0Cm1zZ2lkICJTeXN0ZW0gdGVtcG9yYXJ5IGZpbGVzIgptc2dzdHIgIkZpY2hpZXJzIHRlbXBvcmFpcmVzIGR1IHN5c3TDqG1lIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjEyMDYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZm9vdGVyLmppbmphMjo0Cm1zZ2lkICJQeXRob24iCm1zZ3N0ciAiUHl0aG9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjEyMTMgc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjIyOTIKbXNnaWQgInBpcCIKbXNnc3RyICJwaXAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvX19pbml0X18ucHk6MTIyMAptc2dpZCAic2V0dXB0b29scyIKbXNnc3RyICJvdXRpbHMgZGUgY29uZmlndXJhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9fX2luaXRfXy5weToxNDUxIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9fX2luaXRfXy5weToxNDY4IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfd2l6YXJkX3NldHRpbmdzLmppbmphMjoxCm1zZ2lkICJTb2Z0d2FyZSBVcGRhdGUiCm1zZ3N0ciAiTWlzZSDDoCBqb3VyIGR1IGxvZ2ljaWVsIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjE0NTggc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV93aXphcmRfdXBkYXRlLmppbmphMjoxCm1zZ2lkICJVcGRhdGU/Igptc2dzdHIgIk1pc2Ugw6Agam91ciA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL19faW5pdF9fLnB5OjIyMzAgc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6MTA0OCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hcHBlYXJhbmNlLmpzOjEwNiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hcHBlYXJhbmNlLmpzOjExMCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hcHBlYXJhbmNlLmpzOjExMSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hcHBlYXJhbmNlLmpzOjExNSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hcHBlYXJhbmNlLmpzOjExNiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2Fib3V0L2Fib3V0LmppbmphMjoxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2Zvb3Rlci5qaW5qYTI6Mwptc2dpZCAiT2N0b1ByaW50Igptc2dzdHIgIk9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9fX2luaXRfXy5weToyNDU0Cm1zZ2lkICJXaXRob3V0IHRoaXMgcGx1Z2luIE9jdG9QcmludCB3aWxsIG5vIGxvbmdlciBiZSBhYmxlIHRvIHVwZGF0ZSBpdHNlbGYgb3IgYW55IG9mIHlvdXIgaW5zdGFsbGVkIHBsdWdpbnMgd2hpY2ggbWlnaHQgcHV0IHlvdXIgc3lzdGVtIGF0IHJpc2suIgptc2dzdHIgIlNhbnMgY2V0dGUgZXh0ZW5zaW9uLCBPY3RvcHJpbnQgbmUgc2VyYSBwbHVzIGVuIG1lc3VyZSBkZSBzZSBtZXR0cmUgw6Agam91ciBhdXRvbWF0aXF1ZW1lbnQgbmkgZGUgbWV0dHJlIMOgIGpvdXIgbCdleHRlbnNpb24gcXVpIHBvdXJyYWllbnQgcmVwcsOpc2VudGVyIHVuIHJpc3F1ZSBwb3VyIHZvdHJlIHN5c3TDqG1lLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6MjUwCm1zZ2lkICJSZWxlYXNlIgptc2dzdHIgIkV4dGVybmUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjI1MQptc2dpZCAiR2l0aHViIENvbW1pdCIKbXNnc3RyICJHaXRodWIgQ29tbWl0IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoyNTIKbXNnaWQgIkxvY2FsIGNoZWNrb3V0Igptc2dzdHIgIkNvcGllIGxvY2FsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6MzMxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUobmFtZSlzOiAlKHZlcnNpb24pcyIKbXNnc3RyICIlKG5hbWUpcyA6ICUodmVyc2lvbilzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczozMzkKbXNnaWQgInVua25vd24iCm1zZ3N0ciAiaW5jb25udSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6Mzk3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6Njk3IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NzEzIHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6OTgzCm1zZ2lkICJVcGRhdGluZy4uLiIKbXNnc3RyICJNaXNlIMOgIGpvdXIuLi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjM5OCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjcxNCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjk4NAptc2dpZCAiVXBkYXRpbmcsIHBsZWFzZSB3YWl0LiIKbXNnc3RyICJNaXNlIMOgIGpvdXIsIG1lcmNpIGRlIHBhdGllbnRlci4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjQxNAptc2dpZCAiVGhlcmUgYXJlIHVwZGF0ZXMgYXZhaWxhYmxlIGZvciB0aGUgZm9sbG93aW5nIGNvbXBvbmVudHM6Igptc2dzdHIgIkRlcyBtaXNlcyDDoCBqb3VyIHNvbnQgZGlzcG9uaWJsZXMgcG91ciBsZXMgY29tcG9zYW50cyBzdWl2YW50cyA6IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo0NDEgc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo4MTAgc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTQyCm1zZ2lkICJSZWxlYXNlIE5vdGVzIgptc2dzdHIgIk5vdGVzIGRlIHZlcnNpb24iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjQ1Mgptc2dpZCAiVGhpcyB2ZXJzaW9uIG9mIHRoZSBQeXRob24gZW52aXJvbm1lbnQgaXMgbm90IHN1cHBvcnRlZCBmb3IgZGlyZWN0IHVwZGF0ZXMuIgptc2dzdHIgIkNldHRlIHZlcnNpb24gZGUgbCdlbnZpcm9ubmVtZW50IFB5dGhvbiBuJ2VzdCBwYXMgcHJpc2UgZW4gY2hhcmdlIHBvdXIgbGVzIG1pc2VzIMOgIGpvdXIgZGlyZWN0ZXMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo0NTkKbXNnaWQgIlRoZXJlJ3MgY3VycmVudGx5IG5vdCBlbm91Z2ggZnJlZSBkaXNrIHNwYWNlIGF2YWlsYWJsZSBmb3IgYSBkaXJlY3QgdXBkYXRlLiIKbXNnc3RyICJJbCBuJ3kgYSBhY3R1ZWxsZW1lbnQgcGFzIGFzc2V6IGQnZXNwYWNlIGRpc3F1ZSBkaXNwb25pYmxlIHBvdXIgdW5lIG1pc2Ugw6Agam91ciBkaXJlY3RlLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NDY2Cm1zZ2lkICJUaG9zZSBjb21wb25lbnRzIG1hcmtlZCB3aXRoIDxpIGNsYXNzPVwiZmEgZmEtY2hlY2tcIj48L2k+IGNhbiBiZSB1cGRhdGVkIGRpcmVjdGx5LiIKbXNnc3RyICJDZXMgY29tcG9zYW50cyBzw6lsZWN0aW9ubsOpcyBhdmVjIDxpIGNsYXNzPVwiZmEgZmEtY2hlY2tcIj48L2k+IHBldXZlbnQgw6p0cmUgbWlzZSDDoCBqb3VyIGRpcmVjdGVtZW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NDc5Cm1zZ2lkICJUbyBoYXZlIHVwZGF0ZXMgYXBwbGllZCwgZ2V0IGluIHRvdWNoIHdpdGggYW4gYWRtaW5pc3RyYXRvciBvZiB0aGlzIE9jdG9QcmludCBpbnN0YW5jZS4iCm1zZ3N0ciAiUG91ciBhcHBsaXF1ZXIgbGVzIG1pc2VzIMOgIGpvdXIsIHByZW5leiBjb250YWN0IGF2ZWMgbOKAmWFkbWluaXN0cmF0ZXVyIGRlIGNldHRlIGluc3RhbmNlIGRlIE9jdG9wcmludC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjQ4OAptc2dpZCAiVXBkYXRlIEF2YWlsYWJsZSIKbXNnc3RyICJNaXNlIMOgIGpvdXIgZGlzcG9uaWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NTEwCm1zZ2lkICJZb3UgY2FuIG1ha2UgdGhpcyBtZXNzYWdlIGRpc3BsYXkgYWdhaW4gdmlhIFwiU2V0dGluZ3NcIiA+IFwiU29mdHdhcmUgVXBkYXRlXCIgPiBcIkNoZWNrIGZvciB1cGRhdGUgbm93XCIiCm1zZ3N0ciAiVm91cyBwb3V2ZXogZmFpcmUgYXBwYXJhw650cmUgY2UgbWVzc2FnZSDDoCBub3V2ZWF1IGRhbnMgUGFyYW3DqHRyZVwiID4gTWlzZSDDoCBqb3VyIGxvZ2ljaWVsID4gVsOpcmlmaWVyIGRlcyBtaXNlcyDDoCBqb3VyIG1haW50ZW5hbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjUxNwptc2dpZCAiVXBkYXRlIG5vdyIKbXNnc3RyICJNZXR0cmUgw6Agam91ciBtYWludGVuYW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo1NjEKbXNnaWQgIkV2ZXJ5dGhpbmcgaXMgdXAtdG8tZGF0ZSIKbXNnc3RyICJUb3V0IGVzdCDDoCBqb3VyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo2MDAKbXNnaWQgIk5vIGludGVybmV0IGNvbm5lY3Rpb24iCm1zZ3N0ciAiUGFzIGRlIGNvbm5leGlvbiBpbnRlcm5ldCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NjA0Cm1zZ2lkICJVcGRhdGUgbm90IHBvc3NpYmxlIgptc2dzdHIgIk1pc2Ugw6Agam91ciBpbXBvc3NpYmxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo2MTUKbXNnaWQgIlVua25vd24gdXBkYXRlIGNoZWNrLCBjb25maWd1cmF0aW9uIG9rPyIKbXNnc3RyICJWw6lyaWZpY2F0aW9uIGRlIG1pc2Ugw6Agam91ciBpbmNvbm51ZSwgbGEgY29uZmlndXJhdGlvbiBlc3QgY29ycmVjdGUgPyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NjE4Cm1zZ2lkICJDYW5ub3QgY2hlY2sgZm9yIHVwZGF0ZSwgbmVlZCBvbmxpbmUgY29ubmVjdGlvbiIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIHbDqXJpZmllciBsYSBtaXNlIMOgIGpvdXIsIGNvbm5leGlvbiBlbiBsaWduZSBuw6ljZXNzYWlyZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NjIxCm1zZ2lkICJOZXR3b3JrIGVycm9yIHdoaWxlIGNoZWNraW5nIGZvciB1cGRhdGUiCm1zZ3N0ciAiRXJyZXVyIGRlIHLDqXNlYXUgbG9ycyBkZSBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIG1pc2Ugw6Agam91ciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NjI0Cm1zZ2lkICJSYXRlIGxpbWl0IGV4Y2VlZGVkIHdoaWxlIGNoZWNraW5nIGZvciB1cGRhdGUsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIiCm1zZ3N0ciAiTGUgdGF1eCBsaW1pdGUgZXN0IGTDqXBhc3PDqSBsb3JzIGRlIGxhIHbDqXJpZmljYXRpb24gZGUgbGEgbWlzZSDDoCBqb3VyLCB2ZXVpbGxleiByw6llc3NheWVyIHBsdXMgdGFyZCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NjI5Cm1zZ2lkICJDaGVjayBpbnRlcm5hbCBlcnJvciB3aGlsZSBjaGVja2luZyBmb3IgdXBkYXRlIgptc2dzdHIgIlbDqXJpZmllciBsJ2VycmV1ciBpbnRlcm5lIGxvcnMgZGUgbGEgdsOpcmlmaWNhdGlvbiBkZSBsYSBtaXNlIMOgIGpvdXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjYzMgptc2dpZCAiVW5rbm93biBlcnJvciB3aGlsZSBjaGVja2luZyBmb3IgdXBkYXRlLCBwbGVhc2UgY2hlY2sgdGhlIGxvZ3MiCm1zZ3N0ciAiRXJyZXVyIGluY29ubnVlIGxvcnMgZGUgbGEgdmVyaWZpY2F0aW9uIGRlcyBtaXNlcyDDoCBqb3VyLCB2w6lyaWZpZXIgbGVzIGxvZ3MgcydpbCB2b3VzIHBsYWl0IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo2OTgKbXNnaWQgIk5vdyB1cGRhdGluZywgcGxlYXNlIHdhaXQuIgptc2dzdHIgIk1pc2Ugw6Agam91ciBlbiBjb3VycywgdmV1aWxsZXogcGF0aWVudGVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NzIxCm1zZ2lkICJUaGUgdXBkYXRlIGNvdWxkIG5vdCBiZSBzdGFydGVkLiBJcyBpdCBhbHJlYWR5IGFjdGl2ZT8gUGxlYXNlIGNvbnN1bHQgb2N0b3ByaW50LmxvZyBmb3IgZGV0YWlscy4iCm1zZ3N0ciAiTGEgbWlzZSDDoCBqb3VyIG4nYSBwYXMgcHUgw6p0cmUgZMOpbWFycsOpZS4gRXN0LWVsbGUgZMOpasOgIGFjdGlmID8gVmV1aWxsZXogY29uc3VsdGVyIG9jdG9wcmludC5sb2cgcG91ciBwbHVzIGRlIGTDqXRhaWxzLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6NzI5Cm1zZ2lkICJVcGRhdGUgbm90IHN0YXJ0ZWQhIgptc2dzdHIgIkxhIG1pc2Ugw6Agam91ciBuJ2EgcGFzIGTDqW1hcnLDqSAhIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo3NjgKbXNnaWQgIkNhbid0IHVwZGF0ZSB3aGlsZSBwcmludGluZyIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIG1ldHRyZSDDoCBqb3VyIHBlbmRhbnQgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo3NjkKbXNnaWQgIkEgcHJpbnQgam9iIGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzcy4gVXBkYXRpbmcgd2lsbCBiZSBwcmV2ZW50ZWQgdW50aWwgaXQgaXMgZG9uZS4iCm1zZ3N0ciAiVW5lIGltcHJlc3Npb24gZXN0IGVuIGNvdXJzLiBMYSBtaXNlIMOgIGpvdXIgbmUgc2VyYSBwb3NzaWJsZSBxdSfDoCBsYSBmaW4gZGUgY2VsbGUtY2kuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo3ODAKbXNnaWQgIkNhbid0IHVwZGF0ZSB3aGlsZSB0aHJvdHRsZWQiCm1zZ3N0ciAiTWlzZSDDoCBqb3VyIGltcG9zc2libGUgcGVuZGFudCBsZSB0cmF2YWlsIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo3ODEKbXNnaWQgIllvdXIgc3lzdGVtIGlzIGN1cnJlbnRseSB0aHJvdHRsZWQuIE9jdG9QcmludCByZWZ1c2VzIHRvIHJ1biB1cGRhdGVzIHdoaWxlIGluIHRoaXMgc3RhdGUgZHVlIHRvIHBvc3NpYmxlIHN0YWJpbGl0eSBpc3N1ZXMuIgptc2dzdHIgIlZvdHJlIHN5c3TDqG1lIGVzdCBhY3R1ZWxsZW1lbnQgZW4gY291cnMgZGUgdHJhdmFpbC4gT2N0b1ByaW50IHJlZnVzZSBkZSBmYWlyZSBsZXMgbWlzZXMgw6Agam91ciBlbiBjZSBtb21lbnQgYWZpbiBkJ8Opdml0ZXIgZGVzIHByb2Jsw6htZXMgZCdpbnN0YWJpbGl0w6kuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo3OTIKbXNnaWQgIlRoaXMgd2lsbCB1cGRhdGUgdGhlIGZvbGxvd2luZyBjb21wb25lbnRzIGFuZCByZXN0YXJ0IHRoZSBzZXJ2ZXI6Igptc2dzdHIgIkNlY2kgbWV0dHJhIMOgIGpvdXIgbGVzIGNvbXBvc2FudHMgc3VpdmFudHMgZXQgcmVkw6ltYXJyZXJhIGxlIHNlcnZldXIgOiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6ODE4Cm1zZ2lkICJCZSBzdXJlIHRvIHJlYWQgdGhyb3VnaCBhbnkgbGlua2VkIHJlbGVhc2Ugbm90ZXMsIGVzcGVjaWFsbHkgdGhvc2UgZm9yIE9jdG9QcmludCBzaW5jZSB0aGV5IG1pZ2h0IGNvbnRhaW4gaW1wb3J0YW50IGluZm9ybWF0aW9uIHlvdSBuZWVkIHRvIGtub3cgPHN0cm9uZz5iZWZvcmU8L3N0cm9uZz4gdXBncmFkaW5nLiIKbXNnc3RyICJBc3N1cmV6LXZvdXMgZGUgbGlyZSB0b3V0ZXMgbGVzIG5vdGVzIGRlIHB1YmxpY2F0aW9uIGxpw6llcywgZW4gcGFydGljdWxpZXIgY2VsbGVzIHBvdXIgT2N0b1ByaW50IGNhciBlbGxlcyBwZXV2ZW50IGNvbnRlbmlyIGRlcyBpbmZvcm1hdGlvbnMgaW1wb3J0YW50ZXMgcXVlIHZvdXMgZGV2ZXogY29ubmHDrnRyZSA8c3Ryb25nPmF2YW50PC9zdHJvbmc+IGxhIG1pc2Ugw6Agbml2ZWF1LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6ODIzCm1zZ2lkICJUaGlzIGFjdGlvbiBtYXkgZGlzcnVwdCBhbnkgb25nb2luZyBwcmludCBqb2JzLiIKbXNnc3RyICJDZXR0ZSBhY3Rpb24gcGV1dCBwZXJ0dXJiZXIgdG91cyBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZW4gY291cnMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo4MjYKbXNnaWQgIkRlcGVuZGluZyBvbiB5b3VyIHByaW50ZXIncyBjb250cm9sbGVyIGFuZCBnZW5lcmFsIHNldHVwLCByZXN0YXJ0aW5nIE9jdG9QcmludCBtYXkgY2F1c2UgeW91ciBwcmludGVyIHRvIGJlIHJlc2V0LiIKbXNnc3RyICJTZWxvbiBsZSBjb250csO0bGV1ciBkZSB2b3RyZSBpbXByaW1hbnRlIGV0IGxhIGNvbmZpZ3VyYXRpb24gZ8OpbsOpcmFsZSwgbGUgcmVkw6ltYXJyYWdlIGQnT2N0b1ByaW50IHBldXQgZW50cmHDrm5lciBsYSByw6lpbml0aWFsaXNhdGlvbiBkZSB2b3RyZSBpbXByaW1hbnRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6ODMxIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjc5NQptc2dpZCAiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHByb2NlZWQ/Igptc2dzdHIgIsOKdGVzLXZvdXMgc8O7ciBkZSB2b3Vsb2lyIGNvbnRpbnVlciA/IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczo4MzQKbXNnaWQgIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byB1cGRhdGUgbm93PyIKbXNnc3RyICLDinRlcyB2b3VzIHPDu3IgZGUgdm91bG9pciBtZXR0cmUgw6Agam91ciBtYWludGVuYW50ID8iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjgzNiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo4MDIKbXNnaWQgIlByb2NlZWQiCm1zZ3N0ciAiQ29udGludWVyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMDAwCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk5vdyB1cGRhdGluZyAlKG5hbWUpcyB0byAlKHZlcnNpb24pcyIKbXNnc3RyICJNaXNlIMOgIGpvdXIgZGUgJShuYW1lKXMgdmVycyAlKHZlcnNpb24pcyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6MTAyNgptc2dpZCAiVXBkYXRlIHN1Y2Nlc3NmdWwsIHJlc3RhcnRpbmchIgptc2dzdHIgIk1pc2Ugw6Agam91ciByw6l1c3NpZSwgcmVkw6ltYXJyYWdlICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjEwMjcKbXNnaWQgIlRoZSB1cGRhdGUgZmluaXNoZWQgc3VjY2Vzc2Z1bGx5IGFuZCB0aGUgc2VydmVyIHdpbGwgbm93IGJlIHJlc3RhcnRlZC4iCm1zZ3N0ciAiTGEgbWlzZSDDoCBqb3VyIGEgw6l0w6kgZWZmZWN0dcOpZSBhdmVjIHN1Y2PDqHMsIGxlIHNlcnZldXIgdmEgbWFpbnRlbmFudCDDqnRyZSByZWTDqW1hcnLDqS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjEwNDYgc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMTAzCm1zZ2lkICJSZXN0YXJ0IGZhaWxlZCIKbXNnc3RyICLDiWNoZWMgZHUgcmVkw6ltYXJyYWdlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMDQ3Cm1zZ2lkICJUaGUgc2VydmVyIGFwcGFyZW50bHkgZGlkIG5vdCByZXN0YXJ0IGJ5IGl0c2VsZiwgeW91J2xsIGhhdmUgdG8gZG8gaXQgbWFudWFsbHkuIFBsZWFzZSBjb25zdWx0IG9jdG9wcmludC5sb2cgb24gd2hhdCB3ZW50IHdyb25nLiIKbXNnc3RyICJMZSBzZXJ2ZXVyIG4nYSBhcHBhcmVtbWVudCBwYXMgcmVkw6ltYXJyw6kgcGFyIGx1aS1tw6ptZSwgdm91cyBkZXZyZXogbGUgZmFpcmUgbWFudWVsbGVtZW50LiBWZXVpbGxleiBjb25zdWx0ZXIgb2N0b3ByaW50LmxvZyBzdXIgY2UgcXVpIG4nYSBwYXMgZm9uY3Rpb25uw6kuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMDY5Cm1zZ2lkICJUaGUgdXBkYXRlIGZpbmlzaGVkIHN1Y2Nlc3NmdWxseSwgcGxlYXNlIHJlc3RhcnQgT2N0b1ByaW50IG5vdy4iCm1zZ3N0ciAiTGEgbWlzZSDDoCBqb3VyIMOgIMOpdMOpIGVmZmVjdHXDqWUgYXZlYyBzdWNjw6hzLCBtZXJjaSBkZSByZWTDqW1hcnJlciBPY3RvUHJpbnQgbWFpbnRlbmFudC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjEwNzMKbXNnaWQgIlRoZSB1cGRhdGUgZmluaXNoZWQgc3VjY2Vzc2Z1bGx5LCBwbGVhc2UgcmVib290IHRoZSBzZXJ2ZXIgbm93LiIKbXNnc3RyICJMYSBtaXNlIMOgIGpvdXIgYSDDqXTDqSBlZmZlY3R1w6llIGF2ZWMgc3VjY8OocywgbWVyY2kgZGUgcmVkw6ltYXJyZXIgbGUgc2VydmV1ciBtYWludGVuYW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6MTA3OAptc2dpZCAiVXBkYXRlIHN1Y2Nlc3NmdWwsIHJlc3RhcnQgcmVxdWlyZWQhIgptc2dzdHIgIk1pc2Ugw6Agam91ciByw6l1c3NpZSwgcmVkw6ltYXJyYWdlIG7DqWNlc3NhaXJlICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjEwOTQKbXNnaWQgIlJlc3RhcnRpbmcgT2N0b1ByaW50IGZhaWxlZCwgcGxlYXNlIHJlc3RhcnQgaXQgbWFudWFsbHkuIFlvdSBtaWdodCBhbHNvIHdhbnQgdG8gY29uc3VsdCBvY3RvcHJpbnQubG9nIG9uIHdoYXQgd2VudCB3cm9uZyBoZXJlLiIKbXNnc3RyICJMZSByZWTDqW1hcnJhZ2UgZGUgT2N0b1ByaW50IGEgw6ljaG91w6kuIFZldWlsbGV6IGxlIHJlZMOpbWFycmVyIG1hbnVlbGxlbWVudC4gVm91cyBwb3V2ZXogw6lnYWxlbWVudCBjb25zdWx0ZXIgb2N0b3ByaW50LmxvZyBzdXIgY2UgcXVpIHMnZXN0IHBhc3PDqSBpY2kuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMDk4Cm1zZ2lkICJSZWJvb3RpbmcgdGhlIHNlcnZlciBmYWlsZWQsIHBsZWFzZSByZWJvb3QgaXQgbWFudWFsbHkuIFlvdSBtaWdodCBhbHNvIHdhbnQgdG8gY29uc3VsdCBvY3RvcHJpbnQubG9nIG9uIHdoYXQgd2VudCB3cm9uZyBoZXJlLiIKbXNnc3RyICJMZSByZWTDqW1hcnJhZ2UgZHUgc2VydmV1ciBhIMOpY2hvdcOpLCB2ZXVpbGxleiBsZSByZWTDqW1hcnJlciBtYW51ZWxsZW1lbnQuIFZvdXMgcG91dmV6IMOpZ2FsZW1lbnQgY29uc3VsdGVyIG9jdG9wcmludC5sb2cgc3VyIGNlIHF1aSBzJ2VzdCBwYXNzw6kgaWNpLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9zdGF0aWMvanMvc29mdHdhcmV1cGRhdGUuanM6MTExOQptc2dpZCAiVXBkYXRlIHN1Y2Nlc3NmdWwhIgptc2dzdHIgIk1pc2Ugw6Agam91ciByw6l1c3NpZSAhIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMTIwCm1zZ2lkICJUaGUgdXBkYXRlIGZpbmlzaGVkIHN1Y2Nlc3NmdWxseS4iCm1zZ3N0ciAiTGEgbWlzZSDDoCBqb3VyIHMnZXN0IHRlcm1pbsOpZSBhdmVjIHN1Y2PDqHMuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3N0YXRpYy9qcy9zb2Z0d2FyZXVwZGF0ZS5qczoxMTM1Cm1zZ2lkICJVcGRhdGUgZmFpbGVkISIKbXNnc3RyICLDiWNoZWMgZGUgbGEgbWlzZSDDoCBqb3VyICEiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvc3RhdGljL2pzL3NvZnR3YXJldXBkYXRlLmpzOjExMzYKbXNnaWQgIlRoZSB1cGRhdGUgZGlkIG5vdCBmaW5pc2ggc3VjY2Vzc2Z1bGx5LiBQbGVhc2UgY29uc3VsdCA8Y29kZT5vY3RvcHJpbnQubG9nPC9jb2RlPiBhbmQgPGNvZGU+cGx1Z2luX3NvZnR3YXJldXBkYXRlX2NvbnNvbGUubG9nPC9jb2RlPiBmb3IgZGV0YWlscy4iCm1zZ3N0ciAiTGEgbWlzZSDDoCBqb3VyIG4nYSBwYXMgYWJvdXRpLiBWZXVpbGxleiBjb25zdWx0ZXI8Y29kZT5vY3RvcHJpbnQubG9nPC9jb2RlPiBldCA8Y29kZT5wbHVnaW5fc29mdHdhcmV1cGRhdGVfY29uc29sZS5sb2c8L2NvZGU+IHBvdXIgcGx1cyBkZSBkw6l0YWlscy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoxCm1zZ2lkICIiCiJcbiIKIiAgICBQbGVhc2UgY29uZmlndXJlIHRoZSA8c3Ryb25nPmNoZWNrb3V0IGZvbGRlcjwvc3Ryb25nPiBvZiBPY3RvUHJpbnQsIG90aGVyd2lzZVxuIgoiICAgIHRoaXMgcGx1Z2luIHdvbid0IGJlIGFibGUgdG8gdXBkYXRlIGl0LiBDbGljayBvbiB0aGUgPGkgY2xhc3M9XCJmYXMgZmEtd3JlbmNoXCI+PC9pPiBidXR0b25cbiIKIiAgICB0byBkbyB0aGlzLiBBbHNvIHJlZmVyIHRvIHRoZSA8YSBocmVmPVwiaHR0cHM6Ly9kb2NzLm9jdG9wcmludC5vcmcvZW4vbWFzdGVyL2J1bmRsZWRwbHVnaW5zL3NvZnR3YXJldXBkYXRlLmh0bWxcIiB0YXJnZXQ9XCJfYmxhbmtcIj5Eb2N1bWVudGF0aW9uPC9hPi5cbiIKbXNnc3RyICIiCiJcbiIKIlZldWlsbGV6IGNvbmZpZ3VyZXIgbGUgPHN0cm9uZz5kb3NzaWVyIGRlIHNvcnRpZTwvc3Ryb25nPiBkZSBPY3RvUHJpbnQsIHNpbm9uIGNldHRlIGV4dGVuc2lvbiBuZSBwb3VycmEgcGFzIHNlIG1ldHRyZSDDoCBqb3VyLiBDbGlxdWV6IHN1ciBsZSBib3V0b24gPGkgY2xhc3M9XCJmYXMgZmEtd3JlbmNoXCI+PC9pPiBwb3VyIGxlIGZhaXJlLiBSZXBvcnRleiB2b3VzIMOgIGxhIDxhIGhyZWY9XCJodHRwczovL2RvY3Mub2N0b3ByaW50Lm9yZy9lbi9tYXN0ZXIvYnVuZGxlZHBsdWdpbnMvc29mdHdhcmV1cGRhdGUuaHRtbFwiIHRhcmdldD1cIl9ibGFua1wiPkRvY3VtZW50YXRpb248L2E+LlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6Ngptc2dpZCAiIgoiXG4iCiIgICAgPHA+XG4iCiIgICAgICAgIDxzdHJvbmc+WW91IGFyZSBydW5uaW5nIGEgbm9uLXJlbGVhc2UgdmVyc2lvbiBvZiBPY3RvUHJpbnQgYnV0IGFyZSB0cmFja2luZyBPY3RvUHJpbnRcbiIKIiAgICAgICAgcmVsZWFzZXMuPC9zdHJvbmc+XG4iCiIgICAgPC9wPjxwPlxuIgoiICAgICAgICBZb3UgcHJvYmFibHkgd2FudCBPY3RvUHJpbnQgdG8gdHJhY2sgdGhlIG1hdGNoaW5nIGRldmVsb3BtZW50IHZlcnNpb24gaW5zdGVhZC5cbiIKIiAgICAgICAgSWYgeW91IGhhdmUgYSBsb2NhbCBPY3RvUHJpbnQgY2hlY2tvdXQgZm9sZGVyIHN3aXRjaGVkIHRvIGFub3RoZXIgYnJhbmNoLFxuIgoiICAgICAgICA8c3Ryb25nPnNpbXBseSBzd2l0Y2hpbmcgb3ZlciB0byBcIkNvbW1pdFwiIHRyYWNraW5nPC9zdHJvbmc+IHdpbGwgYWxyZWFkeVxuIgoiICAgICAgICB0YWtlIGNhcmUgb2YgdGhhdC4gT3RoZXJ3aXNlIHBsZWFzZSB0YWtlIGEgbG9vayBhdCB0aGVcbiIKIiAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly9kb2NzLm9jdG9wcmludC5vcmcvZW4vbWFzdGVyL2J1bmRsZWRwbHVnaW5zL3NvZnR3YXJldXBkYXRlLmh0bWxcIiB0YXJnZXQ9XCJfYmxhbmtcIj5Eb2N1bWVudGF0aW9uPC9hPi5cbiIKIiAgICA8L3A+XG4iCm1zZ3N0ciAiIgoiXG4iCiI8cD4gPHN0cm9uZz5Wb3VzIGV4w6ljdXRleiB1bmUgdmVyc2lvbiBub24gY29tbWVyY2lhbGUgZGUgT2N0b1ByaW50IG1haXMgdm91cyBlZmZlY3R1ZXogbGUgc3VpdmkgZGVzIHZlcnNpb25zIGRlIE9jdG9QcmludC48L3N0cm9uZz48L3A+PHA+IFZvdXMgdm91ZHJleiBwcm9iYWJsZW1lbnQgcXVlIE9jdG9QcmludCBzdWl2ZSBsYSB2ZXJzaW9uIGRlIGTDqXZlbG9wcGVtZW50IGNvcnJlc3BvbmRhbnRlIMOgIGxhIHBsYWNlLiBTaSB2b3VzIGF2ZXogdW4gZG9zc2llciBkZSBwYWllbWVudCBsb2NhbCBkZSBPY3RvUHJpbnQsIGJhc2N1bMOpIHZlcnMgdW5lIGF1dHJlIGJyYW5jaGUsPHN0cm9uZz5sZSBwYXNzZXIgYXUgc3VpdmkgXCJDb21taXRcIjwvc3Ryb25nPiBzJ2VuIGNoYXJnZXJhLiBTaW5vbiwgdmV1aWxsZXogY29uc3VsdGVyIGxhIDxhIGhyZWY9XCJodHRwOi8vZG9jcy5vY3RvcHJpbnQub3JnL2VuL21hc3Rlci9idW5kbGVkcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS5odG1sXCIgdGFyZ2V0PVwiX2JsYW5rXCI+RG9jdW1lbnRhdGlvbjwvYT4uIDwvcD5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE4Cm1zZ2lkICIiCiJcbiIKIiAgICA8cD5cbiIKIiAgICAgICAgPHN0cm9uZz5UaGlzIHZlcnNpb24gb2YgdGhlIFB5dGhvbiBlbnZpcm9ubWVudCBpcyBub3Qgc3VwcG9ydGVkIGZvciBkaXJlY3QgdXBkYXRlcy48L3N0cm9uZz5cbiIKIiAgICA8L3A+XG4iCiIgICAgPHA+XG4iCiIgICAgICAgIFRvIHJlZHVjZSB0aGUgbGlrZWxpaG9vZCBvZiBydW5uaW5nIGludG8gdXBkYXRlIHByb2JsZW1zIGluIG91dGRhdGVkIGVudmlyb25tZW50cywgdGhlIGZvbGxvd2luZyBtaW5pbWFsXG4iCiIgICAgICAgIHZlcnNpb25zIGFyZSByZXF1aXJlZCB0byB1c2UgdGhpcyB1cGRhdGVyIHRvIHVwZGF0ZSBPY3RvUHJpbnQgb3IgYW55IGluc3RhbGxlZCBwbHVnaW5zOlxuIgoiICAgIDwvcD5cbiIKbXNnc3RyICIiCiJcbiIKIiAgICA8cD48c3Ryb25nPkNldHRlIHZlcnNpb24gZGUgbCdlbnZpcm9ubmVtZW50IFB5dGhvbiBuJ2VzdCBwYXMgcHJpc2UgZW4gY2hhcmdlIHBvdXIgbGVzIG1pc2VzIMOgIGpvdXIgZGlyZWN0ZXMuPC9zdHJvbmc+IDwvcD5cbiIKIjxwPiBQb3VyIHLDqWR1aXJlIGxlcyByaXNxdWVzIGRlIHByb2Jsw6htZXMgZGUgbWlzZSDDoCBqb3VyIGRhbnMgZGVzIGVudmlyb25uZW1lbnRzIG9ic29sw6h0ZXMsIGxlcyB2ZXJzaW9ucyBtaW5pbWFsZXMgc3VpdmFudGVzIHNvbnQgcmVxdWlzZXMgcG91ciB1dGlsaXNlciBjZSBwcm9ncmFtbWUgZGUgbWlzZSDDoCBqb3VyLCBwb3VyIG1ldHRyZSDDoCBqb3VyIE9jdG9QcmludCBvdSB0b3VzIGxlcyBleHRlbnNpb25zIGluc3RhbGzDqWVzOjwvcD5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjI4Cm1zZ2lkICJ5b3UgaGF2ZSIKbXNnc3RyICJ2b3VzIGF2ZXoiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjozMAptc2dpZCAiIgoiXG4iCiIgICAgPHA+XG4iCiIgICAgICAgIFBsZWFzZSB0YWtlIGEgbG9vayBhdCA8YSBocmVmPVwiaHR0cHM6Ly9mYXEub2N0b3ByaW50Lm9yZy91bnN1cHBvcnRlZC1weXRob24tZW52aXJvbm1lbnRcIiB0YXJnZXQ9XCJfYmxhbmtcIj50aGlzIEZBUSBlbnRyeSBvbiBob3cgdG8gcHJvY2VlZDwvYT4uXG4iCiIgICAgPC9wPlxuIgptc2dzdHIgIiIKIlxuIgoiICAgIDxwPlMnaWwgdm91cyBwbGHDrnQgamV0ZXIgdW4gxZNpbCDDoCBsYSBGQVEgOiA8YSBocmVmPVwiaHR0cHM6Ly9mYXEub2N0b3ByaW50Lm9yZy91bnN1cHBvcnRlZC1weXRob24tZW52aXJvbm1lbnRcIiB0YXJnZXQ9XCJfYmxhbmtcIj4gc3VyIGxhIGZhw6dvbiBkZSBwcm9jw6lkZXI8L2E+LjwvcD5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjM1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiIKIlxuIgoiICAgIDxwPlxuIgoiICAgICAgICA8c3Ryb25nPlRoZXJlIGlzIG5vdCBlbm91Z2ggZnJlZSBkaXNrIHNwYWNlIGF2YWlsYWJsZSB0byBydW4gYW4gdXBkYXRlLjwvc3Ryb25nPlxuIgoiICAgIDwvcD5cbiIKIiAgICA8cD5cbiIKIiAgICAgICAgVG8gcmVkdWNlIHRoZSBsaWtlbGlob29kIG9mIHJ1bm5pbmcgaW50byB1cGRhdGUgcHJvYmxlbXMgZHVlIHRvIGluc3VmZmllbnQgZGlzayBzcGFjZSwgT2N0b1ByaW50IHJlcXVpcmVzXG4iCiIgICAgICAgIGEgbWluaW11bSBvZiAlKG1pbl9mcmVlX3N0b3JhZ2UpcyBmcmVlIGRpc2sgc3BhY2UgaW4gdmFyaW91cyBsb2NhdGlvbnM6XG4iCiIgICAgPC9wPlxuIgptc2dzdHIgIiIKIlxuIgoiICAgPHA+PHN0cm9uZz5MJ2VzcGFjZSBkaXNxdWUgZGlzcG9uaWJsZSBlc3QgaW5zdWZmaXNhbnQgcG91ciBleMOpY3V0ZXIgdW5lIG1pc2Ugw6Agam91ci48L3N0cm9uZz48L3A+XG4iCiIgICA8cD4gUG91ciByw6lkdWlyZSBsYSBwcm9iYWJpbGl0w6kgZGUgcmVuY29udHJlciBkZXMgcHJvYmzDqG1lcyBkZSBtaXNlIMOgIGpvdXIgZW4gcmFpc29uIGQndW4gZXNwYWNlIGRpc3F1ZSBpbnN1ZmZpc2FudCwgT2N0b1ByaW50IG7DqWNlc3NpdGUgdW4gbWluaW11bSBkZSAlKG1pbl9mcmVlX3N0b3JhZ2UpcyBlc3BhY2UgZGlzcXVlIGxpYnJlIMOgIGRpdmVycyBlbmRyb2l0czogPC9wPlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6NDcKbXNnaWQgIiIKIlxuIgoiICAgIDxwPlxuIgoiICAgICAgICBQbGVhc2UgdGFrZSBhIGxvb2sgYXQgPGEgaHJlZj1cImh0dHBzOi8vZmFxLm9jdG9wcmludC5vcmcvaW5zdWZmaWVuY3QtZGlzay1zcGFjZVwiIHRhcmdldD1cIl9ibGFua1wiPnRoaXMgRkFRIGVudHJ5IG9uIGhvdyB0byBwcm9jZWVkPC9hPi5cbiIKIiAgICA8L3A+XG4iCm1zZ3N0ciAiIgoiXG4iCiIgICAgPHA+VmV1aWxsZXogY29uc3VsdGVyIDxhIGhyZWY9XCJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL2luc3VmZmllbmN0LWRpc2stc3BhY2VcIiB0YXJnZXQ9XCJfYmxhbmtcIj5jZXR0ZSBlbnRyw6llIGRlIGxhIEZBUSBzdXIgbGEgbWFuacOocmUgZGUgcHJvY8OpZGVyPC9hPi48L3A+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo1Mgptc2dpZCAiIgoiXG4iCiIgICAgPHA+XG4iCiIgICAgICAgIDxzdHJvbmc+T2N0b1ByaW50IGlzIHJ1bm5pbmcgb24gYSB0aHJvdHRsZWQgc3lzdGVtLCB1cGRhdGVzIGFyZSBkaXNhYmxlZC48L3N0cm9uZz5cbiIKIiAgICA8L3A+XG4iCiIgICAgPHA+XG4iCiIgICAgICAgIFRvIHJlZHVjZSB0aGUgbGlrZWxpaG9vZCBvZiBydW5uaW5nIGludG8gdXBkYXRlIHByb2JsZW1zIG9uIHRocm90dGxlZCBhbmQgaGVuY2UgcG90ZW50aWFsbHkgdW5zdGFibGUgc3lzdGVtc1xuIgoiICAgICAgICBhcyBzZWVuIGluIHRoZSBwYXN0LCBPY3RvUHJpbnQgZG9lc24ndCBzdXBwb3J0IHVwZGF0aW5nIHVuZGVyIHN1Y2ggY29uZGl0aW9ucy4gUGxlYXNlIGZpeCB0aGUgY3VycmVudCBpc3N1ZVxuIgoiICAgICAgICBiZWZvcmUgdHJ5aW5nIHRvIHVwZGF0ZS4gVGFrZSBhIGxvb2sgYXQgdGhlIGRpc3BsYXllZCB3YXJuaW5nIGluIHRoZSBuYXZpZ2F0aW9uIGJhciB0byBsZWFybiBhYm91dCB3aGF0IGlzXG4iCiIgICAgICAgIHdyb25nIGFuZCB0byBnZXQgaGludHMgb24gaG93IHRvIHNvbHZlIHRoZSBwcm9ibGVtLlxuIgoiICAgIDwvcD5cbiIKIiAgICA8cD5cbiIKIiAgICAgICAgUmVhZCBtb3JlIG9uIHRoaXMgaW4gPGEgaHJlZj1cImh0dHBzOi8vZmFxLm9jdG9wcmludC5vcmcvcGktaXNzdWVzXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPnRoZSBGQVE8L2E+LlxuIgoiICAgIDwvcD5cbiIKbXNnc3RyICIiCiJcbiIKIjxwPlxuIgoiICAgICAgICAgPHN0cm9uZz5PY3RvUHJpbnQgcydleMOpY3V0ZSBzdXIgdW4gc3lzdMOobWUgbGltaXTDqSwgbGVzIG1pc2VzIMOgIGpvdXIgc29udCBkw6lzYWN0aXbDqWVzLjwvc3Ryb25nPlxuIgoiICAgICA8L3A+XG4iCiIgICAgIDxwPlxuIgoiICAgICAgICAgUG91ciByw6lkdWlyZSBsYSBwcm9iYWJpbGl0w6kgZGUgcmVuY29udHJlciBkZXMgcHJvYmzDqG1lcyBkZSBtaXNlIMOgIGpvdXIgc3VyIGRlcyBzeXN0w6htZXMgbGltaXTDqXMgZXQgZG9uYyBwb3RlbnRpZWxsZW1lbnQgaW5zdGFibGVzXG4iCiIgICAgICAgICBjb21tZSB2dSBkYW5zIGxlIHBhc3PDqSwgT2N0b1ByaW50IG5lIHByZW5kIHBhcyBlbiBjaGFyZ2UgbGEgbWlzZSDDoCBqb3VyIGRhbnMgZGUgdGVsbGVzIGNvbmRpdGlvbnMuIFZldWlsbGV6IGNvcnJpZ2VyIGxlIHByb2Jsw6htZSBhY3R1ZWxcbiIKIiAgICAgICAgIGF2YW50IGQnZXNzYXllciBkZSBtZXR0cmUgw6Agam91ci4gSmV0ZXogdW4gxZNpbCDDoCBsJ2F2ZXJ0aXNzZW1lbnQgYWZmaWNow6kgZGFucyBsYSBiYXJyZSBkZSBuYXZpZ2F0aW9uIHBvdXIgc2F2b2lyIGNlIHF1aSBuZVxuIgoiICAgICAgICAgdmEgcGFzIGV0IHBvdXIgb2J0ZW5pciBkZXMgY29uc2VpbHMgc3VyIGxhIGZhw6dvbiBkZSByw6lzb3VkcmUgbGUgcHJvYmzDqG1lLlxuIgoiICAgICA8L3A+XG4iCiIgICAgIDxwPlxuIgoiICAgICAgICAgRW4gc2F2b2lyIHBsdXMgw6AgY2Ugc3VqZXQgZ3LDomNlIMOgIDxhIGhyZWY9XCJodHRwczovL2ZhcS5vY3RvcHJpbnQub3JnL3BpLWlzc3Vlc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5sYSBGQVE8L2E+LlxuIgoiICAgICA8L3A+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo2Ngptc2dpZCAiIgoiXG4iCiIgICAgPHA+XG4iCiIgICAgICAgIDxzdHJvbmc+T2N0b1ByaW50IGlzIGN1cnJlbnRseSBwcmludGluZywgdXBkYXRlcyBhcmUgZGlzYWJsZWQuPC9zdHJvbmc+XG4iCiIgICAgPC9wPlxuIgoiICAgIDxwPlxuIgoiICAgICAgICBSdW5uaW5nIHVwZGF0ZXMgaXMgbm90IHN1cHBvcnRlZCB3aGlsZSBwcmludGluZyBpbiBvcmRlciB0byBub3QgcmlzayBhbnkga2luZCBvZiBkaXNydXB0aW9uIHRvIHRoZSBwcmludCBqb2IuXG4iCiIgICAgICAgIFBsZWFzZSBsZXQgdGhlIHByaW50IGZpbmlzaCBiZWZvcmUgdHJ5aW5nIHRvIHVwZGF0ZS5cbiIKIiAgICA8L3A+XG4iCm1zZ3N0ciAiIgoiXG4iCiI8cD48c3Ryb25nPk9jdG9QcmludCBlc3QgZW4gY291cnMgZCdpbXByZXNzaW9uLCBsZXMgbWlzZXMgw6Agam91ciBzb250IGTDqXNhY3RpdsOpZXMuPC9zdHJvbmc+IDwvcD5cbiIKIjxwPiBMJ2V4w6ljdXRpb24gZGUgbWlzZXMgw6Agam91ciBuJ2VzdCBwYXMgcHJpc2UgZW4gY2hhcmdlIGxvcnMgZGUgbCdpbXByZXNzaW9uIGFmaW4gZGUgbmUgcGFzIHJpc3F1ZXIgZGUgcGVydHVyYmVyIGxlIHRyYXZhaWwgZCdpbXByZXNzaW9uLlxuIgoiVmV1aWxsZXogbGFpc3NlciBs4oCZaW1wcmVzc2lvbiBzZSB0ZXJtaW5lciBhdmFudCBk4oCZZXNzYXllciBkZSBtZXR0cmUgw6Agam91ci48L3A+XG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo3OCBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo5Mwptc2dpZCAiQ3VycmVudCB2ZXJzaW9ucyIKbXNnc3RyICJWZXJzaW9ucyBhY3R1ZWxsZXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo4MSBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoxMzIKbXNnaWQgIlVwZGF0ZSBsb2ciCm1zZ3N0ciAiTWlzZSDDoCBqb3VyIGR1IGpvdXJuYWwiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjo4OAptc2dpZCAiVXBkYXRlIGFsbCIKbXNnc3RyICJUb3V0IG1ldHRyZSDDoCBqb3VyIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6ODkKbXNnaWQgIkNoZWNrIGZvciB1cGRhdGVzIgptc2dzdHIgIlbDqXJpZmljYXRpb24gZGVzIG1pc2VzIMOgIGpvdXJzIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6OTgKbXNnaWQgIkxhc3QgY2FjaGUgcmVmcmVzaDoiCm1zZ3N0ciAiRGVybmllciByYWZyYcOuY2hpc3NlbWVudCBkdSBjYWNoZSA6IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6OTkKbXNnaWQgIkZvcmNlIGNoZWNrIGZvciB1cGRhdGUgKG92ZXJyaWRlcyBjYWNoZSB1c2VkIGZvciB1cGRhdGUgY2hlY2tzKSIKbXNnc3RyICJGb3JjZXIgbGEgdsOpcmlmaWNhdGlvbiBkZSBtaXNlIMOgIGpvdXIgKG91dHJlcGFzc2UgbGUgY2FjaGUgdXRpbGlzw6kgcG91ciB2w6lyaWZpY2F0aW9uIGRlIG1pc2Ugw6Agam91cikiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoxMDAKbXNnaWQgIkZvcmNlIHVwZGF0ZSBhbGwgKGV2ZW4gaWYgbm8gbmV3IHZlcnNpb25zIGFyZSBhdmFpbGFibGUpIgptc2dzdHIgIkZvcmNlciB0b3V0ZXMgbGVzIG1pc2VzIMOgIGpvdXIgKG3Dqm1lIHNpIGF1Y3VuZSBub3V2ZWxsZSB2ZXJzaW9uIG4nZXN0IGRpc3BvbmlibGUpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTA5Cm1zZ2lkICJVcGRhdGUgYXZhaWxhYmxlIgptc2dzdHIgIk1pc2Ugw6Agam91ciBkaXNwb25pYmxlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTEwCm1zZ2lkICJOb3QgY29tcGF0aWJsZSIKbXNnc3RyICJOb24gY29tcGF0aWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjExMyBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3dpemFyZF91cGRhdGUuamluamEyOjkKbXNnaWQgIlVwZGF0ZSIKbXNnc3RyICJNZXR0cmUgw6Agam91ciIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjExNgptc2dpZCAiUmVsZWFzZSBDaGFubmVsOiIKbXNnc3RyICJDYW5hbCBkZSBkaWZmdXNpb24gOiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjExNwptc2dpZCAiSW5zdGFsbGVkOiIKbXNnc3RyICJJbnN0YWxsw6llOiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjExOAptc2dpZCAiQXZhaWxhYmxlOiIKbXNnc3RyICJEaXNwb25pYmxlOiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjExOQptc2dpZCAiUmVsZWFzZSBOb3RlczoiCm1zZ3N0ciAiTm90ZXMgZGUgdmVyc2lvbnM6IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTIzCm1zZ2lkICJOZXdlciB2ZXJzaW9ucyBvZiB0aGlzIHBsdWdpbiBhcmUgbm90IGNvbXBhdGlibGUgdG8gdGhpcyBzZXR1cC4iCm1zZ3N0ciAiTGVzIHZlcnNpb25zIHBsdXMgcsOpY2VudGVzIGRlIGNldHRlIGV4dGVuc2lvbiBuZSBzb250IHBhcyBjb21wYXRpYmxlcyBhdmVjIGNldHRlIGNvbmZpZ3VyYXRpb24uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTQ5Cm1zZ2lkICJQbGVhc2Ugbm90ZSB0aGF0IHRoZSB1cGRhdGUgbG9nIHdpbGwgb25seSBjb250YWluIGVudHJpZXMgZm9yIHVwZGF0ZXMgcGVyZm9ybWVkIHRocm91Z2ggT2N0b1ByaW50J3MgU29mdHdhcmUgVXBkYXRlIHBsdWdpbi4iCm1zZ3N0ciAiVmV1aWxsZXogbm90ZXIgcXVlIGxlIGpvdXJuYWwgZGUgbWlzZSDDoCBqb3VyIG5lIGNvbnRpZW5kcmEgcXVlIGRlcyBlbnRyw6llcyBwb3VyIGxlcyBtaXNlcyDDoCBqb3VyIGVmZmVjdHXDqWVzIHZpYSBsZSBwbHVnLWluIGRlIG1pc2Ugw6Agam91ciBsb2dpY2llbGxlIGQnT2N0b1ByaW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE2Nwptc2dpZCAiVmVyc2lvbiBjYWNoZSBUVEwiCm1zZ3N0ciAiQ2FjaGUgZGUgdmVyc2lvbiBUVEwiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoxNzgKbXNnaWQgIlNob3cgdXBkYXRlIG5vdGlmaWNhdGlvbnMgdG8gdXNlcnMiCm1zZ3N0ciAiQWZmaWNoZXIgbGVzIG5vdGlmaWNhdGlvbnMgZGUgbWlzZSDDoCBqb3VyIMOgIHRvdXMgbGVzIHV0aWxpc2F0ZXVycyIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE3OQptc2dpZCAiSWYgeW91IHVuY2hlY2sgdGhpcywgb25seSBsb2dnZWQgaW4gYWRtaW5zIHdpbGwgc2VlIHVwZGF0ZSBub3RpZmljYXRpb25zLiBVcGRhdGUgbm90aWZpY2F0aW9ucyBzaG93biB0byB1c2VycyBkbyBub3QgaW5jbHVkZSB0aGUgXCJVcGRhdGUgbm93XCIgYnV0dG9uLiIKbXNnc3RyICJTaSB2b3VzIGTDqWNvY2hleiBsYSBjYXNlLCBzZXVscyBsZXMgYWRtaW5pc3RhdGV1cnMgY29ubmVjdMOpcyB2ZXJyb250IGxlcyBub3RpZmljYXRpb25zIGRlIG1pc2Ugw6Agam91ci4gTGVzIG5vdGlmaWNhdGlvbnMgdmlzaWJsZXMgZGVzIGF1dHJlcyB1dGlsaXNhdGV1cnMgbidpbmNsdXJvbnQgcGFzIGxlIGJvdXRvbiBcIk1ldHRlIMOgIGpvdXIgbWFpbnRlbmFudFwiLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjE4NAptc2dpZCAiTWluaW11bSBmcmVlIGRpc2sgc3BhY2UiCm1zZ3N0ciAiRXNwYWNlIGRpc3F1ZSBsaWJyZSBtaW5pbXVtIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zb2Z0d2FyZXVwZGF0ZV9zZXR0aW5ncy5qaW5qYTI6MTg5Cm1zZ2lkICJUaGUgbWluaW11bSBhbW91bnQgb2YgZnJlZSBkaXNrIHNwYWNlIHRoYXQgaGFzIHRvIGJlIGF2YWlsYWJsZSBvbiB2YXJpb3VzIGxvY2F0aW9ucyBmb3IgT2N0b1ByaW50IHRvIGFsbG93IHVwZGF0ZXMuIFNob3VsZCBub3QgYmUgc2V0IHRvIDAuIgptc2dzdHIgIkxhIHF1YW50aXTDqSBtaW5pbWFsZSBkJ2VzcGFjZSBkaXNxdWUgZGlzcG9uaWJsZSDDoCBkaXZlcnMgZW5kcm9pdHMgcG91ciBxdWUgT2N0b1ByaW50IHB1aXNzZSDDqnRyZSBtaXMgw6Agam91ci4gTmUgZG9pdCBwYXMgw6p0cmUgZml4w6kgw6AgMC4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3NldHRpbmdzLmppbmphMjoyMDcKbXNnaWQgIlVwZGF0ZSBpbiBwcm9ncmVzcywgcGxlYXNlIHdhaXQuIgptc2dzdHIgIk1pc2Ugw6Agam91ciBlbiBjb3VycywgdmV1aWxsZXogcGF0aWVudGVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfc2V0dGluZ3MuamluamEyOjIwOAptc2dpZCAiVXBkYXRlIGRvbmUsIHBsZWFzZSBjbG9zZSB0aGlzIHdpbmRvdy4iCm1zZ3N0ciAiTWlzZSDDoCBqb3VyIHRlcm1pbsOpZSwgdmV1aWxsZXogZmVybWVyIGNldHRlIGZlbsOqdHJlLiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc29mdHdhcmV1cGRhdGVfd2l6YXJkX3NldHRpbmdzLmppbmphMjozCm1zZ2lkICIiCiI8cD5cbiIKIiAgICBCeSBkZWZhdWx0LCBPY3RvUHJpbnQgd2lsbCB1cGRhdGUgaXRzZWxmIHZpYSA8Y29kZT5waXA8L2NvZGU+IHRvIHB1Ymxpc2hlZCByZWxlYXNlcyBvciBjb21taXRzIHB1c2hlZFxuIgoiICAgIHRvIEdpdGh1Yi4gT2N0b1ByaW50IGNhbiBhbHNvIHVwZGF0ZSBpdHNlbGYgdmlhIDxjb2RlPmdpdDwvY29kZT4gdG8gYXJiaXRyYXJ5IGRldmVsb3BtZW50IGJyYW5jaGVzIHlvdSBuZWVkIHRvIGNoZWNrIG91dCBtYW51YWxseS5cbiIKIiAgICBJZiB5b3Ugd2FudCB0byBkbyB0aGF0IHRob3VnaCBpdCBuZWVkcyB0byBrbm93IGl0cyBjaGVja291dCBmb2xkZXIuIFlvdSBjYW4gY29uZmlndXJlIHRoYXQgaGVyZS5cbiIKIjwvcD4iCm1zZ3N0ciAiPHA+IFBhciBkw6lmYXV0LCBPY3RvUHJpbnQgc2UgbWV0dHJhIMOgIGpvdXIgYXZlYyBsZXMgdmVyc2lvbnMgcHVibGnDqWVzIHZpYSA8Y29kZT5waXA8L2NvZGU+IG91IGxlcyBjb21taXRzIHBvdXNzw6lzIGRlIEdpdGh1Yi4gT2N0b1ByaW50IHBldXQgw6lnYWxlbWVudCBzZSBtZXR0cmUgw6Agam91ciB2aWEgPGNvZGU+Z2l0PC9jb2RlPiB2ZXJzIGRlcyBicmFuY2hlcyBkZSBkw6l2ZWxvcHBlbWVudCBhcmJpdHJhaXJlcywgdm91cyBkZXZleiB2w6lyaWZpZXIgbWFudWVsbGVtZW50LiBTaSB2b3VzIHZvdWxleiBsZSBmYWlyZSwgaWwgZG9pdCBjb25uYcOudHJlIHNvbiBkb3NzaWVyIGRlIHBhaWVtZW50LiBWb3VzIHBvdXZleiBjb25maWd1cmVyIGNlbGEgaWNpLjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3dpemFyZF9zZXR0aW5ncy5qaW5qYTI6MTUKbXNnaWQgIiIKIjxwPlxuIgoiICAgIElmIHlvdSBhcmUgcnVubmluZyBhIHJlbGVhc2UgdmVyc2lvbiBvZiBPY3RvUHJpbnQsIGxlYXZlIGF0IFwiUmVsZWFzZVwiIHRyYWNraW5nLiBJZiB5b3UgYXJlIHJ1bm5pbmcgYSBkaWZmZXJlbnRcbiIKIiAgICBicmFuY2ggaG93ZXZlciBvbiBhIG1hbnVhbCBjaGVja291dCwgeW91IHNob3VsZCBzZXR1cCBcIkxvY2FsIENoZWNrb3V0XCIgdHJhY2tpbmcuIEZvciBtb3JlIHNwZWNpYWwgY2FzZXMgeW91IG1pZ2h0XG4iCiIgICAgd2FudCB0byBzZWxlY3QgXCJHaXRodWIgQ29tbWl0XCIgdHJhY2tpbmcgLSB5b3Ugbm9ybWFsbHkgc2hvdWxkbid0IG5lZWQgdG8gaG93ZXZlci5cbiIKIjwvcD4iCm1zZ3N0ciAiPHA+U2kgdm91cyB1dGlsaXNleiB1bmUgdmVyc2lvbiBmaW5hbGUgZGUgT2N0b1ByaW50LCBsYWlzc2V6IGxlIHN1aXZpIFwiUmVsZWFzZVwiLiBTaSB0b3V0ZWZvaXMgdm91cyBleMOpY3V0ZXogdW5lIGF1dHJlIHZlcnNpb24gbG9ycyBkJ3VuIHBhaWVtZW50IG1hbnVlbCwgdm91cyBkZXZleiBjb25maWd1cmVyIGxlIHN1aXZpIFwiUGFpZW1lbnQgbG9jYWxcIi4gUG91ciBkZXMgY2FzIHBsdXMgc3DDqWNpYXV4LCB2b3VzIHBvdXZleiBzw6lsZWN0aW9ubmVyIGxlIHN1aXZpIFwiR2l0aHViIENvbW1pdFwiIC0gdm91cyBuZSBkZXZyaWV6IG5vcm1hbGVtZW50IHBhcyBhdm9pciBiZXNvaW4gZGUgbGUgZmFpcmUgY2VwZW5kYW50LjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NvZnR3YXJldXBkYXRlX3dpemFyZF91cGRhdGUuamluamEyOjMKbXNnaWQgIiIKIjxwPlxuIgoiICAgIFlvdSBhcmUgYWJvdXQgdG8gc2V0IHVwIE9jdG9QcmludCA8c3BhbiBkYXRhLWJpbmQ9XCJ0ZXh0OiBvY3RvcHJpbnREYXRhLmN1cnJlbnRcIj48L3NwYW4+XG4iCiIgICAgYnV0IDxzcGFuIGRhdGEtYmluZD1cInRleHQ6IG9jdG9wcmludERhdGEuYXZhaWxhYmxlXCI+PC9zcGFuPiBpcyBhdmFpbGFibGUuIEl0IGlzIHN0cm9uZ2x5XG4iCiIgICAgcmVjb21tZW5kZWQgdG8gdXBkYXRlIHRvIHRoZSBsYXRlc3QgdmVyc2lvbiBiZWZvcmUgeW91IGNvbnRpbnVlLlxuIgoiPC9wPiIKbXNnc3RyICIiCiI8cD5cbiIKIiAgICAgVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgY29uZmlndXJlciBPY3RvUHJpbnQgPHNwYW4gZGF0YS1iaW5kPVwidGV4dDogb2N0b3ByaW50RGF0YS5jdXJyZW50XCI+PC9zcGFuPlxuIgoiICAgICBtYWlzIDxzcGFuIGRhdGEtYmluZD1cInRleHQ6IG9jdG9wcmludERhdGEuYXZhaWxhYmxlXCI+PC9zcGFuPiBlc3QgZGlzcG9uaWJsZS4gQydlc3QgZm9ydGVtZW50XG4iCiIgICAgIHJlY29tbWFuZMOpIGRlIG1ldHRyZSDDoCBqb3VyIHZlcnMgbGEgZGVybmnDqHJlIHZlcnNpb24gYXZhbnQgZGUgY29udGludWVyLlxuIgoiPC9wPiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc25pcHBldHMvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9jaGVja291dEZvbGRlci5qaW5qYTI6Mgptc2dpZCAiT2N0b1ByaW50IGNoZWNrb3V0IGZvbGRlciIKbXNnc3RyICJEb3NzaWVyIGRlIHbDqXJpZmljYXRpb24gZGUgT2N0b1ByaW50IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zbmlwcGV0cy9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL2NoZWNrb3V0Rm9sZGVyLmppbmphMjo1Cm1zZ2lkICJUaGlzIG5lZWRzIHRvIGJlIHNldCBpZiB5b3Ugc2VsZWN0IGNvbW1pdCBiYXNlZCB2ZXJzaW9uIHRyYWNraW5nLiIKbXNnc3RyICJDZWxhIGRvaXQgw6p0cmUgZMOpZmluaSBzaSB2b3VzIHPDqWxlY3Rpb25uZXogbGUgc3VpdmkgZGUgdmVyc2lvbiBiYXPDqSBzdXIgbGEgdmFsaWRhdGlvbi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvcGlwRW5hYmxlQ2hlY2suamluamEyOjQKbXNnaWQgIkVuYWJsZSA8Y29kZT5waXA8L2NvZGU+IHVwZGF0ZSBjaGVja3MiCm1zZ3N0ciAiQWN0aXZlciBsYSB2w6lyaWZpY2F0aW9uIGRlIG1pc2Ugw6Agam91ciA8Y29kZT5waXA8L2NvZGU+IgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3RlbXBsYXRlcy9zbmlwcGV0cy9wbHVnaW5zL3NvZnR3YXJldXBkYXRlL3BpcEVuYWJsZUNoZWNrLmppbmphMjo1Cm1zZ2lkICJJZiB5b3UgY2hlY2sgdGhpcywgT2N0b1ByaW50IHdpbGwgYWxzbyBub3RpZnkgeW91IG9mIHVwZGF0ZXMgb2YgdGhlIDxjb2RlPnBpcDwvY29kZT4gdG9vbCB1c2VkIGJ5IE9jdG9QcmludCB0byBpbnN0YWxsIHBsdWdpbnMgYW5kIHVwZGF0ZXMgYW5kIGFsbG93IHlvdSB0byB1cGRhdGUgaXQgdGhyb3VnaCBPY3RvUHJpbnQuIDxjb2RlPnBpcDwvY29kZT4gaXMgb3V0c2lkZSBvZiB0aGUgY29udHJvbCBvZiB0aGUgT2N0b1ByaW50IG1haW50YWluZXIsIHNvIGVuYWJsZSBhdCB5b3VyIG93biByaXNrLiIKbXNnc3RyICJTaSB2b3VzIGNvY2hleiBjZXR0ZSBjYXNlLCBPY3RvUHJpbnQgdm91cyBpbmZvcm1lcmEgw6lnYWxlbWVudCBkZXMgbWlzZXMgw6Agam91ciBkZSBsJ291dGlsIDxjb2RlPnBpcDwvY29kZT4sIG91dGlsIHV0aWxpc8OpIHBhciBPY3RvUHJpbnQgcG91ciBpbnN0YWxsZXIgbGVzIGV4dGVuc2lvbnMgZXQgbGVzIG1pc2VzIMOgIGpvdXIgZXQgdm91cyBwZXJtZXR0cmUgZGUgbGVzIG1ldHRyZSDDoCBqb3VyIHZpYSBPY3RvUHJpbnQuIDxjb2RlPnBpcDwvY29kZT4gZXN0IGhvcnMgZHUgY29udHLDtGxlIGR1IG1haW50ZW5ldXIgT2N0b1ByaW50LCBkb25jIGFjdGl2ZXotbGUgw6Agdm9zIHJpc3F1ZXMgZXQgcMOpcmlscy4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvcGlwVGFyZ2V0LmppbmphMjoyCm1zZ2lkICJPY3RvUHJpbnQgPGNvZGU+cGlwPC9jb2RlPiB0YXJnZXQiCm1zZ3N0ciAiQ2libGUgZGUgPGNvZGU+cGlwPC9jb2RlPiBPY3RvUHJpbnQiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvcGlwVGFyZ2V0LmppbmphMjo1Cm1zZ2lkICJZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLiIKbXNnc3RyICJWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGNoYW5nZXIgY2VsYS4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvcmVsZWFzZUNoYW5uZWwuamluamEyOjIKbXNnaWQgIk9jdG9QcmludCBSZWxlYXNlIENoYW5uZWwiCm1zZ3N0ciAiQ2FuYWwgZGUgbWlzZSDDoCBqb3VyIE9jdG9wcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS90ZW1wbGF0ZXMvc25pcHBldHMvcGx1Z2lucy9zb2Z0d2FyZXVwZGF0ZS9yZWxlYXNlQ2hhbm5lbC5qaW5qYTI6NQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJNYWtlIHN1cmUgeW91IGhhdmUgcmVhZCA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5cIkhvdyB0byB1c2UgdGhlIHJlbGVhc2UgY2hhbm5lbHMgdG8gaGVscCB0ZXN0IHJlbGVhc2UgY2FuZGlkYXRlc1wiPC9hPiBiZWZvcmUgc3dpdGNoaW5nIHRvIGEgcmVsZWFzZSBjaGFubmVsIG90aGVyIHRoYW4gXCJTdGFibGVcIiIKbXNnc3RyICJBc3N1cmV6LXZvdXMgZCdhdm9pciBsdSA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5cIkNvbW1lbnQgdXRpbGlzZXIgbGVzIGNhbmF1eCBkZSBwdWJsaWNhdGlvbiBwb3VyIGFpZGVyIMOgIHRlc3RlciBsZXMgY2FuZGlkYXRzIMOgIGxhIHB1YmxpY2F0aW9uXCI8L2E+IGF2YW50IGRlIHBhc3NlciDDoCB1biBjYW5hbCBkZSBwdWJsaWNhdGlvbiBhdXRyZSBxdWUgXCJTdGFibGVcIi4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdHJhY2tlZEJyYW5jaC5qaW5qYTI6Mgptc2dpZCAiVHJhY2tlZCBicmFuY2giCm1zZ3N0ciAiQnJhbmNoZSBzdWl2aWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdGVtcGxhdGVzL3NuaXBwZXRzL3BsdWdpbnMvc29mdHdhcmV1cGRhdGUvdmVyc2lvblRyYWNraW5nLmppbmphMjoyCm1zZ2lkICJPY3RvUHJpbnQgdmVyc2lvbiB0cmFja2luZyIKbXNnc3RyICJTdWl2aSBkZSB2ZXJzaW9uIGRlIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy9fX2luaXRfXy5weToyMDAgc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL19faW5pdF9fLnB5OjIwNiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3NldHRpbmdzLmppbmphMjoxCm1zZ2lkICJBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmciCm1zZ3N0ciAiU3VpdmkgZGUgbCd1dGlsaXNhdGlvbiBhbm9ueW1lIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3N0YXRpYy9qcy91c2FnZS5qczo2Ngptc2dpZCAiUGxlYXNlIHNldCB1cCBhbm9ueW1vdXMgdXNhZ2UgdHJhY2tpbmciCm1zZ3N0ciAiVmV1aWxsZXogY29uZmlndXJlciBsZSBzdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvc3RhdGljL2pzL3VzYWdlLmpzOjY3Cm1zZ2lkICJZb3UgaGF2ZW4ndCB5ZXQgZGVjaWRlZCBvbiB3aGV0aGVyIHRvIGVuYWJsZSBvciBkaXNhYmxlIGFub255bW91cyB1c2FnZSB0cmFja2luZy4gWW91IG5lZWQgdG8gZWl0aGVyIGVuYWJsZSBvciBkaXNhYmxlIGl0IGJlZm9yZSBjb250aW51aW5nLiIKbXNnc3RyICJWb3VzIG4nYXZleiBwYXMgZW5jb3JlIGTDqWNpZMOpIGQnYWN0aXZlciBvdSBkZSBkw6lzYWN0aXZlciBsZSBzdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUuIFZvdXMgZGV2ZXogbCdhY3RpdmVyIG91IGxlIGTDqXNhY3RpdmVyIGF2YW50IGRlIGNvbnRpbnVlci4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvc3RhdGljL2pzL3VzYWdlLmpzOjk0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlBsZWFzZSBvcGVuIGEgPGEgaHJlZj0nJShidWdyZXBvcnQpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+YnVnIHJlcG9ydDwvYT4gb24gdGhpcy4gTWFrZSBzdXJlIHRvIGluY2x1ZGUgYWxsIHJlcXVlc3RlZCBpbmZvcm1hdGlvbiwgaW5jbHVkaW5nIHlvdXIgPGEgaHJlZj0nJShqc2NvbnNvbGUpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+SlMgY29uc29sZTwvYT4gYW5kIDxjb2RlPm9jdG9wcmludC5sb2c8L2NvZGU+LiIKbXNnc3RyICJWZXVpbGxleiBvdXZyaXIgdW4gPGEgaHJlZj0nJShidWdyZXBvcnQpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+cmFwcG9ydCBkZSBib2d1ZTwvYT4gw6AgY2Ugc3VqZXQuIEFzc3VyZXotdm91cyBk4oCZaW5jbHVyZSB0b3V0ZXMgbGVzIGluZm9ybWF0aW9ucyBkZW1hbmTDqWVzLCB5IGNvbXByaXMgdm90cmUgPGEgaHJlZj0nJShqc2NvbnNvbGUpcycgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcic+Y29uc29sZSBKUzwvYT4gZXQgPGNvZGU+b2N0b3ByaW50LmxvZzwvY29kZT4uIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6OQptc2dpZCAiRW5hYmxlIGFub255bW91cyB1c2FnZSB0cmFja2luZyIKbXNnc3RyICJBY3RpdmVyIGxlIHN1aXZpIGRlIGwndXRpbGlzYXRpb24gYW5vbnltZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjIwCm1zZ2lkICJFdmVudHMgdG8gdHJhY2suIFRoZSBwaW5nIGlzIG1hbmRhdG9yeS4iCm1zZ3N0ciAiw4l2w6luZW1lbnRzIMOgIHN1aXZyZS4gTGUgcGluZyBlc3Qgb2JsaWdhdG9pcmUuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6MjAKbXNnaWQgIlRyYWNrZWQgZXZlbnRzIgptc2dzdHIgIsOJdsOpbmVtZW50cyBzdWl2aXMiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3NldHRpbmdzLmppbmphMjoyMwptc2dpZCAiUmVndWxhciBwaW5nIGV2ZXJ5IDE1bWluIChpbmNsLiB1cHRpbWUpIgptc2dzdHIgIlBpbmcgcsOpZ3VsaWVyIHRvdXRlcyBsZXMgMTVtaW4gKGTDqW1hcnJhZ2UgaW5jbHVzKSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjI2Cm1zZ2lkICJSZWd1bGFyIHBvbmcgZXZlcnkgMjRoIChpbmNsLiBwbHVnaW4gbGlzdCkiCm1zZ3N0ciAiUG9uZyByw6lndWxpZXIgdG91dGVzIGxlcyAyNGggKGxpc3RlIGQnZXh0ZW5zaW9uIGluY2x1c2VzKSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjI5Cm1zZ2lkICJTZXJ2ZXIgc3RhcnR1cCAmIHNodXRkb3duIgptc2dzdHIgIkTDqW1hcnJhZ2UgZXQgYXJyw6p0IGR1IHNlcnZldXIiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3NldHRpbmdzLmppbmphMjozMgptc2dpZCAiQ29ubmVjdGVkIHRvIHByaW50ZXIiCm1zZ3N0ciAiQ29ubmVjdMOpIMOgIHVuZSBpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6MzUKbXNnaWQgIlByaW50ZXIgU2FmZXR5IENoZWNrIHdhcm5pbmdzIgptc2dzdHIgIkF2ZXJ0aXNzZW1lbnRzIHJlbGF0aWZzIGF1IGNvbnRyw7RsZSBkZSBzw6ljdXJpdMOpIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjM4Cm1zZ2lkICJQcmludCBzdGFydGVkL2NhbmNlbGxlZC9maW5pc2hlZCIKbXNnc3RyICJJbXByZXNzaW9uIETDqW1hcnLDqWUvQW5udWzDqWUvVGVybWluw6llIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6NDEKbXNnaWQgIkVycm9ycyBpbiB0aGUgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBwcmludGVyIGFuZC9vciByZXBvcnRlZCBieSB0aGUgZmlybXdhcmUiCm1zZ3N0ciAiRXJyZXVycyBkYW5zIGxhIGNvbW11bmljYXRpb24gYXZlYyBsJ2ltcHJpbWFudGUgZXQgLyBvdSBzaWduYWzDqWVzIHBhciBsZSBtaWNyb2xvZ2ljaWVsIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6NDQKbXNnaWQgIlBsdWdpbiBpbnN0YWxsZWQvdW5pbnN0YWxsZWQvZW5hYmxlZC9kaXNhYmxlZCIKbXNnc3RyICJFeHRlbnNpb24gaW5zdGFsbMOpZS9kw6lzaW5zdGFsbMOpZS9hY3RpdsOpZS9kw6lzYWN0aXbDqWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3NldHRpbmdzLmppbmphMjo0Nwptc2dpZCAiT2N0b1ByaW50IG9yIGEgcGx1Z2luIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IG9yIHVuc3VjY2Vzc2Z1bGx5Igptc2dzdHIgIk1pc2Ugw6AgSm91ciBkZSBPY3RvcHJpbnQgb3UgZCd1bmUgZXh0ZW5zaW9uIHLDqXVzc2llIG91IMOpY2hvdcOpZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfc2V0dGluZ3MuamluamEyOjUwCm1zZ2lkICJTeXN0ZW0gZ290IHRocm90dGxlZC91bnRocm90dGxlZCAoY3VycmVudGx5IG9ubHkgZGV0ZWN0ZWQgb24gUlBpcykiCm1zZ3N0ciAiTGUgc3lzdMOobWUgZXN0IHNhdHVyw6kvZGUtc2F0dXLDqSAoQWN0dWVsbGVtZW50IGTDqXRlY3TDqSBzZXVsZW1lbnQgcGFyIFJQaXMpIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6NTMKbXNnaWQgIk9uYm9hcmQgc2xpY2luZyBhY3Rpb25zIgptc2dzdHIgIkFjdGlvbnMgZGUgZMOpY291cGFnZSBpbnRlcm5lIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ19zZXR0aW5ncy5qaW5qYTI6NTYKbXNnaWQgIldlYiBpbnRlcmZhY2UgbG9hZCIKbXNnc3RyICJDaGFyZ2VtZW50IGRlIGwnaW50ZXJmYWNlIHdlYiIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvdHJhY2tpbmdfd2l6YXJkLmppbmphMjoxCm1zZ2lkICJDb25maWd1cmUgQW5vbnltb3VzIFVzYWdlIFRyYWNraW5nIgptc2dzdHIgIkNvbmZpZ3VyZXIgbGUgU3VpdmkgZCdVdGlsaXNhdGlvbiBBbm9ueW1lIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ193aXphcmQuamluamEyOjgKbXNnaWQgIjxzdHJvbmc+Tm90ZTo8L3N0cm9uZz4gWW91IGNhbiBhbHdheXMgY2hhbmdlIHlvdXIgZGVjaXNpb24gYW5kIGFsc28gYWNjZXNzIG1vcmUgZ3JhbnVsYXIgY29udHJvbHMgdmlhIFNldHRpbmdzID4gQW5vbnltb3VzIFVzYWdlIFRyYWNraW5nLiIKbXNnc3RyICI8c3Ryb25nPk5vdGU6PC9zdHJvbmc+IFZvdXMgcG91cnJleiBjaGFuZ2VyIHZvdHJlIGNob2l4IGV0IMOpZ2FsZW1lbnQgYWNjw6lkZXIgw6AgZGVzIGNvbnRyw7RsZXMgcGx1cyBncmFudWxhaXJlcyB2aWEgUGFyYW3DqHRyZXMgPiBTdWl2aSBkZSBsJ3V0aWxpc2F0aW9uIGFub255bWUuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy90cmFja2luZ193aXphcmQuamluamEyOjE0Cm1zZ2lkICJEaXNhYmxlIEFub255bW91cyBVc2FnZSBUcmFja2luZyIKbXNnc3RyICJEw6lzYWN0aXZlciBsZSBTdWl2aSBkJ1V0aWxpc2F0aW9uIEFub255bWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3dpemFyZC5qaW5qYTI6MTgKbXNnaWQgIkVuYWJsZSBBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmciCm1zZ3N0ciAiQWN0aXZlciBsZSBTdWl2aSBkJ1V0aWxpc2F0aW9uIEFub255bWUiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3dpemFyZC5qaW5qYTI6MjMKbXNnaWQgIiIKIlxuIgoiICAgICAgICBBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmcgaXMgPHN0cm9uZyBjbGFzcz1cInRleHQtc3VjY2Vzc1wiPmVuYWJsZWQ8L3N0cm9uZz4uXG4iCiIgICAgIgptc2dzdHIgIiIKIlxuIgoiTGUgU3VpdmkgZCdVdGlsaXNhdGlvbiBBbm9ueW1lIGVzdCA8c3Ryb25nIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+YWN0aXbDqTwvc3Ryb25nPi5cbiIKIiAgICAiCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdHJhY2tpbmcvdGVtcGxhdGVzL3RyYWNraW5nX3dpemFyZC5qaW5qYTI6MjYKbXNnaWQgIiIKIlxuIgoiICAgICAgICBBbm9ueW1vdXMgVXNhZ2UgVHJhY2tpbmcgaXMgPHN0cm9uZyBjbGFzcz1cInRleHQtZGFuZ2VyXCI+ZGlzYWJsZWQ8L3N0cm9uZz4uXG4iCiIgICAgIgptc2dzdHIgIiIKIlxuIgoiTGUgU3VpdmkgZCdVdGlsaXNhdGlvbiBBbm9ueW1lIGVzdCA8c3Ryb25nIGNsYXNzPVwidGV4dC1kYW5nZXJcIj5kw6lzYWN0aXbDqTwvc3Ryb25nPlxuIgoiICAgICIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy90cmFja2luZy90ZW1wbGF0ZXMvc25pcHBldHMvcGx1Z2lucy90cmFja2luZy90cmFja2luZ0Rlc2NyaXB0aW9uLmppbmphMjoxCm1zZ2lkICIiCiJcbiIKIjxwPlxuIgoiICAgIEFub255bW91cyB1c2FnZSB0cmFja2luZyBwcm92aWRlcyB2YWx1YWJsZSBpbnNpZ2h0cyBpbnRvIGhvdyBtYW55IGluc3RhbmNlcyBydW5uaW5nIHdoYXQgdmVyc2lvbnMgb2YgT2N0b1ByaW50IGFyZSBvdXQgdGhlcmUsXG4iCiIgICAgd2hldGhlciB0aGV5IGFyZSBzdWNjZXNzZnVsbHkgY29tcGxldGluZyBwcmludCBqb2JzIGFuZCB2YXJpb3VzIG90aGVyIG1ldHJpY3MuXG4iCiI8L3A+XG4iCiI8cD5cbiIKIiAgICBCeSBlbmFibGluZyBpdCB5b3UgaGVscCB0byBpZGVudGlmeSBwcm9ibGVtcyB3aXRoIG5ldyByZWxlYXNlcyBhbmQgcmVsZWFzZSBjYW5kaWRhdGVzIGVhcmx5IG9uLCBhbmQgdG8gYmV0dGVyXG4iCiIgICAgdGFpbG9yIE9jdG9QcmludCdzIGZ1dHVyZSBkZXZlbG9wbWVudCB0byBhY3R1YWwgdXNlLlxuIgoiPC9wPlxuIgptc2dzdHIgIiIKIlxuIgoiPHA+IExlIHN1aXZpIGRlIGzigJl1dGlsaXNhdGlvbiBhbm9ueW1lIGZvdXJuaXQgZGVzIGluZm9ybWF0aW9ucyBwcsOpY2lldXNlcyBzdXIgbGUgbm9tYnJlIGTigJlpbnN0YW5jZXMgdXRpbGlzYW50IGxlcyB2ZXJzaW9ucyBkZSBPY3RvUHJpbnQsIHMnaWxzIHLDqXVzc2lzc2VudCBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZXQgZGl2ZXJzIGF1dHJlcyBpbmRpY2F0ZXVycy48L3A+XG4iCiI8cD5FbiBs4oCZYWN0aXZhbnQsIHZvdXMgYWlkZXogw6AgaWRlbnRpZmllciBsZXMgcHJvYmzDqG1lcyBhdmVjIGxlcyBub3V2ZWxsZXMgdmVyc2lvbnMgZXQgbGVzIGNhbmRpZGF0cyDDoCBsYSBwdWJsaWNhdGlvbiBkw6hzIGxlIGTDqWJ1dCwgZXQgw6AgbWlldXggYWRhcHRlciBsZSBkw6l2ZWxvcHBlbWVudCBmdXR1ciBkZSBPY3RvUHJpbnQgw6Agc29uIHV0aWxpc2F0aW9uIHLDqWVsbGUuPC9wPlxuIgoKIzogc3JjL29jdG9wcmludC9wbHVnaW5zL3RyYWNraW5nL3RlbXBsYXRlcy9zbmlwcGV0cy9wbHVnaW5zL3RyYWNraW5nL3RyYWNraW5nRGV0YWlscy5qaW5qYTI6MQptc2dpZCAiIgoiXG4iCiIgICAgRm9yIGRldGFpbHMgb24gd2hhdCBnZXRzIHRyYWNrZWQsIHBsZWFzZSByZWZlciB0byA8YSBocmVmPVwiaHR0cHM6Ly90cmFja2luZy5vY3RvcHJpbnQub3JnXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPnRyYWNraW5nLm9jdG9wcmludC5vcmc8L2E+XG4iCiIgICAgYW5kIGFsc28gdGhlIDxhIGhyZWY9XCJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmcvcHJpdmFjeVwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5Qcml2YWN5IFBvbGljeSBhdCB0cmFja2luZy5vY3RvcHJpbnQub3JnPC9hPi5cbiIKbXNnc3RyICIiCiJcbiIKIlBvdXIgbGVzIGTDqXRhaWxzIHN1ciBjZSBxdWkgZXN0IGxlIHN1aXZpLCB2ZXVpbGxleiB2b3VzIHJlcG9ydGVyIMOgIDxhIGhyZWY9XCJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmdcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+dHJhY2tpbmcub2N0b3ByaW50Lm9yZyBldCDDqWdhbGVtZW50IGxhIDxhIGhyZWY9XCJodHRwczovL3RyYWNraW5nLm9jdG9wcmludC5vcmcvcHJpdmFjeVwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5Qb2xpdGlxdWUgZGUgQ29uZmlkZW50aWFsaXTDqSBzdXIgdHJhY2tpbmcub2N0b3ByaW50Lm9yZzwvYT4uXG4iCgojOiBzcmMvb2N0b3ByaW50L3BsdWdpbnMvdmlydHVhbF9wcmludGVyL3RlbXBsYXRlcy92aXJ0dWFsX3ByaW50ZXJfc2V0dGluZ3MuamluamEyOjcKbXNnaWQgIkVuYWJsZSB0aGUgdmlydHVhbCBwcmludGVyIgptc2dzdHIgIkFjdGl2ZXIgbCdpbXByaW1hbnRlIHZpcnR1ZWxsZSIKCiM6IHNyYy9vY3RvcHJpbnQvcGx1Z2lucy92aXJ0dWFsX3ByaW50ZXIvdGVtcGxhdGVzL3ZpcnR1YWxfcHJpbnRlcl9zZXR0aW5ncy5qaW5qYTI6OAptc2dpZCAiSWYgZW5hYmxlZCwgYW4gYWRkaXRpb25hbCBzZXJpYWwgcG9ydCA8Y29kZT5WSVJUVUFMPC9jb2RlPiB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgY29ubmVjdGluZywgYmFja2VkIGJ5IGEgZmFrZSBwcmludGVyIGltcGxlbWVudGF0aW9uLiBVc2VmdWwgZm9yIGRldmVsb3BtZW50LiIKbXNnc3RyICJTJ2lsIGVzdCBhY3RpdsOpLCB1biBwb3J0IHPDqXJpZSBzdXBwbMOpbWVudGFpcmUgPGNvZGU+VklSVFVFTDwvY29kZT4gc2VyYSBkaXNwb25pYmxlIHBvdXIgbGEgY29ubmV4aW9uLCBzb3V0ZW51IHBhciB1bmUgaW1wbMOpbWVudGF0aW9uIGRlIGZhdXNzZSBpbXByaW1hbnRlLiBVdGlsZSBwb3VyIGxlIGTDqXZlbG9wcGVtZW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjkwNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE2Cm1zZ2lkICJDb25uZWN0aW9uIgptc2dzdHIgIkNvbm5leGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjkxNSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjoxCm1zZ2lkICJTdGF0ZSIKbXNnc3RyICLDiXRhdCIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjkyNQptc2dpZCAiRmlsZXMiCm1zZ3N0ciAiRmljaGllcnMiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weTo5NDIKbXNnaWQgIlRlbXBlcmF0dXJlIgptc2dzdHIgIlRlbXDDqXJhdHVyZSIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5Ojk1MQptc2dpZCAiQ29udHJvbCIKbXNnc3RyICJDb250csO0bGUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weTo5NjAKbXNnaWQgIlRlcm1pbmFsIgptc2dzdHIgIlRlcm1pbmFsIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6OTY5IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjExCm1zZ2lkICJUaW1lbGFwc2UiCm1zZ3N0ciAiVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6OTgyCm1zZ2lkICJQcmludGVyIgptc2dzdHIgIkltcHJpbWFudGUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weTo5ODQKbXNnaWQgIlNlcmlhbCBDb25uZWN0aW9uIgptc2dzdHIgIkNvbm5leGlvbiBzw6lyaWUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weTo5OTIgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMuamluamEyOjEKbXNnaWQgIlByaW50ZXIgUHJvZmlsZXMiCm1zZ3N0ciAiUHJvZmlsIGRlcyBJbXByaW1hbnRlcyIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjEwMDAKbXNnaWQgIlRlbXBlcmF0dXJlcyIKbXNnc3RyICJUZW1ww6lyYXR1cmUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDA4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVybWluYWxmaWx0ZXJzLmppbmphMjoxCm1zZ2lkICJUZXJtaW5hbCBGaWx0ZXJzIgptc2dzdHIgIkZpbHRyZXMgZHUgdGVybWluYWwiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDE2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZ2NvZGVzY3JpcHRzLmppbmphMjoxCm1zZ2lkICJHQ09ERSBTY3JpcHRzIgptc2dzdHIgIlNjcmlwdHMgR0NvZGUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDIzIHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjEwMjUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mZWF0dXJlcy5qaW5qYTI6MQptc2dpZCAiRmVhdHVyZXMiCm1zZ3N0ciAiRm9uY3Rpb25uYWxpdMOpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjEwNDEKbXNnaWQgIkFQSSIKbXNnc3RyICJBUEkiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDU4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MTMKbXNnaWQgIkZvbGRlcnMiCm1zZ3N0ciAiRG9zc2llcnMiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDY2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6MQptc2dpZCAiQXBwZWFyYW5jZSIKbXNnc3RyICJBcHBhcmVuY2UiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDc0IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VydmVyLmppbmphMjoxCm1zZ2lkICJTZXJ2ZXIiCm1zZ3N0ciAiU2VydmV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL3ZpZXdzLnB5OjEwODcKbXNnaWQgIkFjY2VzcyIKbXNnc3RyICJBY2PDqHMiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci92aWV3cy5weToxMDk1Cm1zZ2lkICJJbnRlcmZhY2UiCm1zZ3N0ciAiSW50ZXJmYWNlIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6MTEyNQptc2dpZCAiU3RhcnQiCm1zZ3N0ciAiRMOpbWFycsOpIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvdmlld3MucHk6MTEzMiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC5qaW5qYTI6NTcKbXNnaWQgIkZpbmlzaCIKbXNnc3RyICJUZXJtaW7DqSIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL2FwaS9zeXN0ZW0ucHk6MjQ3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJDb21tYW5kU3lzdGVtU2h1dGRvd24uamluamEyOjIKbXNnaWQgIlNodXRkb3duIHN5c3RlbSIKbXNnc3RyICLDiXRlaW5kcmUgbGUgc3lzdMOobWUiCgojOiBzcmMvb2N0b3ByaW50L3NlcnZlci9hcGkvc3lzdGVtLnB5OjI0OAptc2dpZCAiPHN0cm9uZz5Zb3UgYXJlIGFib3V0IHRvIHNodXRkb3duIHRoZSBzeXN0ZW0uPC9zdHJvbmc+PC9wPjxwPlRoaXMgYWN0aW9uIG1heSBkaXNydXB0IGFueSBvbmdvaW5nIHByaW50IGpvYnMgKGRlcGVuZGluZyBvbiB5b3VyIHByaW50ZXIncyBjb250cm9sbGVyIGFuZCBnZW5lcmFsIHNldHVwIHRoYXQgbWlnaHQgYWxzbyBhcHBseSB0byBwcmludHMgcnVuIGRpcmVjdGx5IGZyb20geW91ciBwcmludGVyJ3MgaW50ZXJuYWwgc3RvcmFnZSkuIgptc2dzdHIgIjxzdHJvbmc+Vm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZCdhcnLDqnRlciBsZSBzeXN0w6htZS48L3N0cm9uZz48L3A+PHA+IENldHRlIGFjdGlvbiBwZXV0IHBlcnR1cmJlciBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZW4gY291cnMgKGVuIGZvbmN0aW9uIGR1IGNvbnRyw7RsZXVyIGRlIHZvdHJlIGltcHJpbWFudGUgZXQgZGUgbGEgY29uZmlndXJhdGlvbiBnw6luw6lyYWxlIHF1aSBwZXV0IMOpZ2FsZW1lbnQgcydhcHBsaXF1ZXIgYXV4IGltcHJlc3Npb25zIGV4w6ljdXTDqWVzIGRpcmVjdGVtZW50IMOgIHBhcnRpciBkdSBzdG9ja2FnZSBpbnRlcm5lIGRlIHZvdHJlIGltcHJpbWFudGUpLiIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL2FwaS9zeXN0ZW0ucHk6MjU0Cm1zZ2lkICJSZWJvb3Qgc3lzdGVtIgptc2dzdHIgIlJlZMOpbWFycmVyIGxlIHN5c3TDqG1lIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvYXBpL3N5c3RlbS5weToyNTUKbXNnaWQgIjxzdHJvbmc+WW91IGFyZSBhYm91dCB0byByZWJvb3QgdGhlIHN5c3RlbS48L3N0cm9uZz48L3A+PHA+VGhpcyBhY3Rpb24gbWF5IGRpc3J1cHQgYW55IG9uZ29pbmcgcHJpbnQgam9icyAoZGVwZW5kaW5nIG9uIHlvdXIgcHJpbnRlcidzIGNvbnRyb2xsZXIgYW5kIGdlbmVyYWwgc2V0dXAgdGhhdCBtaWdodCBhbHNvIGFwcGx5IHRvIHByaW50cyBydW4gZGlyZWN0bHkgZnJvbSB5b3VyIHByaW50ZXIncyBpbnRlcm5hbCBzdG9yYWdlKS4iCm1zZ3N0ciAiPHN0cm9uZz5Wb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSByZWTDqW1hcnJlciBsZSBzeXN0w6htZS48L3N0cm9uZz48L3A+PHA+IENldHRlIGFjdGlvbiBwZXV0IHBlcnR1cmJlciBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gZW4gY291cnMgKGVuIGZvbmN0aW9uIGR1IGNvbnRyw7RsZXVyIGRlIHZvdHJlIGltcHJpbWFudGUgZXQgZGUgbGEgY29uZmlndXJhdGlvbiBnw6luw6lyYWxlIHF1aSBwZXV0IMOpZ2FsZW1lbnQgcydhcHBsaXF1ZXIgYXV4IGltcHJlc3Npb25zIGV4w6ljdXTDqWVzIGRpcmVjdGVtZW50IMOgIHBhcnRpciBkdSBzdG9ja2FnZSBpbnRlcm5lIGRlIHZvdHJlIGltcHJpbWFudGUpLiIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL2FwaS9zeXN0ZW0ucHk6MjYxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJDb21tYW5kU2VydmVyUmVzdGFydC5qaW5qYTI6Mgptc2dpZCAiUmVzdGFydCBPY3RvUHJpbnQiCm1zZ3N0ciAiUmVkw6ltYXJyZXIgT2N0b1ByaW50IgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvYXBpL3N5c3RlbS5weToyNjIKbXNnaWQgIjxzdHJvbmc+WW91IGFyZSBhYm91dCB0byByZXN0YXJ0IHRoZSBPY3RvUHJpbnQgc2VydmVyLjwvc3Ryb25nPjwvcD48cD5UaGlzIGFjdGlvbiBtYXkgZGlzcnVwdCBhbnkgb25nb2luZyBwcmludCBqb2JzIChkZXBlbmRpbmcgb24geW91ciBwcmludGVyJ3MgY29udHJvbGxlciBhbmQgZ2VuZXJhbCBzZXR1cCB0aGF0IG1pZ2h0IGFsc28gYXBwbHkgdG8gcHJpbnRzIHJ1biBkaXJlY3RseSBmcm9tIHlvdXIgcHJpbnRlcidzIGludGVybmFsIHN0b3JhZ2UpLiIKbXNnc3RyICI8c3Ryb25nPlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHJlZMOpbWFycmVyIGxlIHNlcnZldXIgT2N0b1ByaW50Ljwvc3Ryb25nPjwvcD48cD4gQ2V0dGUgYWN0aW9uIHBldXQgcGVydHVyYmVyIGxlcyB0cmF2YXV4IGQnaW1wcmVzc2lvbiBlbiBjb3VycyAoZW4gZm9uY3Rpb24gZHUgY29udHLDtGxldXIgZGUgdm90cmUgaW1wcmltYW50ZSBldCBkZSBsYSBjb25maWd1cmF0aW9uIGfDqW7DqXJhbGUgcXVpIHBldXQgw6lnYWxlbWVudCBzJ2FwcGxpcXVlciBhdXggaW1wcmVzc2lvbnMgZXjDqWN1dMOpZXMgZGlyZWN0ZW1lbnQgw6AgcGFydGlyIGR1IHN0b2NrYWdlIGludGVybmUgZGUgdm90cmUgaW1wcmltYW50ZSkuIgoKIzogc3JjL29jdG9wcmludC9zZXJ2ZXIvYXBpL3N5c3RlbS5weToyNjgKbXNnaWQgIlJlc3RhcnQgT2N0b1ByaW50IGluIHNhZmUgbW9kZSIKbXNnc3RyICJSZWTDqW1hcnJlciBPY3RvUHJpbnQgZW4gbW9kZSBzYW5zIMOpY2hlYyIKCiM6IHNyYy9vY3RvcHJpbnQvc2VydmVyL2FwaS9zeXN0ZW0ucHk6MjY5Cm1zZ2lkICI8c3Ryb25nPllvdSBhcmUgYWJvdXQgdG8gcmVzdGFydCB0aGUgT2N0b1ByaW50IHNlcnZlciBpbiBzYWZlIG1vZGUuPC9zdHJvbmc+PC9wPjxwPlRoaXMgYWN0aW9uIG1heSBkaXNydXB0IGFueSBvbmdvaW5nIHByaW50IGpvYnMgKGRlcGVuZGluZyBvbiB5b3VyIHByaW50ZXIncyBjb250cm9sbGVyIGFuZCBnZW5lcmFsIHNldHVwIHRoYXQgbWlnaHQgYWxzbyBhcHBseSB0byBwcmludHMgcnVuIGRpcmVjdGx5IGZyb20geW91ciBwcmludGVyJ3MgaW50ZXJuYWwgc3RvcmFnZSkuIgptc2dzdHIgIjxzdHJvbmc+Vm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgcmVkw6ltYXJyZXIgbGUgc2VydmV1ciBPY3RvUHJpbnQgZW4gbW9kZSBzYW5zIMOpY2hlYy48L3N0cm9uZz48L3A+PHA+Q2V0dGUgYWN0aW9uIHBldXQgcGVydHVyYmVyIGxlcyB0cmF2YXV4IGQnaW1wcmVzc2lvbiBlbiBjb3VycyAoZW4gZm9uY3Rpb24gZHUgY29udHLDtGxldXIgZGUgdm90cmUgaW1wcmltYW50ZSBldCBkZSBsYSBjb25maWd1cmF0aW9uIGfDqW7DqXJhbGUgcXVpIHBldXQgw6lnYWxlbWVudCBzJ2FwcGxpcXVlciBhdXggaW1wcmVzc2lvbnMgZXjDqWN1dMOpZXMgZGlyZWN0ZW1lbnQgw6AgcGFydGlyIGR1IHN0b2NrYWdlIGludGVybmUgZGUgdm90cmUgaW1wcmltYW50ZSkuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjEwNCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MTMwIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjcwOSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9vdmVybGF5cy9vZmZsaW5lLmppbmphMjo2Cm1zZ2lkICJTZXJ2ZXIgaXMgb2ZmbGluZSIKbXNnc3RyICJMZSBzZXJ2ZXVyIGVzdCBob3JzIGxpZ25lIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjEwNQptc2dpZCAiVGhlIHNlcnZlciBhcHBlYXJzIHRvIGJlIG9mZmxpbmUsIGF0IGxlYXN0IEknbSBub3QgZ2V0dGluZyBhbnkgcmVzcG9uc2UgZnJvbSBpdC4gSSdsbCB0cnkgdG8gcmVjb25uZWN0IGF1dG9tYXRpY2FsbHkgPHN0cm9uZz5vdmVyIHRoZSBuZXh0IGNvdXBsZSBvZiBtaW51dGVzPC9zdHJvbmc+LCBob3dldmVyIHlvdSBhcmUgd2VsY29tZSB0byB0cnkgYSBtYW51YWwgcmVjb25uZWN0IGFueXRpbWUgdXNpbmcgdGhlIGJ1dHRvbiBiZWxvdy4iCm1zZ3N0ciAiTGUgc2VydmV1ciBzZW1ibGUgw6p0cmUgaG9ycyBsaWduZSwgZHUgbW9pbnMgamUgbmUgcmXDp29pcyBhdWN1bmVzIHLDqXBvbnNlcyBkZSBjZWx1aS1jaS4gSmUgdmFpcyB0ZW50ZXIgZGUgbWUgcmVjb25uZWN0ZXIgYXV0b21hdGlxdWVtZW50IDxzdHJvbmc+ZGFucyBsZXMgbWludXRlcyBxdWkgc3VpdmVudDwvc3Ryb25nPi4gUXVvaXF1J2lsIGVuIHNvaXQgdm91cyBwb3V2ZXogdGVudGVyIGRlIHZvdXMgcmVjb25uZWN0ZXIgbWFudWVsbGVtZW50IGVuIHV0aWxpc2FudCBsZSBib3V0b24gY2ktZGVzc291cy4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MTMyCm1zZ2lkICJUaGUgc2VydmVyIGFwcGVhcnMgdG8gYmUgb2ZmbGluZSwgYXQgbGVhc3QgSSdtIG5vdCBnZXR0aW5nIGFueSByZXNwb25zZSBmcm9tIGl0LiBJIDxzdHJvbmc+Y291bGQgbm90IHJlY29ubmVjdCBhdXRvbWF0aWNhbGx5PC9zdHJvbmc+LCBidXQgeW91IG1heSB0cnkgYSBtYW51YWwgcmVjb25uZWN0IHVzaW5nIHRoZSBidXR0b24gYmVsb3cuIgptc2dzdHIgIkxlIHNlcnZldXIgc2VtYmxlIMOqdHJlIGhvcnMgbGlnbmUsIGR1IG1vaW5zIGplIG5lIHJlw6dvaXMgYXVjdW5lcyByw6lwb25zZXMgZGUgY2VsdWktY2kuIEplIDxzdHJvbmc+bidhaSBwYXMgcHUgbWUgcmVjb25uZWN0ZXIgYXV0b21hdGlxdWVtZW50PC9zdHJvbmc+LCBtYWlzIHZvdXMgcG91dmV6IHRlbnRlciBkZSB2b3VzIHJlY29ubmVjdGVyIG1hbnVlbGxlbWVudCBlbiB1dGlsaXNhbnQgbGUgYm91dG9uIGNpLWRlc3NvdXMuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjIwOQptc2dpZCAiVW5rbm93biIKbXNnc3RyICJJbmNvbm51IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjIxMgptc2dpZCAiQ29tbWFuZCBsaW5lIGZsYWciCm1zZ3N0ciAiSW5kaWNhdGV1ciBkZSBsaWduZSBkZSBjb21tYW5kZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczoyMTYKbXNnaWQgIlNldHRpbmcgaW4gY29uZmlnLnlhbWwiCm1zZ3N0ciAiUsOpZ2xhZ2UgZGFucyBjb25maWcueWFtbCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczoyMjAKbXNnaWQgIlByb2JsZW0gZHVyaW5nIGxhc3Qgc3RhcnR1cCIKbXNnc3RyICJQcm9ibMOobWUgbG9ycyBkdSBkZXJuaWVyIGTDqW1hcnJhZ2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MjI2Cm1zZ2lkICJTYWZlIG1vZGUgaXMgYWN0aXZlIgptc2dzdHIgIk1vZGUgc2FucyDDqWNoZWMgYWN0aWYiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MjI4CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIjxwPlRoZSBzZXJ2ZXIgaXMgY3VycmVudGx5IHJ1bm5pbmcgaW4gc2FmZSBtb2RlLiBUaGlyZCBwYXJ0eSBwbHVnaW5zIGFuZCBsYW5ndWFnZSBwYWNrcyBhcmUgZGlzYWJsZWQgYW5kIGNhbm5vdCBiZSBlbmFibGVkLjwvcD48cD5SZWFzb246ICUocmVhc29uKXM8L3A+Igptc2dzdHIgIjxwPkxlIHNlcnZldXIgZm9uY3Rpb25uZSBhY3R1ZWxsZW1lbnQgZW4gbW9kZSBzYW5zIMOpY2hlYy4gTGVzIGV4dGVuc2lvbnMgZXQgbGVzIG1vZHVsZXMgbGluZ3Vpc3RpcXVlcyB0aWVycyBzb250IGTDqXNhY3RpdsOpcyBldCBuZSBwZXV2ZW50IHBhcyDDqnRyZSBhY3RpdsOpcy48L3A+PHA+UmFpc29uOiAlKHJlYXNvbilzPC9wPiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczoyNDEKbXNnaWQgIllvdSBhcmUgc3RpbGwgcnVubmluZyBQeXRob24gMiIKbXNnc3RyICJWb3VzIHV0aWxpc2V6IHRvdWpvdXJzIFB5dGhvbsKgMiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczoyNDMKbXNnaWQgIjxwPlB5dGhvbiAyIGlzIGVuZC1vZi1saWZlIGFzIG9mIEphbnVhcnkgMXN0IDIwMjAuIFdoaWxlIE9jdG9QcmludCBjdXJyZW50bHkgc3RpbGwgc3VwcG9ydHMgcnVubmluZyB1bmRlciBQeXRob24gMiwgYSBmdXR1cmUgdmVyc2lvbiB3aWxsIHJlbW92ZSBzdXBwb3J0IGFuZCByZXF1aXJlIFB5dGhvbiAzLiBZb3Ugc2hvdWxkIHVwZ3JhZGUgYXMgc29vbiBhcyBwb3NzaWJsZSE8L3A+PHA+UGxlYXNlIHJlZmVyIHRvIHRoZSBGQVEgZm9yIHJlY29tbWVuZGVkIHVwZGF0ZSB3b3JrZmxvd3M6PC9wPiIKbXNnc3RyICI8cD5QeXRob24gMiBlc3QgZW4gZmluIGRlIHZpZSBsZSAxZXIgamFudmllciAyMDIwLiBBbG9ycyBxdSdPY3RvUHJpbnQgcHJlbmQgYWN0dWVsbGVtZW50IGVuIGNoYXJnZSBsJ2V4w6ljdXRpb24gc291cyBQeXRob24gMiwgdW5lIGZ1dHVyZSB2ZXJzaW9uIHN1cHByaW1lcmEgbGEgcHJpc2UgZW4gY2hhcmdlIGV0IG7DqWNlc3NpdGVyYSBQeXRob24gMy4gVm91cyBkZXZleiBtZXR0cmUgw6Agbml2ZWF1IGTDqHMgcXVlIHBvc3NpYmxlwqAhPC9wPiA8cD5WZXVpbGxleiB2b3VzIHLDqWbDqXJlciDDoCBsYSBGQVEgcG91ciBtZXR0cmUgw6Agam91ciBsZXMgZmx1eCBkZSB0cmF2YWlsIHJlY29tbWFuZMOpc8KgOjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6Mjk3IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjEzNDkgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTM1OAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJTbGljaW5nIC4uLiAoJShwZXJjZW50YWdlKWQlJSkiCm1zZ3N0ciAiRMOpY291cGFnZSAuLi4gKCUocGVyY2VudGFnZSlkJSUpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjMzNiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MzQ5Cm1zZ2lkICJFcnJvciByZXBvcnRlZCBieSBwcmludGVyIgptc2dzdHIgIkVycmV1ciBzaWduYWzDqWUgcGFyIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczozMzgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91ciBwcmludGVyJ3MgZmlybXdhcmUgcmVwb3J0ZWQgYW4gZXJyb3IuIER1ZSB0byB0aGF0IHRoZSBvbmdvaW5nIHByaW50IGpvYiB3aWxsIGJlIGNhbmNlbGxlZC4gUmVwb3J0ZWQgZXJyb3I6ICUoZmlybXdhcmVFcnJvcilzIgptc2dzdHIgIkxlIGZpcm13YXJlIGRlIHZvdHJlIGltcHJpbWFudGUgYSBzaWduYWzDqSB1bmUgZXJyZXVyLiBFbiByYWlzb24gZGUgY2VsYSwgbGUgdHJhdmFpbCBkJ2ltcHJlc3Npb24gZW4gY291cnMgc2VyYSBhbm51bMOpLiBFcnJldXIgc2lnbmFsw6llOiAlKGZpcm13YXJlRXJyb3IpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczozNTEKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91ciBwcmludGVyJ3MgZmlybXdhcmUgcmVwb3J0ZWQgYW4gZXJyb3IuIER1ZSB0byB0aGF0IE9jdG9QcmludCB3aWxsIGRpc2Nvbm5lY3QuIFJlcG9ydGVkIGVycm9yOiAlKGVycm9yKXMiCm1zZ3N0ciAiTGUgZmlybXdhcmUgZGUgdm90cmUgaW1wcmltYW50ZSBhIHNpZ25hbMOpIHVuZSBlcnJldXIuIEMnZXN0IHBvdXJxdW9pIE9jdG9QcmludCB2YSBzZSBkw6ljb25uZWN0ZXIuIEVycmV1ciBzaWduYWzDqWU6ICUoZXJyb3IpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczozNjEKbXNnaWQgIkNvbW11bmljYXRpb24gZXJyb3IiCm1zZ3N0ciAiRXJyZXVyIGRlIGNvbW11bmljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MzYzCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlRoZXJlIHdhcyBhIGNvbW11bmljYXRpb24gZXJyb3Igd2hpbGUgdGFsa2luZyB0byB5b3VyIHByaW50ZXIuIFBsZWFzZSBjb25zdWx0IHRoZSB0ZXJtaW5hbCBvdXRwdXQgYW5kIG9jdG9wcmludC5sb2cgZm9yIGRldGFpbHMuIEVycm9yOiAlKGVycm9yKXMiCm1zZ3N0ciAiSWwgeSBhIGV1IHVuZSBlcnJldXIgZGUgY29tbXVuaWNhdGlvbiBhdmVjIHZvdHJlIGltcHJpbWFudGUuIFZldWlsbGV6IGNvbnN1bHRlciBsYSBzb3J0aWUgZHUgdGVybWluYWwgZXQgb2N0b3ByaW50LmxvZyBwb3VyIHBsdXMgZGUgZMOpdGFpbHMuIEVycmV1cjogJShlcnJvcilzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjM3MQptc2dpZCAiRXJyb3IgY29ubmVjdGluZyB0byBwcmludGVyIgptc2dzdHIgIkVycmV1ciBkZSBjb25uZXhpb24gw6AgbCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjM3MwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJUaGVyZSB3YXMgYW4gZXJyb3Igd2hpbGUgdHJ5aW5nIHRvIGNvbm5lY3QgdG8geW91ciBwcmludGVyLiBFcnJvcjogJShlcnJvcilzIgptc2dzdHIgIlVuZSBlcnJldXIgcydlc3QgcHJvZHVpdGUgbG9ycyBkZSBsYSB0ZW50YXRpdmUgZGUgY29ubmV4aW9uIMOgIHZvdHJlIGltcHJpbWFudGUuIEVycmV1cjogJShlcnJvcilzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjM4MQptc2dpZCAiRXJyb3Igc3RhcnRpbmcgYSBwcmludCIKbXNnc3RyICJFcnJldXIgbG9ycyBkdSBkw6ltYXJyYWdlIGQndW5lIGltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6MzgzCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlRoZXJlIHdhcyBhbiBlcnJvciB3aGlsZSB0cnlpbmcgdG8gc3RhcnQgYSBwcmludCBqb2IuIEVycm9yOiAlKGVycm9yKXMiCm1zZ3N0ciAiVW5lIGVycmV1ciBzJ2VzdCBwcm9kdWl0ZSBsb3JzIGRlIGxhIHRlbnRhdGl2ZSBkZSBkw6ltYXJyYWdlIGQndW4gdHJhdmFpbCBkJ2ltcHJlc3Npb24uIEVycmV1cjolKGVycm9yKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6Mzk1Cm1zZ2lkICJVbmtub3duIGVycm9yIgptc2dzdHIgIkVycmV1ciBpbmNvbm51ZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczozOTcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVGhlcmUgd2FzIGFuIHVua25vd24gZXJyb3Igd2hpbGUgdGFsa2luZyB0byB5b3VyIHByaW50ZXIuIFBsZWFzZSBjb25zdWx0IHRoZSB0ZXJtaW5hbCBvdXRwdXQgYW5kIG9jdG9wcmludC5sb2cgZm9yIGRldGFpbHMuIEVycm9yOiAlKGVycm9yKXMiCm1zZ3N0ciAiSWwgeSBhIGV1IHVuZSBlcnJldXIgaW5jb25udWUgZW4gY29tbXVuaXF1YW50IGF2ZWMgdm90cmUgaW1wcmltYW50ZS4gVmV1aWxsZXogY29uc3VsdGVyIGxhIHNvcnRpZSBkdSB0ZXJtaW5hbCBldCBvY3RvcHJpbnQubG9nIHBvdXIgcGx1cyBkZSBkw6l0YWlscy4gRXJyZXVyOiAlKGVycm9yKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvZGF0YXVwZGF0ZXIuanM6NDE5Cm1zZ2lkICJJdCBsb29rcyBsaWtlIHlvdXIgcHJpbnRlciByZXNldCB3aGlsZSBhIGNvbm5lY3Rpb24gd2FzIGFjdGl2ZS4gSWYgdGhpcyB3YXMgaW50ZW50aW9uYWwgeW91IG1heSBzYWZlbHkgaWdub3JlIHRoaXMgbWVzc2FnZS4gT3RoZXJ3aXNlIHlvdSBzaG91bGQgaW52ZXN0aWdhdGUgd2h5IHlvdXIgcHJpbnRlciByZXNldCBpdHNlbGYsIHNpbmNlIHRoaXMgd2lsbCBpbnRlcnJ1cHQgcHJpbnRzIGFuZCBhbHNvIGZpbGUgdHJhbnNmZXJzIHRvIHlvdXIgcHJpbnRlcidzIFNELiIKbXNnc3RyICJJbCBzZW1ibGUgcXVlIHZvdHJlIGltcHJpbWFudGUgYWl0IMOpdMOpIHLDqWluaXRpYWxpc8OpZSBhbG9ycyBxdSd1bmUgY29ubmV4aW9uIMOpdGFpdCBhY3RpdmUuIFNpIGNlbGEgw6l0YWl0IGludGVudGlvbm5lbCwgdm91cyBwb3V2ZXogaWdub3JlciBjZSBtZXNzYWdlLiBEYW5zIGxlIGNhcyBjb250cmFpcmUsIHZvdXMgZGV2ZXogcmVjaGVyY2hlciBsZXMgcmFpc29ucyBwb3VyIGxlc3F1ZWxsZXMgdm90cmUgaW1wcmltYW50ZSBlc3QgcsOpaW5pdGlhbGlzw6llLCBjYXIgY2VsYSBpbnRlcnJvbXB0IGxlcyBpbXByZXNzaW9ucyBldCBsZXMgdHJhbnNmZXJ0cyBkZSBmaWNoaWVycyB2ZXJzIGxhIGNhcnRlIFNEIGRlIHZvdHJlIGltcHJpbWFudGUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2RhdGF1cGRhdGVyLmpzOjQyNAptc2dpZCAiSXQgbG9va3MgbGlrZSB5b3VyIHByaW50ZXIgcmVzZXQgd2hpbGUgYSBjb25uZWN0aW9uIHdhcyBhY3RpdmUuIER1ZSB0byB0aGlzIHRoZSBvbmdvaW5nIGpvYiB3YXMgYWJvcnRlZC4gSWYgdGhpcyB3YXMgaW50ZW50aW9uYWwgeW91IG1heSBzYWZlbHkgaWdub3JlIHRoaXMgbWVzc2FnZS4gT3RoZXJ3aXNlIHlvdSBzaG91bGQgaW52ZXN0aWdhdGUgd2h5IHlvdXIgcHJpbnRlciByZXNldCBpdHNlbGYsIHNpbmNlIHRoaXMgd2lsbCBpbnRlcnJ1cHQgcHJpbnRzIGFuZCBhbHNvIGZpbGUgdHJhbnNmZXJzIHRvIHlvdXIgcHJpbnRlcidzIFNELiIKbXNnc3RyICJJbCBzZW1ibGUgcXVlIHZvdHJlIGltcHJpbWFudGUgYSDDqXTDqSByw6lpbml0aWFsaXPDqWUgYWxvcnMgcXUndW5lIGNvbm5leGlvbiDDqXRhaXQgYWN0aXZlLiBEZSBjZSBmYWl0LCBsZSB0cmF2YWlsIGVuIGNvdXJzIGEgw6l0w6kgaW50ZXJyb21wdS4gU2kgYyfDqXRhaXQgaW50ZW50aW9ubmVsLCB2b3VzIHBvdXZleiBpZ25vcmVyIGNlIG1lc3NhZ2UuIFNpbm9uLCB2b3VzIGRldnJpZXogdsOpcmlmaWVyIHBvdXJxdW9pIHZvdHJlIGltcHJpbWFudGUgc2UgcsOpaW5pdGlhbGlzZSwgY2FyIGNlbGEgaW50ZXJyb21wdCBsZXMgaW1wcmVzc2lvbnMgZXQgbGVzIHRyYW5zZmVydHMgZGUgZmljaGllcnMgdmVycyBsYSBjYXJ0ZSBTRCBkZSB2b3RyZSBpbXByaW1hbnRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9kYXRhdXBkYXRlci5qczo0MzQKbXNnaWQgIlByaW50ZXIgcmVzZXQgZGV0ZWN0ZWQiCm1zZ3N0ciAiUsOpaW5pdGlhbGlzYXRpb24gZGUgbCdpbXByaW1hbnRlIGTDqXRlY3TDqWUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo0NzUKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiJShob3VyKTAyZDolKG1pbnV0ZSkwMmQ6JShzZWNvbmQpMDJkIgptc2dzdHIgIiUoaG91cikwMmQ6JShtaW51dGUpMDJkOiUoc2Vjb25kKTAyZCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjUzNiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo1NDQKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiJShkYXlzKWQgZGF5Igptc2dzdHIgIiUoZGF5cylkIGpvdXIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo1Mzggc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTQ2CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUoZGF5cylkIGRheXMiCm1zZ3N0ciAiJShkYXlzKWQgam91cnMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo1NDEKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiJShkYXlzKWQuNSBkYXlzIgptc2dzdHIgIiUoZGF5cylkLjUgam91cnMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo1NTUgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTY3CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUoaG91cnMpZCBob3VyIgptc2dzdHIgIiUoaG91cnMpZCBoZXVyZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjU1NyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo1Njkgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTgxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUoaG91cnMpZCBob3VycyIKbXNnc3RyICIlKGhvdXJzKWQgaGV1cmVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTYxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUoaG91cnMpZC41IGhvdXJzIgptc2dzdHIgIiUoaG91cnMpZC41IGhldXJlcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjU3NQptc2dpZCAiMSBkYXkiCm1zZ3N0ciAiMSBqb3VyIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTg4Cm1zZ2lkICJhIG1pbnV0ZSIKbXNnc3RyICJ1bmUgbWludXRlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTkwCm1zZ2lkICIyIG1pbnV0ZXMiCm1zZ3N0ciAiMiBtaW51dGVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NTk2CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUobWludXRlcylkIG1pbnV0ZXMiCm1zZ3N0ciAiJShtaW51dGVzKWQgbWludXRlcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjU5OAptc2dpZCAiNDAgbWludXRlcyIKbXNnc3RyICI0MCBtaW51dGVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NjAwCm1zZ2lkICI1MCBtaW51dGVzIgptc2dzdHIgIjUwIG1pbnV0ZXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo2MDIKbXNnaWQgIjEgaG91ciIKbXNnc3RyICIxIGhldXJlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NjA3Cm1zZ2lkICJhIGZldyBzZWNvbmRzIgptc2dzdHIgInF1ZWxxdWVzIHNlY29uZGVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NjA5Cm1zZ2lkICJsZXNzIHRoYW4gYSBtaW51dGUiCm1zZ3N0ciAibW9pbnMgZCd1bmUgbWludXRlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NjIzCm1zZ2lkICJZWVlZLU1NLUREIEhIOm1tIgptc2dzdHIgIkREL01NL1lZWVkgSEg6bW0iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo2MjUKbXNnaWQgIllZWVktTU0tREQgSEg6bW06c3MiCm1zZ3N0ciAiREQvTU0vWVlZWSBISDptbTpzcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjY1MCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvaGVscGVycy5qczo2NTYKbXNnaWQgIm9mZiIKbXNnc3RyICLDqXRlaW50IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL2hlbHBlcnMuanM6NzkyIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczozMjQgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvYWNjZXNzLmpzOjY1NiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9jb25uZWN0aW9uLmpzOjE1Nwptc2dpZCAiQXJlIHlvdSBzdXJlPyIKbXNnc3RyICLDinRlcy12b3VzIHPDu3IgPyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9oZWxwZXJzLmpzOjEwNDUKbXNnaWQgIlByb2dyZXNzIgptc2dzdHIgIlByb2dyZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjQ1Cm1zZ2lkICJPZmZsaW5lIgptc2dzdHIgIkltcHJpbWFudGUgSG9ycyBsaWduZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9tYWluLmpzOjI0Ngptc2dpZCAiT2ZmbGluZSBhZnRlciBlcnJvciIKbXNnc3RyICJEw6ljb25uZWN0w6kgYXByw6hzIHVuZSBlcnJldXIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoyNDcgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc3lzdGVtLmpzOjEwMgptc2dpZCAiRXJyb3IiCm1zZ3N0ciAiRXJyZXVyIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjQ4Cm1zZ2lkICJPcGVuaW5nIHNlcmlhbCBjb25uZWN0aW9uIgptc2dzdHIgIk91dmVydHVyZSBkZSBsYSBjb25uZXhpb24gc8OpcmllIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjQ5Cm1zZ2lkICJEZXRlY3Rpbmcgc2VyaWFsIGNvbm5lY3Rpb24iCm1zZ3N0ciAiRMOpdGVjdGlvbiBkZSBsYSBjb25uZXhpb24gc8OpcmllIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjUwCm1zZ2lkICJDb25uZWN0aW5nIgptc2dzdHIgIkNvbm5leGlvbiBJbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjUxCm1zZ2lkICJPcGVyYXRpb25hbCIKbXNnc3RyICJJbXByaW1hbnRlIG9ww6lyYXRpb25uZWxsZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9tYWluLmpzOjI1Mgptc2dpZCAiU3RhcnRpbmciCm1zZ3N0ciAiTGFuY2VyIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjUzCm1zZ2lkICJTdGFydGluZyBwcmludCBmcm9tIFNEIgptc2dzdHIgIkxhbmNlciBsJ2ltcHJlc3Npb24gZGVwdWlzIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjU0Cm1zZ2lkICJTdGFydGluZyB0byBzZW5kIGZpbGUgdG8gU0QiCm1zZ3N0ciAiRMOpYnV0IGR1IHRyYW5zZmVydCB2ZXJzIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjU1Cm1zZ2lkICJQcmludGluZyBmcm9tIFNEIgptc2dzdHIgIkltcHJlc3Npb24gZGVwdWlzIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjU2Cm1zZ2lkICJTZW5kaW5nIGZpbGUgdG8gU0QiCm1zZ3N0ciAiRW52b2kgZHUgZmljaGllciB2ZXJzIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjU3Cm1zZ2lkICJQcmludGluZyIKbXNnc3RyICJJbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjU4Cm1zZ2lkICJQYXVzZWQiCm1zZ3N0ciAiRW4gcGF1c2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoyNTkKbXNnaWQgIkNsb3NlZCIKbXNnc3RyICJGZXJtw6kiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoyNjAKbXNnaWQgIlRyYW5zZmVycmluZyBmaWxlIHRvIFNEIgptc2dzdHIgIlRyYW5zZmVydCBkZSBmaWNoaWVyIHZlcnMgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoyNjEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1MTcKbXNnaWQgIlBhdXNpbmciCm1zZ3N0ciAiRW4gcGF1c2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoyNjIKbXNnaWQgIlJlc3VtaW5nIgptc2dzdHIgIlJlcHJlbmRyZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC9tYWluLmpzOjI2MyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUyNgptc2dpZCAiQ2FuY2VsbGluZyIKbXNnc3RyICJBbm51bGF0aW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL21haW4uanM6MjY0Cm1zZ2lkICJGaW5pc2hpbmciCm1zZ3N0ciAiRmluaXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvbWFpbi5qczoxMDUxCm1zZ2lkICJMb2FkaW5nIE9jdG9QcmludCdzIFVJLCBwbGVhc2Ugd2FpdC4uLiIKbXNnc3RyICJDaGFyZ2VtZW50IGRlIGwnaW50ZXJmYWNlIE9jdG9QcmludCwgVmV1aWxsZXogcGF0aWVudGVyLi4uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvYWNjZXNzLmpzOjk5Cm1zZ2lkICJUaGlzIHVzZXIgbWF5IG5vdCBoYXZlIGRhbmdlcm91cyBwZXJtaXNzaW9ucy4iCm1zZ3N0ciAiQ2V0IHV0aWxpc2F0ZXVyIG5lIGRvaXQgcGFzIGF2b2lyIGRlIHBlcm1pc3Npb25zIGRhbmdlcmV1c2VzLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczoxMTQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NDgKbXNnaWQgIkFkZCB1c2VyIgptc2dzdHIgIkFqb3V0ZXIgdW4gdXRpbGlzYXRldXIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hY2Nlc3MuanM6MTI0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkVkaXQgdXNlciBcIiUobmFtZSlzXCIiCm1zZ3N0ciAiTW9kaWZpZXIgbCd1dGlsaXNhdGV1ciBcIiUobmFtZSlzXCIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hY2Nlc3MuanM6MzE0Cm1zZ2lkICJOb3QgcG9zc2libGUiCm1zZ3N0ciAiSW1wb3NzaWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczozMTUKbXNnaWQgIllvdSBtYXkgbm90IGRlbGV0ZSB5b3VyIG93biBhY2NvdW50LiIKbXNnc3RyICJWb3VzIG5lIHBvdXZleiBwYXMgc3VwcHJpbWVyIHZvdHJlIHByb3ByZSBjb21wdGUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvYWNjZXNzLmpzOjMyNgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSB0aGUgdXNlciBcIiUobmFtZSlzXCIuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciBsJ3V0aWxpc2F0ZXVyIFwiJShuYW1lKXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9hY2Nlc3MuanM6NDU5Cm1zZ2lkICJUaGlzIGdyb3VwIG1heSBub3QgaGF2ZSBkYW5nZXJvdXMgcGVybWlzc2lvbnMgb3Igc3ViZ3JvdXBzLiIKbXNnc3RyICJDZSBncm91cGUgbmUgcGV1dCBwYXMgYXZvaXIgZCdhdXRvcmlzYXRpb25zIG91IGRlIHNvdXMtZ3JvdXBlcyBkYW5nZXJldXguIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvYWNjZXNzLmpzOjUxNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6NDcKbXNnaWQgIkFkZCBncm91cCIKbXNnc3RyICJBam91dGVyIHVuIGdyb3VwZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczo1MjkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRWRpdCBncm91cCBcIiUobmFtZSlzXCIiCm1zZ3N0ciAiTW9kaWZpZXIgbGUgZ3JvdXBlIFwiJShuYW1lKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2FjY2Vzcy5qczo2NTgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgdGhlIGdyb3VwIFwiJShuYW1lKXNcIi4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIGdyb3VwZSBcIiUobmFtZSlzXCIuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvY29ubmVjdGlvbi5qczo0MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2Nvbm5lY3Rpb24uamluamEyOjEzCm1zZ2lkICJDb25uZWN0Igptc2dzdHIgIkNvbm5lY3RlciIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2Nvbm5lY3Rpb24uanM6NDMgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvY29ubmVjdGlvbi5qczoxNzAKbXNnaWQgIkRpc2Nvbm5lY3QiCm1zZ3N0ciAiRMOpY29ubmVjdGVyIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvY29ubmVjdGlvbi5qczoxNTgKbXNnaWQgIjxwPjxzdHJvbmc+WW91IGFyZSBhYm91dCB0byBkaXNjb25uZWN0IGZyb20gdGhlIHByaW50ZXIgd2hpbGUgYSBwcmludCBpcyBpbiBwcm9ncmVzcy48L3N0cm9uZz48L3A+PHA+RGlzY29ubmVjdGluZyB3aGlsZSBhIHByaW50IGlzIGluIHByb2dyZXNzIHdpbGwgcHJldmVudCBPY3RvUHJpbnQgZnJvbSBjb21wbGV0aW5nIHRoZSBwcmludC4gSWYgeW91J3JlIHByaW50aW5nIGZyb20gYW4gU0QgY2FyZCBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgcHJpbnRlciwgYW55IGF0dGVtcHQgdG8gcmVzdGFydCBPY3RvUHJpbnQgb3IgcmVjb25uZWN0IHRvIHRoZSBwcmludGVyIGNvdWxkIGludGVycnVwdCB0aGUgcHJpbnQuPHA+Igptc2dzdHIgIjxwPjxzdHJvbmc+Vm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgdm91cyBkw6ljb25uZWN0ZXIgZGUgbCdpbXByaW1hbnRlIHBlbmRhbnQgcXUndW5lIGltcHJlc3Npb24gZXN0IGVuIGNvdXJzLjwvc3Ryb25nPjwvcD4gPHA+TGUgZmFpdCBkZSBzZSBkw6ljb25uZWN0ZXIgcGVuZGFudCBxdSd1bmUgaW1wcmVzc2lvbiBlc3QgZW4gY291cnMgZW1ww6pjaGVyYSBPY3RvUHJpbnQgZGUgdGVybWluZXIgbCdpbXByZXNzaW9uLiBTaSB2b3VzIGltcHJpbWV6IMOgIHBhcnRpciBkJ3VuZSBjYXJ0ZSBTRCBhdHRhY2jDqWUgZGlyZWN0ZW1lbnQgw6AgbCdpbXByaW1hbnRlLCB0b3V0ZSB0ZW50YXRpdmUgZGUgcmVkw6ltYXJyZXIgT2N0b1ByaW50IG91IGRlIHNlIHJlY29ubmVjdGVyIMOgIGwnaW1wcmltYW50ZSBwb3VycmFpdCBpbnRlcnJvbXByZSBsJ2ltcHJlc3Npb24uPHA+IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvY29ubmVjdGlvbi5qczoxNjYKbXNnaWQgIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkaXNjb25uZWN0IGZyb20gdGhlIHByaW50ZXI/Igptc2dzdHIgIsOKdGVzLXZvdXMgc8O7ciBkZSB2b3Vsb2lyIHZvdXMgZMOpY29ubmVjdGVyIGRlIGwnaW1wcmltYW50ZT8iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9jb25uZWN0aW9uLmpzOjE2OQptc2dpZCAiU3RheSBDb25uZWN0ZWQiCm1zZ3N0ciAiUmVzdGVyIGNvbm5lY3TDqSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2NvbnRyb2wuanM6OTEKbXNnaWQgIkhvdGVuZCIKbXNnc3RyICJCdXNlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6NTYKbXNnaWQgIllvdXIgYXZhaWxhYmxlIGZyZWUgZGlzayBzcGFjZSBpcyBjcml0aWNhbGx5IGxvdy4iCm1zZ3N0ciAiTCdlc3BhY2UgZGlzcXVlIGRpc3BvbmlibGUgZXN0IGRhbmdlcmV1c2VtZW50IGZhaWJsZS4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczo1OAptc2dpZCAiWW91ciBhdmFpbGFibGUgZnJlZSBkaXNrIHNwYWNlIGlzIHN0YXJ0aW5nIHRvIHJ1biBsb3cuIgptc2dzdHIgIkwnZXNwYWNlIGRpc3F1ZSBkaXNwb25pYmxlIGVzdCBmYWlibGUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6NjAKbXNnaWQgIllvdXIgY3VycmVudCBkaXNrIHVzYWdlLiIKbXNnc3RyICJWb3RyZSB1dGlsaXNhdGlvbiBkdSBkaXNxdWUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MjM4Cm1zZ2lkICJPbmx5IHNob3cgbW9kZWwgZmlsZXMiCm1zZ3N0ciAiQWZmaWNoZXIgdW5pcXVlbWVudCBsZXMgZmljaGllcnMgZGVzIG1vZMOobGVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MjM5Cm1zZ2lkICJPbmx5IHNob3cgbWFjaGluZSBjb2RlIGZpbGVzIgptc2dzdHIgIk1vbnRyZXIgc2V1bGVtZW50IGxlcyBmaWNoaWVycyBkZSBjb2RlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MjQ5CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk9ubHkgc2hvdyAlKHR5cGUpcyBmaWxlcyIKbXNnc3RyICJNb250cmVyIHNldWxlbWVudCAlKHR5cGUpcyBmaWNoaWVyKHMpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6NjExCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gZGVsZXRlIHRoZSBmb2xkZXIgXCIlKGZvbGRlcilzXCIgd2hpY2ggc3RpbGwgY29udGFpbnMgZmlsZXMgYW5kL29yIHN1YiBmb2xkZXJzLiIKbXNnc3RyICJWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBzdXBwcmltZXIgbGUgZG9zc2llciBcIiUoZm9sZGVyKXNcIiBxdWkgY29udGllbnQgZGVzIGZpY2hpZXJzIGV0L291IHNvdXMgZG9zc2llcnMuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6NjY3IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczo0NTkKbXNnaWQgIlRoaXMgd2lsbCBzdGFydCBhIG5ldyBwcmludCBqb2IuIFBsZWFzZSBjaGVjayB0aGF0IHRoZSBwcmludCBiZWQgaXMgY2xlYXIuIgptc2dzdHIgIkNlbGEgdmEgZMOpbWFycmVyIHVuIG5vdXZlYXUgdHJhdmFpbCBkJ2ltcHJlc3Npb24uIFZldWlsbGV6IHbDqXJpZmllciBxdWUgbGUgcGxhdGVhdSBkJ2ltcHJlc3Npb24gZXN0IHZpZGUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6NjcwIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczo0NjIKbXNnaWQgIkRvIHlvdSB3YW50IHRvIHN0YXJ0IHRoZSBwcmludCBqb2Igbm93PyIKbXNnc3RyICJWb3VsZXotdm91cyBkw6ltYXJyZXIgbCdpbXByZXNzaW9uIG1haW50ZW5hbnQgPyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjY3MSBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6NDYzCm1zZ2lkICJObyIKbXNnc3RyICJOb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczo2NzIgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjQ2NAptc2dpZCAiWWVzIgptc2dzdHIgIk91aSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjc4MAptc2dpZCAiVW5hYmxlIHRvIG1vdmUgZmlsZSBvciBmb2xkZXIiCm1zZ3N0ciAiSW1wb3NzaWJsZSBkZSBkw6lwbGFjZXIgbGUgZmljaGllciBvdSBsZSBkb3NzaWVyIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6Nzg0Cm1zZ2lkICJ0byIKbXNnc3RyICLDoCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjk3NQptc2dpZCAiTW9kZWwgY29udGFpbnMgbm8gZXh0cnVzaW9uLjxicj4iCm1zZ3N0ciAiTGUgbW9kw6hsZSBuZSBjb250aWVudCBhdWN1bmUgZXh0cnVzaW9uLjxicj4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMDM3Cm1zZ2lkICJMYXN0IHByaW50ZWQiCm1zZ3N0ciAiRGVybmnDqHJlIGltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMDQzCm1zZ2lkICJMYXN0IHByaW50IHRpbWUiCm1zZ3N0ciAiRGVybmllciB0ZW1wcyBkJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMTA4CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk9iamVjdCBpbiAlKG5hbWUpcyBleGNlZWRzIHRoZSBwcmludCB2b2x1bWUgb2YgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBwcmludGVyIHByb2ZpbGUsIGJlIGNhcmVmdWwgd2hlbiBwcmludGluZyB0aGlzLiIKbXNnc3RyICJMJ29iamV0ICUobmFtZSlzIGEgdW4gdm9sdW1lIGQnaW1wcmVzc2lvbiBwbHVzIGdyYW5kIHF1ZSBsZSBwcm9maWwgc8OpbGVjdGlvbm7DqSwgYXR0ZW50aW9uIGF2ZWMgbCdpbXByZXNzaW9uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjExMjYKbXNnaWQgIk9iamVjdCBleGNlZWRzIHByaW50IHZvbHVtZSBpbiB3aWR0aC48YnI+Igptc2dzdHIgIkzigJlvYmpldCBlc3QgdHJvcCBsYXJnZS48YnI+IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTEzMgptc2dpZCAiT2JqZWN0IGV4Y2VlZHMgcHJpbnQgdm9sdW1lIGluIGRlcHRoLjxicj4iCm1zZ3N0ciAiTCdvYmpldCBlc3QgdHJvcCBwcm9mb25kLjxicj4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMTM4Cm1zZ2lkICJPYmplY3QgZXhjZWVkcyBwcmludCB2b2x1bWUgaW4gaGVpZ2h0Ljxicj4iCm1zZ3N0ciAiTCdvYmpldCBlc3QgdHJvcCBoYXV0Ljxicj4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMTQ1Cm1zZ2lkICJPYmplY3QncyBib3VuZGluZyBib3g6ICglKG9iamVjdC5taW5YKS4yZiwgJShvYmplY3QubWluWSkuMmYsICUob2JqZWN0Lm1pblopLjJmKSAmdGltZXM7ICglKG9iamVjdC5tYXhYKS4yZiwgJShvYmplY3QubWF4WSkuMmYsICUob2JqZWN0Lm1heFopLjJmKSIKbXNnc3RyICJCb8OudGUgZGUgZMOpbGltaXRhdGlvbiBkZSBsJ29iamV0OiAoJShvYmplY3QubWluWCkuMmYsICUob2JqZWN0Lm1pblkpLjJmLCAlKG9iamVjdC5taW5aKS4yZikgJnRpbWVzOyAoJShvYmplY3QubWF4WCkuMmYsICUob2JqZWN0Lm1heFkpLjJmLCAlKG9iamVjdC5tYXhaKS4yZikiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMTUyCm1zZ2lkICJQcmludCB2b2x1bWU6ICglKHByb2ZpbGUubWluWCkuMmYsICUocHJvZmlsZS5taW5ZKS4yZiwgJShwcm9maWxlLm1pblopLjJmKSAmdGltZXM7ICglKHByb2ZpbGUubWF4WCkuMmYsICUocHJvZmlsZS5tYXhZKS4yZiwgJShwcm9maWxlLm1heFopLjJmKSIKbXNnc3RyICJWb2x1bWUgZCdpbXByZXNzaW9uIDogKCUocHJvZmlsZS5taW5YKS4yZiwgJShwcm9maWxlLm1pblkpLjJmLCAlKHByb2ZpbGUubWluWikuMmYpICZ0aW1lczsgKCUocHJvZmlsZS5tYXhYKS4yZiwgJShwcm9maWxlLm1heFkpLjJmLCAlKHByb2ZpbGUubWF4WikuMmYpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTE2NAptc2dpZCAiT2JqZWN0IGRvZXNuJ3QgZml0IHByaW50IHZvbHVtZSIKbXNnc3RyICJMJ29iamV0IG5lIGNvcnJlc3BvbmQgcGFzIGF1IHZvbHVtZSBkJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxMzUyCm1zZ2lkICJTbGljaW5nIC4uLiIKbXNnc3RyICJEw6ljb3VwYWdlIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjEzNzkKbXNnaWQgIlNsaWNpbmcgZG9uZSIKbXNnc3RyICJEw6ljb3VwYWdlIHRlcm1pbsOpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTM4MQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJTbGljZWQgJShzdGwpcyB0byAlKGdjb2RlKXMsIHRvb2sgJSh0aW1lKS4yZiBzZWNvbmRzIgptc2dzdHIgIkTDqWNvdXDDqSBkZSAlKHN0bClzIHZlcnMgJShnY29kZSlzLCBlbiAlKHRpbWUpLjJmIHNlY29uZGVzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTQwMQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJDb3VsZCBub3Qgc2xpY2UgJShzdGwpcyB0byAlKGdjb2RlKXM6ICUocmVhc29uKXMiCm1zZ3N0ciAiTGUgZMOpY291cGFnZSBkZSAlKHN0bClzIHZlcnMgJShnY29kZSlzIGEgw6ljaG91w6kgOiAlKHJlYXNvbilzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTQwOQptc2dpZCAiU2xpY2luZyBmYWlsZWQiCm1zZ3N0ciAiTGUgZMOpY291cGFnZSBhIMOpY2hvdcOpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTQyOAptc2dpZCAiU3RyZWFtaW5nIC4uLiIKbXNnc3RyICJEaWZmdXNpb24uLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxNDM4Cm1zZ2lkICJTdHJlYW1pbmcgZG9uZSIKbXNnc3RyICJEaWZmdXNpb24gdGVybWluw6llIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTQ0MAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJTdHJlYW1lZCAlKGxvY2FsKXMgdG8gJShyZW1vdGUpcyBvbiBTRCwgdG9vayAlKHRpbWUpLjJmIHNlY29uZHMiCm1zZ3N0ciAiRGlmZnVzaW9uIGRlICUobG9jYWwpcyB2ZXJzICUocmVtb3RlKXMgc3VyIGxhIGNhcnRlIFNELCB0ZW1wcyA6ICUodGltZSkuMmYgc2Vjb25kZXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxNDYyCm1zZ2lkICJTdHJlYW1pbmcgZmFpbGVkIgptc2dzdHIgIkxlIHN0cmVhbWluZyBhIMOpY2hvdcOpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTQ2NAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJEaWQgbm90IGZpbmlzaCBzdHJlYW1pbmcgJShsb2NhbClzIHRvICUocmVtb3RlKXMgb24gU0QiCm1zZ3N0ciAiTidhIHBhcyB0ZXJtaW7DqSBsZSBzdHJlYW1pbmcgJShsb2NhbClzIGRlICUocmVtb3RlKXMgc3VyIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvZmlsZXMuanM6MTU0MgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJGaWxlIGFscmVhZHkgZXhpc3RzOiAlKG5hbWUpcyIKbXNnc3RyICJMZSBmaWNoaWVyIGV4aXN0ZSBkw6lqw6AgOiAlKG5hbWUpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjE2MTYKbXNnaWQgIlJlZnJlc2hpbmcgbGlzdCAuLi4iCm1zZ3N0ciAiQWN0dWFsaXNhdGlvbiBkZSBsYSBsaXN0ZSAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxNjQzCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkNvdWxkIG5vdCB1cGxvYWQgdGhlIGZpbGUuIE1ha2Ugc3VyZSB0aGF0IGl0IGlzIGEgcmVhZGFibGUsIHZhbGlkIGZpbGUgd2l0aCBvbmUgb2YgdGhlc2UgZXh0ZW5zaW9uczogJShleHRlbnNpb25zKXMiCm1zZ3N0ciAiSW1wb3NzaWJsZSBkZSB0w6lsw6ljaGFyZ2VyIGxlIGZpY2hpZXIuIEFzc3VyZXotdm91cyBxdSdpbCBzJ2FnaXQgZCd1biBmaWNoaWVyIGF2ZWMgZGVzIGRyb2l0cyBkJ2FjY8OocyB2YWxpZGVzIGV0IHBvcnRhbnQgbCd1bmUgZGVzIGV4dGVuc2lvbnMgc3VpdmFudGVzOiAlKGV4dGVuc2lvbnMpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2ZpbGVzLmpzOjE2NzMKbXNnaWQgIlNhdmluZyAuLi4iCm1zZ3N0ciAiU2F1dmVnYXJkZSAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9maWxlcy5qczoxNjczCm1zZ2lkICJVcGxvYWRpbmcgLi4uIgptc2dzdHIgIkFqb3V0IC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2xvZ2luc3RhdGUuanM6MzEgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvbG9naW5zdGF0ZS5qczo0MSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvbG9naW4uamluamEyOjIgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvbmF2YmFyL2xvZ2luLmppbmphMjoxNQptc2dpZCAiTG9naW4iCm1zZ3N0ciAiSWRlbnRpZmljYXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjM3CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkxvZ2dlZCBpbiBhcyAlKG5hbWUpcyIKbXNnc3RyICJDb25uZWN0w6kgZW4gdGFudCBxdWUgJShuYW1lKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjUzCm1zZ2lkICJBUEkga2V5IGJhc2VkIGxvZ2luIgptc2dzdHIgIkNvbm5leGlvbiBiYXPDqWUgc3VyIGxhIGNsw6kgQVBJIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvbG9naW5zdGF0ZS5qczo1NAptc2dpZCAiQXV0aG9yaXphdGlvbiBoZWFkZXIgYmFzZWQgbG9naW4iCm1zZ3N0ciAiQ29ubmV4aW9uIGJhc8OpZSBzdXIgbCdlbi10w6p0ZSBkJ2F1dG9yaXNhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2xvZ2luc3RhdGUuanM6NTcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiTG9nb3V0IG5vdCBzdXBwb3J0ZWQgZm9yICUobWV0aG9kKXMsIHBsZWFzZSBjbG9zZSB0aGUgYnJvd3NlciBpbnN0ZWFkIgptc2dzdHIgIkxhIGTDqWNvbm5leGlvbiBuJ2VzdCBwYXMgc3VwcG9ydMOpIHBvdXIgJShtZXRob2QpcywgdmV1aWxsZXogZmVybWVyIGxlIG5hdmlnYXRldXIgw6AgbGEgcGxhY2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjYzCm1zZ2lkICJMb2dvdXQgb2YgT2N0b1ByaW50Igptc2dzdHIgIkTDqWNvbm5leGlvbiBkZSBPY3RvUHJpbnQiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjExOQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICI8cD5JdCBzZWVtcyB0aGF0IHlvdSBhcmUgY29ubmVjdGluZyB0byBPY3RvUHJpbnQgb3ZlciB0aGUgcHVibGljIGludGVybmV0LjwvcD48cD5UaGlzIGlzIHN0cm9uZ2x5IGRpc2NvdXJhZ2VkIHVubGVzcyB5b3UgaGF2ZSB0YWtlbiBwcm9wZXIgbmV0d29yayBzZWN1cml0eSBwcmVjYXV0aW9ucy4gWW91ciBwcmludGVyIGlzIGFuIGFwcGxpYW5jZSB5b3UgcmVhbGx5IHNob3VsZCBub3QgYmUgZ2l2aW5nIGFjY2VzcyB0byBldmVyeW9uZSB3aXRoIGFuIGludGVybmV0IGNvbm5lY3Rpb24uPC9wPjxwPjxzdHJvbmc+UGxlYXNlIHNlZSA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj50aGlzIGJsb2cgcG9zdDwvYT4gZm9yIHdheXMgdG8gc2FmZWx5IGFjY2VzcyB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSBmcm9tIHJlbW90ZS48L3N0cm9uZz48L3A+PHA+PHNtYWxsPklmIHlvdSBrbm93IHdoYXQgeW91IGFyZSBkb2luZyBvciB5b3UgYXJlIHN1cmUgdGhpcyBtZXNzYWdlIGlzIG1pc3Rha2VuIHNpbmNlIHlvdSBhcmUgaW4gYW4gaXNvbGF0ZWQgTEFOLCBmZWVsIGZyZWUgdG8gaWdub3JlIGl0Ljwvc21hbGw+PC9wPiIKbXNnc3RyICIiCiJJbCBzZW1ibGUgcXVlIHZvdXMgdm91cyBjb25uZWN0aWV6IMOgIE9jdG9QcmludCB2aWEgdW4gYWNjw6hzIHB1YmxpYzwvcD4uIFxuIgoiPHA+Q2VsYSBlc3Qgdml2ZW1lbnQgZMOpY29uc2VpbGzDqSBzaSB2b3VzIG7igJlhdmV6IHBhcyBwcmlzIGxlcyBwcsOpY2F1dGlvbnMgYXBwcm9wcmnDqWVzLiBWb3RyZSBpbXByaW1hbnRlIGVzdCB1biBhcHBhcmVpbCBxdWUgdm91cyBuZSBkZXZyaWV6IHBhcyBkb25uZXIgYWNjw6hzIMOgIHRvdXQgbGUgbW9uZGUgc3VyIEludGVybmV0PC9wPi4gXG4iCiI8cD48c3Ryb25nPlZldWlsbGV6IGNvbnN1bHRlciA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5jZXQgYXJ0aWNsZSBkZSBibG9nPC9hPiBwb3VyIHNhdm9pciBjb21tZW50IGFjY8OpZGVyIGVuIHRvdXRlIHPDqWN1cml0w6kgw6Agdm90cmUgaW5zdGFuY2UgT2N0b1ByaW50IMOgIGRpc3RhbmNlLjwvc3Ryb25nPjwvcD5cbiIKIjxwPjxzbWFsbD4gU2kgdm91cyBzYXZleiBjZSBxdWUgdm91cyBmYWl0ZXMgb3Ugc2kgdm91cyDDqnRlcyBzw7tyIHF1ZSBjZSBtZXNzYWdlIGVzdCBlcnJvbsOpIGNhciB2b3VzIMOqdGVzIHN1ciB1biBMQU4gaXNvbMOpLCBuJ2jDqXNpdGV6IHBhcyDDoCBsJ2lnbm9yZXIuPC9zbWFsbD48L3A+IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvbG9naW5zdGF0ZS5qczoxMzkKbXNnaWQgIlBvc3NpYmxlIGV4dGVybmFsIGFjY2VzcyBkZXRlY3RlZCIKbXNnc3RyICJBY2PDqHMgZXh0ZXJuZSBwcm9iYWJsZSBkw6l0ZWN0w6kiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjIzMwptc2dpZCAiTG9naW4gc3VjY2Vzc2Z1bCIKbXNnc3RyICJJZGVudGlmaWNhdGlvbiByw6l1c3NpZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2xvZ2luc3RhdGUuanM6MjM1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgbm93IGxvZ2dlZCBpbiBhcyBcIiUodXNlcm5hbWUpc1wiIgptc2dzdHIgIlZvdXMgw6p0ZXMgbWFpbnRlbmFudCBjb25uZWN0w6kgZW4gdGFudCBxdWUgXCIlKHVzZXJuYW1lKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL2xvZ2luc3RhdGUuanM6MjYzCm1zZ2lkICJMb2dpbiBmYWlsZWQiCm1zZ3N0ciAiTCdpZGVudGlmaWNhdGlvbiBhIMOpY2hvdcOpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvbG9naW5zdGF0ZS5qczoyNjQKbXNnaWQgIlVzZXIgdW5rbm93biwgd3JvbmcgcGFzc3dvcmQgb3IgYWNjb3VudCBkZWFjdGl2YXRlZCIKbXNnc3RyICJVdGlsaXNhdGV1ciBpbmNvbm51LCBtYXV2YWlzIG1vdCBkZSBwYXNzZSBvdSBjb21wdGUgZMOpc2FjdGl2w6kiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9sb2dpbnN0YXRlLmpzOjI4OAptc2dpZCAiTG9nb3V0IHN1Y2Nlc3NmdWwiCm1zZ3N0ciAiRMOpY29ubmV4aW9uIHLDqXVzc2llIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvbG9naW5zdGF0ZS5qczoyODkKbXNnaWQgIllvdSBhcmUgbm93IGxvZ2dlZCBvdXQiCm1zZ3N0ciAiVm91cyDDqnRlcyBtYWludGVuYW50IGTDqWNvbm5lY3TDqSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL25hdmlnYXRpb24uanM6MTYKbXNnaWQgIk9jdG9QcmludCBjYW5ub3QgcmVhY2ggdGhlIGludGVybmV0LiBJZiB0aGlzIGlzIG5vdCBpbnRlbnRpb25hbCwgcGxlYXNlIGNoZWNrIE9jdG9QcmludCdzIG5ldHdvcmsgc2V0dGluZ3MgYW5kIHRoZSBjb25uZWN0aXZpdHkgY2hlY2sgY29uZmlndXJhdGlvbi4gVXBkYXRlcywgcGx1Z2luIHJlcG9zaXRvcnkgYW5kIGFueXRoaW5nIGVsc2UgcmVxdWlyaW5nIGFjY2VzcyB0byB0aGUgcHVibGljIGludGVybmV0IHdpbGwgbm90IHdvcmsuIgptc2dzdHIgIk9jdG9QcmludCBuZSBwZXV0IHBhcyBhY2PDqWRlciDDoCBpbnRlcm5ldC4gU2kgY2Ugbidlc3QgcGFzIHZvdWx1LCB2ZXVpbGxleiB2w6lyaWZpZXIgbGVzIHBhcmFtw6h0cmVzIHLDqXNlYXUgZGUgT2N0b1ByaW50IGV0IGxhIGNvbmZpZ3VyYXRpb24gZGUgbGEgY29ubmV4aW9uLiBMZXMgbWlzZXMgw6Agam91ciwgbGUgZMOpcMO0dCBkZXMgZXh0ZW5zaW9ucyBldCB0b3V0IGNlIHF1aSBuw6ljZXNzaXRlIHVuIGFjY8OocyDDoCBpbnRlcm5ldCBuZSBmb25jdGlvbm5lcm9udCBwYXMuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjE1MQptc2dpZCAiSWRlbnRpZmllciBtdXN0IGJlIHNldCIKbXNnc3RyICJMJ2lkZW50aWZpYW50IGRvaXQgw6p0cmUgcGFyYW3DqXRyw6kiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTUzCm1zZ2lkICJJbnZhbGlkIGNoYXJhY3RlcnMsIG9ubHkgYS16LCBBLVosIDAtOSwgLSwgLiwgXywgKCBhbmQgKSBhcmUgYWxsb3dlZCIKbXNnc3RyICJDYXJhY3TDqHJlcyBpbnZhbGlkZXMsIHNldWxzIGEteiwgQS1aLCAwLTksIC0sIC4sIF8sICggZXQgKSBzb250IGF1dG9yaXPDqXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTU3Cm1zZ2lkICJBIHByb2ZpbGUgd2l0aCBzdWNoIGFuIGlkZW50aWZpZXIgYWxyZWFkeSBleGlzdHMiCm1zZ3N0ciAiVW4gcHJvZmlsIGF2ZWMgY2V0IGlkZW50aWZpYW50IGV4aXN0ZSBkw6lqw6AiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTcwIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjgzIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjExMwptc2dpZCAiZGVmYXVsdCIKbXNnc3RyICJwYXIgZMOpZmF1dCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJwcm9maWxlcy5qczoxNzEgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6ODQgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6OTcKbXNnaWQgInJlZCIKbXNnc3RyICJyb3VnZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJwcm9maWxlcy5qczoxNzIgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6ODUgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6OTkKbXNnaWQgIm9yYW5nZSIKbXNnc3RyICJvcmFuZ2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTczIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjg2IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjEwMQptc2dpZCAieWVsbG93Igptc2dzdHIgImphdW5lIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjE3NCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo4NyBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczoxMDMKbXNnaWQgImdyZWVuIgptc2dzdHIgInZlcnQiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTc1IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjg4IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjEwNQptc2dpZCAiYmx1ZSIKbXNnc3RyICJibGV1IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjE3NiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo5MCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczoxMDkKbXNnaWQgImJsYWNrIgptc2dzdHIgIm5vaXIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTgzCm1zZ2lkICJMb3dlciBMZWZ0Igptc2dzdHIgIkVuIGJhcyDDoCBnYXVjaGUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6MTg0Cm1zZ2lkICJDZW50ZXIiCm1zZ3N0ciAiQXUgY2VudHJlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjU2NAptc2dpZCAiVGhlcmUgd2FzIHVuZXhwZWN0ZWQgZXJyb3Igd2hpbGUgc2F2aW5nIHRoZSBwcmludGVyIHByb2ZpbGUsIHBsZWFzZSBjb25zdWx0IHRoZSBsb2dzLiIKbXNnc3RyICJJbCB5IGEgZXUgdW5lIGVycmV1ciBpbmF0dGVuZHVlIHBlbmRhbnQgbCdlbnJlZ2lzdHJlbWVudCBkdSBwcm9maWwgZCdpbXByaW1hbnRlLCBtZXJjaSBkZSBjb25zdWx0ZXIgbGVzIGxvZ3MuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjU2OAptc2dpZCAiQ291bGQgbm90IGFkZCBwcm9maWxlIgptc2dzdHIgIkltcG9zc2libGUgZCdham91dGVyIGxlIHByb2ZpbCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJwcm9maWxlcy5qczo1OTIKbXNnaWQgIkNhbm5vdCBkZWxldGUgdGhlIGRlZmF1bHQgcHJvZmlsZSBvciB0aGUgY3VycmVudGx5IGFjdGl2ZSBwcm9maWxlLiIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIHN1cHByaW1lciBsZSBwcm9maWwgcGFyIGTDqWZhdXQgb3UgbGUgcHJvZmlsIGFjdHVlbGxlbWVudCBhY3RpZi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6NTk2Cm1zZ2lkICJUaGVyZSB3YXMgdW5leHBlY3RlZCBlcnJvciB3aGlsZSByZW1vdmluZyB0aGUgcHJpbnRlciBwcm9maWxlLCBwbGVhc2UgY29uc3VsdCB0aGUgbG9ncy4iCm1zZ3N0ciAiSWwgeSBhIGV1IHVuZSBlcnJldXIgaW5hdHRlbmR1ZSBwZW5kYW50IGxhIHN1cHByZXNzaW9uIGR1IHByb2ZpbCBkJ2ltcHJpbWFudGUsIG1lcmNpIGRlIGNvbnN1bHRlciBsZXMgbG9ncy4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6NjAxCm1zZ2lkICJDb3VsZCBub3QgZGVsZXRlIHByb2ZpbGUiCm1zZ3N0ciAiSW1wb3NzaWJsZSBkZSBzdXBwcmltZXIgbGUgcHJvZmlsIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnByb2ZpbGVzLmpzOjYxMgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSB0aGUgcHJpbnRlciBwcm9maWxlIFwiJShuYW1lKXNcIi4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIHByb2ZpbCBkJ2ltcHJlc3Npb24gXCIlKG5hbWUpc1wiLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJwcm9maWxlcy5qczo2MzYKbXNnaWQgIlRoZXJlIHdhcyB1bmV4cGVjdGVkIGVycm9yIHdoaWxlIHVwZGF0aW5nIHRoZSBwcmludGVyIHByb2ZpbGUsIHBsZWFzZSBjb25zdWx0IHRoZSBsb2dzLiIKbXNnc3RyICJJbCB5IGEgZXUgdW5lIGVycmV1ciBpbmF0dGVuZHVlIHBlbmRhbnQgbGEgbWlzZSDDoCBqb3VyIGR1IHByb2ZpbCBkJ2ltcHJpbWFudGUsIG1lcmNpIGRlIGNvbnN1bHRlciBsZXMgbG9ncy4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6NjQwCm1zZ2lkICJDb3VsZCBub3QgdXBkYXRlIHByb2ZpbGUiCm1zZ3N0ciAiSW1wb3NzaWJsZSBkZSBtZXR0cmUgw6Agam91ciBsZSBwcm9maWwiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVycHJvZmlsZXMuanM6NjU5Cm1zZ2lkICJBZGQgUHJpbnRlciBQcm9maWxlIgptc2dzdHIgIkFqb3V0IGQndW4gcHJvZmlsIGQnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJwcm9maWxlcy5qczo2NjAKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRWRpdCBQcmludGVyIFByb2ZpbGUgXCIlKG5hbWUpc1wiIgptc2dzdHIgIsOJZGl0aW9uIGR1IHByb2ZpbCBkJ2ltcHJpbWFudGUgXCIlKG5hbWUpc1wiIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjEwMAptc2dpZCAiUmVzdGFydHMgdGhlIHByaW50IGpvYiBmcm9tIHRoZSBiZWdpbm5pbmciCm1zZ3N0ciAiUmVkw6ltYXJyZXIgbCdpbXByZXNzaW9uIGRlcHVpcyBsZSBkw6lidXQiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MTAzCm1zZ2lkICJTdGFydHMgdGhlIHByaW50IGpvYiIKbXNnc3RyICJEw6ltYXJyZXIgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjEwNAptc2dpZCAiUmVzdW1lcyB0aGUgcHJpbnQgam9iIgptc2dzdHIgIlJlcHJlbmRyZSBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MTA1Cm1zZ2lkICJQYXVzZXMgdGhlIHByaW50IGpvYiIKbXNnc3RyICJNZXR0cmUgbCdpbXByZXNzaW9uIGVuIHBhdXNlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjE0Mwptc2dpZCAiU3RpbGwgc3RhYmlsaXppbmcuLi4iCm1zZ3N0ciAiRW4gc3RhYmlsaXNhdGlvbiAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MTYzCm1zZ2lkICJCYXNlZCBvbiBhIGxpbmVhciBhcHByb3hpbWF0aW9uICh2ZXJ5IGxvdyBhY2N1cmFjeSwgZXNwZWNpYWxseSBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcmludCkiCm1zZ3N0ciAiQmFzw6kgc3VyIHVuZSBhcHByb3hpbWF0aW9uIGxpbsOpYWlyZSAodHLDqHMgYmFzc2UgcHLDqWNpc2lvbiwgc3VydG91dCBlbiBkw6lidXQgZCdpbXByZXNzaW9uKSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoxNjgKbXNnaWQgIkJhc2VkIG9uIHRoZSBlc3RpbWF0ZSBmcm9tIGFuYWx5c2lzIG9mIGZpbGUgKG1lZGl1bSBhY2N1cmFjeSkiCm1zZ3N0ciAiQmFzw6kgc3VyIHVuZSBlc3RpbWF0aW9uIHBhciBhbmFseXNlIGR1IGZpY2hpZXIgKGV4YWN0aXR1ZGUgbW95ZW5uZSkiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MTczCm1zZ2lkICJCYXNlZCBvbiBhIG1peCBvZiBlc3RpbWF0ZSBmcm9tIGFuYWx5c2lzIGFuZCBjYWxjdWxhdGlvbiAobWVkaXVtIGFjY3VyYWN5KSIKbXNnc3RyICJCYXPDqSBzdXIgdW5lIGVzdGltYXRpb24gKGV4YWN0aXR1ZGUgbW95ZW5uZSkiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MTc4Cm1zZ2lkICJCYXNlZCBvbiB0aGUgYXZlcmFnZSB0b3RhbCBvZiBwYXN0IHByaW50cyBvZiB0aGlzIG1vZGVsIHdpdGggdGhlIHNhbWUgcHJpbnRlciBwcm9maWxlICh1c3VhbGx5IGdvb2QgYWNjdXJhY3kpIgptc2dzdHIgIkJhc8OpIHN1ciBsZXMgY29waWVzIGR1IG3Dqm1lIG1vZMOobGUgc3VyIGxlIG3Dqm1lIHR5cGUgZCdpbXByaW1hbnRlIChib25uZSBleGFjdGl0dWRlIGfDqW7DqXJhbGVtZW50KSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoxODMKbXNnaWQgIkJhc2VkIG9uIGEgbWl4IG9mIGF2ZXJhZ2UgdG90YWwgZnJvbSBwYXN0IHByaW50cyBhbmQgY2FsY3VsYXRpb24gKHVzdWFsbHkgZ29vZCBhY2N1cmFjeSkiCm1zZ3N0ciAiQmFzw6kgc3VyIGxlcyBjb3BpZXMgZHUgbcOqbWUgbW9kw6hsZSBzdXIgbGUgbcOqbWUgdHlwZSBkJ2ltcHJpbWFudGUgZXQgbGUgY2FsY3VsIChib25uZSBleGFjdGl0dWRlIGfDqW7DqXJhbGVtZW50KSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoxODgKbXNnaWQgIkJhc2VkIG9uIHRoZSBjYWxjdWxhdGVkIGVzdGltYXRlIChiZXN0IGFjY3VyYWN5KSIKbXNnc3RyICJCYXPDqSBzdXIgdW5lIGVzdGltYXRpb24gY2FsY3Vsw6llIChtZWlsbGV1ciBleGFjdGl0dWRlKSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoyMjQKbXNnaWQgIkNvbnRpbnVlIgptc2dzdHIgIlJlcHJlbmRyZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoyMjUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6MzAKbXNnaWQgIlBhdXNlIgptc2dzdHIgIlBhdXNlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjIzNSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTYKbXNnaWQgIk9uIFogQ2hhbmdlIgptc2dzdHIgIlN1ciBjaGFuZ2VtZW50IGRlIGwnYXhlIFoiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6MjM4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoxNQptc2dpZCAiVGltZWQiCm1zZ3N0ciAiQ2hyb25vbcOpdHLDqSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczoyNDIgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjI3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjozOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6NTgKbXNnaWQgInNlYyIKbXNnc3RyICJzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjQwMwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICI8cD4lKHJhdGlvKWQlJSBvZiB0cmFuc21pdHRlZCBsaW5lcyBoYXZlIHRyaWdnZXJlZCByZXNlbmQgcmVxdWVzdHMuIFRoZSBjb21tdW5pY2F0aW9uIHdpdGggdGhlIHByaW50ZXIgaXMgdW5yZWxpYWJsZSBhbmQgdGhpcyB3aWxsIGNhdXNlIHByaW50IGFydGVmYWN0cyBhbmQgZmFpbHVyZXMuPC9wPjxwPlBsZWFzZSBzZWUgPGEgaHJlZj0nJSh1cmwpcycgdGFyZ2V0PSdfYmxhbmsnPnRoaXMgRkFRIGVudHJ5PC9hPiBvbiB0aXBzIG9uIGhvdyB0byBzb2x2ZSB0aGlzLjwvcD4iCm1zZ3N0ciAiPHA+JShyYXRpbylkJSUgZGVzIGxpZ25lcyB0cmFuc21pc3NlbnQgb250IGTDqWNsZW5jaMOpZXMgZGVzIGRlbWFuZGVzIGRlIHJlbnZvaWUuIExhIGNvbW11bmljYXRpb24gYXZlYyBsJ2ltcHJpbWFudGUgbidlc3QgcGFzIGZpYWJsZSBldCB2YSBnw6luw6lyZXIgZGVzIGFydGVmYWN0cyBldCBkZXMgw6ljaGVjcy48L3A+PHA+VmV1aWxsZXogY29uc3VsdGVyIDxhIGhyZWY9JyUodXJsKXMnIHRhcmdldD0nX2JsYW5rJz5jZXQgYXJ0aWNsZSBkZSBsYSBGQVE8L2E+IHBvdXIgYXZvaXIgZGVzIGNvbnNlaWxzIHBvdXIgcsOpc291ZHJlIGNlIHByb2Jsw6htZS48L3A+IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjQxNQptc2dpZCAiQ3JpdGljYWwgcmVzZW5kIHJhdGlvISIKbXNnc3RyICJUYXV4IGRlIHJlbnZvaSBjcml0aXF1ZSAhIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjQzMAptc2dpZCAiVGhpcyB3aWxsIHJlc3RhcnQgdGhlIHByaW50IGpvYiBmcm9tIHRoZSBiZWdpbm5pbmcuIgptc2dzdHIgIkNlY2kgdmEgcmVkw6ltYXJyZXIgbCdpbXByZXNzaW9uIGRlcHVpcyBsZSBkw6lidXQuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvcHJpbnRlcnN0YXRlLmpzOjQ4OQptc2dpZCAiVGhpcyB3aWxsIGNhbmNlbCB5b3VyIHByaW50LiIKbXNnc3RyICJDZWxhIHZhIHN0b3BwZXIgdm90cmUgaW1wcmVzc2lvbi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9wcmludGVyc3RhdGUuanM6NDkwCm1zZ2lkICJObywgY29udGludWUgdGhlIHByaW50Igptc2dzdHIgIk5vbiwgY29udGludWVyIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3ByaW50ZXJzdGF0ZS5qczo0OTEKbXNnaWQgIlllcywgY2FuY2VsIHRoZSBwcmludCIKbXNnc3RyICJPdWksIGFubnVsZXIgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6ODkgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6MTA3Cm1zZ2lkICJ2aW9sZXQiCm1zZ3N0ciAidmlvbGV0IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6OTEgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6MTExCm1zZ2lkICJ3aGl0ZSIKbXNnc3RyICJibGFuYyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjEyNAptc2dpZCAiQXV0b2RldGVjdCBmcm9tIGJyb3dzZXIiCm1zZ3N0ciAiRMOpdGVjdGlvbiBhdXRvbWF0aXF1ZSBkZXB1aXMgbGUgbmF2aWdhdGV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjQzNwptc2dpZCAiSWYgeW91IHNlZSB5b3VyIHdlYmNhbSBzdHJlYW0gYmVsb3csIHRoZSBlbnRlcmVkIHN0cmVhbSBVUkwgaXMgb2suIgptc2dzdHIgIlNpIHZvdXMgdm95ZXogbGUgZmx1eCBkZSB2b3RyZSB3ZWJjYW0gY2ktZGVzc291cywgbCdVUkwgZHUgZmx1eCBzYWlzaSBlc3QgY29ycmVjdGUuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6NDY3Cm1zZ2lkICJTdHJlYW0gdGVzdCIKbXNnc3RyICJUZXN0IGR1IFN0cmVhbSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjQ4NQptc2dpZCAiQ291bGQgbm90IHJldHJpZXZlIHNuYXBzaG90IFVSTCwgcGxlYXNlIGRvdWJsZSBjaGVjayB0aGUgVVJMIgptc2dzdHIgIkltcG9zc2libGUgZGUgcsOpY3Vww6lyZXIgbCdVUkwgZGUgU25hcHNob3QsIHZldWlsbGV6IHbDqXJpZmllciBsJ1VSTCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjQ4OAptc2dpZCAiU25hcHNob3QgdGVzdCBmYWlsZWQiCm1zZ3N0ciAiTGUgdGVzdCBkZSBjYXB0dXJlIGQndW5lIGltYWdlIGEgw6ljaG91w6kiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo1MDgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiQ291bGQgcmV0cmlldmUgdGhlIHNuYXBzaG90IFVSTCwgYnV0IGl0IGRpZG4ndCBsb29rIGxpa2UgYW4gaW1hZ2UuIEdvdCB0aGlzIGFzIGEgY29udGVudCB0eXBlIGhlYWRlcjogPGNvZGU+JShjb250ZW50X3R5cGUpczwvY29kZT4uIFBsZWFzZSBkb3VibGUgY2hlY2sgdGhhdCB0aGUgVVJMIGlzIHJldHVybmluZyBzdGF0aWMgaW1hZ2VzLCBub3QgbXVsdGlwYXJ0IGRhdGEgb3IgdmlkZW9zLiIKbXNnc3RyICJWb3VzIHBvdXZleiByw6ljdXDDqXJlciBsJ1VSTCBkZSBsYSBjYXB0dXJlIGQnaW1hZ2VzLCBtYWlzIGlsIG5lIHJlc3NlbWJsZSBwYXMgw6AgdW5lIGltYWdlLiBlbi10w6p0ZSBkZSB0eXBlIGRlIGNvbnRlbnUgb2J0ZW51OiA8Y29kZT4lKGNvbnRlbnRfdHlwZSlzPC9jb2RlPi4gVmV1aWxsZXogdsOpcmlmaWVyIHF1ZSBsJ1VSTCByZW52b2llIGRlcyBpbWFnZXMgc3RhdGlxdWVzIGV0IG5vbiBkZXMgZG9ubsOpZXMgZW4gcGx1c2lldXJzIHBhcnRpZXMgb3UgZGVzIHZpZMOpb3MuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6NTM3Cm1zZ2lkICJJZiB5b3Ugc2VlIHlvdXIgd2ViY2FtIHNuYXBzaG90IHBpY3R1cmUgYmVsb3csIHRoZSBlbnRlcmVkIHNuYXBzaG90IFVSTCBpcyBvay4iCm1zZ3N0ciAiU2kgdm91cyB2b3lleiB2b3RyZSBTbmFwc2hvdCBjaS1kZXNzb3VzLCBsJ1VSTCBkdSBmbHV4IHNhaXNpIGVzdCBjb3JyZWN0ZS4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo1NDEKbXNnaWQgIlNuYXBzaG90IHRlc3QiCm1zZ3N0ciAiVGVzdCBkZSBjYXB0dXJlIGQnw6ljcmFuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6NTgzCm1zZ2lkICJUaGUgcGF0aCBkb2Vzbid0IGV4aXN0Igptc2dzdHIgIkxlIGNoZW1pbiBuJ2V4aXN0ZSBwYXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo1ODUKbXNnaWQgIlRoZSBwYXRoIGlzIG5vdCBhIGZpbGUiCm1zZ3N0ciAiTGUgY2hlbWluIG5lIHBvaW50ZSBwYXMgc3VyIHVuIGZpY2hpZXIiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo1ODgKbXNnaWQgIlRoZSBwYXRoIGlzIG5vdCBhbiBleGVjdXRhYmxlIgptc2dzdHIgIkxlIGNoZW1pbiBuZSBwb2ludGUgcGFzIHN1ciB1biBleMOpY3V0YWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjU5MiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo2OTMKbXNnaWQgIlRoZSBwYXRoIGlzIHZhbGlkIgptc2dzdHIgIkNoZW1pbiB2YWxpZGUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo2MTcKbXNnaWQgIlRoZSBzZXJ2ZXIgaXMgbm90IHJlYWNoYWJsZSIKbXNnc3RyICJMZSBzZXJ2ZXVyIG4nZXN0IHBhcyBhY2Nlc3NpYmxlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6NjIwCm1zZ2lkICJUaGUgc2VydmVyIGlzIHJlYWNoYWJsZSIKbXNnc3RyICJMZSBzZXJ2ZXVyIGVzdCBhY2Nlc3NpYmxlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2V0dGluZ3MuanM6NjQxCm1zZ2lkICJOYW1lIGNhbm5vdCBiZSByZXNvbHZlZCIKbXNnc3RyICJMZSBub20gbmUgcGV1dCBwYXMgw6p0cmUgcsOpc29sdSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjY0NQptc2dpZCAiTmFtZSBjYW4gYmUgcmVzb2x2ZWQiCm1zZ3N0ciAiTGUgbm9tIHBldXQgw6p0cmUgcsOpc29sdSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjY3Nwptc2dpZCAiVGhlIHBhdGggaXMgYSBicm9rZW4gc3ltbGluay4iCm1zZ3N0ciAiTGUgY2hlbWluIGVzdCB1biBsaWVuIHN5bWJvbGlxdWUgY2Fzc8OpLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjY4MQptc2dpZCAiVGhlIHBhdGggZG9lcyBub3QgZXhpc3QgYW5kIGNhbm5vdCBiZSBjcmVhdGVkLiIKbXNnc3RyICJMZSBjaGVtaW4gbidleGlzdGUgcGFzIGV0IG5lIHBldXQgcGFzIMOqdHJlIGNyw6nDqS4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zZXR0aW5ncy5qczo2ODUKbXNnaWQgIlRoZSBwYXRoIGlzIG5vdCBhIGZvbGRlci4iCm1zZ3N0ciAiTGUgY2hlbWluIG4nZXN0IHBhcyB1biBkb3NzaWVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjY4OQptc2dpZCAiVGhlIHBhdGggaXMgbm90IHdyaXRhYmxlLiIKbXNnc3RyICJMZSBjaGVtaW4gbidlc3QgcGFzIGFjY2Vzc2libGUgZW4gw6ljcml0dXJlLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NldHRpbmdzLmpzOjgzMCBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy91c2Vyc2V0dGluZ3MuanM6MTIyCm1zZ2lkICJUaGlzIHdpbGwgZ2VuZXJhdGUgYSBuZXcgQVBJIEtleS4gVGhlIG9sZCBBUEkgS2V5IHdpbGwgY2Vhc2UgdG8gZnVuY3Rpb24gaW1tZWRpYXRlbHkuIgptc2dzdHIgIkNlY2kgZ8OpbsOpcmVyYSB1bmUgbm91dmVsbGUgY2zDqSBBUEkuIEwnYW5jaWVubmUgY2zDqSBBUEkgY2Vzc2VyYSBkZSBmb25jdGlvbm5lciBkZSBzdWl0ZS4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zbGljaW5nLmpzOjEyNwptc2dpZCAiRG8gbm90aGluZyIKbXNnc3RyICJOZSByaWVuIGZhaXJlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2xpY2luZy5qczoxMjgKbXNnaWQgIlNlbGVjdCBmb3IgcHJpbnRpbmciCm1zZ3N0ciAiU8OpbGVjdGlvbm5lciBwb3VyIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3NsaWNpbmcuanM6MTI5Cm1zZ2lkICJTdGFydCBwcmludGluZyIKbXNnc3RyICJEw6ltYXJyZXIgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2xpY2luZy5qczoxNTQKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiU2xpY2luZyAlKGZpbGVuYW1lKXMiCm1zZ3N0ciAiRMOpY291cGFnZSBkZSAlKGZpbGVuYW1lKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zbGljaW5nLmpzOjE5OAptc2dpZCAiQ2Fubm90IHNsaWNlIG9uIHRoZSBzYW1lIGRldmljZSB3aGlsZSBwcmludGluZyIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIGTDqWNvdXBlciBzdXIgbGUgbcOqbWUgcMOpcmlwaMOpcmlxdWUgcGVuZGFudCBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zbGljaW5nLmpzOjIwMAptc2dpZCAiQ2Fubm90IHNsaWNlLCBub3QgYWxsIHBhcmFtZXRlcnMgc3BlY2lmaWVkIgptc2dzdHIgIkltcG9zc2libGUgZGUgZMOpY291cGVyLCBjYXIgdG91cyBsZXMgcGFyYW3DqHRyZXMgbidvbnQgcGFzIMOpdMOpIHNww6ljaWZpw6lzIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvc2xpY2luZy5qczoyMDMKbXNnaWQgIlN0YXJ0IHRoZSBzbGljaW5nIHByb2Nlc3MiCm1zZ3N0ciAiRMOpbWFycmVyIGxlIGTDqWNvdXBhZ2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zeXN0ZW0uanM6NjgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVGhlIGNvbW1hbmQgXCIlKGNvbW1hbmQpc1wiIHdhcyB0cmlnZ2VyZWQgYXN5bmNocm9ub3VzbHkiCm1zZ3N0ciAiTGEgY29tbWFuZGUgXCIlKGNvbW1hbmQpc1wiIGEgw6l0w6kgZMOpY2xlbmNow6llIGRlIG1hbmnDqHJlIGFzeW5jaHJvbmUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy9zeXN0ZW0uanM6NzIKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVGhlIGNvbW1hbmQgXCIlKGNvbW1hbmQpc1wiIGV4ZWN1dGVkIHN1Y2Nlc3NmdWxseSIKbXNnc3RyICJMYSBjb21tYW5kZSBcIiUoY29tbWFuZClzXCIgYSDDqXTDqSBleMOpY3V0w6llIGF2ZWMgc3VjY8OocyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3N5c3RlbS5qczo5MgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJUaGUgY29tbWFuZCBcIiUoY29tbWFuZClzXCIgY291bGQgbm90IGJlIGV4ZWN1dGVkLiIKbXNnc3RyICJMYSBjb21tYW5kZSBcIiUoY29tbWFuZClzXCIgbidhIHBhcyBwdSDDqnRyZSBleMOpY3V0w6llLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjY1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkNoYW5naW5nIE9mZnNldCBvZiAlKG5hbWUpcyIKbXNnc3RyICJNb2RpZmljYXRpb24gZGUgbCdvZmZzZXQgZGUgJShuYW1lKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90ZW1wZXJhdHVyZS5qczo3MQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJVc2UgdGhlIGZvcm0gYmVsb3cgdG8gc3BlY2lmeSBhIG5ldyBvZmZzZXQgdG8gYXBwbHkgdG8gYWxsIHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNlbnQgZnJvbSBwcmludGVkIGZpbGVzIGZvciBcIiUobmFtZSlzXCIiCm1zZ3N0ciAiVXRpbGlzZXIgbGUgZm9ybXVsYWlyZSBjaS1kZXNzb3VzIHBvdXIgc3DDqWNpZmllciB1biBub3V2ZWF1IGTDqWNhbGFnZSDDoCBhcHBsaXF1ZXIgcG91ciB0b3V0ZXMgbGVzIGNvbW1hbmRlcyBkZSB0ZW1ww6lyYXR1cmUgZW52b3nDqWVzIGRlcHVpcyBsZXMgZmljaGllcnMgaW1wcmltw6lzIHBvdXIgXCIlKG5hbWUpc1wiIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6OTUgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6MTY0IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjM3OSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3RlbXBlcmF0dXJlcy5qaW5qYTI6MzUKbXNnaWQgIkJlZCIKbXNnc3RyICJQbGF0ZWF1IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6OTkgc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6MTcyIHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjM4Mgptc2dpZCAiQ2hhbWJlciIKbXNnc3RyICJDaGFtYnJlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6MzY1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlNldCAlKG5hbWUpcyAoJSh2YWx1ZSlzKSIKbXNnc3RyICJEw6lmaW5pciAlKG5hbWUpcyAoJSh2YWx1ZSlzKSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjM2OSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoxOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjo1NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTQKbXNnaWQgIk9mZiIKbXNnc3RyICLDiXRlaW50IgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVtcGVyYXR1cmUuanM6NDY0Cm1zZ2lkICJtaW4iCm1zZ3N0ciAibWluaSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjUyNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoxMQptc2dpZCAiQWN0dWFsIgptc2dzdHIgIkFjdHVlbCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RlbXBlcmF0dXJlLmpzOjUzNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoxMwptc2dpZCAiVGFyZ2V0Igptc2dzdHIgIkNpYmxlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVybWluYWwuanM6MTA5CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgInNob3dpbmcgJShkaXNwbGF5ZWQpZCBsaW5lcyAoJShmaWx0ZXJlZClkIG9mICUodG90YWwpZCB0b3RhbCBsaW5lcyBmaWx0ZXJlZCwgYnVmZmVyIGZ1bGwpIgptc2dzdHIgImFmZmljaGFnZSBkZSAlKGRpc3BsYXllZClkIGxpZ25lcyAoJShmaWx0ZXJlZClkIGRlICUodG90YWwpZCBsaWduZXMgYXUgdG90YWwgZmlsdHLDqWVzLCBtw6ltb2lyZSB0YW1wb24gcGxlaW5lKSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3Rlcm1pbmFsLmpzOjExNgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJzaG93aW5nICUoZGlzcGxheWVkKWQgbGluZXMgKCUoZmlsdGVyZWQpZCBvZiAlKHRvdGFsKWQgdG90YWwgbGluZXMgZmlsdGVyZWQpIgptc2dzdHIgImFmZmljaGFnZSBkZSAlKGRpc3BsYXllZClkIGxpZ25lcyAoJShmaWx0ZXJlZClkIGRlICUodG90YWwpZCBsaWduZXMgdG90YWxlcyBmaWx0csOpZXMpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVybWluYWwuanM6MTI1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgInNob3dpbmcgJShkaXNwbGF5ZWQpZCBsaW5lcyAoYnVmZmVyIGZ1bGwpIgptc2dzdHIgImFmZmljaGFnZSBkZSAlKGRpc3BsYXllZClkIGxpZ25lcyAobcOpbW9pcmUgdGFtcG9uIHBsZWluZSkiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90ZXJtaW5hbC5qczoxMjkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAic2hvd2luZyAlKGRpc3BsYXllZClkIGxpbmVzIgptc2dzdHIgImFmZmljaGFnZSBkZSAlKGRpc3BsYXllZClkIGxpZ25lcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3Rlcm1pbmFsLmpzOjUyNQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJUaGUgY29tbWFuZCA8Y29kZT4lKGNvbW1hbmQpczwvY29kZT4gd2FzIG5vdCBzZW50IHRvIHRoZSBwcmludGVyOiIKbXNnc3RyICJMYSBjb21tYW5kZSA8Y29kZT4lKGNvbW1hbmQpczwvY29kZT4gbidhIHBhcyDDqXTDqSBlbnZvecOpIMOgIGwnaW1wcmltYW50ZToiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90ZXJtaW5hbC5qczo1MzIKbXNnaWQgIlN1cHByZXNzZWQgY29tbWFuZCIKbXNnc3RyICJDb21tYW5kZSBzdXBwcmltw6llIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGVybWluYWwuanM6NTQxCm1zZ2lkICJJbnZhbGlkIHRvb2wgcmVwb3J0ZWQiCm1zZ3N0ciAiT3V0aWwgbm9uIHZhbGlkZSBzaWduYWzDqSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3Rlcm1pbmFsLmpzOjU0MwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJZb3VyIHByaW50ZXIgcmVwb3J0ZWQgdG9vbCBUJSh0b29sKWQgYXMgaW52YWxpZCwgcmV2ZXJ0aW5nIGJhY2sgdG8gVCUoZmFsbGJhY2spZCIKbXNnc3RyICJWb3RyZSBpbXByaW1hbnRlIGluZGlxdWUgcXVlIGwnb3V0aWwgVCUodG9vbClkIGVzdCBpbnZhbGlkZSwgZXQgZXN0IHJldmVudSDDoCBUJShmYWxsYmFjaylkIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjQ5CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlJlbmRlcmluZyAlKHRhcmdldClzLi4uIgptc2dzdHIgIlJlbmR1IGRlICUodGFyZ2V0KXMuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NTgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiUmVuZGVyaW5nICUodGFyZ2V0KXMuLi4gKCUocHJvZ3Jlc3MpZCUlKSIKbXNnc3RyICJSZW5kdSBkZSAlKHRhcmdldClzLi4uKCUocHJvZ3Jlc3MpZCUlKSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczozMzUKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRmFpbGVkIHRvIHJlbW92ZSB0aW1lbGFwc2UgJShuYW1lKXMuPC9wPjxwPlBsZWFzZSBjb25zdWx0IG9jdG9wcmludC5sb2cgZm9yIGRldGFpbHMuPC9wPiIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIHN1cHByaW1lciBsZSBUaW1lbGFwc2UgJShuYW1lKXMuPC9wPjxwPk1lcmNpIGRlIGNvbnN1bHRlciBsZSBmaWNoaWVyIG9jdG9wcmludC5sb2cgcG91ciBwbHVzIGRlIGTDqXRhaWxzLjwvcD4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6MzQ2Cm1zZ2lkICJDb3VsZCBub3QgcmVtb3ZlIHRpbWVsYXBzZSIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIHN1cHByaW1lciBsZSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6MzU1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gZGVsZXRlIHRpbWVsYXBzZSBmaWxlIFwiJShuYW1lKXNcIi4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyIGxlIGZpY2hpZXIgVGltZWxhcHNlIFwiJShuYW1lKXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6MzczCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIllvdSBhcmUgYWJvdXQgdG8gZGVsZXRlICUoY291bnQpZCB0aW1lbGFwc2UgZmlsZXMuIgptc2dzdHIgIlZvdXMgw6p0ZXMgc3VyIGxlIHBvaW50IGRlIHN1cHByaW1lciAlKGNvdW50KWQgZmljaGllcnMgVGltZWxhcHNlLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo0MzgKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgdW5yZW5kZXJlZCB0aW1lbGFwc2UgXCIlKG5hbWUpc1wiLiIKbXNnc3RyICJWb3VzIMOqdGVzIHN1ciBsZSBwb2ludCBkZSBzdXBwcmltZXIgbGUgVGltZWxhcHNlIFwiJShuYW1lKXNcIiBub24gZmluYWxpc8OpLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo0NTkKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiWW91IGFyZSBhYm91dCB0byBkZWxldGUgJShjb3VudClkIHVucmVuZGVyZWQgdGltZWxhcHNlcy4iCm1zZ3N0ciAiVm91cyDDqnRlcyBzdXIgbGUgcG9pbnQgZGUgc3VwcHJpbWVyICUoY291bnQpZCBUaW1lbGFwc2VzIG5vbiBmaW5hbGlzw6lzLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo0NzAKbXNnaWQgIkRlbGV0aW5nIHRpbWVsYXBzZSBmaWxlcyIKbXNnc3RyICJTdXBwcmVzc2lvbiBkZXMgZmljaGllcnMgVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjQ3MQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJEZWxldGluZyAlKGNvdW50KWQgdGltZWxhcHNlIGZpbGVzLi4uIgptc2dzdHIgIlN1cHByZXNzaW9uIGR1IGZpY2hpZXIgVGltZWxhcHNlICUoY291bnQpZC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo1MDEKbXNnaWQgIkRlbGV0aW5nIHVucmVuZGVyZWQgdGltZWxhcHNlcyIKbXNnc3RyICJTdXBwcmVzc2lvbiBkZXMgVGltZWxhcHNlcyBub24gZmluYWxpc8OpcyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo1MDMKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiRGVsZXRpbmcgJShjb3VudClkIHVucmVuZGVyZWQgdGltZWxhcHNlcy4uLiIKbXNnc3RyICJTdXBwcmVzc2lvbiBkZSAlKGNvdW50KWQgVGltZWxhcHNlcyBub24gZmluYWxpc8Opcy4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo2MTYKbXNnaWQgIkNhcHR1cmluZyB0aW1lbGFwc2UgcG9zdHJvbGwiCm1zZ3N0ciAiQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGR1IGNvbnRlbnUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NjIxCm1zZ2lkICJOb3cgY2FwdHVyaW5nIHRpbWVsYXBzZSBwb3N0IHJvbGwsIHRoaXMgd2lsbCB0YWtlIG9ubHkgYSBtb21lbnQuLi4iCm1zZ3N0ciAiQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGRlIGNvbnRlbnUsIGNlbGEgbmUgcHJlbmRyYSBxdSd1biBtb21lbnQuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NjMxCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIiUobWludXRlcylkIG1pbiIKbXNnc3RyICIlKG1pbnV0ZXMpZCBtaW5pIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjYzNQojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJOb3cgY2FwdHVyaW5nIHRpbWVsYXBzZSBwb3N0IHJvbGwsIHRoaXMgd2lsbCB0YWtlIGFwcHJveGltYXRlbHkgJShkdXJhdGlvbilzIChzbyB1bnRpbCAlKHRpbWUpcykuLi4iCm1zZ3N0ciAiQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGRlIGNvbnRlbnUsIGNlbGEgcHJlbmRyYSBhcHByb3hpbWF0aXZlbWVudCAlKGR1cmF0aW9uKXMgKGp1c3F1J8OgICUodGltZSlzKS4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo2NDEKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiJShzZWNvbmRzKWQgc2VjIgptc2dzdHIgIiUoc2Vjb25kcylkIHMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NjQ1CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk5vdyBjYXB0dXJpbmcgdGltZWxhcHNlIHBvc3Qgcm9sbCwgdGhpcyB3aWxsIHRha2UgYXBwcm94aW1hdGVseSAlKGR1cmF0aW9uKXMuLi4iCm1zZ3N0ciAiQ2FwdHVyZSBkdSBUaW1lbGFwc2UgZGUgZmluIGRlIGNvbnRlbnUsIGNlbGEgcHJlbmRyYSBhcHByb3hpbWF0aXZlbWVudCAlKGR1cmF0aW9uKXMuLi4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6Njg0Cm1zZ2lkICJGYWlsZWQgcmVwZWF0ZWRseSB0byBjYXB0dXJlIHRpbWVsYXBzZSBmcmFtZSBmcm9tIHdlYmNhbSAtIGlzIHRoZSBzbmFwc2hvdCBVUkwgY29uZmlndXJlZCBjb3JyZWN0bHkgYW5kIHRoZSBjYW1lcmEgb24/Igptc2dzdHIgIsOJY2hlYyByw6lww6l0w6llIHBvdXIgY2FwdHVyZXIgbGUgVGltZWxhcHNlIC0gbCdVUkwgZGUgY2FwdHVyZSBkJ2ltYWdlcyBlc3QtZWxsZSBjb25maWd1csOpZSBjb3JyZWN0ZW1lbnQgZXQgbGEgd2ViY2FtIGVzdC1lbGxlIGFjdGl2w6llPyIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo2OTUKbXNnaWQgIkNvdWxkIG5vdCBjYXB0dXJlIHNuYXBzaG90cyIKbXNnc3RyICJDYXB0dXJlIGQnaW1hZ2VzIGltcG9zc2libGUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NzA0Cm1zZ2lkICJSZW5kZXJpbmcgdGltZWxhcHNlIgptc2dzdHIgIlJlbmR1IGR1IFRpbWVsYXBzZSIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo3MDYKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiTm93IHJlbmRlcmluZyB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcy4gRHVlIHRvIHBlcmZvcm1hbmNlIHJlYXNvbnMgaXQgaXMgbm90IHJlY29tbWVuZGVkIHRvIHN0YXJ0IGEgcHJpbnQgam9iIHdoaWxlIGEgbW92aWUgaXMgc3RpbGwgcmVuZGVyaW5nLiIKbXNnc3RyICJSZW5kdSBkdSB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBlbiBjb3Vycy4gUG91ciBkZXMgcmFpc29ucyBkZSBwZXJmb3JtYW5jZSwgaWwgZXN0IHJlY29tbWFuZMOpIGRlIG5lIHBhcyBsYW5jZXIgZCdpbXByZXNzaW9uIHBlbmRhbnQgcXVlIGxlIHJlbmR1IGVzdCBlbiBjb3Vycy4iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NzI4Cm1zZ2lkICJDYW5ub3QgcmVuZGVyIHRpbWVsYXBzZSIKbXNnc3RyICJMZSByZW5kdSBkdSBUaW1lbGFwc2UgZXN0IGltcG9zc2libGUiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NzMyCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlJlbmRlcmluZyBvZiB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBpcyBub3QgcG9zc2libGUgc2luY2Ugbm8gZnJhbWVzIHdlcmUgY2FwdHVyZWQuIElzIHRoZSBzbmFwc2hvdCBVUkwgY29uZmlndXJlZCBjb3JyZWN0bHk/Igptc2dzdHIgIkxlIHJlbmR1IGR1IFRpbWVsYXBzZSAgJShtb3ZpZV9wcmVmaXgpcyBuJ2VzdCBwYXMgcG9zc2libGUgw6l0YW50IGRvbm7DqSBxdeKAmWF1Y3VuZSBpbWFnZSBuJ2VzdCBjYXB0dXLDqWUuIEwnVVJMIGRlcyBTbmFwc2hvdCwgZXN0LWVsbGUgY29uZmlndXLDqWUgY29ycmVjdGVtZW50ID8iCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NzM5IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3RpbWVsYXBzZS5qczo3NTYKbXNnaWQgIlJlbmRlcmluZyB0aW1lbGFwc2UgZmFpbGVkIgptc2dzdHIgIkxlIHJlbmR1IGR1IFRpbWVsYXBzZSBhIMOpY2hvdcOpIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjc0MwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJSZW5kZXJpbmcgb2YgdGltZWxhcHNlICUobW92aWVfcHJlZml4KXMgZmFpbGVkIHdpdGggcmV0dXJuIGNvZGUgJShyZXR1cm5jb2RlKXMiCm1zZ3N0ciAiTGUgcmVuZHUgZHUgVGltZWxhcHNlICUobW92aWVfcHJlZml4KXMgYSDDqWNob3XDqSBhdmVjIGxlIGNvZGUgJShyZXR1cm5jb2RlKXMiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6NzYwCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlJlbmRlcmluZyBvZiB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBmYWlsZWQgZHVlIHRvIGFuIHVua25vd24gZXJyb3IsIHBsZWFzZSBjb25zdWx0IHRoZSBsb2cgZmlsZSIKbXNnc3RyICJMZSByZW5kdSBkdSBUaW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBhIMOpY2hvdcOpIMOgIGNhdXNlIGQndW5lIGVycmV1ciBpbmNvbm51ZSwgbWVyY2kgZGUgY29uc3VsdGVyIGxlIGZpY2hpZXIgbG9nIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdGltZWxhcHNlLmpzOjc4Mgptc2dpZCAiVGltZWxhcHNlIHJlYWR5Igptc2dzdHIgIkxlIFRpbWVsYXBzZSBlc3QgcHLDqnQiCgojOiBzcmMvb2N0b3ByaW50L3N0YXRpYy9qcy9hcHAvdmlld21vZGVscy90aW1lbGFwc2UuanM6Nzg0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIk5ldyB0aW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBpcyBkb25lIHJlbmRlcmluZy4iCm1zZ3N0ciAiTGUgcmVuZHUgZHUgbm91dmVhdSBUaW1lbGFwc2UgJShtb3ZpZV9wcmVmaXgpcyBlc3QgdGVybWluw6kuIgoKIzogc3JjL29jdG9wcmludC9zdGF0aWMvanMvYXBwL3ZpZXdtb2RlbHMvdXNlcnNldHRpbmdzLmpzOjE0Cm1zZ2lkICJTaXRlIGRlZmF1bHQiCm1zZ3N0ciAiU2l0ZSBwYXIgZMOpZmF1dCIKCiM6IHNyYy9vY3RvcHJpbnQvc3RhdGljL2pzL2FwcC92aWV3bW9kZWxzL3VzZXJzZXR0aW5ncy5qczoxMzcKbXNnaWQgIlRoaXMgd2lsbCBkZWxldGUgdGhlIEFQSSBLZXkuIEl0IHdpbGwgY2Vhc2UgdG8gdG8gZnVuY3Rpb24gaW1tZWRpYXRlbHkuIgptc2dzdHIgIkNlY2kgc3VwcHJpbWVyYSBsYSBjbMOpIEFQSS4gRWxsZSBjZXNzZXJhIGRlIGZvbmN0aW9ubmVyIGRlIHN1aXRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2Zvb3Rlci5qaW5qYTI6Nwptc2dpZCAiV2ViIgptc2dzdHIgIkludGVybmV0IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZm9vdGVyLmppbmphMjo4Cm1zZ2lkICJGb3J1bSIKbXNnc3RyICJGb3J1bSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2Zvb3Rlci5qaW5qYTI6OQptc2dpZCAiRGlzY29yZCIKbXNnc3RyICJEaXNjb3JkIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZm9vdGVyLmppbmphMjoxMAptc2dpZCAiRkFRIgptc2dzdHIgIkZBUSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2Zvb3Rlci5qaW5qYTI6MTEKbXNnaWQgIkRvY3MiCm1zZ3N0ciAiRG9jdW1lbnRzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZm9vdGVyLmppbmphMjoxMgptc2dpZCAiQWJvdXQiCm1zZ3N0ciAiw4AgcHJvcG9zIGRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZm9vdGVyLmppbmphMjoxMyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvc3lzdGVtbWVudS5qaW5qYTI6MQptc2dpZCAiU3lzdGVtIgptc2dzdHIgIlN5c3TDqG1lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvaW5kZXguamluamEyOjM0Cm1zZ2lkICJZb3UgZG9uJ3Qgc2VlbSB0byBoYXZlIEphdmFTY3JpcHQgZW5hYmxlZCIKbXNnc3RyICJWb3VzIG5lIHNlbWJsZXogcGFzIGF2b2lyIGFjdGl2w6kgSmF2YVNjcmlwdCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2luZGV4LmppbmphMjozNQptc2dpZCAiT2N0b1ByaW50J3MgVUkgcmVxdWlyZXMgSmF2YVNjcmlwdCB0byB3b3JrLiBQbGVhc2UgZW5hYmxlIEphdmFTY3JpcHQgYW5kIHJlbG9hZC4iCm1zZ3N0ciAiTCdpbnRlcmZhY2UgdXRpbGlzYXRldXIgZCdPY3RvUHJpbnQgbsOpY2Vzc2l0ZSBKYXZhU2NyaXB0IHBvdXIgZm9uY3Rpb25uZXIuIFZldWlsbGV6IGFjdGl2ZXIgSmF2YVNjcmlwdCBldCByZWNoYXJnZXIgbGEgcGFnZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9pbmRleC5qaW5qYTI6NDkKbXNnaWQgIkNvbm5lY3RpbmcgdG8gT2N0b1ByaW50J3Mgc2VydmVyLi4uIgptc2dzdHIgIkNvbm5leGlvbiBhdSBzZXJ2ZXVyIGQnT2N0b1ByaW50IC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo0NAptc2dpZCAiUGxlYXNlIGxvZyBpbiIKbXNnc3RyICJWZXVpbGxleiB2b3VzIGNvbm5lY3RlciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo0Ngptc2dpZCAiSW5jb3JyZWN0IHVzZXJuYW1lIG9yIHBhc3N3b3JkLiIKbXNnc3RyICJJZGVudGlmaWFudCBvdSBtb3QgZGUgcGFzc2UgaW5jb3JyZWN0LiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo0NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6NzAKbXNnaWQgIlNlcnZlciBpcyBjdXJyZW50bHkgb2ZmbGluZS4iCm1zZ3N0ciAiTGUgc2VydmV1ciBlc3QgYWN0dWVsbGVtZW50IGhvcnMgbGlnbmUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvbG9naW4uamluamEyOjQ3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjo3MAptc2dpZCAiUmVjb25uZWN0Li4uIgptc2dzdHIgIlNlIHJlY29ubmVjdGVyIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo1MAptc2dpZCAiQW4gYWNjb3VudCB3aXRoIHRoZSBmb2xsb3dpbmcgcGVybWlzc2lvbnMgaXMgcmVxdWlyZWQ6Igptc2dzdHIgIlVuIGNvbXB0ZSBhdmVjIGxlcyBhdXRvcmlzYXRpb25zIHN1aXZhbnRlcyBlc3QgcmVxdWlzOiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo1NSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvbG9naW4uamluamEyOjkKbXNnaWQgIkZvcmdvdCBwYXNzd29yZD8iCm1zZ3N0ciAiTW90IGRlIHBhc3NlIG91Ymxpw6kgPyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2xvZ2luLmppbmphMjo1NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvbG9naW4uamluamEyOjEzCm1zZ2lkICJSZW1lbWJlciBtZSIKbXNnc3RyICJTZSBzb3V2ZW5pciBkZSBtb2kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9sb2dpbi5qaW5qYTI6NTkKbXNnaWQgIkxvZyBpbiIKbXNnc3RyICJTJ2lkZW50aWZpZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6NjIKbXNnaWQgIk5hdmlnYXRpb24iCm1zZ3N0ciAiTmF2aWdhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjo2MyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6NzQKbXNnaWQgIlN5c3RlbSBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgc3lzdMOobWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6NjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjgxCm1zZ2lkICJTeXN0ZW0gaW5mbyBidW5kbGUiCm1zZ3N0ciAiRW5zZW1ibGUgZCdpbmZvcm1hdGlvbnMgc3lzdMOobWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6NjUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjg2Cm1zZ2lkICJQcmludGVyIGNvbnRyb2wiCm1zZ3N0ciAiQ29udHLDtGxlIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjo2Ngptc2dpZCAiQmFja3VwcyIKbXNnc3RyICJTYXV2ZWdhcmRlcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3JlY292ZXJ5LmppbmphMjo3MQptc2dpZCAiWW91IGxhY2sgYWRtaW4gcGVybWlzc2lvbnMuIgptc2dzdHIgIlZvdXMgbidhdmV6IHBhcyBsZXMgYXV0b3Jpc2F0aW9ucyBkJ2FkbWluaXN0cmF0aW9uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvYWJvdXQvc3lzdGVtaW5mby5qaW5qYTI6NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6ODIKbXNnaWQgIkRvd25sb2FkIFN5c3RlbWluZm8gQnVuZGxlIgptc2dzdHIgIlTDqWzDqWNoYXJnZXIgbGUgcGFjayBTeXN0ZW1pbmZvIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjg3Cm1zZ2lkICJDYW5jZWwgcHJpbnQiCm1zZ3N0ciAiQW5udWxlciBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6ODgKbXNnaWQgIkRpc2Nvbm5lY3QgcHJpbnRlciIKbXNnc3RyICJEw6ljb25uZWN0ZXIgbCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjkzCm1zZ2lkICJPbmxpbmUgcmVzdG9yZSBpcyBub3Qgc3VwcG9ydGVkIG9uIHlvdXIgc3lzdGVtLiIKbXNnc3RyICJMYSByZXN0YXVyYXRpb24gZW4gbGlnbmUgbidlc3QgcGFzIHByaXNlIGVuIGNoYXJnZSBwYXIgdm90cmUgc3lzdMOobWUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvcmVjb3ZlcnkuamluamEyOjE0NAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICIiCiJcbiIKIiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPY3RvUHJpbnQgY3VycmVudGx5IG9ubHkgYWxsb3dzIHVwbG9hZGluZyBiYWNrdXBzIG9mIGEgbWF4aW11bSBzaXplIG9mXG4iCiIgICAgICAgICAgICAgICAgICAgICAgICAgICAgJShwbHVnaW5fYmFja3VwX21heF91cGxvYWRfc2l6ZV9zdHIpcyB2aWEgdGhlIFVJLiBCYWNrdXBzIGxhcmdlciB0aGFuIHRoaXMgY2FuIG9ubHkgYmUgcmVzdG9yZWQgYnkgY29tbWFuZCBsaW5lLFxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIGJ5IGFkanVzdGluZyB0aGUgc2l6ZSBieSByZW1vdmluZyBsYXJnZSBjb250ZW50cyAobGlrZSB0aW1lbGFwc2VzKSBmcm9tIHRoZVxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgIHppcCBwcmlvciB0byB1cGxvYWRpbmcuIEJhY2t1cHMgZXhjZWVkaW5nIHRoaXMgc2l6ZSBsaW1pdCBhcmUgbWFya2VkIHdpdGggYVxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgICUobWFya2VyKXMgdXAgdGhlcmUuXG4iCiIgICAgICAgICAgICAgICAgICAgICAgICAiCm1zZ3N0ciAiIgoiXG4iCiJPY3RvUHJpbnQgbmUgcGVybWV0IGFjdHVlbGxlbWVudCBsZSB0w6lsw6ljaGFyZ2VtZW50IGRlIHNhdXZlZ2FyZGVzIHZpYSBs4oCZaW50ZXJmYWNlIHV0aWxpc2F0ZXVyIHF1ZSBk4oCZdW5lIHRhaWxsZSBtYXhpbWFsZSBkZSAlKHBsdWdpbl9iYWNrdXBfbWF4X3VwbG9hZF9zaXplX3N0cilzIHBldXZlbnQgw6p0cmUgcmVzdGF1csOpZXMgc29pdCA6XG4iCiIgICAgICAgICAgICAgICAgIC0gcGFyIGxpZ25lIGRlIGNvbW1hbmRlLFxuIgoiICAgICAgICAgICAgICAgICAtIGVuIGRpbWludWFudCBsZXVyIHRhaWxsZSBwYXIgbGEgc3VwcHJlc3Npb24gZGUgZ3JvcyBjb250ZW51cyAoY29tbWUgbGVzIFRpbWVsYXBzZSkgZHUgZmljaGllciB6aXAgYXZhbnQgbGUgdMOpbMOpY2hhcmdlbWVudC5cbiIKIiBMZXMgc2F1dmVnYXJkZXMgZG9udCBsYSB0YWlsbGUgZMOpcGFzc2UgY2V0dGUgbGltaXRlIHNvbnQgbWFycXXDqWVzIGF2ZWMlKG1hcmtlcilzLlxuIgoiwqAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9yZWNvdmVyeS5qaW5qYTI6MTUzCm1zZ2lkICJUaGVyZSBhcmUgbm8gYmFja3VwcyB5ZXQuIgptc2dzdHIgIklsIG4neSBhIHBhcyBlbmNvcmUgZGUgc2F1dmVnYXJkZXMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9hYm91dC5qaW5qYTI6NCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo1MQptc2dpZCAiQWJvdXQgT2N0b1ByaW50Igptc2dzdHIgIsOAIHByb3BvcyBkZSBPY3RvUHJpbnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo0Cm1zZ2lkICJDcmVhdGUgRm9sZGVyIgptc2dzdHIgIkNyw6llciB1biBkb3NzaWVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6Nwptc2dpZCAiUGxlYXNlIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIGZvbGRlciB0byBjcmVhdGUuIgptc2dzdHIgIk1lcmNpIGRlIHNww6ljaWZpZXIgbGUgbm9tIGR1IGRvc3NpZXIgw6AgY3LDqWVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvZmlsZXMuamluamEyOjEwCm1zZ2lkICJGb2xkZXIgbmFtZSIKbXNnc3RyICJOb20gZHUgZG9zc2llciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvZmlsZXMuamluamEyOjE5Cm1zZ2lkICJDcmVhdGUiCm1zZ3N0ciAiQ3LDqWVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6MjYKbXNnaWQgIk1vdmUgRmlsZSBvciBGb2xkZXIiCm1zZ3N0ciAiRMOpcGxhY2VyIHVuIGZpY2hpZXIgb3UgdW4gZG9zc2llciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvZmlsZXMuamluamEyOjMxCm1zZ2lkICJTZWxlY3QgZGVzdGluYXRpb24gZm9sZGVyIGZvciAiCm1zZ3N0ciAiU8OpbGVjdGlvbm5leiBsZSBkb3NzaWVyIGRlIGRlc3RpbmF0aW9uIHBvdXIgIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6MzEgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6MzYKbXNnaWQgIkN1cnJlbnRseToiCm1zZ3N0ciAiQWN0dWVsbGVtZW50IDoiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjozNgptc2dpZCAiU2V0IGRlc3RpbmF0aW9uIGZpbGVuYW1lICIKbXNnc3RyICJEw6lmaW5pciBsZSBub20gZHUgZmljaGllciBkZSBkZXN0aW5hdGlvbiAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo0MQptc2dpZCAiRmlsZS9Gb2xkZXIgd2lsbCBiZSBtb3ZlZCB0bzogIgptc2dzdHIgIkZpY2hpZXIvUsOpcGVydG9pcmUgc2VyYSBkw6lwbGFjw6kgZW4gOiAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo0NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjoyNiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo0MCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo1MQptc2dpZCAiTW92ZSIKbXNnc3RyICJEw6lwbGFjZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo1NCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo2Mwptc2dpZCAiRmlsZSBhbHJlYWR5IGV4aXN0cyIKbXNnc3RyICJMZSBmaWNoaWVyIGV4aXN0ZSBkw6lqw6AiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2ZpbGVzLmppbmphMjo1Nwptc2dpZCAiSWYgeW91IHdhbnQgdG8gcmVuYW1lIHRoZSBmaWxlLCB5b3UgbWF5IGRvIHNvIGJlbG93LiBBIGNvbGxpc2lvbiBmcmVlIHN1Z2dlc3Rpb24gaGFzIGFscmVhZHkgYmVlbiBtYWRlLiIKbXNnc3RyICJTaSB2b3VzIHZvdWxleiByZW5vbW1lciBsZSBmaWNoaWVyLCB2b3VzIHBvdXZleiBsZSBmYWlyZSBjaS1kZXNzb3VzLiBVbmUgc3VnZ2VzdGlvbiBzYW5zIGR1cGxpY2F0aW9uIGEgZMOpasOgIMOpdMOpIGZhaXRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvZmlsZXMuamluamEyOjYwCm1zZ2lkICJSZW5hbWUgdG8iCm1zZ3N0ciAiUmVub21tZXIgcG91ciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvZmlsZXMuamluamEyOjcwCm1zZ2lkICJVcGxvYWQgKHJlbmFtZSkiCm1zZ3N0ciAiVMOpbMOpY2hhcmdlciAocmVub21tZXIpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9maWxlcy5qaW5qYTI6NzEKbXNnaWQgIlVwbG9hZCAob3ZlcndyaXRlKSIKbXNnc3RyICJUw6lsw6ljaGFyZ2VyICjDqWNyYXNlcikiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo0Cm1zZ2lkICJPY3RvUHJpbnQgU2V0dGluZ3MiCm1zZ3N0ciAiUGFyYW3DqHRyZXMgT2N0b1ByaW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy5qaW5qYTI6NTIKbXNnaWQgIlN5c3RlbSBpbmZvIgptc2dzdHIgIkluZm9ybWF0aW9uIHN5c3TDqG1lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy5qaW5qYTI6NjAKbXNnaWQgIlNldHRpbmdzIHVwZGF0ZSBkZXRlY3RlZCIKbXNnc3RyICJNaXNlIMOgIGpvdXIgZGVzIHBhcmFtw6h0cmVzIGTDqXRlY3TDqWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo2Mwptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICBUaGUgc2V0dGluZ3MgaGF2ZSBiZWVuIHVwZGF0ZWQgb24gdGhlIHNlcnZlci4gWW91IG1heSByZWxvYWQgYWxsIHNldHRpbmdzLFxuIgoiICAgICAgICAgICAgb3ZlcndyaXRpbmcgYW55IGNoYW5nZXMgeW91IG1pZ2h0IGhhdmUgZG9uZSBsb2NhbGx5LCBvciBhbHRlcm5hdGl2ZWx5XG4iCiIgICAgICAgICAgICBvbmx5IHJlbG9hZCB0aG9zZSBzZXR0aW5ncyB5b3UgaGF2ZW4ndCBjaGFuZ2VkIGxvY2FsbHkuXG4iCiIgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIkxlcyBwYXJhbcOodHJlcyBvbnQgw6l0w6kgbWlzIMOgIGpvdXIgc3VyIGxlIHNlcnZldXIuIFZvdXMgcG91dmV6IHJlY2hhcmdlciB0b3VzIGxlcyBwYXJhbcOodHJlcywgw6ljcmFzZXIgbGVzIG1vZGlmaWNhdGlvbnMgcXVlIHZvdXMgcG91cnJpZXogYXZvaXIgYXBwb3J0w6llcyBsb2NhbGVtZW50LCBvdSBhbHRlcm5hdGl2ZW1lbnQgcmVjaGFyZ2VyIHVuaXF1ZW1lbnQgbGVzIHBhcmFtw6h0cmVzIHF1ZSB2b3VzIG4nYXZleiBwYXMgbW9kaWZpw6lzIGxvY2FsZW1lbnQuXG4iCiIgICAgICAgIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy5qaW5qYTI6NjgKbXNnaWQgIiIKIlxuIgoiICAgICAgICAgICAgSG93IGRvIHlvdSB3YW50IHRvIHByb2NlZWQ/XG4iCiIgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIiBDb21tZW50IHZvdWxlei12b3VzIHByb2PDqWRlciA/XG4iCiIgICAgICAgIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy5qaW5qYTI6NzQKbXNnaWQgIlJlbG9hZCBhbGwiCm1zZ3N0ciAiVG91dCByZWNoYXJnZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzLmppbmphMjo3NQptc2dpZCAiUmVsb2FkIG9ubHkgbm9uLWNvbmZsaWN0aW5nIGNoYW5nZXMiCm1zZ3N0ciAiUmVjaGFyZ2VyIHVuaXF1ZW1lbnQgbGVzIG1vZGlmaWNhdGlvbnMgc2FucyBjb25mbGl0cyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2xpY2luZy5qaW5qYTI6OAptc2dpZCAiU2xpY2luZyBpcyBjdXJyZW50bHkgZGlzYWJsZWQgc2luY2Ugbm8gc2xpY2VyIGhhcyBiZWVuIGNvbmZpZ3VyZWQgeWV0LiBQbGVhc2UgY29uZmlndXJlIGEgc2xpY2VyIHVuZGVyIFwiU2V0dGluZ3NcIi4iCm1zZ3N0ciAiTGUgZMOpY291cGFnZSBlc3QgZMOpc2FjdGl2w6kgY2FyIGF1Y3VuIGTDqWNvdXBldXIgbidhIMOpdMOpIGNvbmZpZ3Vyw6kuIE1lcmNpIGRlIGNvbmZpZ3VyZXIgdW4gZMOpY291cGV1ciBkYW5zIFwiUGFyYW3DqHRyZXNcIi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NsaWNpbmcuamluamEyOjExCm1zZ2lkICJQbGVhc2UgY29uZmlndXJlIHdoaWNoIHNsaWNlciBhbmQgd2hpY2ggc2xpY2luZyBwcm9maWxlIHRvIHVzZSBhbmQgbmFtZSB0aGUgR0NvZGUgZmlsZSB0byBzbGljZSB0byBiZWxvdywgb3IgY2xpY2sgXCJDYW5jZWxcIiBpZiB5b3UgZG8gbm90IHdpc2ggdG8gc2xpY2UgdGhlIGZpbGUgbm93LiIKbXNnc3RyICJNZXJjaSBkZSBjb25maWd1cmVyIHF1ZWwgZMOpY291cGV1ciBldCBxdWVsIHByb2ZpbCBkZSBkw6ljb3VwZSB1dGlsaXNlciBldCBsZSBub20gZHUgZmljaGllciBHLWNvZGUgw6AgZMOpY291cGVyIGNpLWRlc3NvdXMsIG91IGNsaXF1ZXogc3VyIFwiQW5udWxlclwiIHNpIHZvdXMgbmUgc291aGFpdGV6IHBhcyBkw6ljb3VwZXIgbGUgZmljaGllciBwb3VyIGwnaW5zdGFudC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NsaWNpbmcuamluamEyOjE0Cm1zZ2lkICJTbGljZXIiCm1zZ3N0ciAiRMOpY291cGV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2xpY2luZy5qaW5qYTI6MTYKbXNnaWQgIlNlbGVjdCBhIHNsaWNlci4uLiIKbXNnc3RyICJTw6lsZWN0aW9ubmVyIHVuIGTDqWNvdXBldXIgLi4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zbGljaW5nLmppbmphMjoyMAptc2dpZCAiUnVucyBsb2NhbGx5Igptc2dzdHIgIkZvbmN0aW9ubmUgbG9jYWxlbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2xpY2luZy5qaW5qYTI6MjMKbXNnaWQgIkZvciBwZXJmb3JtYW5jZSByZWFzb25zIGxvY2FsbHkgcnVuIHNsaWNlcnMgYXJlIGRpc2FibGVkIHdoaWxlIHByaW50aW5nIgptc2dzdHIgIlBvdXIgZGVzIHJhaXNvbnMgZGUgcGVyZm9ybWFuY2UsIGxlcyBkw6ljb3VwYWdlcyBsb2NhdXggc29udCBkw6lzYWN0aXbDqXMgcGVuZGFudCBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NsaWNpbmcuamluamEyOjI3Cm1zZ2lkICJTbGljaW5nIFByb2ZpbGUiCm1zZ3N0ciAiUHJvZmlsIGRlIGTDqWNvdXBlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zbGljaW5nLmppbmphMjoyOQptc2dpZCAiU2VsZWN0IGEgc2xpY2luZyBwcm9maWxlLi4uIgptc2dzdHIgIlPDqWxlY3Rpb25uZXIgdW4gcHJvZmlsIGRlIGTDqWNvdXBlLi4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zbGljaW5nLmppbmphMjozMyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2Nvbm5lY3Rpb24uamluamEyOjUKbXNnaWQgIlByaW50ZXIgUHJvZmlsZSIKbXNnc3RyICJQcm9maWwgZCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zbGljaW5nLmppbmphMjozNQptc2dpZCAiU2VsZWN0IGEgcHJpbnRlciBwcm9maWxlLi4uIgptc2dzdHIgIlPDqWxlY3Rpb25uZXIgdW4gcHJvZmlsIGQnaW1wcmltYW50ZS4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2xpY2luZy5qaW5qYTI6MzkKbXNnaWQgIk91dHB1dCBGaWxlbmFtZSIKbXNnc3RyICJOb20gZGUgc29ydGllIGR1IGZpY2hpZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NsaWNpbmcuamluamEyOjQ4Cm1zZ2lkICJBZnRlciBzbGljaW5nLi4uIgptc2dzdHIgIkFwcsOocyBsZSBkw6ljb3VwYWdlIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2xpY2luZy5qaW5qYTI6NTggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6NDIKbXNnaWQgIlNsaWNlIgptc2dzdHIgIkTDqWNvdXBlciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdGVtcGVyYXR1cmUuamluamEyOjEwCm1zZ2lkICJDdXJyZW50IE9mZnNldCIKbXNnc3RyICJPZmZlc3QgYWN0dWVsIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy90ZW1wZXJhdHVyZS5qaW5qYTI6MTYKbXNnaWQgIk5ldyBPZmZzZXQiCm1zZ3N0ciAiTm91dmVsIG9mZnNldCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdGVtcGVyYXR1cmUuamluamEyOjE5Cm1zZ2lkICItMSIKbXNnc3RyICItMSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdGVtcGVyYXR1cmUuamluamEyOjIyCm1zZ2lkICIrMSIKbXNnc3RyICIrMSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdGVtcGVyYXR1cmUuamluamEyOjI0IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVtcGVyYXR1cmUuamluamEyOjc0Cm1zZ2lkICJEZWxldGUgT2Zmc2V0Igptc2dzdHIgIlN1cHByaW1lciBsJ29mZnNldCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdGVtcGVyYXR1cmUuamluamEyOjI1Cm1zZ2lkICJIaW50OiBIaXR0aW5nIDxrYmQ+RW50ZXI8L2tiZD4gaW4gdGhlIGlucHV0IGZpZWxkIHdpbGwgYWxzbyBzdWJtaXQgdGhlIGZvcm0iCm1zZ3N0ciAiTm90ZTogQXBwdXllciBzdXIgPGtiZD5FbnRyZXI8L2tiZD4gZGFucyBsZSBjaGFtcHMgZGUgc2Fpc2llIHNvdW1ldHRyYSBhdXNzaSBsZSBmb3JtdWxhaXJlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy90aW1lbGFwc2UuamluamEyOjQKbXNnaWQgIlRpbWVsYXBzZSBQcmV2aWV3Igptc2dzdHIgIkFwZXLDp3UgZHUgVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy91c2Vyc2V0dGluZ3MuamluamEyOjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvbmF2YmFyL2xvZ2luLmppbmphMjoxOQptc2dpZCAiVXNlciBTZXR0aW5ncyIKbXNnc3RyICJQYXJhbcOodHJlcyBkZSBsJ3V0aWxpc2F0ZXVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy91c2Vyc2V0dGluZ3MuamluamEyOjQ2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvZ3JvdXBzLmppbmphMjoxMTIgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTI4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjE3MSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvci5qaW5qYTI6MzcKbXNnaWQgIkFib3J0Igptc2dzdHIgIkFubnVsZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3VzZXJzZXR0aW5ncy5qaW5qYTI6NDcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjExMyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjoxMjkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTcyIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yLmppbmphMjozOAptc2dpZCAiQ29uZmlybSIKbXNnc3RyICJDb25maXJtZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC5qaW5qYTI6Mwptc2dpZCAiU2V0dXAgV2l6YXJkIgptc2dzdHIgIkFzc2lzdGFudCBkZSBjb25maWd1cmF0aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQuamluamEyOjQxCm1zZ2lkICIiCiJcbiIKIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5NYW5kYXRvcnkgU3RlcCE8L3N0cm9uZz4gWW91IG5lZWQgdG8gZmlsbCB0aGlzIG91dCBub3cuXG4iCiIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIgptc2dzdHIgIiIKIlxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPsOJdGFwZSBvYmxpZ2F0b2lyZSE8L3N0cm9uZz4gVm91cyBkZXZleiBsZSByZW1wbGlyLlxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvd2l6YXJkLmppbmphMjo1Ngptc2dpZCAiTmV4dCIKbXNnc3RyICJTdWl2YW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQuamluamEyOjYwCm1zZ2lkICJQcmV2aW91cyIKbXNnc3RyICJQcsOpY8OpZGVudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvd2l6YXJkLmppbmphMjo2Mwptc2dpZCAiVW5sZXNzIG90aGVyd2lzZSBub3RlZCwgeW91IG1heSBqdXN0IHNraXAgYW55IHdpemFyZCBwYWdlIGJ5IGNsaWNraW5nIFwiTmV4dFwiIG9yIFwiRmluaXNoXCIuIgptc2dzdHIgIlNhdWYgaW5kaWNhdGlvbiBjb250cmFpcmUsIHZvdXMgcG91dmV6IHNhdXRlciBuJ2ltcG9ydGUgcXVlbGxlIHBhZ2UgZGUgbCdhc3Npc3RhbnQgZW4gY2xpcXVhbnQgc3VyIFwiU3VpdmFudFwiIG91IFwiVGVybWluZXJcIi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2Fib3V0L2Fib3V0LmppbmphMjozCm1zZ2lkICJUaGUgc25hcHB5IHdlYiBpbnRlcmZhY2UgZm9yIHlvdXIgM0QgcHJpbnRlciIKbXNnc3RyICJMJ2ludGVyZmFjZSBkeW5hbWlxdWUgZGUgdm90cmUgaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvYWJvdXQvc3lzdGVtaW5mby5qaW5qYTI6MQptc2dpZCAiU3lzdGVtIEluZm9ybWF0aW9uIgptc2dzdHIgIkluZm9ybWF0aW9ucyBTeXN0w6htZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvYWJvdXQvc3lzdGVtaW5mby5qaW5qYTI6Mwptc2dpZCAiIgoiUGxlYXNlIGFsd2F5cyBzaGFyZSBhIFN5c3RlbWluZm8gQnVuZGxlIHdoZW4gcmVxdWVzdGluZyBzdXBwb3J0IG9uIHRoZSBmb3J1bXMgb3JcbiIKIiAgICB3aGVuIG9wZW5pbmcgYSBuZXcgYnVnIHJlcG9ydDoiCm1zZ3N0ciAiIgoiVmV1aWxsZXogdG91am91cnMgcGFydGFnZXIgdW4gZW5zZW1ibGUgU3lzdMOobWUgaW5mbyBsb3JzcXVlIHZvdXMgZGVtYW5kZXogZGUgbCdhaWRlIHN1ciBsZXMgZm9ydW1zIG91XG4iCiIgICAgIGxvcnMgZGUgbCdvdXZlcnR1cmUgZCd1biBub3V2ZWF1IHJhcHBvcnQgZGUgYm9ndWXCoDoiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL2Fib3V0L3N5c3RlbWluZm8uamluamEyOjgKbXNnaWQgIllvdSBjYW4gdmlldyBTeXN0ZW1pbmZvIEJ1bmRsZXMgYXQgPGEgaHJlZj1cImh0dHBzOi8vYnVuZGxldmlld2VyLm9jdG9wcmludC5vcmdcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+YnVuZGxldmlld2VyLm9jdG9wcmludC5vcmc8L2E+Igptc2dzdHIgIlZvdXMgcG91dmV6IGNvbnN1bHRlciBsZXMgZW5zZW1ibGVzIFN5c3TDqG1lIGluZm8gc3VyIDxhIGhyZWY9XCJodHRwczovL2J1bmRsZXZpZXdlci5vY3RvcHJpbnQub3JnXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPmJ1bmRsZXZpZXdlci5vY3RvcHJpbnQub3JnPC9hPiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvYWJvdXQvc3lzdGVtaW5mby5qaW5qYTI6MTEKbXNnaWQgIk1vcmUiCm1zZ3N0ciAiUGx1cyBkZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvYWJvdXQvc3lzdGVtaW5mby5qaW5qYTI6MTcKbXNnaWQgIkNvcHkiCm1zZ3N0ciAiQ29waWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wuamluamEyOjQKbXNnaWQgIlVzZXJzIgptc2dzdHIgIlV0aWxpc2F0ZXVycyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYWNjZXNzY29udHJvbC5qaW5qYTI6NyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjoxNiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjo3Mwptc2dpZCAiR3JvdXBzIgptc2dzdHIgIkdyb3VwZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwaS5qaW5qYTI6Mwptc2dpZCAiQ09SUyIKbXNnc3RyICJDT1JTIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcGkuamluamEyOjcKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiQWxsb3cgPGEgaHJlZj1cIiUodXJsKXNcIj5Dcm9zcyBPcmlnaW4gUmVzb3VyY2UgU2hhcmluZyAoQ09SUyk8L2E+Igptc2dzdHIgIkF1dG9yaXNlciA8YSBocmVmPVwiJSh1cmwpc1wiPkNyb3NzIE9yaWdpbiBSZXNvdXJjZSBTaGFyaW5nIChDT1JTKTwvYT4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwaS5qaW5qYTI6Nwptc2dpZCAiTmVlZHMgcmVzdGFydCIKbXNnc3RyICJOw6ljZXNzaXRlIGRlIHJlZMOpbWFycmVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcGkuamluamEyOjEzIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBpLmppbmphMjoyNwptc2dpZCAiR2xvYmFsIEFQSSBLZXkiCm1zZ3N0ciAiQ2zDqSBBUEkgZ2xvYmFsZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBpLmppbmphMjoxNQptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICAgICAgSXQgaXMgcmVjb21tZW5kZWQgdG8gbm8gbG9uZ2VyIHVzZSB0aGUgZ2xvYmFsIEFQSSBrZXkgYXMgaXQncyBvbmUgc2luZ2xlIGtleSB0aGF0IGdpdmVzIGZ1bGwgYWRtaW4gYWNjZXNzXG4iCiIgICAgICAgICAgICAgICAgdG8geW91ciB3aG9sZSBPY3RvUHJpbnQgaW5zdGFuY2UuIDxzdHJvbmc+SXQgd2lsbCBiZSByZW1vdmVkIGluIE9jdG9QcmludCAyLjA8L3N0cm9uZz4uXG4iCiIgICAgICAgICAgICAgICAgSW5zdGVhZCBvZiB1c2luZyB0aGUgZ2xvYmFsIGtleSB5b3Ugc2hvdWxkIGNyZWF0ZSBpbmRpdmlkdWFsIEFwcGxpY2F0aW9uIEtleXMgZm9yXG4iCiIgICAgICAgICAgICAgICAgeW91ciB0aGlyZCBwYXJ0eSBjbGllbnRzLiBUaGF0IHdheSB0aGV5IGdldCBwZXJtaXNzaW9ucyBtYXRjaGluZyB0aGUgdXNlciBhY2NvdW50IHVzZWQgZm9yIGtleVxuIgoiICAgICAgICAgICAgICAgIGNyZWF0aW9uIGFuZCB5b3UgY2FuIGFsc28gcmV2b2tlIGFjY2VzcyB0byBvbmUgYXBwIHdpdGhvdXQgaGF2aW5nIHRvIGNoYW5nZSB0aGUga2V5cyBmb3IgYWxsIG90aGVyIGFwcHMuXG4iCiIgICAgICAgICAgICAgICAgSXQncyBhbHNvIHJlY29tbWVuZGVkIHRvIGNyZWF0ZSBhIHVzZXIgYWNjb3VudCB3aXRob3V0IGFkbWluIGFjY2VzcyBhbmQgdXNlIHRoYXQgZm9yIHRoaXJkXG4iCiIgICAgICAgICAgICAgICAgcGFydHkgY2xpZW50cyB3aGVyZSBwb3NzaWJsZS5cbiIKIiAgICAgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIiBJbCBlc3QgcmVjb21tYW5kw6kgZGUgbmUgcGx1cyB1dGlsaXNlciBsYSBjbMOpIEFQSSBnbG9iYWxlIGNhciBpbCBzJ2FnaXQgZCd1bmUgY2zDqSB1bmlxdWUgcXVpIGRvbm5lIHVuIGFjY8OocyBjb21wbGV0IMOgIGwnYWRtaW5pc3RyYXRpb24gZGUgdG91dGUgdm90cmUgaW5zdGFuY2UgT2N0b1ByaW50LiA8c3Ryb25nPklsIHNlcmEgcmV0aXLDqSBwb3VyIE9jdG9wcmludCAyLjA8L3N0cm9uZz4uXG4iCiJBdSBsaWV1IGQndXRpbGlzZXIgbGEgY2zDqSBnbG9iYWxlLCB2b3VzIGRldnJpZXogY3LDqWVyIGRlcyBjbMOpcyBkJ2FwcGxpY2F0aW9uIGluZGl2aWR1ZWxsZXMgcG91ciB2b3MgY2xpZW50cyB0aWVycy4gQWluc2ksIGlscyBvYnRpZW5uZW50IGRlcyBhdXRvcmlzYXRpb25zIGNvcnJlc3BvbmRhbnQgYXUgY29tcHRlIHV0aWxpc2F0ZXVyIHV0aWxpc8OpIHBvdXIgbGEgY3LDqWF0aW9uIGRlIGxhIGNsw6kgZXQgdm91cyBwb3V2ZXogw6lnYWxlbWVudCByw6l2b3F1ZXIgbCdhY2PDqHMgw6AgdW5lIGFwcGxpY2F0aW9uIHNhbnMgYXZvaXIgw6AgbW9kaWZpZXIgbGVzIGNsw6lzIGRlIHRvdXRlcyBsZXMgYXV0cmVzIGFwcGxpY2F0aW9ucy5cbiIKIklsIGVzdCDDqWdhbGVtZW50IHJlY29tbWFuZMOpIGRlIGNyw6llciB1biBjb21wdGUgdXRpbGlzYXRldXIgc2FucyBhY2PDqHMgYWRtaW5pc3RyYXRldXIgZXQgZGUgbCd1dGlsaXNlciBwb3VyIGxlcyBjbGllbnRzIHRpZXJzIGxvcnNxdWUgY2VsYSBlc3QgcG9zc2libGUuXG4iCiIgICAgICAgICAgICAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwaS5qaW5qYTI6MjQKbXNnaWQgIkFjY2VzcyBBcHBsaWNhdGlvbiBLZXlzIgptc2dzdHIgIkFjY8OpZGVyIGF1eCBjbMOpcyBkJ2FwcGxpY2F0aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcGkuamluamEyOjMwIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6Mjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTU5Cm1zZ2lkICJOL0EiCm1zZ3N0ciAiTi9BIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcGkuamluamEyOjM0Cm1zZ2lkICJQbGVhc2Ugbm90ZSB0aGF0IGNoYW5nZXMgdG8gdGhlIEFQSSBrZXkgYXJlIGFwcGxpZWQgaW1tZWRpYXRlbHksIHdpdGhvdXQgaGF2aW5nIHRvIFwiU2F2ZVwiIGZpcnN0LiIKbXNnc3RyICJWZXVpbGxleiBub3RlciBxdWUgbGVzIGNoYW5nZW1lbnRzIGRlIGNsw6kgQVBJIHNvbnQgYXBwbGlxdcOpZXMgaW1tw6lkaWF0ZW1lbnQsIHNhbnMgYXZvaXIgw6AgXCJFbnJlZ2lzdHJlclwiIGF1IHByw6lhbGFibGUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjozCm1zZ2lkICJOYW1lIG9mIHRoaXMgT2N0b1ByaW50IGluc3RhbmNlLCB3aWxsIGJlIHNob3duIGluIHRoZSBuYXZpZ2F0aW9uIGJhciBhbmQgYnJvYWRjYXN0IG9uIHRoZSBuZXR3b3JrIgptc2dzdHIgIkxlIG5vbSBkZSBjZXR0ZSBpbnN0YW5jZSBkZSBPY3RvUHJpbnQgc2VyYSBhZmZpY2jDqSBkYW5zIGxhIGJhcnJlIGRlIG5hdmlnYXRpb24gZXQgc2VyYSBkaWZmdXPDqSBzdXIgbGUgcsOpc2VhdSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6NAptc2dpZCAiVGl0bGUiCm1zZ3N0ciAiVGl0cmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjkKbXNnaWQgIlBlcnNvbmFsaXplIHRoZSBjb2xvciBvZiB0aGUgbmF2aWdhdGlvbiBiYXIgLSBtYXliZSB0byBtYXRjaCB5b3VyIHByaW50ZXI/Igptc2dzdHIgIlBlcnNvbm5hbGlzZXogbGEgY291bGV1ciBkZSBsYSBiYXJyZSBkZSBuYXZpZ2F0aW9uIC0gcGV1dC3DqnRyZSBwb3VyIGNvcnJlc3BvbmRyZSDDoCB2b3RyZSBpbXByaW1hbnRlID8iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjEwCm1zZ2lkICJDb2xvciIKbXNnc3RyICJDb3VsZXVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjoxNgptc2dpZCAiRm9yIGFjcnlsaWMgcHJpbnRlcnMgOykiCm1zZ3N0ciAiUG91ciBsZXMgaW1wcmltYW50ZXMgYWNyeWxpcXVlcyA7KSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6MTkKbXNnaWQgIlRyYW5zcGFyZW50IGNvbG9yIgptc2dzdHIgIkNvdWxldXIgdHJhbnNwYXJlbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjoyMwptc2dpZCAiQWxzbyBwZXJzb25hbGl6ZSB0aGUgaWNvbiBvZiB0aGUgYnJvd3NlciB0YWIiCm1zZ3N0ciAiUGVyc29ubmFsaXNleiDDqWdhbGVtZW50IGwnaWPDtG5lIGRlIGwnb25nbGV0IGR1IG5hdmlnYXRldXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjI2Cm1zZ2lkICJDb2xvcml6ZSBmYXZpY29uIChpbiBzdXBwb3J0ZWQgYnJvd3NlcnMpIgptc2dzdHIgIkNvbG9yaXNlciBsZXMgZmF2aWNvbiAoZGFucyBsZXMgbmF2aWdhdGV1cnMgY29tcGF0aWJsZXMpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjozMQptc2dpZCAiTGFuZ3VhZ2UgUGFja3MiCm1zZ3N0ciAiUGFja3MgZGUgbGFuZ3VlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjozMwptc2dpZCAiTWFuYWdlLi4uIgptc2dzdHIgIkfDqXJlciAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjM3Cm1zZ2lkICJEZWZhdWx0IExhbmd1YWdlIgptc2dzdHIgIkxhbmd1ZSBwYXIgZMOpZmF1dCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6NDQKbXNnaWQgIkNoYW5nZXMgdG8gdGhlIGRlZmF1bHQgaW50ZXJmYWNlIGxhbmd1YWdlIHdpbGwgb25seSBiZWNvbWUgYWN0aXZlIGFmdGVyIGEgcmVsb2FkIG9mIHRoZSBwYWdlIGFuZCBvbmx5IGJlIGFjdGl2ZSBpZiBub3Qgb3ZlcnJpZGRlbiBieSB0aGUgdXNlcnMgbGFuZ3VhZ2Ugc2V0dGluZ3MuIgptc2dzdHIgIkxlcyBtb2RpZmljYXRpb25zIGRlIGwnaW50ZXJmYWNlIHBhciBkw6lmYXV0IG5lIHNlcm9udCBhY3RpdmVzIHF1J2FwcsOocyB1biByZWNoYXJnZW1lbnQgZGUgbGEgcGFnZSBldCB1bmlxdWVtZW50IHNpIGVsbGVzIG5lIHNvbnQgcGFzIG91dHJlcGFzc8OpZXMgcGFyIGxlcyByw6lnbGFnZXMgZGUgbGFuZ3VlIGRlIGwndXRpbGlzYXRldXIuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjo1MAptc2dpZCAiU2hvdyB0ZW1wZXJhdHVyZXMgaW4gRmFocmVuaGVpdCBhcyB3ZWxsIGFzIENlbHNpdXMiCm1zZ3N0ciAiSW5kaXF1ZXIgbGVzIHRlbXDDqXJhdHVyZXMgZW4gZGVncsOpIEZhaHJlbmhlaXQgcGx1dMO0dCBxdSdlbiBkZWdyw6kgQ2Vsc2l1cyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6NTcKbXNnaWQgIlNob3cgZnV6enkgcHJpbnQgdGltZSBlc3RpbWF0ZXMiCm1zZ3N0ciAiQWZmaWNoZXIgbGVzIGVzdGltYXRpb25zIGRlIHRlbXBzIGQnaW1wcmVzc2lvbiBmbG91ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6NjQKbXNnaWQgIkNsb3NlIGRpYWxvZ3MgYnkgY2xpY2tpbmcgb3V0c2lkZSIKbXNnc3RyICJGZXJtZXogbGVzIGZlbsOqdHJlcyBlbiBjbGlxdWFudCBlbiBkZWhvcnMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjcxCm1zZ2lkICJTaG93IGludGVybmFsIGZpbGVuYW1lIGluIHRoZSBmaWxlcyBzaWRlYmFyIChpZiBhdmFpbGFibGUpIgptc2dzdHIgIkFmZmljaGVyIGxlIG5vbSBkdSBmaWNoaWVyIGludGVybmUgZGFucyBsYSBiYXJyZSBsYXTDqXJhbGUgZGVzIGZpY2hpZXJzIChzaSBkaXNwb25pYmxlKSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6ODAKbXNnaWQgIk1hbmFnZSBMYW5ndWFnZSBQYWNrcy4uLiIKbXNnc3RyICJHw6lyZXIgbGVzIHBhY2tzIGRlIGxhbmd1ZS4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6ODQKbXNnaWQgIlRoZXJlIGlzIGN1cnJlbnRseSBubyBjZW50cmFsIHJlcG9zaXRvcnkgZm9yIGxhbmd1YWdlIHBhY2tzIGxpa2UgdGhlcmUgaXMgZm9yIHBsdWdpbnMgLSBhbnkgaGVscCB0byBjaGFuZ2UgdGhhdCBpcyBhcHByZWNpYXRlZCEiCm1zZ3N0ciAiSWwgbid5IGEgYWN0dWVsbGVtZW50IHBhcyBkZSBkw6lww7R0IGNlbnRyYWwgcG91ciBsZXMgcGFja3MgbGluZ3Vpc3RpcXVlcyBvdSBwb3VyIGxlcyBleHRlbnNpb25zIC0gdG91dGUgYWlkZSBlc3QgbGEgYmllbnZlbnVlICEiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjg3CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlVudGlsIGEgcmVwb3NpdG9yeSBpcyBhdmFpbGFibGUsIHBsZWFzZSBzZWUgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiA+dGhlIHdpa2k8L2E+IGZvciBsYW5ndWFnZSBwYWNrcyBwcm92aWRlZCBieSB0aGUgY29tbXVuaXR5LiIKbXNnc3RyICJFbiBhdHRlbnRlIGRlIGxhIG1pc2Ugw6AgZGlzcG9zaXRpb24gZCd1biBkw6lww7R0LCB2ZXVpbGxleiB2b3VzIHLDqWbDqXJlciBhdSA8YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiID53aWtpPC9hPiBwb3VyIGxhIHLDqWN1cMOpcmF0aW9uIGRlIHBhY2tzIGxpbmd1aXN0aXF1ZXMgbWlzIMOgIGRpc3Bvc2l0aW9uIHBhciBsYSBjb21tdW5hdXTDqS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjkwCm1zZ2lkICJBdmFpbGFibGUgTGFuZ3VhZ2UgUGFja3MiCm1zZ3N0ciAiUGFja3MgZGUgbGFuZ3VlIGRpc3BvbmlibGVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9hcHBlYXJhbmNlLmppbmphMjoxMDEKbXNnaWQgIkxhc3QgdXBkYXRlOiIKbXNnc3RyICJEZXJuacOocmUgbWlzZSDDoCBqb3VyIDoiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjExNQptc2dpZCAiTm8gYWRkaXRpb25hbCBMYW5ndWFnZSBQYWNrcyBhcmUgaW5zdGFsbGVkIGF0IHRoZSBtb21lbnQuIgptc2dzdHIgIkF1Y3VuIHBhY2sgZGUgbGFuZ3VlIG4nZXN0IGluc3RhbGzDqSBwb3VyIGxlIG1vbWVudC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjEyMAptc2dpZCAiVXBsb2FkIGFkZGl0aW9uYWwgTGFuZ3VhZ2UgUGFja3MiCm1zZ3N0ciAiVMOpbMOpdmVyc2VyIGRlIG5vdXZlYXV4IHBhY2tzIGRlIGxhbmd1ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6MTMxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL292ZXJsYXlzL2RyYWduZHJvcC5qaW5qYTI6MTAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6Njkgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6ODAKbXNnaWQgIlVwbG9hZCIKbXNnc3RyICJUw6lsw6l2ZXJzZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2FwcGVhcmFuY2UuamluamEyOjEzMwptc2dpZCAiVGhpcyBkb2VzIG5vdCBsb29rIGxpa2UgYSB2YWxpZCBsYW5ndWFnZSBwYWNrLiBWYWxpZCBsYW5ndWFnZSBwYWNrcyBzaG91bGQgYmUgZWl0aGVyIHppcCBmaWxlcyBvciB0YXJiYWxscyBhbmQgaGF2ZSB0aGUgZXh0ZW5zaW9uIFwiLnppcFwiLCBcIi50YXIuZ3pcIiwgXCIudGd6XCIgb3IgXCIudGFyXCIiCm1zZ3N0ciAiQ2VsYSBuZSByZXNzZW1ibGUgcGFzIMOgIHVuZSBleHRlbnNpb24gZGUgcGFjayBkZSBsYW5ndWUgdmFsaWRlLiBMZXMgZXh0ZW5zaW9ucyBkZSBwYWNrIGRlIGxhbmd1ZSB2YWxpZGVzIGRvaXZlbnQgw6p0cmUgZGVzIGZpY2hpZXJzIHppcCBvdSB0YXJiYWxsIGV0IGF2b2lyIHVuZSBleHRlbnNpb24gXCIuemlwXCIsIFwiLnRhci5nelwiLCBcIi50Z3pcIiBvdSBcIi50YXJcIiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvYXBwZWFyYW5jZS5qaW5qYTI6MTM2Cm1zZ2lkICJQbGVhc2Ugbm90ZSB0aGF0IHlvdSB3aWxsIGhhdmUgdG8gcmVsb2FkIHRoZSBwYWdlIGluIG9yZGVyIGZvciBhbnkgbmV3bHkgYWRkZWQgbGFuZ3VhZ2UgcGFja3MgdG8gYmVjb21lIGF2YWlsYWJsZS4iCm1zZ3N0ciAiTWVyY2kgZGUgcmVjaGFyZ2VyIGxhIHBhZ2UgYWZpbiBxdWUgbGVzIG5vdXZlYXV4IHBhY2tzIGRlIGxhbmd1ZSBkZXZpZW5uZW50IGRpc3BvbmlibGVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjYKbXNnaWQgIkVuYWJsZSBUZW1wZXJhdHVyZSBHcmFwaCIKbXNnc3RyICJBY3RpdmVyIGxlIGdyYXBoaXF1ZSBkZSB0ZW1ww6lyYXR1cmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjoxMwptc2dpZCAiRW5hYmxlIG1vZGVsIHNpemUgZGV0ZWN0aW9uIGFuZCB3YXJuIGlmIG1vZGVsIGV4Y2VlZHMgcHJpbnQgYmVkIgptc2dzdHIgIkFjdGl2ZXIgbGEgZMOpdGVjdGlvbiBkZSBsYSB0YWlsbGUgZHUgbW9kw6hsZSBldCBhdmVydGlyIHNpIGxlIG1vZMOobGUgZMOpcGFzc2UgZHUgcGxhdGVhdSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjEzCm1zZ2lkICJCZXRhIgptc2dzdHIgIkJldGEiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjoyMAptc2dpZCAiQ29uZmlybSBiZWZvcmUgc3RhcnRpbmcgYSBwcmludCIKbXNnc3RyICJDb25maXJtZXogYXZhbnQgZGUgZMOpbWFycmVyIHVuZSBpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mZWF0dXJlcy5qaW5qYTI6MjcKbXNnaWQgIkNvbmZpcm0gYmVmb3JlIGNhbmNlbGxpbmcgYSBwcmludCIKbXNnc3RyICJDb25maXJtZXIgYXZhbnQgZCdhbm51bGVyIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjM0Cm1zZ2lkICJDb25maXJtIGJlZm9yZSBvdmVyd3JpdGluZyBhIGZpbGUgYnkgdXBsb2FkIgptc2dzdHIgIkNvbmZpcm1lciBhdmFudCBkJ8OpY3Jhc2VyIHVuIGZpY2hpZXIgcGFyIHTDqWzDqXZlcnNlbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjQxCm1zZ2lkICJFbmFibGUgU0Qgc3VwcG9ydCIKbXNnc3RyICJBY3RpdmVyIGxlIHN1cHBvcnQgZGUgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo0OAptc2dpZCAiRW5hYmxlIEtleWJvYXJkIENvbnRyb2wiCm1zZ3N0ciAiQWN0aXZlciBsZSBjb250csO0bGUgYXUgY2xhdmllciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjU2Cm1zZ2lkICI8Y29kZT5HOTA8L2NvZGU+Lzxjb2RlPkc5MTwvY29kZT4gb3ZlcnJpZGVzIHJlbGF0aXZlIGV4dHJ1ZGVyIG1vZGUiCm1zZ3N0ciAiPGNvZGU+RzkwPC9jb2RlPi88Y29kZT5HOTE8L2NvZGU+IGlnbm9yZW50IGxlIHBvc2l0aW9ubmVtZW50IHJlbGF0aWYgZGUgbCdleHRydWRldXNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mZWF0dXJlcy5qaW5qYTI6NTYKbXNnaWQgIlNtb290aGlld2FyZSIKbXNnc3RyICJTbW9vdGhpZXdhcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo1Ngptc2dpZCAiTWFybGluIDIrIgptc2dzdHIgIk1hcmxpbiAyKyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjU3Cm1zZ2lkICJUaGlzIGlzIHVzZWQgYnkgdGhlIEdDT0RFIGFuYWx5c2lzIGluIHRoZSBiYWNrZW5kIGFuZCB0aGUgdmlld2VyIGluIHRoZSBmcm9udGVuZCB0byBpbnRlcnByZXQgeW91ciBzbGljZWQgZmlsZXMgY29ycmVjdGx5LiIKbXNnc3RyICJDZWNpIGVzdCB1dGlsaXPDqSBwYXIgbCdhbmFseXNldXIgZGUgIEctY29kZSBkYW5zIGxlIGJhY2tlbmQgZXQgbCdhZmZpY2hldXIgZGFucyBsZSBmcm9udGVuZCBwb3VyIGludGVycHLDqXRlciBjb3JyZWN0ZW1lbnQgdm9zIGZpY2hpZXJzIGTDqWNvdXDDqXMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mZWF0dXJlcy5qaW5qYTI6NjEKbXNnaWQgIkNvbW1hbmRzIHRvIG5vdCBjb21wbGV0ZWx5IGF1dG8gdXBwZXJjYXNlIGluIHRoZSB0ZXJtaW5hbCB0YWIiCm1zZ3N0ciAiQ29tbWFuZGVzIHBvdXIgbmUgcGFzIHBhc3NlciBlbiBtYWp1c2N1bGUgYXV0b21hdGlxdWVtZW50IGRhbnMgbCdvbmdsZXQgdGVybWluYWwiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo2Mgptc2dpZCAiVGVybWluYWwgQXV0byBVcHBlcmNhc2UgQmxhY2tsaXN0Igptc2dzdHIgIkxpc3RlIE5vaXJlIGVuIG1hanVzY3VsZSBhdXRvbWF0aXF1ZSBkZSBsJ29uZ2xldCBUZXJtaW5hbCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZmVhdHVyZXMuamluamEyOjY1Cm1zZ2lkICJVc2UgdGhpcyB0byBzcGVjaWZ5IHRoZSBjb21tYW5kcyB0aGF0IHNob3VsZCBub3QgaGF2ZSB0aGVpciBwYXJhbWV0ZXJzIGF1dG9tYXRpY2FsbHkgdXBwZXJjYXNlZCBpbiB0aGUgdGVybWluYWwgdGFiLiBKdXN0IHRoZSBHIG9yIE0gY29kZSwgY29tbWEgc2VwYXJhdGVkLiIKbXNnc3RyICJVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBzcMOpY2lmaWVyIGRlcyBjb21tYW5kZXMgZG9udCBsZXMgcGFyYW3DqHRyZXMgbmUgZG9pdmVudCBwYXMgw6p0cmUgYXV0b21hdGlxdWVtZW50IG1pcyBlbiBtYWp1c2N1bGVzIGRhbnMgbCdvbmdsZXQgWWVybWluYWwuIEp1c3RlIGxlIGNvZGUgRyBvdSBNLCBzw6lwYXLDqXMgcGFyIGRlcyB2aXJndWxlcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo3MAptc2dpZCAiQW5hbHl6ZSBnY29kZSBmb3IgdGltZSBhbmQgbW9kZWwgc2l6ZSBlc3RpbWF0ZXMiCm1zZ3N0ciAiQW5hbHlzZSBkdSBHLWNvZGUgcG91ciBsJ2VzdGltYXRpb24gZHUgdGVtcHMgZXQgZGUgbGEgdGFpbGxlIGR1IG1vZMOobGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo3Mwptc2dpZCAiQWx3YXlzICIKbXNnc3RyICJUb3Vqb3VycyAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZlYXR1cmVzLmppbmphMjo3Ngptc2dpZCAiT25seSB3aGVuIGlkbGUgKG5vdCBwcmludGluZykiCm1zZ3N0ciAiU2V1bGVtZW50IMOgIGwnYXJyw6p0IChwYXMgZW4gaW1wcmVzc2lvbikiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjQKbXNnaWQgIlVwbG9hZCBGb2xkZXIiCm1zZ3N0ciAiRG9zc2llciBkZXMgdMOpbMOpY2hhcmdlbWVudHMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mb2xkZXJzLmppbmphMjoxOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjI4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6Mzggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mb2xkZXJzLmppbmphMjo0OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyT25saW5lQ2hlY2tUZXN0Q29ubmVjdGl2aXR5LmppbmphMjoxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja1Rlc3RSZXNvbHV0aW9uLmppbmphMjoxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS9mZm1wZWdQYXRoLmppbmphMjo2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TbmFwc2hvdFVybC5qaW5qYTI6NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU3RyZWFtVXJsLmppbmphMjo2Cm1zZ2lkICJUZXN0Igptc2dzdHIgIlRlc3QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjE0Cm1zZ2lkICJUaW1lbGFwc2UgRm9sZGVyIgptc2dzdHIgIkRvc3NpZXIgZGVzIFRpbWVsYXBzZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjI0Cm1zZ2lkICJUaW1lbGFwc2UgVGVtcCBGb2xkZXIiCm1zZ3N0ciAiRG9zc2llciB0ZW1wb3JhaXJlIGRlcyBUaW1lbGFwc2VzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mb2xkZXJzLmppbmphMjozNAptc2dpZCAiTG9ncyBGb2xkZXIiCm1zZ3N0ciAiRG9zc2llciBkZXMgam91cm5hdXgiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjQ0Cm1zZ2lkICJXYXRjaGVkIEZvbGRlciIKbXNnc3RyICJEb3NzaWVyIHN1cnZlaWxsw6kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2ZvbGRlcnMuamluamEyOjU2Cm1zZ2lkICJBY3RpdmVseSBwb2xsIHRoZSB3YXRjaGVkIGZvbGRlci4gQ2hlY2sgdGhpcyBpZiBmaWxlcyBpbiB5b3VyIHdhdGNoZWQgZm9sZGVyIGFyZW4ndCBhdXRvbWF0aWNhbGx5IGFkZGVkIG90aGVyd2lzZS4iCm1zZ3N0ciAiSW50ZXJyb2dhdGlvbiBhY3RpdmUgZHUgZG9zc2llciBzdXJ2ZWlsbMOpLiBDb2NoZXogY2V0dGUgZm9uY3Rpb24gc2kgbGVzIGZpY2hpZXJzIGRlIHZvdHJlIGRvc3NpZXIgb2JzZXJ2w6kgbmUgc29udCBwYXMgYXV0b21hdGlxdWVtZW50IGFqb3V0w6lzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6NjEKbXNnaWQgIiIKIlxuIgoiICAgICAgICAgICAgVHdvIG9yIG1vcmUgb2YgdGhlIGZvbGRlcnMgY29uZmlndXJlZCBzaGFyZSBhIGxvY2F0aW9uLiBUaGlzIGlzIG5vdFxuIgoiICAgICAgICAgICAgc3VwcG9ydGVkLiBZb3UgbmVlZCB0byBmaXggdGhpcywgdW50aWwgdGhlbiBubyBjaGFuZ2VzIHRvIHlvdXIgZm9sZGVyXG4iCiIgICAgICAgICAgICBjb25maWd1cmF0aW9uIHdpbGwgYmUgcGVyc2lzdGVkIHdoZW4gc2F2aW5nIHRoZSBzZXR0aW5ncy5cbiIKIiAgICAgICAgIgptc2dzdHIgIiIKIlxuIgoiICAgICAgICAgICAgRGV1eCBvdSBwbHVzaWV1cnMgZGVzIGRvc3NpZXJzIGNvbmZpZ3Vyw6lzIHBhcnRhZ2VudCB1biBlbXBsYWNlbWVudC4gQ2V0dGUgc2l0dWF0aW9uIG4nZXN0IHBhc1xuIgoiICAgICAgICAgICAgcHJpc2UgZW4gY2hhcmdlLiBWb3VzIGRldmV6IGNvcnJpZ2VyIGNlIHByb2Jsw6htZS4gRW4gYXR0ZW5kYW50LCBsZXMgbW9kaWZpY2F0aW9ucyBhcHBvcnTDqWVzIMOgIGxhIGNvbmZpZ3VyYXRpb24gZGVzIGRvc3NpZXJzXG4iCiIgICAgICAgICAgICBuZSBzZXJvbnQgcGFzIGNvbnNlcnbDqWVzIGxvcnMgZGUgbCdlbnJlZ2lzdHJlbWVudCBkZXMgcGFyYW3DqHRyZXMuXG4iCiIgICAgICAgICIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6NjgKbXNnaWQgIkRpc2sgc3BhY2UgdGhyZXNob2xkcyIKbXNnc3RyICJMaW1pdGVzIGRlIHN0b2NrYWdlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9mb2xkZXJzLmppbmphMjo3MAptc2dpZCAiSWYgdGhlIGZyZWUgZGlzayBzcGFjZSBmYWxscyBiZWxvdyB0aGVzZSB0aHJlc2hvbGRzLCBPY3RvUHJpbnQgd2lsbCB3YXJuIHRoZSB1c2VyLiIKbXNnc3RyICJTaSBsJ2VzcGFjZSBkaXNxdWUgcmVzdGFudCBkZXNjZW5kIGVuIGRlc3NvdXMgZGUgY2Ugc2V1aWwsIE9jdG9QcmludCBhdmVydGlyYSBsJ3V0aWxpc2F0ZXVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZm9sZGVycy5qaW5qYTI6NzkKbXNnaWQgIkNyaXRpY2FsIgptc2dzdHIgIkNyaXRpcXVlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjQKbXNnaWQgIkJlZm9yZSBwcmludCBqb2Igc3RhcnRzIgptc2dzdHIgIkF2YW50IGxlIGTDqW1hcnJhZ2UgZGUgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjM4Cm1zZ2lkICJBbnl0aGluZyB5b3UgcHV0IGhlcmUgd2lsbCBiZSBleGVjdXRlZCA8ZW0+YmVmb3JlPC9lbT4gYW55IGxpbmVzIGluIHlvdXIgZmlsZXMuIgptc2dzdHIgIlRvdXQgY2UgcXVlIHZvdXMgbWV0dGV6IGljaSBzZXJhIGV4w6ljdXTDqSA8ZW0+YXZhbnQ8L2VtPiB0b3V0ZXMgbGVzIGxpZ25lcyBkZSB2b3MgZmljaGllcnMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjExCm1zZ2lkICJBZnRlciBwcmludCBqb2IgY29tcGxldGVzIgptc2dzdHIgIkFwcsOocyBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2djb2Rlc2NyaXB0cy5qaW5qYTI6MTQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjIyIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZ2NvZGVzY3JpcHRzLmppbmphMjozMQptc2dpZCAiQW55dGhpbmcgeW91IHB1dCBoZXJlIHdpbGwgYmUgZXhlY3V0ZWQgPGVtPmFmdGVyPC9lbT4gYW55IGxpbmVzIGluIHlvdXIgZmlsZXMuIgptc2dzdHIgIlRvdXQgY2UgcXVlIHZvdXMgbWV0dGV6IGljaSBzZXJhIGV4w6ljdXTDqSA8ZW0+YXByw6hzPC9lbT4gdG91dGVzIGxlcyBsaWduZXMgZGUgdm9zIGZpY2hpZXJzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZ2NvZGVzY3JpcHRzLmppbmphMjoxOAptc2dpZCAiQWZ0ZXIgcHJpbnQgam9iIGlzIGNhbmNlbGxlZCIKbXNnc3RyICJBcHLDqHMgbCdhbm51bGF0aW9uIGRlIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZ2NvZGVzY3JpcHRzLmppbmphMjoyMwojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJJZiB5b3UgZXZlciBuZWVkIHRvIHlvdSBjYW4gZmluZCB0aGUgZGVmYXVsdCBjYW5jZWwgc2NyaXB0IHRoYXQgT2N0b1ByaW50IHNoaXBzIHdpdGggPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5oZXJlPC9hPi4iCm1zZ3N0ciAiU2kgdm91cyBlbiBhdmV6IGJlc29pbiwgdm91cyBwb3V2ZXogdHJvdXZlcjxhIGhyZWY9XCIlKHVybClzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+aWNpPC9hPiBsZSBzY3JpcHQgZCdhbm51bGF0aW9uIHBhciBkw6lmYXV0IGZvdXJuaSBhdmVjIE9jdG9QcmludC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2djb2Rlc2NyaXB0cy5qaW5qYTI6MjgKbXNnaWQgIkFmdGVyIHByaW50IGpvYiBpcyBwYXVzZWQiCm1zZ3N0ciAiQXByw6hzIGxhIG1pc2UgZW4gcGF1c2UgZGUgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjM1Cm1zZ2lkICJCZWZvcmUgcHJpbnQgam9iIGlzIHJlc3VtZWQiCm1zZ3N0ciAiQSBsYSByZXByaXNlIGRlIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvZ2NvZGVzY3JpcHRzLmppbmphMjo0Mgptc2dpZCAiQmVmb3JlIHRvb2wgY2hhbmdlIgptc2dzdHIgIkF2YW50IGNoYW5nZW1lbnQgZCdvdXRpbHMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2djb2Rlc2NyaXB0cy5qaW5qYTI6NDUKbXNnaWQgIkFueXRoaW5nIHlvdSBwdXQgaGVyZSB3aWxsIGJlIGV4ZWN1dGVkIDxlbT5iZWZvcmU8L2VtPiBhbnkgdG9vbCBjaGFuZ2UgY29tbWFuZHMgPGNvZGU+VG48L2NvZGU+LiIKbXNnc3RyICJUb3V0IGNlIHF1ZSB2b3VzIG1ldHRleiBpY2kgc2VyYSBleMOpY3V0w6kgPGVtPmF2YW50PC9lbT4gdG91dGUgY29tbWFuZGUgZGUgY2hhbmdlbWVudCBkZSBidXNlIDxjb2RlPlRuPC9jb2RlPi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL2djb2Rlc2NyaXB0cy5qaW5qYTI6NDkKbXNnaWQgIkFmdGVyIHRvb2wgY2hhbmdlIgptc2dzdHIgIkFwcsOocyBjaGFuZ2VtZW50IGQnb3V0aWxzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjUyCm1zZ2lkICJBbnl0aGluZyB5b3UgcHV0IGhlcmUgd2lsbCBiZSBleGVjdXRlZCA8ZW0+YWZ0ZXI8L2VtPiBhbnkgdG9vbCBjaGFuZ2UgY29tbWFuZHMgPGNvZGU+VG48L2NvZGU+LiIKbXNnc3RyICJUb3V0IGNlIHF1ZSB2b3VzIG1ldHRleiBpY2kgc2VyYSBleMOpY3V0w6kgPGVtPmFwcsOoczwvZW0+IHRvdXRlIGNvbW1hbmRlIGRlIGNoYW5nZW1lbnQgZGUgYnVzZSA8Y29kZT5UbjwvY29kZT4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjU2Cm1zZ2lkICJBZnRlciBzZXJpYWwgY29ubmVjdGlvbiB0byBwcmludGVyIGlzIGVzdGFibGlzaGVkIgptc2dzdHIgIlVuZSBmb2lzIGxhIGNvbm5leGlvbiBzw6lyaWUgw6AgbCdpbXByaW1hbnRlIMOpdGFibGllIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjYyCm1zZ2lkICJCZWZvcmUgc2VyaWFsIGNvbm5lY3Rpb24gdG8gcHJpbnRlciBpcyBjbG9zZWQiCm1zZ3N0ciAiQXZhbnQgbGEgZmVybWV0dXJlIGRlIGxhIGNvbm5leGlvbiBzw6lyaWUgw6AgbCdpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9nY29kZXNjcmlwdHMuamluamEyOjY1Cm1zZ2lkICJBbnl0aGluZyB5b3UgcHV0IGhlcmUgd2lsbCBvbmx5IGJlIGV4ZWN1dGVkIHdoZW4gY2xvc2luZyB0aGUgc2VyaWFsIGNvbm5lY3Rpb24gYWN0aXZlbHkuIElmIHRoZSBzZXJpYWwgY29ubmVjdGlvbiB0byB0aGUgcHJpbnRlciBpcyBzdWRkZW5seSBsb3N0IG5vdGhpbmcgd2lsbCBiZSBzZW50LiIKbXNnc3RyICJUb3V0IGNlIHF1ZSB2b3VzIG1ldHRleiBpY2kgbmUgc2VyYSBleMOpY3V0w6kgcXVlIGxvcnMgZGUgbGEgZmVybWV0dXJlIGFjdGl2ZSBkZSBsYSBjb25uZXhpb24gc8OpcmllLiBTaSBsYSBjb25uZXhpb24gc8OpcmllIMOgIGwnaW1wcmltYW50ZSBlc3Qgc291ZGFpbmVtZW50IHBlcmR1ZSwgcmllbiBuZSBzZXJhIGVudm95w6kuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMuamluamEyOjUKbXNnaWQgIkFkZCBQcm9maWxlLi4uIgptc2dzdHIgIkFqb3V0ZXIgdW4gcHJvZmlsIC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3dlYmNhbS5qaW5qYTI6Mgptc2dpZCAiTm90ZTogIgptc2dzdHIgIlJlbWFycXVlOiAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjIKbXNnaWQgIkNoYW5naW5nIG1vc3Qgb2YgdGhlc2Ugc2V0dGluZ3MgcmVxdWlyZXMgcmVzdGFydGluZyB0aGUgY29ubmVjdGlvbiB3aXRoIHlvdXIgcHJpbnRlciBmb3IgeW91ciBjaGFuZ2VzIHRvIGJlY29tZSBlZmZlY3RpdmUuIgptc2dzdHIgIkxhIG1vZGlmaWNhdGlvbiBkZSBsYSBwbHVwYXJ0IGRlIGNlcyBwYXJhbcOodHJlcyBuw6ljZXNzaXRlIGxlIHJlZMOpbWFycmFnZSBkZSBsYSBjb25uZXhpb24gYXZlYyB2b3RyZSBpbXByaW1hbnRlIHBvdXIgcXVlIHZvcyBtb2RpZmljYXRpb25zIHNvaWVudCBlZmZlY3RpdmVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6OAptc2dpZCAiSW50ZXJ2YWxzICZhbXA7IHRpbWVvdXRzIgptc2dzdHIgIkludGVydmFsbGVzICZhbXA7IETDqWxhaXMgZCdBdHRlbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo5Cm1zZ2lkICJGaXJtd2FyZSAmYW1wOyBwcm90b2NvbCIKbXNnc3RyICJGaXJtd2FyZSAmYW1wOyBQcm90b2NvbGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjEwCm1zZ2lkICJCZWhhdmlvdXIiCm1zZ3N0ciAiQ29tcG9ydGVtZW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxNwptc2dpZCAiU2VyaWFsIHBvcnQgdG8gY29ubmVjdCB0bywgc2V0dGluZyB0aGlzIHRvIEFVVE8gd2lsbCBtYWtlIE9jdG9QcmludCB0cnkgdG8gYXV0b21hdGljYWxseSBmaW5kIHRoZSByaWdodCBzZXR0aW5nIgptc2dzdHIgIlBvcnQgc8OpcmllIGF1cXVlbCBzZSBjb25uZWN0ZXIsIHBvc2l0aW9ubmVyIGNlIHBhcmFtw6h0cmUgc3VyIEFVVE8gbGFpc3NlcmEgT2N0b1ByaW50IHRlbnRlciBkZSB0cm91dmVyIGF1dG9tYXRpcXVlbWVudCBsZSBib24gcGFyYW3DqHRyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTggc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9jb25uZWN0aW9uLmppbmphMjoxCm1zZ2lkICJTZXJpYWwgUG9ydCIKbXNnc3RyICJQb3J0IHPDqXJpZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjMKbXNnaWQgIlNlcmlhbCBiYXVkIHJhdGUgdG8gY29ubmVjdCB3aXRoLCBzZXR0aW5nIHRoaXMgdG8gQVVUTyB3aWxsIG1ha2UgT2N0b1ByaW50IHRyeSB0byBhdXRvbWF0aWNhbGx5IGZpbmQgdGhlIHJpZ2h0IHNldHRpbmciCm1zZ3N0ciAiVml0ZXNzZSBkZSB0cmFuc21pc3Npb24gZHUgcG9ydCBzw6lyaWUsIHBvc2l0aW9ubmVyIGNlIHBhcmFtw6h0cmUgc3VyIEFVVE8gbGFpc3NlcmEgT2N0b1ByaW50IHRlbnRlciBkZSB0cm91dmVyIGF1dG9tYXRpcXVlbWVudCBsZSBib24gcGFyYW3DqHRyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9jb25uZWN0aW9uLmppbmphMjozCm1zZ2lkICJCYXVkcmF0ZSIKbXNnc3RyICJWaXRlc3NlIGRlIHRyYW5zbWlzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjkKbXNnaWQgIk1ha2VzIE9jdG9QcmludCB0cnkgdG8gY29ubmVjdCB0byB0aGUgcHJpbnRlciBhdXRvbWF0aWNhbGx5IGR1cmluZyBzdGFydCB1cCIKbXNnc3RyICJPY3RvUHJpbnQgZXNzYWllcmEgZGUgc2UgY29ubmVjdGVyIHBlbmRhbnQgbGUgZMOpbWFycmFnZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzIKbXNnaWQgIkF1dG8tY29ubmVjdCB0byBwcmludGVyIG9uIHNlcnZlciBzdGFydCIKbXNnc3RyICJDb25uZXhpb24gYXV0b21hdGlxdWUgw6AgbCdpbXByaW1hbnRlIGF1IHJlZMOpbWFycmFnZSBkdSBzZXJ2ZXVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjozNwptc2dpZCAiQWRkaXRpb25hbCBzZXJpYWwgcG9ydHMiCm1zZ3N0ciAiUG9ydHMgc8OpcmllcyBzdXBwbMOpbWVudGFpcmVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJVc2UgdGhpcyB0byBkZWZpbmUgYWRkaXRpb25hbCA8YSBocmVmPVwiJSUoZ2xvYl91cmwpc1wiPmdsb2IgcGF0dGVybnM8L2E+IG1hdGNoaW5nIHNlcmlhbCBwb3J0cyB0byBsaXN0IGZvciBjb25uZWN0aW5nIGFnYWluc3QsIGUuZy4gPGNvZGU+L2Rldi90dHlBTUEqPC9jb2RlPi4gT25lIGVudHJ5IHBlciBsaW5lLiBQbGVhc2Ugbm90ZSB0aGF0IHBvcnRzIHdpbGwgb25seSBiZSBvZmZlcmVkIHRvIGNvbm5lY3QgdG8gaWYgdGhleSBnZXQgYWxzbyBkZXRlY3RlZCBieSB0aGUgPGVtPm9wZXJhdGluZyBzeXN0ZW08L2VtPi4gQWRkaW5nIGEgcG9ydCBoZXJlIHdpbGwgbm90IG1ha2UgaXQgbWFnaWNhbGx5IGFwcGVhciBpbiBPY3RvUHJpbnQuIElmIHRoZSBvcGVyYXRpbmcgc3lzdGVtIGRvZXNuJ3Qgc2VlIHlvdXIgcHJpbnRlciB5b3UgbmVlZCB0byBzb2x2ZSB0aGlzIGZpcnN0LiIKbXNnc3RyICJVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBkw6lmaW5pciBkZXMgIDxhIGhyZWY9XCIlJShnbG9iX3VybClzXCI+bW9kw6hsZXMgZ2xvYmF1eDwvYT4gc3VwcGzDqW1lbnRhaXJlcyBjb3JyZXNwb25kYW50IGF1eCBwb3J0cyBzw6lyaWUgw6AgcsOpcGVydG9yaWVyIHBvdXIgbGEgY29ubmV4aW9uLCBwYXIgZXguIDxjb2RlPi9kZXYvdHR5QU1BKjwvY29kZT4uIFVuZSBlbnRyw6llIHBhciBsaWduZS4gVmV1aWxsZXogbm90ZXIgcXVlIGxlcyBwb3J0cyBuZSBzZXJvbnQgcHJvcG9zw6lzIMOgIGxhIGNvbm5leGlvbiBxdWUgcydpbHMgc29udCDDqWdhbGVtZW50IGTDqXRlY3TDqXMgcGFyIGxlIDxlbT5zeXN0w6htZSBkJ2V4cGxvaXRhdGlvbjwvZW0+LiBBam91dGVyIHVuIHBvcnQgaWNpIG5lIGxlIGZlcmEgcGFzIGFwcGFyYcOudHJlIGNvbW1lIHBhciBtYWdpZSBkYW5zIE9jdG9QcmludC4gU2kgbGUgc3lzdMOobWUgZCdleHBsb2l0YXRpb24gbmUgdm9pdCBwYXMgdm90cmUgaW1wcmltYW50ZSwgdm91cyBkZXZleiBkJ2Fib3JkIHLDqXNvdWRyZSBjZSBwcm9ibMOobWUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NAptc2dpZCAiQWRkaXRpb25hbCBiYXVkIHJhdGVzIgptc2dzdHIgIlZpdGVzc2VzIGRlIHRyYW5zbWlzc2lvbiBzdXBwbMOpbWVudGFpcmVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0Nwptc2dpZCAiVXNlIHRoaXMgdG8gZGVmaW5lIGFkZGl0aW9uYWwgc2VyaWFsIHBvcnQgYmF1ZCByYXRlcyB0byBsaXN0IGZvciBjb25uZWN0aW5nIHdpdGgsIGUuZy4gPGNvZGU+MTIzNDU2PC9jb2RlPi4gQ29tbWEgc2VwYXJhdGVkLiIKbXNnc3RyICJVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBkw6lmaW5pciBkZXMgdml0ZXNzZXMgZGUgdHJhbnNtaXNzaW9uIHN1cHBsw6ltZW50YWlyZXMgw6AgbGEgbGlzdGUgcG91ciBsYSBjb25uZXhpb24gYXZlYywgcGFyIGV4LiA8Y29kZT4gMTIzNDU2IDwvY29kZT4uIFPDqXBhcsOpZXMgcGFyIGRlcyB2aXJndWxlcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUxCm1zZ2lkICJCbGFja2xpc3RlZCBzZXJpYWwgcG9ydHMiCm1zZ3N0ciAiUG9ydHMgc8OpcmllIHN1ciBsaXN0ZSBub2lyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTQKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiVXNlIHRoaXMgdG8gZGVmaW5lIDxhIGhyZWY9XCIlJShnbG9iX3VybClzXCI+Z2xvYiBwYXR0ZXJuczwvYT4gbWF0Y2hpbmcgc2VyaWFsIHBvcnRzIHRvIGJsYWNrbGlzdCBmb3IgY29ubmVjdGluZyBhZ2FpbnN0LCBlLmcuIDxjb2RlPi9kZXYvdHR5Uyo8L2NvZGU+LiBPbmUgZW50cnkgcGVyIGxpbmUuIgptc2dzdHIgIlV0aWxpc2V6IGNlY2kgcG91ciBkw6lmaW5pciBkZXM8YSBocmVmPVwiJSUoZ2xvYl91cmwpc1wiPiBtb2TDqGxlcyBnbG9iYXV4PC9hPiBmYWlzYW50IGNvcnJlc3BvbmRyZSBsZXMgcG9ydHMgc8OpcmllIMOgIGxhIGxpc3RlIG5vaXJlIHBvdXIgbGEgY29ubmV4aW9uLCBwYXIgZXhlbXBsZTxjb2RlPiAvIGRldiAvIHR0eVMgKjwvY29kZT4uIFVuZSBlbnRyw6llIHBhciBsaWduZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU4Cm1zZ2lkICJCbGFja2xpc3RlZCBiYXVkIHJhdGVzIgptc2dzdHIgIkTDqWJpdHMgZW4gQmF1ZCBub24gYXV0b3Jpc8OpcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NjEKbXNnaWQgIlVzZSB0aGlzIHRvIGRlZmluZSBzZXJpYWwgcG9ydCBiYXVkIHJhdGVzIHRvIGJsYWNrbGlzdCBmb3IgY29ubmVjdGluZyB3aXRoLCBlLmcuIDxjb2RlPjEyMzQ1NjwvY29kZT4uIENvbW1hIHNlcGFyYXRlZC4iCm1zZ3N0ciAiVXRpbGlzZXotbGUgcG91ciBkw6lmaW5pciBsZXMgZMOpYml0cyBlbiBCYXVkIGR1IHBvcnQgc8OpcmllIHN1ciBsYSBsaXN0ZSBub2lyZSBwb3VyIGxhIGNvbm5leGlvbiwgcGFyIGV4LiA8Y29kZT4xMjM0NTY8L2NvZGU+LiBTw6lwYXLDqWVzIHBhciBkZXMgdmlyZ3VsZXMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo2Nwptc2dpZCAiUmVxdWVzdCBleGNsdXNpdmUgYWNjZXNzIHRvIHRoZSBzZXJpYWwgcG9ydCIKbXNnc3RyICJEZW1hbmRlIHVuIGFjY8OocyBleGNsdXNpZiBhdSBwb3J0IHPDqXJpZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NjgKbXNnaWQgIlVuY2hlY2sgdGhpcyBpZiB5b3UgYXJlIGhhdmluZyBwcm9ibGVtcyBjb25uZWN0aW5nIHRvIHlvdXIgcHJpbnRlci4iCm1zZ3N0ciAiRMOpY29jaGV6IGNldHRlIGNhc2Ugc2kgdm91cyByZW5jb250cmV6IGRlcyBwcm9ibMOobWVzIHBvdXIgdm91cyBjb25uZWN0ZXIgw6Agdm90cmUgaW1wcmltYW50ZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjc1Cm1zZ2lkICJSZXF1ZXN0IGxvdyBsYXRlbmN5IG1vZGUgb24gdGhlIHNlcmlhbCBwb3J0Igptc2dzdHIgIkRlbWFuZGVyIHVuIG1vZGUgw6AgZmFpYmxlIGxhdGVuY2Ugc3VyIGxlIHBvcnQgc8OpcmllIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo4MAptc2dpZCAiQXBwbHkgcGFyaXR5IGRvdWJsZSBvcGVuIHdvcmthcm91bmQiCm1zZ3N0ciAiQXBwbGlxdWVyIHVuZSBzb2x1dGlvbiBkZSBjb250b3VybmVtZW50IMOgIGRvdWJsZSBwYXJpdMOpIG91dmVydGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjg0CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlVzZSB0aGlzIGlmIHlvdSBhcmUgcnVubmluZyBpbnRvIDxhIGhyZWY9XCIlJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPnRoaXMgcHJvYmxlbTwvYT4uIgptc2dzdHIgIlV0aWxpc2V6IGNlY2kgc2kgdm91cyByZW5jb250cmV6IDxhIGhyZWY9XCIlJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJlclwiPmNlIHByb2Jsw6htZTwvYT4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo4Nwptc2dpZCAiSWYgZGV0ZWN0ZWQgYXMgcG90ZW50aWFsbHkgbmVlZGVkIgptc2dzdHIgIlNpIGTDqXRlY3TDqSBjb21tZSBwb3RlbnRpZWxsZW1lbnQgbsOpY2Vzc2FpcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjkxCm1zZ2lkICJVc2UgdGhpcyBpZiBjb25uZWN0aW5nIHRvIHlvdXIgcHJpbnRlciBmYWlscyB3aXRoIDxjb2RlPigyMiwgJ0ludmFsaWQgYXJndW1lbnQnKTwvY29kZT4uIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBzaSBsYSBjb25uZXhpb24gw6Agdm90cmUgaW1wcmltYW50ZSDDqWNob3VlIGF2ZWMgPGNvZGU+KDIyLCAnQXJndW1lbnQgaW52YWxpZGUnKTwvY29kZT4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo5Nwptc2dpZCAiU2VyaWFsIGxvZ2dpbmciCm1zZ3N0ciAiRW5yZWdpc3RyZW1lbnQgZW4gc8OpcmllIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxMDEKbXNnaWQgIkxvZyBjb21tdW5pY2F0aW9uIHRvIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+Igptc2dzdHIgIkpvdXJuYWxpc2VyIGxhIGNvbW11bmljYXRpb24gc3VyIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxMDIKbXNnaWQgIldoaWxlIHRoaXMgY2FuIG5lZ2F0aXZlbHkgaW1wYWN0IHBlcmZvcm1hbmNlLCBhIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IGNhbiBiZSBpbmNyZWRpYmx5IHVzZWZ1bCBmb3IgZGVidWdnaW5nIGFueSBpc3N1ZXMgb2JzZXJ2ZWQgaW4gdGhlIGNvbW11bmljYXRpb24gYmV0d2VlbiBPY3RvUHJpbnQgYW5kIHlvdXIgcHJpbnRlci4iCm1zZ3N0ciAiQmllbiBxdWUgY2VsYSBwdWlzc2UgYXZvaXIgdW4gaW1wYWN0IG7DqWdhdGlmIHN1ciBsZXMgcGVyZm9ybWFuY2VzLCB1biBmaWNoaWVyIDxjb2RlPnNlcmlhbC5sb2c8L2NvZGU+IHBldXQgw6p0cmUgdHLDqHMgdXRpbGUgcG91ciBkZWJ1ZyB0b3V0IHByb2Jsw6htZXMgb2JzZXJ2w6lzIGxvcnMgZGUgbGEgY29tbXVuaWNhdGlvbiBlbnRyZSBPY3RvUHJpbnQgZXQgdm90cmUgaW1wcmltYW50ZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjExMAptc2dpZCAiUXVlcnkgaW50ZXJ2YWxzIgptc2dzdHIgIkludGVydmFsbGVzIGRlcyBSZXF1w6p0ZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjExMQptc2dpZCAiSW50ZXJ2YWwgaW4gd2hpY2ggdG8gcG9sbCBmb3IgdGhlIHRlbXBlcmF0dXJlIGluZm9ybWF0aW9uIGZyb20gdGhlIHByaW50ZXIiCm1zZ3N0ciAiSW50ZXJ2YWxsZSBkYW5zIGxlcXVlbCB2b3VzIHBvdXZleiBvYnRlbmlyIGRlcyBpbmZvcm1hdGlvbnMgc3VyIGxhIHRlbXDDqXJhdHVyZSBkZSBsJ2ltcHJpbWFudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjExMgptc2dpZCAiVGVtcGVyYXR1cmUgaW50ZXJ2YWwgKHBvbGxpbmcpIgptc2dzdHIgIkludGVydmFsbGUgZGUgcmFmcmHDrmNoaXNzZW1lbnQgZGVzIGRvbm7DqWVzIGRlIHRlbXDDqXJhdHVyZSAoc29uZGFnZSkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjExOAptc2dpZCAiV2hlbiBwcmludGluZyBvciBpZGxlIgptc2dzdHIgIkR1cmFudCBsJ2ltcHJlc3Npb24gb3UgYXUgcmVwb3MiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjEyNQptc2dpZCAiV2hlbiBpZGxlIGFuZCBhIHRhcmdldCB0ZW1wZXJhdHVyZSBpcyBzZXQiCm1zZ3N0ciAiTG9yc3F1ZSBsJ2ltcHJpbWFudGUgZXN0IGluYWN0aXZlIGV0IHF1J3VuZSB0ZW1ww6lyYXR1cmUgZGUgY29uc2lnbmUgZXN0IHLDqWdsw6llIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxMjgKbXNnaWQgIlRlbXBlcmF0dXJlIHJlcG9ydCBpbnRlcnZhbCB0byByZXF1ZXN0IGZyb20gYXV0b3JlcG9ydCBjYXBhYmxlIGZpcm13YXJlcy4gQSB2YWx1ZSBvZiAwIGRpc2FibGVzIGF1dG9yZXBvcnRpbmcgYnkgdGhlIGZpcm13YXJlIGFuZCBmb3JjZXMgcG9sbGluZy4iCm1zZ3N0ciAiSW50ZXJ2YWxsZSBkZSByYWZyYcOuY2hpc3NlbWVudCBkZXMgdGVtcMOpcmF0dXJlcyBkZW1hbmTDqSBhdXggbG9naWNpZWxzIGRpc3Bvc2FudCBkZSBsYSBmb25jdGlvbiByYXBwb3J0IGF1dG9tYXRpcXVlLiBVbmUgdmFsZXVyIGRlIDAgZMOpc2FjdGl2ZSBsZSByYXBwb3J0IGF1dG9tYXRpcXVlIGR1IG1pY3JvIGxvZ2ljaWVsIGV0IGZvcmNlIGxhIHLDqWN1cMOpcmF0aW9uIGRlcyB2YWxldXJzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTI5Cm1zZ2lkICJUZW1wZXJhdHVyZSBpbnRlcnZhbCAoYXV0b3JlcG9ydCkiCm1zZ3N0ciAiSW50ZXJ2YWxsZSBkZSByYWZyYcOuY2hpc3NlbWVudCBkZXMgZG9ubsOpZXMgZGUgdGVtcMOpcmF0dXJlIChyYXBwb3J0IGF1dG9tYXRpcXVlKSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTM1IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTU1IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTY1Cm1zZ2lkICJBdXRvcmVwb3J0IGludGVydmFsIHRvIHJlcXVlc3QgZnJvbSBmaXJtd2FyZSIKbXNnc3RyICJJbnRlcnZhbGxlIGRlIHJlcXXDqnRlIHBvdXIgbGUgcmFwcG9ydCBhdXRvbWF0aXF1ZSBkdSBtaWNybyBsb2dpY2llbCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTM4Cm1zZ2lkICJJbnRlcnZhbCBpbiB3aGljaCB0byBwb2xsIGZvciB0aGUgU0QgcHJpbnRpbmcgc3RhdHVzIGluZm9ybWF0aW9uIGZyb20gdGhlIHByaW50ZXIgd2hpbGUgcHJpbnRpbmciCm1zZ3N0ciAiSW50ZXJ2YWxsZSBkZSB0ZW1wcyBlbnRyZSBsZXMgcmVxdcOqdGVzIHZlcnMgbGUgbGVjdGV1ciBkZSBjYXJ0ZSBTRCBsb3JzIGRlIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTM5Cm1zZ2lkICJTRCBzdGF0dXMgaW50ZXJ2YWwgKHBvbGxpbmcpIgptc2dzdHIgIkludGVydmFsbGUgZCfDqXRhdCBkZSBsYSBjYXJ0ZSBTRCAodm90ZSkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE0NQptc2dpZCAiV2hlbiBwcmludGluZyBmcm9tIHRoZSBwcmludGVyJ3MgU0QiCm1zZ3N0ciAiTG9ycyBkZSBsJ2ltcHJlc3Npb24gw6AgcGFydGlyIGRlIGxhIGNhcnRlIFNEIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTQ4Cm1zZ2lkICJTRCBzdGF0dXMgaW50ZXJ2YWwgdG8gcmVxdWVzdCBmcm9tIGF1dG9yZXBvcnQgY2FwYWJsZSBmaXJtd2FyZXMuIEEgdmFsdWUgb2YgMCBkaXNhYmxlcyBhdXRvcmVwb3J0aW5nIGJ5IHRoZSBmaXJtd2FyZSBhbmQgZm9yY2VzIHBvbGxpbmcuIgptc2dzdHIgIkludGVydmFsbGUgZCfDqXRhdCBkZSBsYSBjYXJ0ZSBTRCDDoCBkZW1hbmRlciDDoCBwYXJ0aXIgZGUgZmlybXdhcmUgY29tcGF0aWJsZSBhdmVjIGxlIHBvcnQgYXV0b21hdGlxdWUuIFVuZSB2YWxldXIgZGUgMCBkw6lzYWN0aXZlIGxlIHJhcHBvcnQgYXV0b21hdGlxdWUgcGFyIGxlIGZpcm13YXJlIGV0IGZvcmNlIGxhIHLDqWN1cMOpcmF0aW9uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTQ5Cm1zZ2lkICJTRCBzdGF0dXMgaW50ZXJ2YWwgKGF1dG9yZXBvcnQpIgptc2dzdHIgIkludGVydmFsbGUgZCfDqXRhdCBkZSBsYSBjYXJ0ZSBTRCAocmVwb3J0IGF1dG9tYXRpcXVlKSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTU4Cm1zZ2lkICJQb3NpdGlvbiBpbnRlcnZhbCB0byByZXF1ZXN0IGZyb20gYXV0b3JlcG9ydCBjYXBhYmxlIGZpcm13YXJlcy4gQSB2YWx1ZSBvZiAwIGRpc2FibGVzIGF1dG9yZXBvcnRpbmcgYnkgdGhlIGZpcm13YXJlLiIKbXNnc3RyICJJbnRlcnZhbGxlIGRlIHBvc2l0aW9uIMOgIGRlbWFuZGVyIGF1eCBmaXJtd2FyZXMgY29tcGF0aWJsZXMgYXZlYyBsZXMgcmFwcG9ydHMgYXV0b21hdGlxdWVzLiBVbmUgdmFsZXVyIGRlIDAgZMOpc2FjdGl2ZSBsYSBnw6luw6lyYXRpb24gZGUgcmFwcG9ydHMgYXV0b21hdGlxdWVzIHBhciBsZSBmaXJtd2FyZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE1OQptc2dpZCAiUG9zaXRpb24gYXV0b3JlcG9ydCBpbnRlcnZhbCIKbXNnc3RyICJJbnRlcnZhbGxlIGRlIHBvc2l0aW9uIGRhbnMgbGUgcmFwcG9ydCBhdXRvbWF0aXF1ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTcwCm1zZ2lkICJUaW1lb3V0cyIKbXNnc3RyICJEw6lsYWlzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxNzEKbXNnaWQgIlRpbWUgYWZ0ZXIgd2hpY2ggdGhlIGNvbW11bmljYXRpb24gd2l0aCB5b3VyIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIHRpbWVkIG91dCBpZiBub3RoaW5nIHdhcyBzZW50IGJ5IHlvdXIgcHJpbnRlciAoYW5kIGFuIGF0dGVtcHQgdG8gZ2V0IGl0IHRhbGtpbmcgYWdhaW4gd2lsbCBiZSBkb25lKS4gSW5jcmVhc2UgdGhpcyBpZiB5b3VyIHByaW50ZXIgdGFrZXMgbG9uZ2VyIHRoYW4gdGhpcyBmb3Igc29tZSBtb3Zlcy4iCm1zZ3N0ciAiRMOpbGFpIGFwcsOocyBsZXF1ZWwgbGEgY29tbXVuaWNhdGlvbiBhdmVjIHZvdHJlIGltcHJpbWFudGUgc2VyYSBjb25zaWTDqXLDqWUgY29tbWUgZXhwaXLDqWUgc2kgcmllbiBuJ2Egw6l0w6kgZW52b3nDqSAoZXQgZCd1bmUgbm91dmVsbGUgdGVudGF0aXZlIGFwcsOocykuIEF1Z21lbnRleiBjZXR0ZSB2YWxldXIgc2kgdm90cmUgaW1wcmltYW50ZSBwcmVuZCBwbHVzIGRlIHRlbXBzIHBvdXIgY2VydGFpbnMgbW91dmVtZW50cy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE3Mgptc2dpZCAiQ29tbXVuaWNhdGlvbiB0aW1lb3V0Igptc2dzdHIgIkTDqWxhaSBkJ2V4cGlyYXRpb24gZGUgbGEgY29tbXVuaWNhdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTc4Cm1zZ2lkICI8Y29kZT5idXN5PC9jb2RlPiBwcm90b2NvbCBzdXBwb3J0IG5vdCBkZXRlY3RlZCIKbXNnc3RyICJQcmlzZSBlbiBjaGFyZ2UgZHUgcHJvdG9jb2xlIDxjb2RlPm9jY3Vww6k8L2NvZGU+IG5vbiBkw6l0ZWN0w6llIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxODUKbXNnaWQgIjxjb2RlPmJ1c3k8L2NvZGU+IHByb3RvY29sIHN1cHBvcnQgZGV0ZWN0ZWQiCm1zZ3N0ciAiUHJpc2UgZW4gY2hhcmdlIGR1IHByb3RvY29sZSA8Y29kZT5vY2N1cMOpPC9jb2RlPiBkw6l0ZWN0w6llIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoxODgKbXNnaWQgIlRpbWUgYWZ0ZXIgd2hpY2ggYSBjb25uZWN0aW9uIGF0dGVtcHQgdG8gdGhlIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIGFzIGhhdmluZyBmYWlsZWQiCm1zZ3N0ciAiRMOpbGFpIGFwcsOocyBsZXF1ZWwgdW5lIHRlbnRhdGl2ZSBkZSBjb25uZXhpb24gw6AgbCdpbXByaW1hbnRlIHNlcmEgY29uc2lkw6lyw6llIGNvbW1lIGF5YW50IMOpY2hvdcOpZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MTg5Cm1zZ2lkICJDb25uZWN0aW9uIHRpbWVvdXQiCm1zZ3N0ciAiRMOpbGFpIGQnZXhwaXJhdGlvbiBkZSBsYSBjb25uZXhpb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE5Nwptc2dpZCAiVGltZSBhZnRlciB3aGljaCB0byBjb25zaWRlciB0aGUgYXV0byBkZXRlY3Rpb24gaGFuZHNoYWtlIGF0dGVtcHQgdG8gaGF2ZSBmYWlsZWQgaWYgbm8gc3VjY2Vzc2Z1bCBjb25uZWN0aW9uIGlzIGRldGVjdGVkIgptc2dzdHIgIkTDqWxhaSBhcHLDqHMgbGVxdWVsIGlsIGZhdXQgY29uc2lkw6lyZXIgcXVlIGxhIHRlbnRhdGl2ZSBkZSBjb25uZXhpb24gYXV0b21hdGlxdWUgYSDDqWNob3VlLCBzaSBhdWN1bmUgY29ubmV4aW9uIHLDqXVzc2llIG4nZXN0IGTDqXRlY3TDqWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjE5OAptc2dpZCAiQXV0b2RldGVjdGlvbiB0aW1lb3V0Igptc2dzdHIgIkTDqWxhaSBk4oCZZXhwaXJhdGlvbiBlbiBhdXRvLWTDqXRlY3Rpb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjIwNAptc2dpZCAiRmlyc3QgaGFuZHNoYWtlIGF0dGVtcHQiCm1zZ3N0ciAiUHJlbWnDqHJlIHRlbnRhdGl2ZSBkZSBwcmlzZSBkZSBjb250YWN0IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyMTEKbXNnaWQgIkNvbnNlY3V0aXZlIGhhbmRzaGFrZSBhdHRlbXB0cyIKbXNnc3RyICJUZW50YXRpdmVzIGRlIHByaXNlIGRlIGNvbnRhY3QgY29uc8OpY3V0aXZlcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjE0Cm1zZ2lkICJUaW1lIGFmdGVyIHdoaWNoIHRvIGNvbnNpZGVyIGEgcG9zaXRpb24gcXVlcnkgb24gcGF1c2Ugb3IgY2FuY2VsIHRvIGhhdmUgZmFpbGVkIgptc2dzdHIgIkR1csOpZSBhcHLDqHMgbGFxdWVsbGUgdW5lIGRlbWFuZGUgZGUgcG9zaXRpb24gZW4gcGF1c2Ugb3UgZW4gYW5udWxhdGlvbiBkb2l0IMOqdHJlIGNvbnNpZMOpcsOpZSBjb21tZSBheWFudCDDqWNob3XDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjE1Cm1zZ2lkICJQb3NpdGlvbiBxdWVyeSB0aW1lb3V0Igptc2dzdHIgIkTDqWxhaSBkJ2V4cGlyYXRpb24gZGUgcG9zaXRpb25uZW1lbnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjIyNgptc2dpZCAiVGltZSB0byB3YWl0IGFmdGVyIG9wZW5pbmcgdGhlIHNlcmlhbCBjb25uZWN0aW9uIGJlZm9yZSBzdGFydGluZyBiYXVkcmF0ZSBkZXRlY3Rpb24iCm1zZ3N0ciAiRHVyw6llIGQnYXR0ZW50ZSBhcHLDqHMgbCdvdXZlcnR1cmUgZGUgbGEgY29ubmV4aW9uIHPDqXJpZSBhdmFudCBkZSBkw6ltYXJyZXIgbGEgZMOpdGVjdGlvbiBkZSBsYSB2aXRlc3NlIGRlIHRyYW5zbWlzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjI3Cm1zZ2lkICJJbml0aWFsIGJhdWRyYXRlIGRldGVjdGlvbiBwYXVzZSIKbXNnc3RyICJEw6l0ZWN0aW9uIGRlIGxhIHZpdGVzc2UgZGUgdHJhbnNtaXNzaW9uIGluaXRpYWxlIGVuIHBhdXNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyMzMKbXNnaWQgIlNvbWUgY29udHJvbGxlcnMgbmVlZCBhIGJpdCBvZiBhIGJyZWF0aGVyIGJlZm9yZSBiYXVkcmF0ZSBkZXRlY3Rpb24gYWZ0ZXIgaW5pdGlhbCBjb25uZWN0LiBJZiBiYXVkcmF0ZSBkZXRlY3Rpb24gZmFpbHMgZHVlIHRvIGEgaGFuZ2luZyBjb250cm9sbGVyLCB0cnkgaW5jcmVhc2luZyB0aGlzIHZhbHVlLiIKbXNnc3RyICJDZXJ0YWlucyBjb250csO0bGV1cnMgb250IGJlc29pbiBkJ3VuIHBldSBkZSB0ZW1wcyBhdmFudCBsYSBkw6l0ZWN0aW9uIGRlIGxhIHZpdGVzc2UgZGUgdHJhbnNtaXNzaW9uIGFwcsOocyBsYSBjb25uZXhpb24gaW5pdGlhbGUuIFNpIGxhIGTDqXRlY3Rpb24gZGUgbGEgdml0ZXNzZSBkZSB0cmFuc21pc3Npb24gw6ljaG91ZSBlbiByYWlzb24gZCd1biBjb250csO0bGV1ciBzdXNwZW5kdSwgZXNzYXlleiBkJ2F1Z21lbnRlciBjZXR0ZSB2YWxldXIuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyMzYKbXNnaWQgIk1heGltdW0gY29uc2VjdXRpdmUgY29tbXVuaWNhdGlvbiB0aW1lb3V0cyB3aGlsZSBpZGxlLiBNb3JlIHRoYW4gdGhpcyBhbmQgdGhlIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIHRvIGJlIGdvbmUuIFNldCB0byAwIHRvIGRpc2FibGUuIgptc2dzdHIgIkTDqWxhaXMgZCdhdHRlbnRlIG1heGltdW0gZHVyYW50IGxhIHBhdXNlLiBTaSBwbHVzLCBsJ2ltcHJpbWFudGUgZXN0IGNvbnNpZMOpcsOpZSBjb21tZSBkw6licmFuY2jDqWUuIFLDqWdsZXogc3VyIDAgcG91ciBkw6lzYWN0aXZlci4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjIzNwptc2dpZCAiTWF4LiBjb25zZWN1dGl2ZSB0aW1lb3V0cyB3aGlsZSBpZGxlIgptc2dzdHIgIkTDqWxhaXMgZCdhdHRlbnRlIG1heGltdW0gZHVyYW50IGxhIHBhdXNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyNDAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyNDcgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyNTQKbXNnaWQgIlNldCB0byAwIHRvIGRpc2FibGUgY29uc2VjdXRpdmUgdGltZW91dCBkZXRlY3Rpb24gYW5kIGhhbmRsaW5nLiIKbXNnc3RyICJSw6lnbGV6IHN1ciAwIHBvdXIgZMOpc2FjdGl2ZXIgbGEgZMOpdGVjdGlvbiBldCBsYSBtYW5pcHVsYXRpb24gY29uc8OpY3V0aXZlcyBkdSBkw6lsYWlzIGQnYXR0ZW50ZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI0Mwptc2dpZCAiTWF4aW11bSBjb25zZWN1dGl2ZSBjb21tdW5pY2F0aW9uIHRpbWVvdXRzIHdoaWxlIHByaW50aW5nLiBNb3JlIHRoYW4gdGhpcyBhbmQgdGhlIHByaW50ZXIgd2lsbCBiZSBjb25zaWRlcmVkIHRvIGJlIGdvbmUuIFNldCB0byAwIHRvIGRpc2FibGUuIgptc2dzdHIgIkTDqWxhaXMgZCdhdHRlbnRlIG1heGltdW0gZHVyYW50IGwnaW1wcmVzc2lvbi4gQXUgZGVsw6AsIGwnaW1wcmltYW50ZSBlc3QgY29uc2lkw6lyw6llIGNvbW1lIGTDqWJyYW5jaMOpZS4gUsOpZ2xleiBzdXIgMCBwb3VyIGTDqXNhY3RpdmVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjQ0Cm1zZ2lkICJNYXguIGNvbnNlY3V0aXZlIHRpbWVvdXRzIHdoaWxlIHByaW50aW5nIgptc2dzdHIgIkTDqWxhaXMgZCdhdHRlbnRlIG1heGltdW0gZHVyYW50IGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjUwCm1zZ2lkICJNYXhpbXVtIGNvbnNlY3V0aXZlIGNvbW11bmljYXRpb24gdGltZW91dHMgd2hpbGUgYSBsb25nIHJ1bm5pbmcgY29tbWFuZCBpcyBhY3RpdmUuIE1vcmUgdGhhbiB0aGlzIGFuZCB0aGUgcHJpbnRlciB3aWxsIGJlIGNvbnNpZGVyZWQgdG8gYmUgZ29uZS4gU2V0IHRvIDAgdG8gZGlzYWJsZS4iCm1zZ3N0ciAiRMOpbGFpcyBkJ2F0dGVudGUgbWF4aW11bSBkdXJhbnQgbGUgdHJhaXRlbWVudCBkJ3VuZSBsb25ndWUgY29tbWFuZGUuIEF1IGRlbMOgLCBsJ2ltcHJpbWFudGUgZXN0IGNvbnNpZMOpcsOpZSBjb21tZSBkw6licmFuY2jDqWUuIFLDqWdsZXogc3VyIDAgcG91ciBkw6lzYWN0aXZlci4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI1MQptc2dpZCAiTWF4LiBjb25zZWN1dGl2ZSB0aW1lb3V0cyBkdXJpbmcgbG9uZyBydW5uaW5nIGNvbW1hbmRzIgptc2dzdHIgIkTDqWxhaXMgZCdhdHRlbnRlIG1heGltdW0gZHVyYW50IGxlIHRyYWl0ZW1lbnQgZCd1bmUgbG9uZ3VlIGNvbW1hbmRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyNjMKbXNnaWQgIkZpcm13YXJlIHNwZWNpZmljIHNldHRpbmdzIgptc2dzdHIgIlBhcmFtw6h0cmVzIHNww6ljaWZpcXVlcyBkdSBGaXJtd2FyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MjY3Cm1zZ2lkICJFbmFibGUgYXV0b21hdGljIGZpcm13YXJlIGRldGVjdGlvbiIKbXNnc3RyICJBY3RpdmVyIGxhIGTDqXRlY3Rpb24gYXV0b21hdGlxdWUgZHUgZmlybXdhcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI2OAptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIGVuYWJsZWQsIE9jdG9QcmludCB3aWxsIHRyeSB0byBmaWd1cmUgb3V0IHlvdXIgcHJpbnRlcidzIGZpcm13YXJlIGF1dG9tYXRpY2FsbHkgYW5kIGFkanVzdCBzb21lIGNvbW11bmljYXRpb24gcGFyYW1ldGVycyBiYXNlZCBvbiB0aGF0LlxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGF0IGRvZXNuJ3Qgd29yayBvdXQsIG9yIHlvdSB3YW50IG1vcmUgZ3JhbnVsYXIgY29udHJvbCwgdW5jaGVjayB0aGlzIGFuZCB0aGUgcGFyYW1ldGVycyBpbiBxdWVzdGlvbiB3aWxsIGJlY29tZSB2aXNpYmxlIGZvciB5b3UgdG8gYWRqdXN0LlxuIgoiICAgICAgICAgICAgICAgICAgICAgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIlNpIGNldHRlIG9wdGlvbiBlc3QgYWN0aXbDqWUsIE9jdG9QcmludCBlc3NhaWVyYSBkZSBkw6l0ZXJtaW5lciBhdXRvbWF0aXF1ZW1lbnQgbGUgZmlybXdhcmUgZGUgdm90cmUgaW1wcmltYW50ZSBldCBkJ2FqdXN0ZXIgY2VydGFpbnMgcGFyYW3DqHRyZXMgZGUgY29tbXVuaWNhdGlvbiBlbiBjb25zw6lxdWVuY2UuXG4iCiJTaSBjZWxhIG5lIGZvbmN0aW9ubmUgcGFzIG91IHNpIHZvdXMgc291aGFpdGV6IHVuIGNvbnRyw7RsZSBwbHVzIGTDqXRhaWxsw6ksIGTDqWNvY2hleiBjZXR0ZSBvcHRpb24gZXQgbGVzIHBhcmFtw6h0cmVzIGVuIHF1ZXN0aW9uIGRldmllbmRyb250IHZpc2libGVzIHBvdXIgbGVzIGFqdXN0ZXIuXG4iCiIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyNzkKbXNnaWQgIlNlbGVjdCBTRCBmaWxlcyBieSBsb3dlciBjYXNlIHBhdGgiCm1zZ3N0ciAiU8OpbGVjdGlvbm5lciBsZXMgZW1wbGFjZW1lbnRzIGRlcyBmaWNoaWVycyBlbiBtaW51c2N1bGUgZGUgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI3OQptc2dpZCAiUHJ1c2EgRmlybXdhcmUiCm1zZ3N0ciAiRmlybXdhcmUgZGUgUHJ1c2EiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI4Ngptc2dpZCAiU2VsZWN0IFNEIGZpbGVzIGJ5IHJlbGF0aXZlIHBhdGgiCm1zZ3N0ciAiU8OpbGVjdGlvbm5leiBsZXMgZmljaGllcnMgc3VyIGxhIGNhcnRlIFNEIHBhciBsZXVyIGNoZW1pbiByZWxhdGlmIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjoyODYKbXNnaWQgIlJlcFJhcCBGaXJtd2FyZSIKbXNnc3RyICJGaXJtd2FyZSBSZXBSYXAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI5Mwptc2dpZCAiQWx3YXlzIGFzc3VtZSBTRCBjYXJkIGlzIHByZXNlbnQiCm1zZ3N0ciAiVG91am91cnMgc3VwcG9zZXIgcXVlIGxhIGNhcnRlIFNEIGVzdCBwcsOpc2VudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjI5MyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMwNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMxNCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMyMSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMyOCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMzOQptc2dpZCAiUmVwZXRpZXIiCm1zZ3N0ciAiUsOpcMOpdGV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzAwCm1zZ2lkICJEaXNhYmxlIFNEIHByaW50aW5nIGRldGVjdGlvbiIKbXNnc3RyICJEw6lzYWN0aXZlciBsYSBkw6l0ZWN0aW9uIGQnaW1wcmVzc2lvbiBkZXB1aXMgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMwMAptc2dpZCAiVWx0aW1ha2VyIDIvMisiCm1zZ3N0ciAiVWx0aW1ha2VyIDIvMisiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMwNwptc2dpZCAiSWdub3JlIGNvbnNlY3V0aXZlIHJlc2VuZCByZXF1ZXN0cyBmb3IgdGhlIHNhbWUgbGluZSIKbXNnc3RyICJJZ25vcmVyIGxhIHJldHJhbnNtaXNzaW9uIGNvbnPDqWN1dGl2ZSBkZXMgcmVxdcOqdGVzIHBvdXIgbGEgbcOqbWUgbGlnbmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjMxNAojLCBweXRob24tZm9ybWF0Cm1zZ2lkICJTdXBwb3J0IDxjb2RlPlRhcmdldEV4dHIlJW48L2NvZGU+Lzxjb2RlPlRhcmdldEJlZDwvY29kZT4gdGFyZ2V0IHRlbXBlcmF0dXJlIGZvcm1hdCIKbXNnc3RyICJTdXBwb3J0IDxjb2RlPlRhcmdldEV4dHIlJW48L2NvZGU+Lzxjb2RlPlRhcmdldEJlZDwvY29kZT4gZm9ybWF0IGRlIHRlbXDDqXJhdHVyZSBjaWJsZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzIxCm1zZ2lkICJEaXNhYmxlIGRldGVjdGlvbiBvZiBleHRlcm5hbCBoZWF0dXBzIgptc2dzdHIgIkTDqXNhY3RpdmVyIGxhIGTDqXRlY3Rpb24gZGUgY2hhdWZmZSBleHTDqXJpZXVyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzI4Cm1zZ2lkICJBY3RpdmVseSBwYXVzZSBjb21tdW5pY2F0aW9uIGR1cmluZyA8Y29kZT5HNDwvY29kZT4gZHdlbGwgY29tbWFuZCIKbXNnc3RyICJJbnRlcnJvbXByZSBsYSBjb21tdW5pY2F0aW9uIHBlbmRhbnQgbGEgY29tbWFuZGUgZCdhdHRlbnRlIDxjb2RlPkc0PC9jb2RlPiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzMzCm1zZ2lkICJTZW5kIGEgY2hlY2tzdW0gd2l0aCB0aGUgY29tbWFuZCIKbXNnc3RyICJFbnZveWVyIHVuZSBzb21tZSBkZSBjb250csO0bGUgYXZlYyBsYSBjb21tYW5kZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzM2Cm1zZ2lkICJXaGVuIHByaW50aW5nIgptc2dzdHIgIkxvcnMgZGUgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjozNTMKbXNnaWQgIlN1cHBvcnQgdGVtcGVyYXR1cmUgYXV0b3JlcG9ydGluZyBieSBmaXJtd2FyZSwgaWYgZGV0ZWN0ZWQiCm1zZ3N0ciAiU3VwcG9ydCBkZSBsYSB0ZW1ww6lyYXR1cmUgYXV0b3JlcG9ydGluZyBwYXIgZmlybXdhcmUsIHNpIGTDqXRlY3TDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6MzYwCm1zZ2lkICJTdXBwb3J0IHNkIHN0YXR1cyBhdXRvcmVwb3J0aW5nIGJ5IGZpcm13YXJlLCBpZiBkZXRlY3RlZCIKbXNnc3RyICJTdXBwb3J0IGR1IHN0YXR1dCBzZCBhdXRvcmVwb3J0aW5nIHBhciBmaXJtd2FyZSwgc2kgZMOpdGVjdMOpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjozNjcKbXNnaWQgIlN1cHBvcnQgcG9zaXRpb24gYXV0b3JlcG9ydGluZyBieSBmaXJtd2FyZSwgaWYgZGV0ZWN0ZWQiCm1zZ3N0ciAiUHJpc2UgZW4gY2hhcmdlIGRlIGxhIG5vdGlmaWNhdGlvbiBhdXRvbWF0aXF1ZSBkZSBsYSBwb3NpdGlvbiBwYXIgbGUgZmlybXdhcmUsIHNpIGTDqXRlY3TDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6Mzc0Cm1zZ2lkICJTZW5kIGVtZXJnZW5jeSBHQ09ERVMgPGNvZGU+TTEwODwvY29kZT4gYW5kIDxjb2RlPk00MTA8L2NvZGU+IHdpdGhvdXQgd2FpdGluZyBmb3IgYWNrbm93bGVkZ2VtZW50LCBpZiBkZXRlY3RlZCBhcyBzdXBwb3J0ZWQgYnkgdGhlIGZpcm13YXJlIgptc2dzdHIgIkVudm9pIGRlcyBHLWNvZGUgPGNvZGU+TTEwODwvY29kZT4gZXQgPGNvZGU+TTQxMDwvY29kZT4gZCd1cmdlbmNlIHNhbnMgYXR0ZW50ZSBkJ2FjY3Vzw6kgZGUgcsOpY2VwdGlvbiwgc2kgY2VsYSBlc3QgZMOpdGVjdMOpIGNvbW1lIMOpdGFudCBwcmlzIGVuIGNoYXJnZSBwYXIgbGUgZmlybXdhcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjM4MQptc2dpZCAiU3VwcG9ydCA8Y29kZT5idXN5PC9jb2RlPiBwcm90b2NvbCwgaWYgZGV0ZWN0ZWQiCm1zZ3N0ciAiUHJpc2UgZW4gY2hhcmdlIGR1IHByb3RvY29sZSA8Y29kZT5vY2N1cMOpPC9jb2RlPiwgcydpbCBlc3QgZMOpdGVjdMOpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjozODgKbXNnaWQgIlNlbmQgPGNvZGU+TTIwIEw8L2NvZGU+IGluc3RlYWQgb2YgPGNvZGU+TTIwPC9jb2RlPiB0byB1c2UgZXh0ZW5kZWQgU0QgZmlsZSBsaXN0cywgaWYgZGV0ZWN0ZWQgYXMgc3VwcG9ydGVkIGJ5IHRoZSBmaXJtd2FyZSIKbXNnc3RyICJFbnZveWV6IDxjb2RlPk0yMCBMPC9jb2RlPiBhdSBsaWV1IGRlIDxjb2RlPk0yMDwvY29kZT4gcG91ciB1dGlsaXNlciBkZXMgbGlzdGVzIGRlIGZpY2hpZXJzIFNEIMOpdGVuZHVlcywgc2kgZWxsZXMgc29udCBkw6l0ZWN0w6llcyBjb21tZSBwcmlzZXMgZW4gY2hhcmdlIHBhciBsZSBmaXJtd2FyZSAobWljcm9sb2dpY2llbCkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjM5NQptc2dpZCAiU2ltdWxhdGUgPGNvZGU+b2s8L2NvZGU+IGZvciA8Y29kZT5NMjk8L2NvZGU+Igptc2dzdHIgIlNpbXVsZXIgPGNvZGU+b2s8L2NvZGU+IHBvdXIgPGNvZGU+TTI5PC9jb2RlPiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6Mzk2Cm1zZ2lkICJNb3N0IE1hcmxpbiBmb3JrcyB0aGF0IHdlcmUgZGVyaXZlZCBmcm9tIE1hcmxpbiB2ZXJzaW9ucyAmbHQ7IHYxLjEuMCBkbyBub3Qgc2VuZCBhbiBhY2tub3dsZWRnaW5nIDxjb2RlPm9rPC9jb2RlPiBmb3IgYSA8Y29kZT5NMjk8L2NvZGU+LiBDaGVjayB0aGlzIGlmIHlvdSBydW4gaW50byBjb21tdW5pY2F0aW9uIHN0YWxscyBmb2xsb3dpbmcgc3RyZWFtaW5nIG9mIGEgZmlsZSB0byB5b3VyIHByaW50ZXIncyBTRC4iCm1zZ3N0ciAiTGEgcGx1cGFydCBkZXMgZm9ya3MgTWFybGluIHF1aSBvbnQgw6l0w6kgZMOpcml2w6lzIGRlcyB2ZXJzaW9ucyBNYXJsaW4gJmx0OyB2MS4xLjAgbidlbnZvaWVudCBwYXMgZCdhY2N1c8OpIGRlIHLDqWNlcHRpb24gPGNvZGU+b2s8L2NvZGU+IHBvdXIgdW4gPGNvZGU+TTI5PC9jb2RlPi4gQ29jaGV6IGNldHRlIGNhc2Ugc2kgdm91cyByZW5jb250cmV6IGRlcyBwcm9ibMOobWVzIGRlIGNvbW11bmljYXRpb24gw6AgbGEgc3VpdGUgZHUgc3RyZWFtaW5nIGQndW4gZmljaGllciB2ZXJzIGxhIGNhcnRlIFNEIGRlIHZvdHJlIGltcHJpbWFudGUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MDEKbXNnaWQgIlNpbXVsYXRlIDxjb2RlPm9rPC9jb2RlPiBmb3IgcmVzZW5kIHJlcXVlc3RzIgptc2dzdHIgIlNpbXVsZXI8Y29kZT5vazwvY29kZT4gcG91ciBsZXMgZGVtYW5kZXMgZGUgcmVudm9pIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MDQKbXNnaWQgIklmIGRldGVjdGVkIGFzIG5lY2Vzc2FyeSIKbXNnc3RyICJTaSBkw6l0ZWN0w6kgY29tbWUgbsOpY2Vzc2FpcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQxMgptc2dpZCAiU29tZSBNYXJsaW4gZm9ya3MgbGFjayBhbiBhY2tub3dsZWRnaW5nIDxjb2RlPm9rPC9jb2RlPiB3aXRoIHRoZWlyIHJlc2VuZCByZXF1ZXN0cy4gU2V0IHRoaXMgdG8gXCJhbHdheXNcIiBvciBcImlmIGRldGVjdGVkIGFzIG5lY2Vzc2FyeVwiIGlmIHlvdSBydW4gaW50byBjb21tdW5pY2F0aW9uIHN0YWxscyBvbiByZXNlbmQgcmVxdWVzdHMuIgptc2dzdHIgIkNlcnRhaW5lcyBmb3JrcyBNYXJsaW4gc29udCBkw6lwb3VydnVlcyBkJ3VuIGFjY3Vzw6kgZGUgcsOpY2VwdGlvbiA8Y29kZT5vazwvY29kZT4gYXZlYyBsZXVycyBkZW1hbmRlcyBkZSByw6lleHDDqWRpdGlvbi4gUsOpZ2xleiBjZSBwYXJhbcOodHJlIHN1ciBcInRvdWpvdXJzXCIgb3UgXCJzaSBuw6ljZXNzYWlyZVwiIHNpIHZvdXMgcmVuY29udHJleiBkZXMgcHJvYmzDqG1lcyBkZSBjb21tdW5pY2F0aW9uIGxvcnMgZGUgZGVtYW5kZXMgZGUgcsOpZXhww6lkaXRpb24uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MTkKbXNnaWQgIlByb3RvY29sIGZpbmUgdHVuaW5nIgptc2dzdHIgIlLDqWdsYWdlIGZpbiBkdSBwcm90b2NvbGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQyMwptc2dpZCAiV2FpdCBmb3IgPGNvZGU+c3RhcnQ8L2NvZGU+IG9uIGNvbm5lY3QiCm1zZ3N0ciAiQXR0ZW5kcmUgPGNvZGU+c3RhcnQ8L2NvZGU+IMOgIGxhIGNvbm5leGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDI0Cm1zZ2lkICJUcnkgY2hlY2tpbmcgdGhpcyBpZiB5b3UgcnVuIGludG8gY29ubmVjdGlvbiB0aW1lb3V0cyBkdWUgdG8geW91ciBwcmludGVyIHRha2luZyB0b28gbG9uZyB0byByZXNwb25kIHRvIE9jdG9QcmludCdzIGhhbmRzaGFrZSBhdHRlbXB0cyBvbiBjb25uZWN0LiIKbXNnc3RyICJDb2NoZXogY2V0dGUgY2FzZSBzaSB2b3VzIHJlbmNvbnRyZXogZGVzIHByb2Jsw6htZXMgZGUgZMOpbGFpIGRlIGNvbm5leGlvbiwgc2kgdm90cmUgaW1wcmltYW50ZSBtZXQgdHJvcCBkZSB0ZW1wcyDDoCByw6lwb25kcmUgYXV4IHRlbnRhdGl2ZXMgZCfDqXRhYmxpc3NlbWVudCBkZSBsaWFpc29uIGRlIE9jdG9QcmludCBsb3JzIGRlIGxhIGNvbm5leGlvbi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQyOQptc2dpZCAiQmxvY2tlZCBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgYmxvcXXDqWVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MzIKbXNnaWQgIlVzZSB0aGlzIHRvIHNwZWNpZnkgY29tbWFuZHMgdGhhdCBzaG91bGQgbmV2ZXIgYmUgc2VudCB0byB0aGUgcHJpbnRlci4gSnVzdCB0aGUgRyBvciBNIGNvZGUsIGNvbW1hIHNlcGFyYXRlZC4gRGVmYXVsdHMgdG8gPGNvZGU+TTA8L2NvZGU+IGFuZCA8Y29kZT5NMTwvY29kZT4gc2luY2UgbW9zdCBmaXJtd2FyZSB3aWxsIGJsb2NrIHVudGlsIGEgYnV0dG9uIG9uIHRoZSBjb250cm9sbGVyIGhhcyBiZWVuIHByZXNzZWQgaWYgaXQgcmVjZWl2ZXMgZWl0aGVyIG9mIHRob3NlIHR3byBjb21tYW5kcy4iCm1zZ3N0ciAiVXRpbGlzZXogY2V0dGUgb3B0aW9uIHBvdXIgc3DDqWNpZmllciBkZXMgY29tbWFuZGVzIHF1aSBuZSBkb2l2ZW50IGphbWFpcyDDqnRyZSBlbnZvecOpZXMgw6AgbOKAmWltcHJpbWFudGUuIEp1c3RlIGxlIGNvZGUgRyBvdSBNLCBzw6lwYXLDqXMgcGFyIHVuZSB2aXJndWxlLiBMYSB2YWxldXIgcGFyIGTDqWZhdXQgZXN0IDxjb2RlPk0wPC9jb2RlPiBldCA8Y29kZT5NMTwvY29kZT4gY2FyIGxhIHBsdXBhcnQgZGVzIG1pY3JvcHJvZ3JhbW1lcyByZXN0ZXJvbnQgYmxvcXXDqXMganVzcXUnw6AgY2UgcXUndW4gYm91dG9uIGR1IGNvbnRyw7RsZXVyIHNvaXQgZW5mb25jw6kgcydpbCByZcOnb2l0IGwndW5lIGRlIGNlcyBkZXV4IGNvbW1hbmRlcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQzNgptc2dpZCAiSWdub3JlZCBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgaWdub3LDqWVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0MzkKbXNnaWQgIlVzZSB0aGlzIHRvIHNwZWNpZnkgY29tbWFuZHMgdGhhdCBzaG91bGQgYmUgc2lsZW50bHkgaWdub3JlZCBhbmQgbmV2ZXIgYmUgc2VudCB0byB0aGUgcHJpbnRlci4gSnVzdCB0aGUgRyBvciBNIGNvZGUsIGNvbW1hIHNlcGFyYXRlZC4gVW5saWtlIGJsb2NrZWQgY29tbWFuZHMgYWJvdmUsIHRoZXJlIHdpbGwgYmUgbm8gd2FybmluZyBwb3B1cCB3aGVuIHRoZXNlIGNvbW1hbmRzIGFyZSBlbmNvdW50ZXJlZC4iCm1zZ3N0ciAiVXRpbGlzZXotbGUgcG91ciBzcMOpY2lmaWVyIGxlcyBjb21tYW5kZXMgcXVpIGRvaXZlbnQgw6p0cmUgaWdub3LDqWVzIHNpbGVuY2lldXNlbWVudCBldCBuZSBqYW1haXMgw6p0cmUgZW52b3nDqWVzIMOgIGwnaW1wcmltYW50ZS4gSnVzdGUgbGUgY29kZSBHIG91IE0sIHPDqXBhcsOpcyBwYXIgZGVzIHZpcmd1bGVzLiBDb250cmFpcmVtZW50IGF1eCBjb21tYW5kZXMgYmxvcXXDqWVzIGNpLWRlc3N1cywgaWwgbid5IGF1cmEgcGFzIGRlIGZlbsOqdHJlIGQnYXZlcnRpc3NlbWVudCBsb3JzcXVlIGNlcyBjb21tYW5kZXMgc2Vyb250IHJlbmNvbnRyw6llcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ0Mwptc2dpZCAiUGF1c2luZyBjb21tYW5kcyIKbXNnc3RyICJNZXR0cmUgbGVzIGNvbW1hbmRlcyBlbiBwYXVzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDQ2Cm1zZ2lkICJVc2UgdGhpcyB0byBzcGVjaWZ5IGNvbW1hbmRzIG9uIHdoaWNoIE9jdG9QcmludCBzaG91bGQgcGF1c2UgdGhlIHByaW50IGpvYi4gSnVzdCB0aGUgRyBvciBNIGNvZGUsIGNvbW1hIHNlcGFyYXRlZC4gRGVmYXVsdHMgdG8gPGNvZGU+TTA8L2NvZGU+LCA8Y29kZT5NMTwvY29kZT4gYW5kIDxjb2RlPk0yNTwvY29kZT4uIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgZGVzIGNvbW1hbmRlcyBzdXIgbGVzcXVlbGxlcyBPY3RvUHJpbnQgZG9pdCBzdXNwZW5kcmUgbGUgdHJhdmFpbCBkJ2ltcHJlc3Npb24uIEp1c3RlIGxlIGNvZGUgRyBvdSBNLCBzw6lwYXLDqXMgcGFyIHVuZSB2aXJndWxlLiBMYSB2YWxldXIgcGFyIGTDqWZhdXQgZXN0IDxjb2RlPk0wPC9jb2RlPiwgPGNvZGU+TTE8L2NvZGU+IGV0IDxjb2RlPk0yNTwvY29kZT4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NTAKbXNnaWQgIkVtZXJnZW5jeSBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgZCd1cmdlbmNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NTMKbXNnaWQgIlVzZSB0aGlzIHRvIHNwZWNpZnkgZW1lcmdlbmN5IGNvbW1hbmRzIHdoaWNoIHNob3VsZCBqdW1wIGFueSBxdWV1ZXMgYW5kIC0gaWYgc3VwcG9ydGVkIGJ5IHRoZSBmaXJtd2FyZSAtIGJlIGZvcmNlIHNlbnQuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuIERlZmF1bHRzIHRvIDxjb2RlPk0xMTI8L2NvZGU+LCA8Y29kZT5NMTA4PC9jb2RlPiBhbmQgPGNvZGU+TTQxMDwvY29kZT4uIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgZGVzIGNvbW1hbmRlcyBkJ3VyZ2VuY2UgcXVpIGRvaXZlbnQgc+KAmWluc8OpcmVyIGRhbnMgbidpbXBvcnRlIHF1ZWxsZSBmaWxlIGQnYXR0ZW50ZSBldCwgc2kgZWxsZXMgc29udCBwcmlzZXMgZW4gY2hhcmdlIHBhciBsZSBtaWNyb2xvZ2ljaWVsLCDDqnRyZSBlbnZvecOpZXMgZGUgZm9yY2UuIEp1c3RlIGxlIGNvZGUgRyBvdSBNLCBzw6lwYXLDqXMgcGFyIHVuZSB2aXJndWxlLiBMZXMgdmFsZXVycyBwYXIgZMOpZmF1dCBzb250IDxjb2RlPk0xMTI8L2NvZGU+LCA8Y29kZT5NMTA4PC9jb2RlPiBldCA8Y29kZT5NNDEwPC9jb2RlPi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ1OAptc2dpZCAiQ29tbWFuZCB0byBzZW5kIHRvIHRoZSBmaXJtd2FyZSBvbiBmaXJzdCBoYW5kc2hha2UgYXR0ZW1wdC4iCm1zZ3N0ciAiQ29tbWFuZGUgw6AgZW52b3llciBhdSBmaXJtd2FyZSBsb3JzIGRlIGxhIHByZW1pw6hyZSBjb25uZXhpb24uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NTkKbXNnaWQgIlwiSGVsbG9cIiBjb21tYW5kIgptc2dzdHIgIkNvbW1hbmRlIFwiSGVsbG9cIiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDYyCm1zZ2lkICJVc2UgdGhpcyB0byBzcGVjaWZ5IGEgZGlmZmVyZW50IGNvbW1hbmQgdGhhbiB0aGUgZGVmYXVsdCA8Y29kZT5NMTEwPC9jb2RlPiB0byBzZW5kIHRvIHRoZSBwcmludGVyIG9uIGluaXRpYWwgY29ubmVjdGlvbiB0byB0cmlnZ2VyIGEgY29tbXVuaWNhdGlvbiBoYW5kc2hha2UuIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgdW5lIHZhbGV1ciBkaWZmw6lyZW50ZSBwb3VyIGxhIGNvbW1hbmRlIDxjb2RlPk0xMTA8L2NvZGU+IGxvcnMgZGUgbGEgY29ubmV4aW9uIGluaXRpYWxlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDY1Cm1zZ2lkICJDb21tYW5kcyB0aGF0IGFyZSBrbm93IHRvIHJ1biBsb25nIGFuZCBoZW5jZSBzaG91bGQgc3VwcHJlc3MgY29tbXVuaWNhdGlvbiB0aW1lb3V0cyBmcm9tIGJlaW5nIHRyaWdnZXJlZC4iCm1zZ3N0ciAiQ29tbWFuZGVzIG7DqWNlc3NpdGFudHMgdW4gdGVtcHMgZCdleMOpY3V0aW9uIGltcG9ydGFudCBldCBkb250IGxlcyBkw6lsYWlzIGQnYXR0ZW50ZSBkZXZyYWl0IMOqdHJlIHN1cHByaW3DqXMgcG91ciDDqnRyZSB1dGlsaXPDqXMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NjYKbXNnaWQgIkxvbmcgcnVubmluZyBjb21tYW5kcyIKbXNnc3RyICJDb21tYW5kZXMgw6AgbG9uZ3VlIGV4w6ljdXRpb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ2OQptc2dpZCAiVXNlIHRoaXMgdG8gc3BlY2lmeSB0aGUgY29tbWFuZHMga25vd24gdG8gdGFrZSBhIGxvbmcgdGltZSB0byBjb21wbGV0ZSB3aXRob3V0IG91dHB1dCBmcm9tIHlvdXIgcHJpbnRlciBhbmQgaGVuY2UgbWlnaHQgY2F1c2UgdGltZW91dCBpc3N1ZXMuIEp1c3QgdGhlIEcgb3IgTSBjb2RlLCBjb21tYSBzZXBhcmF0ZWQuIgptc2dzdHIgIlV0aWxpc2V6IGNldHRlIG9wdGlvbiBwb3VyIHNww6ljaWZpZXIgZGVzIGNvbW1hbmRlcyBjb25udWVzIHBvdXIgcydleMOpY3V0ZXIgc2FucyByZXRvdXIgZHVyYW50IHVuIHRlbXBzIGxvbmcgZXQgcXVpIHBhciBjb25zw6lxdWVudCBwb3VycmFpdCBwcm92b3F1ZXIgdW4gaW5jaWRlbnQgc3VyIGxlIGTDqWxhaSBkJ2F0dGVudGUuIFVuaXF1ZW1lbnQgbGVzIGNvbW1hbmRlcyBHIG91IE0sIHPDqXBhcsOpZXMgcGFyIGRlcyB2aXJndWxlcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ3Mgptc2dpZCAiQ29tbWFuZHMgdGhhdCBhbHdheXMgcmVxdWlyZSBhIGxpbmUgbnVtYmVyIGFuZCBjaGVja3N1bSB0byBiZSBzZW50IHdpdGggdGhlbS4iCm1zZ3N0ciAiQ29tbWFuZGVzIHF1aSBuw6ljZXNzaXRlbnQgdG91am91cnMgbCdlbnZvaSBkJ3VuIG51bcOpcm8gZGUgbGlnbmUgZXQgZCd1bmUgc29tbWUgZGUgY29udHLDtGxlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDczCm1zZ2lkICJDb21tYW5kcyB0aGF0IGFsd2F5cyByZXF1aXJlIGEgY2hlY2tzdW0iCm1zZ3N0ciAiQ29tbWFuZGVzIHF1aSBuw6ljZXNzaXRlbnQgdG91am91cnMgdW5lIHNvbW1lIGRlIGNvbnRyw7RsZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDc2Cm1zZ2lkICJVc2UgdGhpcyB0byBzcGVjaWZ5IHdoaWNoIGNvbW1hbmRzIDxzdHJvbmc+YWx3YXlzPC9zdHJvbmc+IG5lZWQgdG8gYmUgc2VudCB3aXRoIGEgY2hlY2tzdW0uIENvbW1hIHNlcGFyYXRlZCBsaXN0LiIKbXNnc3RyICJVdGlsaXNleiBjZXR0ZSBvcHRpb24gcG91ciBzcMOpY2lmaWVyIGxlcyBjb21tYW5kZXMgcXVpIGRvaXZlbnQgPHN0cm9uZz50b3Vqb3Vyczwvc3Ryb25nPiDDqnRyZSBlbnZvecOpZXMgYXZlYyB1bmUgc29tbWUgZGUgY29udHLDtGxlLiBVdGlsaXNleiB1bmUgdmlyZ3VsZSBwb3VyIHPDqXBhcmVyIGxlcyBmb25jdGlvbnMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0NzkKbXNnaWQgIm9rIGJ1ZmZlciBzaXplIgptc2dzdHIgInRhaWxsZSBkdSB0YW1wb24gb2siCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjQ4MAptc2dpZCAiPGNvZGU+b2s8L2NvZGU+IGJ1ZmZlciBzaXplIgptc2dzdHIgIlRhaWxsZSBkdSB0YW1wb24gPGNvZGU+b2s8L2NvZGU+IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0ODMKbXNnaWQgIk9ubHkgbW9kaWZ5IGlmIHRvbGQgdG8gZG8gc28iCm1zZ3N0ciAiTmUgbW9kaWZpZXIgcXVlIHNpIG9uIHZvdXMgbGUgZGVtYW5kZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDkyCm1zZ2lkICJFcnJvciBoYW5kbGluZyIKbXNnc3RyICJHZXN0aW9uIGRlcyBFcnJldXJzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo0OTQKbXNnaWQgIldoYXQgdG8gZG8gb24gYSBmaXJtd2FyZSBlcnJvciAoPGNvZGU+RXJyb3I6PC9jb2RlPiBvciA8Y29kZT4hITwvY29kZT4pIgptc2dzdHIgIlF1ZSBmYWlyZSBlbiBjYXMgZCdlcnJldXIgZGUgZmlybXdhcmUgKDxjb2RlPkVycm9yOjwvY29kZT4gb3UgPGNvZGU+ISE8L2NvZGU+KSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NDk3Cm1zZ2lkICJEaXNjb25uZWN0IGZyb20gdGhlIHByaW50ZXIiCm1zZ3N0ciAiRMOpY29ubmVjdGVyIGRlIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTAwCm1zZ2lkICJDYW5jZWwgYW55IG9uZ29pbmcgcHJpbnRzIGJ1dCBzdGF5IGNvbm5lY3RlZCB0byB0aGUgcHJpbnRlciIKbXNnc3RyICJBbm51bGVyIHRvdXRlcyBsZXMgaW1wcmVzc2lvbnMgZW4gY291cnMgbWFpcyByZXN0ZXIgY29ubmVjdMOpIMOgIGwnaW1wcmltYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTAxCm1zZ2lkICJQbGVhc2Ugbm90ZSB0aGF0IGlmIHlvdSBjaG9vc2UgdGhpcywgT2N0b1ByaW50IHdpbGwgc3RpbGwgZGlzY29ubmVjdCBmcm9tIHRoZSBwcmludGVyIGluIGNhc2Ugb2YgPGVtPmZhdGFsPC9lbT4gZXJyb3JzIHJlcG9ydGVkIGJ5IHlvdXIgZmlybXdhcmUgKGUuZy4gPGNvZGU+a2lsbCgpIGNhbGxlZDwvY29kZT4sIDxjb2RlPmZhdGFsOjwvY29kZT4pLiIKbXNnc3RyICJWZXVpbGxleiBub3RlciBxdWUgc2kgdm91cyBjaG9pc2lzc2V6IGNldHRlIG9wdGlvbiwgT2N0b1ByaW50IHNlIGTDqWNvbm5lY3RlcmEgdG91am91cnMgZGUgbCdpbXByaW1hbnRlIGVuIGNhcyBkJ2VycmV1cnMgZmF0YWxlcyBzaWduYWzDqWVzIHBhciB2b3RyZSBtaWNyb3Byb2dyYW1tZSAocGFyIGV4ZW1wbGUsIDxjb2RlPmtpbGwgKCkgY2FsbGVkPC9jb2RlPiwgPGNvZGU+ZmF0YWw6PC9jb2RlPikuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1MDUKbXNnaWQgIk9ubHkgY2hvb3NlIHRoaXMgaWYgeW91ciBmaXJtd2FyZSBzZW5kcyBlcnJvciBtZXNzYWdlcyB0aGF0IGFyZSBub3QgYWN0dWFsIGVycm9ycy4gTWlnaHQgbWFzayBwcmludGVyIGlzc3VlcyAoZXZlbiBmYXRhbCBlcnJvcnMhKSwgYmUgY2FyZWZ1bCEiCm1zZ3N0ciAiTmUgY2hvaXNpc3NleiBjZXR0ZSBvcHRpb24gcXVlIHNpIHZvdHJlIGZpcm13YXJlIGVudm9pZSBkZXMgbWVzc2FnZXMgZCdlcnJldXIgcXVpIG5lIHNvbnQgcGFzIGRlcyBlcnJldXJzIHLDqWVsbGVzLiBDZWxhIHBldXQgbWFzcXVlciBsZXMgcHJvYmzDqG1lcyBk4oCZaW1wcmltYW50ZSAobcOqbWUgbGVzIGVycmV1cnMgZmF0YWxlcyAhKSwgU295ZXogcHJ1ZGVudCAhIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1MTEKbXNnaWQgIlNlbmQgPGNvZGU+TTExMjwvY29kZT4gb24gZGlzY29ubmVjdCBkdWUgdG8gZXJyb3IiCm1zZ3N0ciAiRW52b3llciA8Y29kZT5NMTEyPC9jb2RlPiDDoCBsYSBkw6ljb25uZXhpb24gZW4gcmFpc29uIGQndW5lIGVycmV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTEyCm1zZ2lkICJJZiB0aGlzIGlzIGNoZWNrZWQsIE9jdG9QcmludCB3aWxsIHRyeSB0byBzZW5kIGFuIDxjb2RlPk0xMTI8L2NvZGU+IHByaW9yIHRvIGEgZGlzY29ubmVjdCBkdWUgdG8gYSAoZmF0YWwpIGVycm9yIGluIG9yZGVyIHRvIGRpc2FibGUgaGVhdGVycyBhbmQgbW90b3JzLiIKbXNnc3RyICJTaSBjZXR0ZSBjYXNlIGVzdCBjb2Now6llLCBPY3RvUHJpbnQgZXNzYWllcmEgZOKAmWVudm95ZXIgbGEgY29tbWFuZGUgPGNvZGU+TTExMjwvY29kZT4gYXZhbnQgdW5lIGTDqWNvbm5leGlvbiBlbiByYWlzb24gZCd1bmUgZXJyZXVyIChmYXRhbGUpIGFmaW4gZGUgZMOpc2FjdGl2ZXIgbGUgY2hhdWZmYWdlIGV0IGxlcyBtb3RldXJzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTIwCm1zZ2lkICJMb2cgcG9zaXRpb24gb24gcGF1c2UiCm1zZ3N0ciAiTG9nIGRlIHBvc2l0aW9uIHN1ciBwYXVzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTIxCm1zZ2lkICJJZiB5b3UgZGlzYWJsZSB0aGlzLCB0aGUgPGNvZGU+cGF1c2VfcG9zaXRpb248L2NvZGU+IHBsYWNlaG9sZGVycyBpbiB5b3VyIHBhdXNlL3Jlc3VtZSBHQ09ERSBzY3JpcHRzIHdpbGwgc3RheSB1bnBvcHVsYXRlZCEgSG93ZXZlciwgcGF1c2luZyBzcGVlZCBtaWdodCBpbXByb3ZlIHNsaWdodGx5LiIKbXNnc3RyICJTaSB2b3VzIGTDqXNhY3RpdmV6IGNldHRlIG9wdGlvbiwgbGVzIGVzcGFjZXMgcsOpc2VydsOpcyDDoCA8Y29kZT5wYXVzZV9wb3NpdGlvbjwvY29kZT4gZGFucyB2b3Mgc2NyaXB0cyBHLWNvZGUgZGUgcGF1c2UvcmVwcmlzZSByZXN0ZXJvbnQgdmlkZXMgISBDZXBlbmRhbnQsIGxhIHZpdGVzc2UgZGUgcGF1c2UgcG91cnJhaXQgcydhbcOpbGlvcmVyIGzDqWfDqHJlbWVudC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUyOQptc2dpZCAiTG9nIHBvc2l0aW9uIG9uIGNhbmNlbCIKbXNnc3RyICJMb2cgZGUgcG9zaXRpb24gc3VyIGFubnVsZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUzMAptc2dpZCAiSWYgeW91IGRpc2FibGUgdGhpcywgdGhlIDxjb2RlPmNhbmNlbF9wb3NpdGlvbjwvY29kZT4gcGxhY2Vob2xkZXJzIGluIHlvdXIgY2FuY2VsIEdDT0RFIHNjcmlwdCBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgZGF0YSBpbiB0aGUgcHJpbnQgcmVjb3ZlcnkgZGF0YSB3aWxsIHN0YXkgdW5wb3B1bGF0ZWQhIEhvd2V2ZXIsIGNhbmNlbGxpbmcgc3BlZWQgbWlnaHQgaW1wcm92ZSBzbGlnaHRseS4iCm1zZ3N0ciAiU2kgdm91cyBkw6lzYWN0aXZleiBjZXR0ZSBvcHRpb24sIGxlcyBlc3BhY2VzIHLDqXNlcnbDqXMgw6AgPGNvZGU+Y2FuY2VsX3Bvc2l0aW9uPC9jb2RlPiBkYW5zIHZvdHJlIHNjcmlwdCBkJ2FubnVsYXRpb24gRy1jb2RlIGV0IGxlcyBkb25uw6llcyBjb3JyZXNwb25kYW50ZXMgZGFucyBsZXMgZG9ubsOpZXMgZGUgcsOpY3Vww6lyYXRpb24gZCdpbXByZXNzaW9uIHJlc3Rlcm9udCB2aWRlcyAhIENlcGVuZGFudCwgbCdhbm51bGF0aW9uIGRlIGxhIHZpdGVzc2UgcG91cnJhaXQgcydhbcOpbGlvcmVyIGzDqWfDqHJlbWVudC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjUzNQptc2dpZCAiQXR0ZW1wdCB0byBhYm9ydCBhbnkgYmxvY2tpbmcgaGVhdHVwcyBvbiBjYW5jZWwgdmlhIDxjb2RlPk0xMDg8L2NvZGU+LiIKbXNnc3RyICJUZW50ZSBk4oCZYWJhbmRvbm5lciBsZXMgw6ljaGF1ZmZlbWVudHMgYmxvcXVhbnRzIGxvcnMgZGUgbOKAmWFubnVsYXRpb24gdmlhIDxjb2RlPk0xMDg8L2NvZGU+LiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTM2Cm1zZ2lkICJVbmNoZWNrIHRoaXMgaWYgeW91ciBmaXJtd2FyZSBkb2Vzbid0IHN1cHBvcnQgPGNvZGU+TTEwODwvY29kZT4gZm9yIGFib3J0aW5nIGJsb2NraW5nIGhlYXR1cHMhIgptc2dzdHIgIkTDqWNvY2hleiBjZXR0ZSBjYXNlIHNpIHZvdHJlIGZpcm13YXJlIG5lIHByZW5kIHBhcyBlbiBjaGFyZ2UgPGNvZGU+IE0xMDggPC9jb2RlPiBwb3VyIGFubnVsZXIgbGUgY2hhdWZmYWdlIGR1IGJsb2MgY2hhdWZmYW50ISIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTQxCm1zZ2lkICJTYW5pdHkgQ2hlY2tpbmciCm1zZ3N0ciAiVsOpcmlmaWNhdGlvbiBkZSBsJ8OpdGF0IGRlIGZvbmN0aW9ubmVtZW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1NDQKbXNnaWQgIlNhbml0eSBjaGVjayB0b29sIGNvbW1hbmRzIgptc2dzdHIgIkNvbW1hbmRlcyBkZSBsJ291dGlsIGRlIHbDqXJpZmljYXRpb24gZGUgbCfDqXRhdCBkZSBmb25jdGlvbm5lbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTQ1Cm1zZ2lkICJJZiBlbmFibGVkLCBPY3RvUHJpbnQgd2lsbCBub3Qgc2VuZCB0b29sIGNvbW1hbmRzIHRvIHlvdXIgcHJpbnRlciB0aGF0IGV4Y2VlZCB0aGUgbnVtYmVyIG9mIGV4dHJ1ZGVycyBjb25maWd1cmVkIGluIHRoZSBhY3RpdmUgcHJpbnRlciBwcm9maWxlLCBvciBmb3Igd2hpY2ggdGhlIGZpcm13YXJlIGhhcyByZXBvcnRlZCBhbiBcImludmFsaWQgZXh0cnVkZXJcIiBlcnJvci4gT25seSB1bmNoZWNrIHRoaXMgaWYgT2N0b1ByaW50IG9yIHlvdXIgZmlybXdhcmUgbWlzdGFraW5nbHkgbWFyayB2YWxpZCB0b29scyBhcyBpbnZhbGlkIGFuZCBiZSBzdXJlIHRvIGludmVzdGlnYXRlIHRoZSByZWFzb24gZm9yIHRoYXQsIGl0IG1pZ2h0IGJlIGEgbWlzY29uZmlndXJhdGlvbiB5b3UgbmVlZCB0byBjb3JyZWN0IGZvciBwcm9wZXIgb3BlcmF0aW9uLiIKbXNnc3RyICJTaSBjZXR0ZSBvcHRpb24gZXN0IGFjdGl2w6llLCBPY3RvUHJpbnQgbidlbnZlcnJhIHBhcyDDoCB2b3RyZSBpbXByaW1hbnRlIGRlIGNvbW1hbmRlcyBkJ291dGlscyBkw6lwYXNzYW50IGxlIG5vbWJyZSBkJ2V4dHJ1ZGV1cnMgY29uZmlndXLDqWVzIGRhbnMgbGUgcHJvZmlsIGQnaW1wcmltYW50ZSBhY3RpZiBvdSBwb3VyIGxlc3F1ZWxsZXMgbGUgZmlybXdhcmUgYSBzaWduYWzDqSB1bmUgZXJyZXVyIFwiZXh0cnVkZXVycyBub24gdmFsaWRlXCIuIE5lIGTDqWNvY2hleiBjZXR0ZSBjYXNlIHF1ZSBzaSBPY3RvUHJpbnQgb3Ugdm90cmUgZmlybXdhcmUgbWFycXVlIHBhciBlcnJldXIgZGVzIG91dGlscyB2YWxpZGVzIGNvbW1lIG5vbiB2YWxpZGVzIGV0IGFzc3VyZXotdm91cyBkJ2VuIHJlY2hlcmNoZXIgbGEgcmFpc29uLCBpbCBwZXV0IHMnYWdpciBkJ3VuZSBtYXV2YWlzZSBjb25maWd1cmF0aW9uIHF1ZSB2b3VzIGRldmV6IGNvcnJpZ2VyIHBvdXIgdW4gZm9uY3Rpb25uZW1lbnQgY29ycmVjdC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU0OQptc2dpZCAiRGlzcGxheSBub3RpZmljYXRpb25zIGZvciBzdXBwcmVzc2VkIGNvbW1hbmRzIgptc2dzdHIgIkFmZmljaGVyIGRlcyBub3RpZmljYXRpb25zIHBvdXIgbGVzIGNvbW1hbmRlcyBzdXBwcmltw6llcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTUyCm1zZ2lkICJTaG93IG5vdGlmaWNhdGlvbnMgb2Ygc2V2ZXJpdHkgXCJpbmZvXCIgYW5kIFwid2FybmluZ1wiIgptc2dzdHIgIk1vbnRyZXIgbGVzIG5vdGlmaWNhdGlvbnMgXCJpbmZvXCIgZXQgXCJ3YXJuaW5nXCIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU1NQptc2dpZCAiU2hvdyBub3RpZmljYXRpb25zIG9mIHNldmVyaXR5IFwid2FybmluZ1wiIgptc2dzdHIgIk1vbnRyZXIgbGVzIG5vdGlmaWNhdGlvbnMgXCJ3YXJuaW5nXCIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU1OAptc2dpZCAiTmV2ZXIgc2hvdyBub3RpZmljYXRpb25zIgptc2dzdHIgIk5lIGphbWFpcyBtb250ZXIgbGVzIG5vdGlmaWNhdGlvbnMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU2NAptc2dpZCAiUmVzZW5kIFRyYWNraW5nIgptc2dzdHIgIlJlbnZveWVyIGxlIHN1aXZpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJpYWxjb25uZWN0aW9uLmppbmphMjo1NjUKbXNnaWQgIlJlc2VuZCByYXRpbyB0aHJlc2hvbGQuIFBlcmNlbnRhZ2Ugb2YgcmVzZW5kIHJlcXVlc3RzIGFtb25nIGFsbCBzZW50IGxpbmVzIHRvIGNvbnNpZGVyIGNyaXRpY2FsLiIKbXNnc3RyICJTZXVpbCBkdSByYXRpbyBkZSByZW52b2kuIFBvdXJjZW50YWdlIGRlIGRlbWFuZGVzIGRlIHJlbnZvaSBwYXJtaSB0b3V0ZXMgbGVzIGxpZ25lcyBlbnZvecOpZXMgw6AgY29uc2lkw6lyZXIgY29tbWUgY3JpdGlxdWVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTY2Cm1zZ2lkICJDcml0aWNhbCByZXNlbmQgcmF0aW8iCm1zZ3N0ciAiVGF1eCBkZSByZW52b2kgY3JpdGlxdWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcmlhbGNvbm5lY3Rpb24uamluamEyOjU3NAptc2dpZCAiU3RhcnQgdHJhY2tpbmcgcmVzZW5kIHJlcXVlc3QgYWZ0ZXIgdGhlc2UgbWFueSB0cmFuc21pdHRlZCBsaW5lcy4iCm1zZ3N0ciAiQ29tbWVuY2VyIMOgIHN1aXZyZSBsYSBkZW1hbmRlIGRlIHJlbnZvaSBhcHLDqHMgY2Ugbm9tYnJlIGRlIGxpZ25lcyB0cmFuc21pc2VzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvc2VyaWFsY29ubmVjdGlvbi5qaW5qYTI6NTc1Cm1zZ2lkICJUcmFja2luZyBzdGFydCIKbXNnc3RyICJDb21tZW5jZXIgbGUgc3VpdmkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcnZlci5qaW5qYTI6NQptc2dpZCAiQ29tbWFuZHMiCm1zZ3N0ciAiQ29tbWFuZGVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJ2ZXIuamluamEyOjExCm1zZ2lkICJDb25uZWN0aXZpdHkgY2hlY2siCm1zZ3N0ciAiVsOpcmlmaWNhdGlvbiBkZSBsYSBjb25uZWN0aXZpdMOpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy9zZXJ2ZXIuamluamEyOjE2Cm1zZ2lkICJQbHVnaW4gYmxhY2tsaXN0IHByb2Nlc3NpbmciCm1zZ3N0ciAiRXh0ZW5zaW9uIGRlIHRyYWl0ZW1lbnQgZGUgbGEgTGlzdGUgTm9pcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3NlcnZlci5qaW5qYTI6MjEKbXNnaWQgIkRlYnVnIG9wdGlvbnMiCm1zZ3N0ciAiT3B0aW9ucyBkZSBkZWJ1ZyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjoyCm1zZ2lkICJHcmFwaCIKbXNnc3RyICJHcmFwaGlxdWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3RlbXBlcmF0dXJlcy5qaW5qYTI6NAptc2dpZCAiR3JhcGggY3V0b2ZmIgptc2dzdHIgIkxpbWl0ZXMgZHUgZ3JhcGhpcXVlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy90ZW1wZXJhdHVyZXMuamluamEyOjEwCm1zZ2lkICJOZWVkcyBhIHJlc3RhcnQgb2YgT2N0b1ByaW50IHRvIGJlY29tZSBhY3RpdmUuIgptc2dzdHIgIk7DqWNlc3NpdGUgdW4gcmVkw6ltYXJyYWdlIGQnT2N0b1ByaW50LiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjoxMwptc2dpZCAiRmluZSBhZGp1c3RtZW50cyIKbXNnc3RyICJSw6lnbGFnZXMgZmlucyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjoxNwptc2dpZCAiU2VuZCB0ZW1wZXJhdHVyZSBmaW5lIGFkanVzdG1lbnRzIGF1dG9tYXRpY2FsbHkiCm1zZ3N0ciAiTW9kaWZpZXogYXV0b21hdGlxdWVtZW50IGxlcyByw6lnbGFnZXMgZGUgdGVtcMOpcmF0dXJlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy90ZW1wZXJhdHVyZXMuamluamEyOjE5Cm1zZ2lkICJFbmFibGUgdGhpcyB0byBoYXZlIHRlbXBlcmF0dXJlIGZpbmUgYWRqdXN0bWVudHMgeW91IGRvIHZpYSB0aGUgKyBvciAtIGJ1dHRvbiBiZSBzZW50IHRvIHRoZSBwcmludGVyIGF1dG9tYXRpY2FsbHkuIgptc2dzdHIgIkFjdGl2ZXogY2V0dGUgb3B0aW9uIHBvdXIgcXVlIGxlcyBhanVzdGVtZW50cyBkZSB0ZW1ww6lyYXR1cmUgcXVlIHZvdXMgZWZmZWN0dWV6IHZpYSBsZSBib3V0b24gKyBvdSAtIHNvaWVudCBhdXRvbWF0aXF1ZW1lbnQgZW52b3nDqXMgw6AgbCdpbXByaW1hbnRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjoyMwptc2dpZCAiU2VuZGluZyBkZWxheSIKbXNnc3RyICJEw6lsYWkgZCdlbnZvaSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjoyOQptc2dpZCAiT2N0b1ByaW50IHdpbGwgdXNlIHRoaXMgZGVsYXkgdG8gbGltaXQgdGhlIG51bWJlciBvZiBzZW50IHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNob3VsZCB5b3UgcGVyZm9ybSBtdWx0aXBsZSBmaW5lIGFkanVzdG1lbnRzIGluIGEgc2hvcnQgdGltZS4iCm1zZ3N0ciAiT2N0b1ByaW50IHV0aWxpc2VyYSBjZSBkw6lsYWkgcG91ciBsaW1pdGVyIGxlIG5vbWJyZSBkZSBjb21tYW5kZXMgZGUgdGVtcMOpcmF0dXJlIGVudm95w6llcyBzaSB2b3VzIGVmZmVjdHVleiBwbHVzaWV1cnMgcsOpZ2xhZ2VzIHByw6ljaXMgZW4gcGV1IGRlIHRlbXBzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3MvdGVtcGVyYXR1cmVzLmppbmphMjozMgptc2dpZCAiUHJlc2V0cyIKbXNnc3RyICJQcsOpcsOpZ2xhZ2VzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy9zZXR0aW5ncy90ZW1wZXJhdHVyZXMuamluamEyOjM0Cm1zZ2lkICJFeHRydWRlciIKbXNnc3RyICJFeHRydWRldXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3NldHRpbmdzL3Rlcm1pbmFsZmlsdGVycy5qaW5qYTI6NQptc2dpZCAiUmVnRXhwIgptc2dzdHIgIlJlZ0V4cCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvc2V0dGluZ3Mvd2ViY2FtLmppbmphMjoyCiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIlBsZWFzZSBub3RlIHRoYXQgT2N0b1ByaW50IG1lcmVseSBlbWJlZHMgYSB3ZWJjYW0gc3RyZWFtICYgYWNjZXNzIGEgc25hcHNob3QgVVJMLiBJdCBkb2VzIG5vdCBhY3R1YWxseSBydW4gaXRzIG93biB3ZWJjYW0gc2VydmVyIG9yIGludGVyYWN0IGRpcmVjdGx5IHdpdGggeW91ciBjYW1lcmEuIEl0IHRodXMgY2FuJ3QgaW1wb3NlIGFjY2VzcyByZXN0cmljdGlvbnMgb24gaXQgb3IgZW5hYmxlL2Rpc2FibGUgdGhlIHN0cmVhbSBmb3IgeW91LiBQbGVhc2Ugc2VlIDxhIGhyZWY9XCIlKHVybClzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+dGhpcyBGQVEgZW50cnk8L2E+IGZvciBtb3JlIGV4cGxhbmF0aW9uLiIKbXNnc3RyICJWZXVpbGxleiBub3RlciBxdWUgT2N0b1ByaW50IHNlIGNvbnRlbnRlIGQnaW5jb3Jwb3JlciB1biBmbHV4IGRlIHdlYmNhbSBldCBkJ2FjY8OpZGVyIMOgIHVuZSBVUkwuIElsIG4nZXjDqWN1dGUgcGFzIHLDqWVsbGVtZW50IHNvbiBwcm9wcmUgc2VydmV1ciBkZSB3ZWJjYW0gZXQgbidpbnRlcmFnaXQgcGFzIGRpcmVjdGVtZW50IGF2ZWMgdm90cmUgY2Ftw6lyYS4gSWwgbmUgcGV1dCBkb25jIHBhcyBpbXBvc2VyIGRlIHJlc3RyaWN0aW9ucyBkJ2FjY8OocyDDoCBjZWxsZS1jaSBuaSBhY3RpdmVyL2TDqXNhY3RpdmVyIGxlIGZsdXggcG91ciB2b3VzLiBWZXVpbGxleiBjb25zdWx0ZXIgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5jZXR0ZSBlbnRyw6llIGRlIGxhIEZBUTwvYT4gcG91ciBwbHVzIGQnZXhwbGljYXRpb25zLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6NQptc2dpZCAiSWYgeW91IGRvIG5vdCB3aXNoIHRvIGNoYW5nZSB5b3VyIHBhc3N3b3JkLCBqdXN0IGxlYXZlIHRoZSBmb2xsb3dpbmcgZmllbGRzIGVtcHR5LiIKbXNnc3RyICJTaSB2b3VzIG5lIHZvdWxleiBwYXMgY2hhbmdlciB2b3RyZSBtb3QgZGUgcGFzc2UsIGxhaXNzZXogbGUgY2hhbXAgc3VpdmFudCB2aWRlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjoxNDEKbXNnaWQgIk5ldyBQYXNzd29yZCIKbXNnc3RyICJOb3V2ZWF1IG1vdCBkZSBwYXNzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6MTQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6OTUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTQ3Cm1zZ2lkICJSZXBlYXQgUGFzc3dvcmQiCm1zZ3N0ciAiUsOpcMOpdGVyIGxlIG1vdCBkZSBwYXNzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6MjQgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTU2Cm1zZ2lkICJDdXJyZW50IEFQSSBLZXkiCm1zZ3N0ciAiQ2zDqSBkZSBsJ0FQSSBjb3VyYW50ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2FjY2Vzcy5qaW5qYTI6MzIKbXNnaWQgIlBsZWFzZSBub3RlIHRoYXQgY2hhbmdlcyB0byB0aGUgQVBJIGtleSBhcmUgYXBwbGllZCBpbW1lZGlhdGVseSwgd2l0aG91dCBoYXZpbmcgdG8gXCJDb25maXJtXCIgZmlyc3QuIgptc2dzdHIgIlZldWlsbGV6IG5vdGVyIHF1ZSBsZXMgY2hhbmdlbWVudHMgZGUgY2zDqSBkJ0FQSSBzb250IGFwcGxpcXXDqWVzIGltbcOpZGlhdGVtZW50LCBzYW5zIGF2b2lyIMOgIFwiQ29uZmlybWVyXCIgYXUgcHLDqWFsYWJsZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3VzZXJzZXR0aW5ncy9pbnRlcmZhY2UuamluamEyOjMKbXNnaWQgIkxhbmd1YWdlIgptc2dzdHIgIkxhbmd1ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3MvdXNlcnNldHRpbmdzL2ludGVyZmFjZS5qaW5qYTI6MTEKbXNnaWQgIkNoYW5nZXMgdG8gdGhlIGludGVyZmFjZSBsYW5ndWFnZSB3aWxsIG9ubHkgYmVjb21lIGFjdGl2ZSBhZnRlciBhIHJlbG9hZCBvZiB0aGUgcGFnZS4iCm1zZ3N0ciAiTGVzIG1vZGlmaWNhdGlvbnMgZGUgbGEgbGFuZ3VlIGRlIGwnaW50ZXJmYWNlIHNlcm9udCBhY3RpdmVzIGFwcsOocyByYWZyYcOuY2hpc3NlbWVudCBkZSBsYSBwYWdlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvd2l6YXJkL2ZpcnN0cnVuX2VuZC5qaW5qYTI6MQptc2dpZCAiQWxsIERvbmUhIgptc2dzdHIgIlRlcm1pbsOpICEiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC9maXJzdHJ1bl9lbmQuamluamEyOjMKbXNnaWQgIiIKIlxuIgoiICAgIFlvdXIgT2N0b1ByaW50IGluc3RhbGxhdGlvbiBpcyBub3cgYWxsIHNldCB1cCBhbmQgcmVhZHkgdG8gZ28uXG4iCm1zZ3N0ciAiIgoiXG4iCiIgICAgVm90cmUgaW5zdGFsbGF0aW9uIE9jdG9QcmludCBlc3QgbWFpbnRlbmFudCBjb25maWd1csOpZSBldCBwcsOqdGUgw6AgZm9uY3Rpb25uZXIuXG4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC9maXJzdHJ1bl9lbmQuamluamEyOjcKbXNnaWQgIkZvciB5b3VyIHByaW50ZXIncyBzYWZldHkiCm1zZ3N0ciAiUG91ciBsYSBzw6ljdXJpdMOpIGRlIHZvdHJlIGltcHJpbWFudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC9maXJzdHJ1bl9lbmQuamluamEyOjEwCm1zZ2lkICIiCiJcbiIKIiAgICBFdmVuIHdpdGggT2N0b1ByaW50IGF0dGFjaGVkIHlvdSBzaG91bGQgPHN0cm9uZyBjbGFzcz1cInRleHQtZXJyb3JcIj5uZXZlciBsZWF2ZVxuIgoiICAgIHlvdXIgcHJpbnRlciBydW5uaW5nIGNvbXBsZXRlbHkgdW5hdHRlbmRlZDwvc3Ryb25nPi4gVGhlIGVsZWN0cm9uaWNzIGluIG91ciBjb25zdW1lciBwcmludGVycyBjYW4gYW5kXG4iCiIgICAgc29tZXRpbWVzIHNhZGx5IGRvIGNhdGNoIGZpcmUsIHNvIHN0YXkgb3IgaGF2ZSBzb21lb25lIGVsc2Ugc3RheSBjbG9zZSBlbm91Z2ggdG8gcGh5c2ljYWxseSBpbnRlcnZlbmVcbiIKIiAgICBpbiBjYXNlIG9mIHN1Y2ggY2F0YXN0cm9waGljIGZhaWx1cmUuXG4iCm1zZ3N0ciAiIgoiXG4iCiJNw6ptZSBhdmVjIE9jdG9QcmludCBkJ2luc3RhbGzDqSwgPHN0cm9uZyBjbGFzcz1cInRleHQtZXJyb3JcIj52b3VzIG5lIGRldmV6IGphbWFpcyBsYWlzc2VyIHZvdHJlIGltcHJpbWFudGUgZm9uY3Rpb25uZXIgc2FucyBzdXJ2ZWlsbGFuY2U8L3N0cm9uZz4uIEwnw6lsZWN0cm9uaXF1ZSBkZXMgaW1wcmltYW50ZXMgZ3JhbmQgcHVibGljIHBldXQgcGFyZm9pcywgcHJlbmRyZSBmZXUsIGFsb3JzIHJlc3RleiBwcm9jaGUgb3UgZGVtYW5kZXogw6AgcXVlbHF1J3VuIGQnYXV0cmUgZGUgcmVzdGVyIHN1ZmZpc2FtbWVudCBwcm9jaGUgcG91ciBpbnRlcnZlbmlyIHBoeXNpcXVlbWVudCBlbiBjYXMgZGUgcGFubmUgY2F0YXN0cm9waGlxdWVcbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvd2l6YXJkL2ZpcnN0cnVuX2VuZC5qaW5qYTI6MTYKIywgcHl0aG9uLWZvcm1hdAptc2dpZCAiIgoiXG4iCiIgICAgWW91IGFsc28gc2hvdWxkIDxzdHJvbmcgY2xhc3M9XCJ0ZXh0LWVycm9yXCI+bmV2ZXIgbWFrZSB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSBhdmFpbGFibGUgZm9yIGV2ZXJ5b25lIG9uIHRoZVxuIgoiICAgIHB1YmxpYyBpbnRlcm5ldDwvc3Ryb25nPiwgZXZlbiB3aXRoIEFjY2VzcyBDb250cm9sIGVuYWJsZWQuIFlvdXIgaW5zdGFuY2UgPGVtPndpbGw8L2VtPiBiZSBmb3VuZCwgYW5kIGJhZCBwZW9wbGVcbiIKIiAgICA8ZW0+d2lsbDwvZW0+IHRyeSB0byBhYnVzZSBpdC4gRG9uJ3QgcHV0IHlvdXJzZWxmIGF0IHJpc2ssXG4iCiIgICAgPGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+dXNlIGEgc2FmZSB3YXkgdG8gYWNjZXNzIHlvdXIgaW5zdGFuY2UgcmVtb3RlbHk8L2E+LlxuIgptc2dzdHIgIiIKIlxuIgoiICAgIEVuIG91dHJlLDxzdHJvbmcgY2xhc3M9XCJ0ZXh0LWVycm9yXCI+IHZvdXMgbmUgZGV2cmlleiBqYW1haXMgcmVuZHJlIHZvdHJlIGluc3RhbmNlIE9jdG9QcmludCBkaXNwb25pYmxlIHBvdXIgdG91dCBsZSBtb25kZSBzdXIgSW50ZXJuZXQgPC9zdHJvbmc+LCBtw6ptZSBhdmVjIGxlIGNvbnRyw7RsZSBkJ2FjY8OocyBBY3RpdsOpLiBWb3RyZSBpbnN0YW5jZSA8ZW0+cGV1dC3DqnRyZTwvZW0+IGTDqWNvdXZlcnRlLCBldCBsZXMgbWF1dmFpc2VzIHBlcnNvbm5lcyA8ZW0+cGV1dmVudDwvZW0+IGVzc2F5ZXIgZCdlbiBhYnVzZXIuIE5lIHByZW5leiBwYXMgZGUgcmlzcXVlLDxhIGhyZWY9XCIlKHVybClzXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPlV0aWxpc2V6IHVuIG1veWVuIHPDu3IgZOKAmWFjY8OpZGVyIMOgIE9jdG9wcmludCDDoCBkaXN0YW5jZTwvYT4uXG4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9kaWFsb2dzL3dpemFyZC9maXJzdHJ1bl9lbmQuamluamEyOjIzCm1zZ2lkICJJZiB5b3UgZW5qb3kgT2N0b1ByaW50Li4uIgptc2dzdHIgIlNpIHZvdXMgYXBwcsOpY2lleiBPY3RvUHJpbnQgLi4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQvZmlyc3RydW5fZW5kLmppbmphMjoyNgojLCBweXRob24tZm9ybWF0Cm1zZ2lkICIiCiJcbiIKIiAgICBQbGVhc2UgY29uc2lkZXIgPHN0cm9uZz48YSBocmVmPVwiJSh1cmwpc1wiIHRhcmdldD1cIl9ibGFua1wiPnN1cHBvcnRpbmcgT2N0b1ByaW50J3Mgb25nb2luZyBkZXZlbG9wbWVudDwvYT48L3N0cm9uZz4sXG4iCiIgICAgd2hpY2ggY2FuIG9ubHkgY29udGludWUgd2l0aCBmdW5kaW5nIGJ5IHVzZXJzIGxpa2UgeW91ISBZb3UgY2FuIGFsc28gZmluZCB0aGlzIGxpbmsgaW4gdGhlIFwiQWJvdXRcIiBkaWFsb2cuPGJyPlxuIgoiICAgIDxzdHJvbmc+VGhhbmsgeW91ITwvc3Ryb25nPlxuIgptc2dzdHIgIiIKIlxuIgoiVmV1aWxsZXogZW52aXNhZ2VyIDxzdHJvbmc+PGEgaHJlZj1cIiUodXJsKXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5kZSBzb3V0ZW5pciBsZSBkw6l2ZWxvcHBlbWVudCBlbiBjb3VycyBkZSBPY3RvUHJpbnQ8L2E+PC9zdHJvbmc+LCAgcXVpIG5lIHBldXQgY29udGludWVyIGF2ZWMgbGUgZmluYW5jZW1lbnQgZCd1dGlsaXNhdGV1cnMgY29tbWUgdm91cyAhIFZvdXMgcG91dmV6IMOpZ2FsZW1lbnQgdHJvdXZlciBjZSBsaWVuIGRhbnMgbGEgYm/DrnRlIGRlIGRpYWxvZ3VlIFwiw4AgcHJvcG9zIGRlXCI8YnI+LlxuIgoiIDxzdHJvbmc+bWVyY2kgITwvc3Ryb25nPlxuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQvZmlyc3RydW5fZW5kLmppbmphMjozMgptc2dpZCAiIgoiXG4iCiIgICAgV2l0aCBhbGwgdGhhdCBiZWluZyBzYWlkLCA8c3Ryb25nPkhhcHB5IGFuZCBTYWZlIFByaW50aW5nPC9zdHJvbmc+IVxuIgptc2dzdHIgIiIKIlxuIgoiQXByw6hzIHRvdXQgY2UgcXVpIGEgcHUgw6p0cmUgZGl0LCA8c3Ryb25nPkJvbm5lIGNoYW5jZSBwb3VyIHZvcyBpbXByZXNzaW9uczwvc3Ryb25nPiFcbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL2RpYWxvZ3Mvd2l6YXJkL2ZpcnN0cnVuX3N0YXJ0LmppbmphMjoxCm1zZ2lkICJIZWxsbyEiCm1zZ3N0ciAiQm9uam91ciAhIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQvZmlyc3RydW5fc3RhcnQuamluamEyOjMKbXNnaWQgIiIKIlxuIgoiICAgIFRoYW5rIHlvdSBmb3IgaW5zdGFsbGluZyBPY3RvUHJpbnQhXG4iCm1zZ3N0ciAiIgoiXG4iCiJNZXJjaSBkJ2F2b2lyIGluc3RhbGzDqSBPY3RvUHJpbnQgIVxuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvZGlhbG9ncy93aXphcmQvZmlyc3RydW5fc3RhcnQuamluamEyOjYKbXNnaWQgIiIKIlxuIgoiICAgIFRoaXMgd2l6YXJkIHdpbGwgZ3VpZGUgeW91IHRocm91Z2ggdGhlIGZpbmFsIHN0ZXBzIHRvIGdldCB5b3VyIE9jdG9QcmludCBpbnN0YW5jZSBhbGwgc2V0IHVwIGFuZCByZWFkeSB0byBnby4gV2UnbGxcbiIKIiAgICBnZXQgeW91IHByaW50aW5nIGluIG5vIHRpbWUhXG4iCm1zZ3N0ciAiIgoiXG4iCiJDZXQgYXNzaXN0YW50IHZvdXMgZ3VpZGVyYSDDoCB0cmF2ZXJzIGxlcyBkZXJuacOocmVzIMOpdGFwZXMgcG91ciBxdWUgdm90cmUgaW5zdGFuY2UgZGUgT2N0b1ByaW50IHNvaXQgY29uZmlndXLDqWUgZXQgcHLDqnRlIMOgIGZvbmN0aW9ubmVyLiBWb3VzIGltcHJpbWVyZXogZW4gdW4gcmllbiBkZSB0ZW1wc1xuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvbmF2YmFyL2xvZ2luLmppbmphMjoyMAptc2dpZCAiTG9nb3V0Igptc2dzdHIgIlNlIGTDqWNvbm5lY3RlciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL25hdmJhci9vZmZsaW5laW5kaWNhdG9yLmppbmphMjoxCm1zZ2lkICJUaGVyZSBpcyBubyBjb25uZWN0aW9uIHRvIHRoZSBpbnRlcm5ldCIKbXNnc3RyICJJbCBuJ3kgYSBwYXMgZGUgY29ubmV4aW9uIMOgIGwnSW50ZXJuZXQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9uYXZiYXIvc2V0dGluZ3MuamluamEyOjEKbXNnaWQgIlNldHRpbmdzIgptc2dzdHIgIlBhcmFtw6h0cmVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvb3ZlcmxheXMvZHJhZ25kcm9wLmppbmphMjo1Cm1zZ2lkICJVcGxvYWQgbG9jYWxseSIKbXNnc3RyICJDaGFyZ2VtZW50IGxvY2FsIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvb3ZlcmxheXMvZHJhZ25kcm9wLmppbmphMjo3IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXMuamluamEyOjc0Cm1zZ2lkICJVcGxvYWQgdG8gU0QiCm1zZ3N0ciAiQ2hhcmdlbWVudCB2ZXJzIGxhIGNhcnRlIFNEIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvb3ZlcmxheXMvZHJhZ25kcm9wLmppbmphMjo3Cm1zZ2lkICJDYW5ub3QgdXBsb2FkIHRvIHByaW50ZXIncyBTRCB3aGlsZSBwcmludGluZyIKbXNnc3RyICJJbXBvc3NpYmxlIGRlIHTDqWzDqXZlcnNlciBzdXIgbGEgY2FydGUgU0QgcGVuZGFudCB1bmUgaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL292ZXJsYXlzL2RyYWduZHJvcC5qaW5qYTI6Nwptc2dpZCAiU0Qgbm90IGluaXRpYWxpemVkIgptc2dzdHIgIkNhcnRlIFNEIG5vbiBpbml0aWFsaXPDqWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9vdmVybGF5cy9vZmZsaW5lLmppbmphMjo5Cm1zZ2lkICJBdHRlbXB0IHRvIHJlY29ubmVjdCIKbXNnc3RyICJUZW50YXRpdmUgZGUgcmVjb25uZXhpb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9vdmVybGF5cy9yZWxvYWR1aS5qaW5qYTI6Ngptc2dpZCAiUGxlYXNlIHJlbG9hZCIKbXNnc3RyICJNZXJjaSBkZSByZWNoYXJnZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9vdmVybGF5cy9yZWxvYWR1aS5qaW5qYTI6Nwptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICAgICAgICAgIFRoZXJlIGlzIGEgbmV3IHZlcnNpb24gb2YgdGhlIHNlcnZlciBhY3RpdmUgbm93LCBhIHJlbG9hZFxuIgoiICAgICAgICAgICAgICAgICAgICBvZiB0aGUgdXNlciBpbnRlcmZhY2UgaXMgbmVlZGVkLiBUaGlzIHdpbGwgbm90IGludGVycnVwdFxuIgoiICAgICAgICAgICAgICAgICAgICBhbnkgcHJpbnQgam9icyB5b3UgbWlnaHQgaGF2ZSBvbmdvaW5nLiBQbGVhc2UgcmVsb2FkIHRoZVxuIgoiICAgICAgICAgICAgICAgICAgICB3ZWIgaW50ZXJmYWNlIG5vdyBieSBjbGlja2luZyB0aGUgYnV0dG9uIGJlbG93LlxuIgoiICAgICAgICAgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIklsIHkgYSB1bmUgbm91dmVsbGUgdmVyc2lvbiBkdSBzZXJ2ZXVyIGFjdGlmIG1haW50ZW5hbnQsIHVuZSByZWNoYXJnZSBkZSBsJ2ludGVyZmFjZSB1dGlsaXNhdGV1ciBlc3QgbsOpY2Vzc2FpcmUuIENlbGEgbidpbnRlcnJvbXB0IHBhcyBsZXMgdHJhdmF1eCBkJ2ltcHJlc3Npb24gcXVlIHZvdXMgcG91cnJpZXogYXZvaXIgZW4gY291cnMuIFZldWlsbGV6IHJlY2hhcmdlciBsJ2ludGVyZmFjZSBXZWJtYWludGVuYW50IGVuIGNsaXF1YW50IHN1ciBsZSBib3V0b24gY2ktZGVzc291cy5cbiIKIiAgICAgICAgICAgICAgICAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2Nvbm5lY3Rpb24uamluamEyOjgKbXNnaWQgIlNhdmUgY29ubmVjdGlvbiBzZXR0aW5ncyIKbXNnc3RyICJTYXV2ZWdhcmRlciBsZXMgcGFyYW3DqHRyZXMgZGUgY29ubmV4aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9jb25uZWN0aW9uLmppbmphMjoxMQptc2dpZCAiQXV0by1jb25uZWN0IG9uIHNlcnZlciBzdGFydHVwIgptc2dzdHIgIkNvbm5leGlvbiBhdXRvbWF0aXF1ZSBhdSByZWTDqW1hcnJhZ2UgZHUgc2VydmV1ciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvY29ubmVjdGlvbl9oZWFkZXIuamluamEyOjIKbXNnaWQgIlJlZnJlc2ggY29ubmVjdGlvbiBvcHRpb25zIgptc2dzdHIgIkFjdHVhbGlzZXIgbGVzIG9wdGlvbnMgZGUgY29ubmV4aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6OQptc2dpZCAiQmFjayIKbXNnc3RyICJSZXRvdXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjoxMAptc2dpZCAiQ3VycmVudGx5IGluIgptc2dzdHIgIkFjdHVlbGxlbWVudCBkYW5zIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlcy5qaW5qYTI6MTgKbXNnaWQgIkFkZGl0aW9uYWwgZGF0YSIKbXNnc3RyICJJbmZvcm1hdGlvbiBzdXBwbMOpbWVudGFpcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjoyMCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjozNSBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo0OAptc2dpZCAiSW50ZXJuYWwiCm1zZ3N0ciAiSW50ZXJuZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXMuamluamEyOjIxIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXMuamluamEyOjM2IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjYKbXNnaWQgIlVwbG9hZGVkIgptc2dzdHIgIlTDqWzDqXZlcnPDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXMuamluamEyOjI4Cm1zZ2lkICJMb2FkIgptc2dzdHIgIkNoYXJnZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjoyOQptc2dpZCAiTG9hZCBhbmQgUHJpbnQiCm1zZ3N0ciAiQ2hhcmdlciBldCBpbXByaW1lciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXMuamluamEyOjU3Cm1zZ2lkICJGcmVlIgptc2dzdHIgIkRpc3BvbmlibGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo1Nwptc2dpZCAiVG90YWwiCm1zZ3N0ciAiVG90YWwiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo2Mgptc2dpZCAiQ3JlYXRlIGZvbGRlci4uLiIKbXNnc3RyICJDcsOpZXIgbGUgZG9zc2llciAuLi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzLmppbmphMjo5MAptc2dpZCAiSGludDogWW91IGNhbiBhbHNvIGRyYWcgYW5kIGRyb3AgZmlsZXMgb24gdGhpcyBwYWdlIHRvIHVwbG9hZCB0aGVtLiIKbXNnc3RyICJBc3R1Y2UgOiBWb3VzIHBvdXZleiDDqWdhbGVtZW50IGZhaXJlIHVuIGdsaXNzZXIvZMOpcG9zZXIgZGVzIGZpY2hpZXJzIHN1ciBsYSBwYWdlIHBvdXIgbGVzIHTDqWzDqWNoYXJnZXIuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlc19oZWFkZXIuamluamEyOjIKbXNnaWQgIkZpbGUgbGlzdCBzZXR0aW5ncyIKbXNnc3RyICJQYXJhbcOodHJlcyBkZSBsYSBsaXN0ZSBkZSBmaWNoaWVycyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXNfaGVhZGVyLmppbmphMjo2Cm1zZ2lkICJBcHBseSBmaWx0ZXJzIHRvIHNlYXJjaCByZXN1bHRzIgptc2dzdHIgIkFwcGxpcXVlciBkZXMgZmlsdHJlcyBhdXggcsOpc3VsdGF0cyBkZSByZWNoZXJjaGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6OQptc2dpZCAiU29ydCBieSB1cGxvYWQgZGF0ZSIKbXNnc3RyICJUcmllciBwYXIgZGF0ZSBkZSB0w6lsw6l2ZXJzZW1lbnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MTAKbXNnaWQgIlNvcnQgYnkgZGF0ZSBvZiBsYXN0IHByaW50Igptc2dzdHIgIlRyaWVyIHBhciBkYXRlIGRlIGRlcm5pw6hyZSBpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlc19oZWFkZXIuamluamEyOjE1Cm1zZ2lkICJTb3J0IGJ5IEZvbGRlcnMsIEZpbGVzIgptc2dzdHIgIlRyaWVyIHBhciBkb3NzaWVycyBwdWlzIGZpY2hpZXJzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlc19oZWFkZXIuamluamEyOjE2Cm1zZ2lkICJTb3J0IGJ5IEZpbGVzLCBGb2xkZXJzIgptc2dzdHIgIlRyaWVyIHBhciBmaWNoaWVycyBwdWlzIGRvc3NpZXJzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlc19oZWFkZXIuamluamEyOjE3Cm1zZ2lkICJNaXhlZCIKbXNnc3RyICJNw6lsYW5nw6kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MjgKbXNnaWQgIk9ubHkgc2hvdyBmaWxlcyBzdG9yZWQgbG9jYWxseSIKbXNnc3RyICJOZSBtb250cmVyIHF1ZSBsZXMgZmljaGllcnMgZW5yZWdpc3Ryw6lzIGxvY2FsZW1lbnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MjkKbXNnaWQgIk9ubHkgc2hvdyBmaWxlcyBzdG9yZWQgb24gU0QiCm1zZ3N0ciAiTmUgbW9udHJlciBxdWUgbGVzIGZpY2hpZXJzIGVucmVnaXN0csOpcyBzdXIgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6MzIKbXNnaWQgIkhpZGUgc3VjY2Vzc2Z1bGx5IHByaW50ZWQgZmlsZXMiCm1zZ3N0ciAiQ2FjaGVyIGxlcyBmaWNoaWVycyBpbXByaW3DqXMgYXZlYyBzdWNjw6hzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9maWxlc19oZWFkZXIuamluamEyOjM3Cm1zZ2lkICJSZWZyZXNoIGZpbGUgbGlzdCIKbXNnc3RyICJSYWZyYcOuY2hpciBsYSBsaXN0ZSBkZXMgZmljaGllcnMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6NDQKbXNnaWQgIlNEIENhcmQgb3BlcmF0aW9ucyIKbXNnc3RyICJPcMOpcmF0aW9ucyBzdXIgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6NDgKbXNnaWQgIkluaXRpYWxpemUgU0QgY2FyZCIKbXNnc3RyICJJbml0aWFsaXNlciBsYSBjYXJ0ZSBTRCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvZmlsZXNfaGVhZGVyLmppbmphMjo0OQptc2dpZCAiUmVmcmVzaCBTRCBmaWxlcyIKbXNnc3RyICJSYWZyYcOuY2hpciBsZXMgZmljaGllcnMgZGUgbGEgY2FydGUgU0QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL2ZpbGVzX2hlYWRlci5qaW5qYTI6NTAKbXNnaWQgIlJlbGVhc2UgU0QgY2FyZCIKbXNnc3RyICJMaWLDqXJlciBsYSBjYXJ0ZSBTRCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjEKbXNnaWQgIkN1cnJlbnQgcHJpbnRlciBzdGF0ZSIKbXNnc3RyICLDiXRhdCBkZSBsJ2ltcHJpbWFudGUgY291cmFudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjozCm1zZ2lkICJDb3VudCBvZiByZXNlbmQgcmVxdWVzdHMsIHRyYW5zbWl0dGVkIGxpbmVzIGFuZCByZXNlbmQgcmF0aW8iCm1zZ3N0ciAiQ29tcHRlIGRlcyBkZW1hbmRlcyBkZSByZW52b2ksIGRlcyBsaWduZXMgdHJhbnNtaXNlcyBldCBkdSB0YXV4IGRlIHJlbnZvaSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjMKbXNnaWQgIlJlc2VuZCByYXRpbyIKbXNnc3RyICJSZW52b3llciBsZSByYXRpbyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjMKbXNnaWQgInJlc2VuZCByZXF1ZXN0cyIKbXNnc3RyICJyZW52b3llciBsZXMgcmVxdcOqdGVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6Mwptc2dpZCAidHJhbnNtaXR0ZWQgbGluZXMiCm1zZ3N0ciAibGlnbmVzIHRyYW5zbWlzZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjozCm1zZ2lkICJyZXNlbmQgcmF0aW8iCm1zZ3N0ciAicmVudm95ZXIgbGEgcmF0aW8iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjo1Cm1zZ2lkICJOYW1lIG9mIGZpbGUgY3VycmVudGx5IHNlbGVjdGVkIGZvciBwcmludGluZyIKbXNnc3RyICJOb20gZHUgZmljaGllciBjb3VyYW50IHPDqWxlY3Rpb25uw6kgcG91ciBsJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjo1Cm1zZ2lkICJGaWxlIgptc2dzdHIgIkZpY2hpZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjo2Cm1zZ2lkICJVcGxvYWQgZGF0ZSBvZiB0aGUgZmlsZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3IgcHJpbnRpbmciCm1zZ3N0ciAiRGF0ZSBkZSB0w6lsw6ljaGFyZ2VtZW50IGR1IGZpY2hpZXIgc8OpbGVjdGlvbm7DqSBvdSBlbiBjb3VycyBkJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjo4Cm1zZ2lkICJVc2VyIHdobyBzZWxlY3RlZCB0aGlzIGZpbGUgZm9yIHByaW50aW5nIgptc2dzdHIgIlV0aWxpc2F0ZXVyIHF1aSBhIHPDqWxlY3Rpb25uw6kgY2UgZmljaGllciBwb3VyIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjExCm1zZ2lkICJDdXJyZW50IHRpbWVsYXBzZSBjb25maWd1cmF0aW9uIgptc2dzdHIgIkNvbmZpZ3VyYXRpb24gYWN0dWVsbGUgZHUgVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6MTYKbXNnaWQgIkVzdGltYXRlZCB0b3RhbCBwcmludCB0aW1lIGJhc2VkIG9uIGFuYWx5c2lzIG9mIHRoZSBmaWxlIG9yIHBhc3QgcHJpbnRzIgptc2dzdHIgIlRlbXBzIGQnaW1wcmVzc2lvbiB0b3RhbCBlc3RpbcOpIGJhc8OpIHN1ciBsJ2FuYWx5c2UgZHUgZmljaGllciBvdSBkZXMgaW1wcmVzc2lvbnMgYW50w6lyaWV1cmVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6MTYKbXNnaWQgIkFwcHJveC4gVG90YWwgUHJpbnQgVGltZSIKbXNnc3RyICJUZW1wcyB0b3RhbCBhcHByb3hpbWF0aWYiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjoxOAptc2dpZCAiVG90YWwgcHJpbnQgdGltZSBzbyBmYXIiCm1zZ3N0ciAiVGVtcHMgZCdpbXByZXNzaW9uIHRvdGFsIGp1c3F1J8OgIG1haW50ZW5hbnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjoxOAptc2dpZCAiUHJpbnQgVGltZSIKbXNnc3RyICJUZW1wcyBkJ2ltcHJlc3Npb24iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjoxOQptc2dpZCAiRXN0aW1hdGVkIHRpbWUgdW50aWwgdGhlIHByaW50IGpvYiBpcyBkb25lLiBUaGlzIGlzIG9ubHkgYW4gZXN0aW1hdGUgYW5kIGFjY3VyYWN5IGRlcGVuZHMgaGVhdmlseSBvbiB2YXJpb3VzIGZhY3RvcnMhIgptc2dzdHIgIlRlbXBzIGVzdGltw6kgYXZhbnQgbGEgZmluIGR1IHRyYXZhaWwuIEMnZXN0IHNldWxlbWVudCB1biB0ZW1wcyBlc3RpbcOpLCBsYSBwcsOpY2lzaW9uIHZhcmllIHN1aXZhbnQgYmVhdWNvdXAgZGUgZmFjdGV1cnMgISIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjE5Cm1zZ2lkICJQcmludCBUaW1lIExlZnQiCm1zZ3N0ciAiVGVtcHMgcmVzdGFudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjIwCm1zZ2lkICJCeXRlcyBwcmludGVkIHZzIHRvdGFsIGJ5dGVzIG9mIGZpbGUiCm1zZ3N0ciAiT2N0ZXRzIGltcHJpbcOpcyBzdXIgbGUgbm9tYnJlIHRvdGFsIGQnb2N0ZXRzIGR1IGZpY2hpZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjoyMAptc2dpZCAiUHJpbnRlZCIKbXNnc3RyICJJbXByaW3DqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NpZGViYXIvc3RhdGUuamluamEyOjI5Cm1zZ2lkICJSZXN0YXJ0Igptc2dzdHIgIlJlZMOpbWFycmVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6MjkKbXNnaWQgIlByaW50Igptc2dzdHIgIkltcHJpbWVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc2lkZWJhci9zdGF0ZS5qaW5qYTI6MzAKbXNnaWQgIlJlc3VtZSIKbXNnc3RyICJSZXByZW5kcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zaWRlYmFyL3N0YXRlLmppbmphMjozMQptc2dpZCAiQ2FuY2VscyB0aGUgcHJpbnQgam9iIgptc2dzdHIgIkFycsOqdGVyIGwnaW1wcmVzc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvZ3JvdXBfbGlzdC5qaW5qYTI6Ngptc2dpZCAiRml4ZWQgZ3JvdXBzIGNhbid0IGJlIGFkZGVkIG9yIHJlbW92ZWQgdG8gdXNlcnMuIgptc2dzdHIgIkxlcyBncm91cGVzIGZpeGVzIG5lIHBldXZlbnQgcGFzIMOqdHJlIGFqb3V0w6lzIG91IHN1cHByaW3DqXMgYXV4IHV0aWxpc2F0ZXVycy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3VwX2xpc3QuamluamEyOjYgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9zdWJncm91cF9saXN0LmppbmphMjo4Cm1zZ2lkICJGaXhlZCIKbXNnc3RyICJGaXjDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvZ3JvdXBzLmppbmphMjoxMgptc2dpZCAiRGVmYXVsdCBncm91cCIKbXNnc3RyICJHcm91cGUgcGFyIGTDqWZhdXQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6MjAgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjYzIHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjIwCm1zZ2lkICJQZXJtaXNzaW9ucyIKbXNnc3RyICJBdXRvcmlzYXRpb25zIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjI0IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvZ3JvdXBzLmppbmphMjo2Ngptc2dpZCAiU3ViZ3JvdXBzIgptc2dzdHIgIlNvdXMtZ3JvdXBlcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvZ3JvdXBzLmppbmphMjozMAptc2dpZCAiVXBkYXRlIGdyb3VwIgptc2dzdHIgIk1pc2Ugw6Agam91ciBkdSBncm91cGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6MzAKbXNnaWQgIkRlbGV0ZSBncm91cCIKbXNnc3RyICJTdXBwcmltZXIgbGUgZ3JvdXBlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjQ3Cm1zZ2lkICJBZGQgZ3JvdXAuLi4iCm1zZ3N0ciAiQWpvdXRlciB1biBncm91cGUuLi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6NzkKbXNnaWQgIkRlc2NyaXB0aW9uIgptc2dzdHIgIkRlc2NyaXB0aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC9ncm91cHMuamluamEyOjg3Cm1zZ2lkICJEZWZhdWx0Igptc2dzdHIgIkTDqWZhdXQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL2dyb3Vwcy5qaW5qYTI6ODkKbXNnaWQgIk1hcmtpbmcgYSBncm91cCBhcyBkZWZhdWx0IHdpbGwgbWFrZSBpdCBnZXQgcHJlIHNlbGVjdGVkIHdoZW4gY3JlYXRpbmcgbmV3IHVzZXJzLiIKbXNnc3RyICJTaSB2b3VzIG1hcnF1ZXogdW4gZ3JvdXBlIHBhciBkw6lmYXV0LCBpbCBzZXJhIHByw6lzw6lsZWN0aW9ubsOpIGxvcnMgZGUgbGEgY3LDqWF0aW9uIGRlIG5vdXZlYXV4IHV0aWxpc2F0ZXVycy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3Blcm1pc3Npb25fbGlzdC5qaW5qYTI6OAptc2dpZCAiUGx1Z2luIgptc2dzdHIgIkV4dGVuc2lvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvcGVybWlzc2lvbl9saXN0LmppbmphMjo4IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvc3ViZ3JvdXBfbGlzdC5qaW5qYTI6OAptc2dpZCAiRGFuZ2Vyb3VzIgptc2dzdHIgIkRhbmdlcmV1eCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvc3ViZ3JvdXBfbGlzdC5qaW5qYTI6OAptc2dpZCAiRml4ZWQgZ3JvdXBzIGNhbid0IGJlIGFkZGVkIG9yIHJlbW92ZWQgdG8gb3RoZXIgZ3JvdXBzLiIKbXNnc3RyICJMZXMgZ3JvdXBlcyBmaXhlcyBuZSBwZXV2ZW50IHBhcyDDqnRyZSBham91dMOpcyBvdSBzdXBwcmltw6lzIMOgIGQnYXV0cmVzIGdyb3VwZXMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9hY2Nlc3Njb250cm9sL3VzZXJzLmppbmphMjoxMDQKbXNnaWQgIkFjdGl2ZSIKbXNnc3RyICJBY3RpZiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjMxCm1zZ2lkICJVcGRhdGUgVXNlciIKbXNnc3RyICJNZXR0cmUgw6Agam91ciBsJ3V0aWxpc2F0ZXVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MzEKbXNnaWQgIkNoYW5nZSBwYXNzd29yZCIKbXNnc3RyICJDaGFuZ2VyIGxlIG1vdCBkZSBwYXNzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL2FjY2Vzc2NvbnRyb2wvdXNlcnMuamluamEyOjMxCm1zZ2lkICJEZWxldGUgdXNlciIKbXNnc3RyICJTdXBwcmltZXIgbOKAmXV0aWxpc2F0ZXVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NDgKbXNnaWQgIkFkZCB1c2VyLi4uIgptc2dzdHIgIkFqb3V0ZXIgdW4gdXRpbGlzYXRldXIgLi4uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6NzYKbXNnaWQgIkFkZGl0aW9uYWwgcGVybWlzc2lvbnMiCm1zZ3N0ciAiQXV0b3Jpc2F0aW9ucyBzdXBwbMOpbWVudGFpcmVzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvYWNjZXNzY29udHJvbC91c2Vycy5qaW5qYTI6MTM2CiMsIHB5dGhvbi1mb3JtYXQKbXNnaWQgIkNoYW5nZSBwYXNzd29yZCBmb3IgdXNlciBcIiUodXNlcilzXCIiCm1zZ3N0ciAiQ2hhbmdlciBsZSBtb3QgZGUgcGFzc2UgcG91ciBsJ3V0aWxpc2F0ZXVyIFwiJSh1c2VyKXNcIiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQXhlcy5qaW5qYTI6NAptc2dpZCAiUGxlYXNlIGRlZmluZSB0aGUgbWF4aW11bSBzcGVlZC9mZWVkcmF0ZSBvZiB0aGUgaW5kaXZpZHVhbCBheGVzIGFuZCB3aGV0aGVyIHRoZWlyIGNvbnRyb2wgc2hvdWxkIGJlIGludmVydGVkIG9yIG5vdC4iCm1zZ3N0ciAiVmV1aWxsZXogZMOpZmluaXIgbGEgdml0ZXNzZSAvIGF2YW5jZSBtYXhpbWFsZSBkZXMgZGlmZsOpcmVudHMgYXhlcyBldCBpbmRpcXVlciBzaSBsZXVyIGNvbW1hbmRlIGRvaXQgw6p0cmUgaW52ZXJzw6llIG91IG5vbi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjgKbXNnaWQgIlgiCm1zZ3N0ciAiWCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQXhlcy5qaW5qYTI6MTUgc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JBeGVzLmppbmphMjoyNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjM5Cm1zZ2lkICJJbnZlcnQgY29udHJvbCIKbXNnc3RyICJJbnZlcnNlciBsZSBjb250csO0bGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjIwCm1zZ2lkICJZIgptc2dzdHIgIlkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjMyCm1zZ2lkICJaIgptc2dzdHIgIloiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjQ0Cm1zZ2lkICJFIgptc2dzdHIgIkUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckF4ZXMuamluamEyOjU0Cm1zZ2lkICJUaGlzIGluZm9ybWF0aW9uIGlzIHVzZWQgZm9yIG1hbnVhbCBjb250cm9sIHZpYSB0aGUgXCJDb250cm9sXCIgdGFiLiIKbXNnc3RyICJDZXR0ZSBpbmZvcm1hdGlvbiBlc3QgdXRpbGlzw6llIHBvdXIgbGUgY29udHLDtGxlIG1hbnVlbCB2aWEgbCdvbmdsZXQgXCJDb250csO0bGVcIi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjozCm1zZ2lkICJGb3JtIEZhY3RvciIKbXNnc3RyICJGb3JtZSBkdSBwbGF0ZWF1IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JCdWlsZHZvbHVtZS5qaW5qYTI6NQptc2dpZCAiUmVjdGFuZ3VsYXIiCm1zZ3N0ciAiUmVjdGFuZ3VsYWlyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQnVpbGR2b2x1bWUuamluamEyOjgKbXNnaWQgIkNpcmN1bGFyIgptc2dzdHIgIkNpcmN1bGFpcmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjoxMwptc2dpZCAiT3JpZ2luIgptc2dzdHIgIk9yaWdpbmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjoyMQptc2dpZCAiSGVhdGVkIEJlZCIKbXNnc3RyICJQbGF0ZWF1IGNoYXVmZmFudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQnVpbGR2b2x1bWUuamluamEyOjI3Cm1zZ2lkICJIZWF0ZWQgQ2hhbWJlciIKbXNnc3RyICJDaGFtYnJlIGNoYXVmZsOpZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQnVpbGR2b2x1bWUuamluamEyOjM1Cm1zZ2lkICJQbGVhc2UgZGVmaW5lIHRoZSBwcmludCB2b2x1bWUuIgptc2dzdHIgIk1lcmNpIGRlIGTDqWZpbmlyIGxlIHZvbHVtZSBkJ2ltcHJlc3Npb24uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JCdWlsZHZvbHVtZS5qaW5qYTI6NDEKbXNnaWQgIldpZHRoIChYKSIKbXNnc3RyICJMYXJnZXVyIChYKSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQnVpbGR2b2x1bWUuamluamEyOjUwCm1zZ2lkICJEZXB0aCAoWSkiCm1zZ3N0ciAiUHJvZm9uZGV1ciAoWSkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjo2MQptc2dpZCAiRGlhbWV0ZXIgKFgvWSkiCm1zZ3N0ciAiRGlhbcOodHJlIChYL1kpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JCdWlsZHZvbHVtZS5qaW5qYTI6NzEKbXNnaWQgIkhlaWdodCAoWikiCm1zZ3N0ciAiSGF1dGV1ciAoWikiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjo4MQptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICBJZiB5b3VyIHByaW50ZXIncyBwcmludCBoZWFkIG1heSBtb3ZlIHNsaWdodGx5IG91dHNpZGUgdGhlIHByaW50IHZvbHVtZSAoZS5nLiBmb3Igbm96emxlIGNsZWFuaW5nIHJvdXRpbmVzKVxuIgoiICAgICAgICAgICAgeW91IGNhbiBkZWZpbmUgYSBjdXN0b20gc2FmZSBib3VuZGluZyBib3ggZm9yIGl0cyBtb3ZlbWVudHMgYmVsb3cuXG4iCiIgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIlNpIGxhIHTDqnRlIGQnaW1wcmVzc2lvbiBkZSB2b3RyZSBpbXByaW1hbnRlIHBldXQgc2UgZMOpcGxhY2VyIGzDqWfDqHJlbWVudCBlbiBkZWhvcnMgZHUgdm9sdW1lIGQnaW1wcmVzc2lvbiAocGFyIGV4ZW1wbGUgcG91ciBsZXMgcm91dGluZXMgZGUgbmV0dG95YWdlIGRlcyBidXNlcyksIHZvdXMgcG91dmV6IGTDqWZpbmlyIHVuZSBib8OudGUgZGUgc8OpY3VyaXTDqSBwZXJzb25uYWxpc8OpZSBwb3VyIHNlcyBkw6lwbGFjZW1lbnRzIGNpLWRlc3NvdXMuXG4iCiIgICAgICAgICIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlRWRpdG9yQnVpbGR2b2x1bWUuamluamEyOjg4Cm1zZ2lkICJDdXN0b20gYm91bmRpbmcgYm94Igptc2dzdHIgIlBlcnNvbm5hbGlzYXRpb24gZGUgbGEgem9uZSBkZSBkw6lsaW1pdGF0aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JCdWlsZHZvbHVtZS5qaW5qYTI6OTUKbXNnaWQgIlggQ29vcmRpbmF0ZXMiCm1zZ3N0ciAiQ29vcmRvbm7DqWVzIFgiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjoxMDgKbXNnaWQgIlkgQ29vcmRpbmF0ZXMiCm1zZ3N0ciAiQ29vcmRvbm7DqWVzIFkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjoxMjEKbXNnaWQgIlogQ29vcmRpbmF0ZXMiCm1zZ3N0ciAiQ29vcmRvbm7DqWVzIFoiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckJ1aWxkdm9sdW1lLmppbmphMjoxMzYKbXNnaWQgIlRoaXMgaW5mb3JtYXRpb24gaXMgdXNlZCBmb3IgdGhlIHRlbXBlcmF0dXJlIHRhYiwgdGhlIGJvdW5kaW5nIGJveCBjaGVjaywgdGhlIEdDT0RFIFZpZXdlciBhbmQvb3Igd2hlbiBzbGljaW5nIGZyb20gT2N0b1ByaW50LiIKbXNnc3RyICJDZXMgaW5mb3JtYXRpb25zIHNvbnQgdXRpbGlzw6llcyBwb3VyIGwnb25nbGV0IFRlbXDDqXJhdHVyZSwgbGEgY2FzZSDDoCBjb2NoZXIsIGxlIFZpc3VhbGlzZXVyIEctY29kZSBldC9vdSBsb3JzIGR1IGTDqWNvdXBhZ2Ugw6AgcGFydGlyIGRlIE9jdG9QcmludC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckV4dHJ1ZGVyLmppbmphMjo0Cm1zZ2lkICJOb3p6bGUgRGlhbWV0ZXIiCm1zZ3N0ciAiRGlhbcOodHJlIGRlIGxhIGJ1c2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckV4dHJ1ZGVyLmppbmphMjoxMwptc2dpZCAiTnVtYmVyIG9mIEV4dHJ1ZGVycyIKbXNnc3RyICJOb21icmUgZCdleHRydWRldXJzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JFeHRydWRlci5qaW5qYTI6MTYKbXNnaWQgIk1ha2Ugc3VyZSB0byBzcGVjaWZ5IG51bWJlciBvZiBleHRydWRlcnMgYXZhaWxhYmxlIG9uIHlvdXIgcHJpbnRlciBvciB5b3UgbWlnaHQgcnVuIGludG8gaXNzdWVzIgptc2dzdHIgIkFzc3VyZXotdm91cyBkZSByZW5zZWlnbmVyIGxlIG5vbWJyZSBkJ2V4dHJ1ZGV1c2VzIGRpc3BvbmlibGVzIHN1ciB2b3RyZSBpbXByaW1hbnRlLCBzaW5vbiB2b3VzIHBvdXJyaWV6IHJlbmNvbnRyZXIgZGVzIHByb2Jsw6htZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckV4dHJ1ZGVyLmppbmphMjoyMQptc2dpZCAiU2hhcmVkIG5venpsZSIKbXNnc3RyICJCdXNlIGNvbW11bmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckV4dHJ1ZGVyLmppbmphMjoyNAptc2dpZCAiQ2hlY2sgdGhpcyBpZiB5b3VyIHByaW50ZXIgaGFzIGEgc2luZ2xlIG5venpsZSBhbmQgaGVhdGVyIHNoYXJlZCBhbW9uZyBpdHMgZXh0cnVkZXJzIGluc3RlYWQgb2Ygb25lIG5venpsZSBhbmQgaGVhdGVyIHBlciBleHRydWRlciIKbXNnc3RyICJDb2NoZXogY2V0dGUgY2FzZSBzaSB2b3RyZSBpbXByaW1hbnRlIG5lIHBvc3PDqGRlIHF1J3VuZSBzZXVsZSBidXNlIGV0IHVuIHNldWwgcsOpY2hhdWZmZXVyIHBvdXIgcGx1c2lldXJzIGV4dHJ1ZGV1c2VzIGF1IGxpZXUgZCd1bmUgYnVzZSBldCBkJ3VuIHNldWwgcsOpY2hhdWZmZXVyIHBhciBleHRydWRldXNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JFeHRydWRlci5qaW5qYTI6MzEKbXNnaWQgIlBsZWFzZSBzcGVjaWZ5IHRoZSBub3p6bGUgb2Zmc2V0cyBvZiB0aGUgZXh0cnVkZXJzIHJlbGF0aXZlIHRvIHRoZSBmaXJzdCBub3p6bGUgVDAgPHN0cm9uZz5pZiB5b3UgaGF2ZW4ndCBhbHJlYWR5IGRvbmUgc28gaW4geW91ciBmaXJtd2FyZTwvc3Ryb25nPi4gT3RoZXJ3aXNlIGxlYXZlIHRoZW0gYXQgKDAsMCkuIgptc2dzdHIgIlZldWlsbGV6IHNww6ljaWZpZXIgbGUgZMOpY2FsYWdlIGRlIGxhIChkZXMpIGJ1c2UocykgZGUgbCcgKGRlcykgZXh0cnVkZXVzZShzKSBwYXIgcmFwcG9ydCDDoCBsYSBwcmVtacOocmUgYnVzZSBUMCA8c3Ryb25nPnNpIHZvdXMgbmUgbCdhdmV6IHBhcyBkw6lqw6AgZmFpdCBkYW5zIHZvdHJlIGZpcm13YXJlPC9zdHJvbmc+LiBTaW5vbiwgbGFpc3Nlei1sYSAobGVzKSDDoCAoMCwwKS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZUVkaXRvckV4dHJ1ZGVyLmppbmphMjozNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoyOQptc2dpZCAiT2Zmc2V0Igptc2dzdHIgIkTDqWNhbGFnZSBkZSBsYSBidXNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JFeHRydWRlci5qaW5qYTI6NTYKbXNnaWQgIlRoaXMgaW5mb3JtYXRpb24gaXMgdXNlZCBmb3IgdGhlIGdyYXBoIGFuZCBjb250cm9scyBhdmFpbGFibGUgaW4gdGhlIFwiVGVtcGVyYXR1cmVcIiB0YWIsIHRoZSBHQ09ERSB2aWV3ZXIsIHdoZW4gc2xpY2luZyBmcm9tIHdpdGhpbiBPY3RvUHJpbnQgYW5kIGZvciBkZWNpZGluZyB3aGljaCB0b29sY2hhbmdlIGNvbW1hbmRzIGFyZSBzYWZlIHRvIHNlbmQgdG8gdGhlIHByaW50ZXIuIgptc2dzdHIgIkNlcyBpbmZvcm1hdGlvbnMgc29udCB1dGlsaXPDqWVzIHBvdXIgbGUgZ3JhcGhpcXVlIGV0IGxlcyBjb250csO0bGVzIGRpc3BvbmlibGVzIGRhbnMgbCdvbmdsZXQgXCJUZW1ww6lyYXR1cmVcIiBldCBcIlZpc3VhbGlzZXVyIGR1IEctY29kZVwiLCBsb3JzIGR1IGTDqWNvdXBhZ2UgZGVwdWlzIE9jdG9QcmludCBldCBwb3VyIGTDqWNpZGVyIGRlcyBjb21tYW5kZXMgZGUgY2hhbmdlbWVudCBkJ291dGlscyBwb3V2YW50IMOqdHJlIGVudm95w6llcyBzYW5zIHJpc3F1ZSDDoCBsJ2ltcHJpbWFudGUuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JHZW5lcmFsLmppbmphMjo2Cm1zZ2lkICJOYW1lIG11c3QgYmUgc2V0Igptc2dzdHIgIkxlIG5vbSBkb2l0IMOqdHJlIHBhcmFtw6l0csOpIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3MvcHJpbnRlcnByb2ZpbGVzL3Byb2ZpbGVFZGl0b3JHZW5lcmFsLmppbmphMjoxNyBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZXMuamluamEyOjUKbXNnaWQgIk1vZGVsIgptc2dzdHIgIk1vZMOobGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZXMuamluamEyOjE0Cm1zZ2lkICJTZXQgYXMgZGVmYXVsdCBwcm9maWxlIgptc2dzdHIgIkV0YWJsaXIgY29tbWUgcHJvZmlsZSBwYXIgZMOpZmF1dCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3ByaW50ZXJwcm9maWxlcy9wcm9maWxlcy5qaW5qYTI6MTQKbXNnaWQgIkVkaXQgUHJvZmlsZSIKbXNnc3RyICLDiWRpdGlvbiBkdSBwcm9maWwiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9wcmludGVycHJvZmlsZXMvcHJvZmlsZXMuamluamEyOjE0Cm1zZ2lkICJEZWxldGUgUHJvZmlsZSIKbXNnc3RyICJTdXBwcmltZXIgdW4gcHJvZmlsIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlckFsbG93RnJhbWluZy5qaW5qYTI6NAptc2dpZCAiQWxsb3cgZW1iZWRkaW5nIHRoZSB3ZWIgaW50ZXJmYWNlIGludG8gYSBmcmFtZSBvciBpZnJhbWUiCm1zZ3N0ciAiQXV0b3Jpc2VyIGwnaW50w6lncmF0aW9uIGRlIGwnaW50ZXJmYWNlIFdlYiBkYW5zIHVuIGNhZHJlIG91IHVuZSBiYWxpc2UgaWZyYW1lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlckNvbW1hbmRTZXJ2ZXJSZXN0YXJ0LmppbmphMjoxCm1zZ2lkICJDb21tYW5kIHRvIHJlc3RhcnQgdGhlIE9jdG9QcmludCBzZXJ2ZXIiCm1zZ3N0ciAiQ29tbWFuZGUgcG91ciByZWTDqW1hcnJlciBsZSBzZXJ2ZXVyIGRlIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJDb21tYW5kU3lzdGVtUmVzdGFydC5qaW5qYTI6MQptc2dpZCAiQ29tbWFuZCB0byByZXN0YXJ0IHRoZSBzeXN0ZW0gT2N0b1ByaW50IGlzIHJ1bm5pbmcgb24iCm1zZ3N0ciAiQ29tbWFuZGUgcG91ciByZWTDqW1hcnJlciBsZSBzeXN0w6htZSBzdXIgbGVxdWVsIE9jdG9QcmludCBmb25jdGlvbm5lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlckNvbW1hbmRTeXN0ZW1SZXN0YXJ0LmppbmphMjoyCm1zZ2lkICJSZXN0YXJ0IHN5c3RlbSIKbXNnc3RyICJSZWTDqW1hcnJlIGxlIHN5c3TDqG1lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlckNvbW1hbmRTeXN0ZW1TaHV0ZG93bi5qaW5qYTI6MQptc2dpZCAiQ29tbWFuZCB0byBzaHV0IGRvd24gdGhlIHN5c3RlbSBPY3RvUHJpbnQgaXMgcnVubmluZyBvbiIKbXNnc3RyICJDb21tYW5kZSBwb3VyIMOpdGVpbmRyZSBsZSBzeXN0w6htZSBzdXIgbGVxdWVsIE9jdG9QcmludCBmb25jdGlvbm5lIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlck9ubGluZUNoZWNrLmppbmphMjo2Cm1zZ2lkICIiCiJcbiIKIiAgICAgICAgICAgICAgICBEZWZpbmUgYSBjaGVjayBpbnRlcnZhbCwgYSBob3N0IGFuZCBhIHBvcnQgdG8gY2hlY2sgYWdhaW5zdC4gSWYgeW91IGRvbid0IGtub3cgd2hhdCB0byBzZXQgaGVyZSwgdGhlXG4iCiIgICAgICAgICAgICAgICAgZGVmYXVsdCB2YWx1ZXMgKHVzaW5nIENsb3VkZmxhcmUncyBETlMgc2VydmVyKSBzaG91bGQgd29yay4gSWYgeW91IGhhdmUgY29uY2VybnMgYWJvdXQgdXNpbmdcbiIKIiAgICAgICAgICAgICAgICB0aGF0LCBkZWZpbmUgdGhlIElQIGFuZCBwb3J0IG9mIGEgZGlmZmVyZW50IG9ubGluZSBzZXJ2ZXIgdGhhdCB5b3UgdHJ1c3QgYW5kIHRoYXQgaGFzIGEgaGlnaFxuIgoiICAgICAgICAgICAgICAgIGF2YWlsYWJpbGl0eS5cbiIKIiAgICAgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIiAgICAgICAgICAgICAgICBEw6lmaW5pc3NleiB1biBpbnRlcnZhbGxlIGRlIHbDqXJpZmljYXRpb24sIHVuIGjDtHRlIGV0IHVuIHBvcnQgw6AgdsOpcmlmaWVyLiBTaSB2b3VzIG5lIHNhdmV6IHBhcyBxdW9pIGTDqWZpbmlyIGljaSwgbGVzXG4iCiIgICAgICAgICAgICAgICAgdmFsZXVycyBwYXIgZMOpZmF1dCAodXRpbGlzYW50IGxlIHNlcnZldXIgRE5TIGRlIENsb3VkZmxhcmUpIGRldnJhaWVudCBmb25jdGlvbm5lci4gU2kgdm91cyBhdmV6IGRlcyBpbnF1acOpdHVkZXMgcXVhbnQgw6AgY2V0dGVcbiIKIiAgICAgICAgICAgICAgICB1dGlsaXNhdGlvbiwgZMOpZmluaXNzZXogbCdJUCBldCBsZSBwb3J0IGQndW4gYXV0cmUgc2VydmV1ciBlbiBsaWduZSBhdXF1ZWwgdm91cyBmYWl0ZXMgY29uZmlhbmNlIGV0IHF1aSBhIHVuZSBoYXV0ZVxuIgoiICAgICAgICAgICAgICAgIGRpc3BvbmliaWxpdMOpLlxuIgoiICAgICAgICAgICAgIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlck9ubGluZUNoZWNrLmppbmphMjoyMgptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICAgICAgSWYgeW91IGFsc28gd2FudCB0byBjaGVjayBpZiBuYW1lIHJlc29sdXRpb24gd29ya3MgKHN0cm9uZ2x5IHJlY29tbWVuZGVkKSwgZGVmaW5lIGEgaG9zdCBuYW1lXG4iCiIgICAgICAgICAgICAgICAgdG8gY2hlY2sgbmFtZSByZXNvbHV0aW9uIGFnYWluc3QuIElmIHlvdSBkb24ndCBrbm93IHdoYXQgdG8gc2V0IGhlcmUsIHRoZSBkZWZhdWx0IHZhbHVlXG4iCiIgICAgICAgICAgICAgICAgKE9jdG9QcmludCdzIGRvbWFpbikgc2hvdWxkIHdvcmsuIElmIHlvdSBkb24ndCB3YW50IHRvIHBlcmZvcm0gcmVndWxhciByZXNvbHV0aW9uIGNoZWNrcyBhbG9uZ1xuIgoiICAgICAgICAgICAgICAgIHNpZGUgd2l0aCB0aGUgZ2VuZXJhbCBjb25uZWN0aXZpdHkgY2hlY2ssIGxlYXZlIHRoZSBmaWVsZCBlbXB0eS5cbiIKIiAgICAgICAgICAgICIKbXNnc3RyICIiCiJcbiIKIlNpIHZvdXMgc291aGFpdGV6IMOpZ2FsZW1lbnQgdsOpcmlmaWVyIHNpIGxhIHLDqXNvbHV0aW9uIGRlIG5vbXMgZm9uY3Rpb25uZSAoZm9ydGVtZW50IHJlY29tbWFuZMOpKSwgZMOpZmluaXNzZXogdW4gbm9tIGQnaMO0dGUgcG91ciBjb21wYXJlciBsYSByw6lzb2x1dGlvbiBkZSBub21zLiBTaSB2b3VzIG5lIHNhdmV6IHBhcyBxdW9pIGTDqWZpbmlyIGljaSwgbGEgdmFsZXVyIHBhciBkw6lmYXV0IChkb21haW5lIGRlIE9jdG9QcmludCkgZGV2cmFpdCBmb25jdGlvbm5lci4gU2kgdm91cyBuZSBzb3VoYWl0ZXogcGFzIGVmZmVjdHVlciBkZSB2w6lyaWZpY2F0aW9ucyBkZSByw6lzb2x1dGlvbiByw6lndWxpw6hyZXMgcGFyYWxsw6hsZW1lbnQgw6AgbGEgdsOpcmlmaWNhdGlvbiBkZSBjb25uZWN0aXZpdMOpIGfDqW7DqXJhbGUsIGxhaXNzZXogbGUgY2hhbXAgdmlkZS5cbiIKIiAgICAgICAgICAgICIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja0Rlc2NyaXB0aW9uLmppbmphMjoxCm1zZ2lkICIiCiJcbiIKIiAgICBJZiB0aGUgY29ubmVjdGl2aXR5IGNoZWNrIGlzIGVuYWJsZWQsIE9jdG9QcmludCB3aWxsIHJlZ3VsYXJseSBjaGVjayBpZiBpdCdzIGNvbm5lY3RlZCB0byB0aGUgaW50ZXJuZXQuXG4iCiIgICAgVGhpcyBpcyA8c3Ryb25nPnVzZWZ1bCB0byBwcmV2ZW50IHJlc291cmNlIGludGVuc2l2ZSBvcGVyYXRpb25zPC9zdHJvbmc+IChzdWNoIGFzIGNoZWNraW5nIGZvciB1cGRhdGVzKSBpZiBpdCdzIGFscmVhZHlcbiIKIiAgICBjbGVhciB0aGF0IHRoZXkgd29uJ3Qgc3VjY2VlZCBhbnlob3cuXG4iCm1zZ3N0ciAiIgoiXG4iCiJTaSBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIGNvbm5lY3Rpdml0w6kgZXN0IGFjdGl2w6llLCBPY3RvUHJpbnQgdsOpcmlmaWVyYSByw6lndWxpw6hyZW1lbnQgcydpbCBlc3QgY29ubmVjdMOpIMOgIEludGVybmV0LlxuIgoiQ2VjaSBlc3QgPHN0cm9uZz51dGlsZSBwb3VyIMOpdml0ZXIgbGVzIG9ww6lyYXRpb25zIGdvdXJtYW5kZXMgZW4gcmVzc291cmNlcyA8L3N0cm9uZz4odGVsbGVzIHF1ZSBsYSByZWNoZXJjaGUgZGUgbWlzZXMgw6Agam91cikgcydpbCBlc3Qgw6l2aWRlbnQgcXUnZWxsZXMgbmUgcsOpdXNzaXJvbnQgcGFzIGRlIHRvdXRlIGZhw6dvbi5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja0VuYWJsZWQuamluamEyOjQKbXNnaWQgIkVuYWJsZSByZWd1bGFyIGNvbm5lY3Rpdml0eSBjaGVjayIKbXNnc3RyICJBY3RpdmVyIGxhIHbDqXJpZmljYXRpb24gZGUgY29ubmVjdGl2aXTDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja0hvc3QuamluamEyOjEKbXNnaWQgIkhvc3QgYWdhaW5zdCB3aGljaCB0byBjaGVjayBmb3IgaW50ZXJuZXQgY29ubmVjdGl2aXR5Igptc2dzdHIgIlNlcnZldXIgcXVpIHNlcnZpcmEgw6AgdsOpcmlmaWVyIGxhIGNvbm5lY3Rpb24gw6AgaW50ZXJuZXQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyT25saW5lQ2hlY2tIb3N0LmppbmphMjoyCm1zZ2lkICJIb3N0IElQIgptc2dzdHIgIklQIEjDtHRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlck9ubGluZUNoZWNrSW50ZXJ2YWwuamluamEyOjEKbXNnaWQgIkludGVydmFsIGluIHdoaWNoIHRvIGNoZWNrIGZvciBpbnRlcm5ldCBjb25uZWN0aXZpdHkiCm1zZ3N0ciAiSW50ZXJ2YWxsZSBxdWkgc2VydmlyYSDDoCB2w6lyaWZpZXIgbGEgY29ubmVjdGlvbiBpbnRlcm5ldCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja0ludGVydmFsLmppbmphMjoyCm1zZ2lkICJDaGVjayBpbnRlcnZhbCIKbXNnc3RyICJJbnRlcnZhbGxlIGRlIGNvbnRyw7RsZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja05hbWUuamluamEyOjEKbXNnaWQgIkhvc3RuYW1lIHRvIHRyeSB0byByZXNvbHZlIHRvIGNoZWNrIGZvciBpbnRlcm5ldCBjb25uZWN0aXZpdHkiCm1zZ3N0ciAiTm9tIGQnaMO0dGUgw6AgZXNzYXllciBkZSByw6lzb3VkcmUgcG91ciB2w6lyaWZpZXIgbGEgY29ubmVjdGl2aXTDqSBpbnRlcm5ldCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja05hbWUuamluamEyOjIKbXNnaWQgIkhvc3RuYW1lIgptc2dzdHIgIk5vbSBkJ2jDtHRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlck9ubGluZUNoZWNrUG9ydC5qaW5qYTI6MQptc2dpZCAiUG9ydCBhZ2FpbnN0IHdoaWNoIHRvIGNoZWNrIGZvciBpbnRlcm5ldCBjb25uZWN0aXZpdHkiCm1zZ3N0ciAiUG9ydCBxdWkgc2VydmlyYSDDoCB2w6lyaWZpZXIgbGEgY29ubmVjdGlvbiDDoCBpbnRlcm5ldCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja1BvcnQuamluamEyOjIKbXNnaWQgIlBvcnQiCm1zZ3N0ciAiUG9ydCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJPbmxpbmVDaGVja1Rlc3RDb25uZWN0aXZpdHkuamluamEyOjMKbXNnaWQgIlRlc3QgaG9zdCAmIHBvcnQiCm1zZ3N0ciAiVGVzdCBkZSBsJ0jDtHRlIGV0IGR1IFBvcnQiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyT25saW5lQ2hlY2tUZXN0UmVzb2x1dGlvbi5qaW5qYTI6Mwptc2dpZCAiVGVzdCBuYW1lIHJlc29sdXRpb24iCm1zZ3N0ciAiVGVzdCBkZSByw6lzb2x1dGlvbiBkZSBub21zIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlclBsdWdpbkJsYWNrbGlzdERlc2NyaXB0aW9uLmppbmphMjoxCm1zZ2lkICIiCiJcbiIKIiAgICA8c3Ryb25nPlRvIHByb3RlY3QgYWdhaW5zdCBrbm93biBzZXZlcmUgaXNzdWVzIHdpdGggY2VydGFpbiB2ZXJzaW9ucyBvZiB0aGlyZCBwYXJ0eSBwbHVnaW5zPC9zdHJvbmc+LCBPY3RvUHJpbnQgc3VwcG9ydHNcbiIKIiAgICB0aGUgdXNlIG9mIGEgY2VudHJhbGl6ZWQgcGx1Z2luIHZlcnNpb24gYmxhY2tsaXN0IHRvIGF1dG9tYXRpY2FsbHkgZGlzYWJsZSBzdWNoIHBsdWdpbnMgYmVmb3JlIHRoZXkgY2FuIGludGVyZmVyZVxuIgoiICAgIHdpdGggbm9ybWFsIG9wZXJhdGlvbi5cbiIKbXNnc3RyICIiCiJcbiIKIjxzdHJvbmc+UG91ciB2b3VzIHByb3TDqWdlciBkZSBzw6l2w6hyZXMgZmFpbGxlcyBjb25udWVzIGF2ZWMgY2VydGFpbmVzIGV4dGVuc2lvbnM8L3N0cm9uZz4sIE9jdG9QcmludCBzdXBwb3J0ZSB1bmUgTGlzdGUgTm9pcmUgY2VudHJhbGlzw6llIGQnZXh0ZW5zaW9ucyBhZmluIGRlIGxlcyBkw6lzYWN0aXZlciBhdXRvbWF0aXF1ZW1lbnQgYXZhbnQgcXVlIGNlcyB2ZXJzaW9ucyBuJ2ludGVyZsOocmVudCBhdmVjIGxlIGZvbmN0aW9ubmVtZW50IG5vcm1hbCBkZSB2b3RyZSBzeXN0w6htZS5cbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5CbGFja2xpc3RFbmFibGVkLmppbmphMjo0Cm1zZ2lkICJFbmFibGUgcGx1Z2luIGJsYWNrbGlzdCBwcm9jZXNzaW5nIG9uIHN0YXJ0dXAiCm1zZ3N0ciAiQWN0aXZlciBsYSBsaXN0ZSBub2lyZSBkZXMgZXh0ZW5zaW9ucyBhdSBkw6ltYXJyYWdlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlclBsdWdpbkJsYWNrbGlzdEVuYWJsZWQuamluamEyOjUKbXNnaWQgIkFueSBjaGFuZ2VzIHRha2UgZWZmZWN0IG9ubHkgb24gdGhlIG5leHQgc2VydmVyIHN0YXJ0LiIKbXNnc3RyICJUb3V0ZSBtb2RpZmljYXRpb24gbmUgcHJlbmQgZWZmZXQgcXUnYXUgcHJvY2hhaW4gZMOpbWFycmFnZSBkdSBzZXJ2ZXVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5CbGFja2xpc3RUdGwuamluamEyOjEKbXNnaWQgIkhvdyBsb25nIHRvIGNhY2hlIHRoZSBibGFja2xpc3QsIGluIG1pbnV0ZXMuIFlvdSBzaG91bGQgbm9ybWFsbHkgbm90IGhhdmUgdG8gY2hhbmdlIHRoaXMuIgptc2dzdHIgIkR1csOpZSBkZSBsYSBtaXNlIGVuIGNhY2hlIGRlIGxhIGxpc3RlIG5vaXJlLCBlbiBtaW51dGVzLiBWb3VzIG5lIGRldnJpZXogbm9ybWFsZW1lbnQgcGFzIGF2b2lyIMOgIGNoYW5nZXIgY2VsYS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyUGx1Z2luQmxhY2tsaXN0VHRsLmppbmphMjoyCm1zZ2lkICJCbGFja2xpc3QgY2FjaGUgVFRMIgptc2dzdHIgIkNhY2hlIFRUTCBkZSBsYSBsaXN0ZSBub2lyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5CbGFja2xpc3RVcmwuamluamEyOjEKbXNnaWQgIlBsdWdpbiBibGFja2xpc3QgVVJMLiBZb3Ugc2hvdWxkIG5vcm1hbGx5IG5vdCBoYXZlIHRvIGNoYW5nZSB0aGlzLiIKbXNnc3RyICJVUkwgZGUgbCdleHRlbnNpb24gTGlzdGUgTm9pcmUuIFZvdXMgbmUgZGV2cmlleiBwYXMgYXZvaXIgw6AgbW9kaWZpZXIgY2VsYS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy9zZXJ2ZXIvc2VydmVyUGx1Z2luQmxhY2tsaXN0VXJsLmppbmphMjoyCm1zZ2lkICJCbGFja2xpc3QgVVJMIgptc2dzdHIgIlVSTCBkZSBsYSBsaXN0ZSBub2lyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3NlcnZlci9zZXJ2ZXJQbHVnaW5UaW1pbmdzLmppbmphMjo0Cm1zZ2lkICJFbmFibGUgPGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+Igptc2dzdHIgIkFjdGl2ZXIgPGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvc2VydmVyL3NlcnZlclBsdWdpblRpbWluZ3MuamluamEyOjUKbXNnaWQgIldoaWxlIHRoaXMgY2FuIG5lZ2F0aXZlbHkgaW1wYWN0IHBlcmZvcm1hbmNlLCBhIDxjb2RlPnBsdWdpbnRpbWluZ3MubG9nPC9jb2RlPiBjYW4gYmUgaW5jcmVkaWJseSB1c2VmdWwgZm9yIGRlYnVnZ2luZyBhbnkgcGVyZm9ybWFuY2UgaXNzdWVzIG9ic2VydmVkIG91dHNpZGUgb2Ygc2FmZSBtb2RlLiIKbXNnc3RyICJCaWVuIHF1ZSBjZWxhIHB1aXNzZSBhdm9pciB1biBpbXBhY3QgbsOpZ2F0aWYgc3VyIGxlcyBwZXJmb3JtYW5jZXMsIGxlIGZpY2hpZXIgPGNvZGU+cGx1Z2ludGltaW5ncy5sb2c8L2NvZGU+IHBldXQgw6p0cmUgdHLDqHMgdXRpbGUgcG91ciBkZWJ1ZyB0b3VzIHByb2Jsw6htZXMgZGUgcGVyZm9ybWFuY2Ugb2JzZXJ2w6lzIGVuIGRlaG9ycyBkdSBtb2RlIHNhbnMgw6ljaGVjLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS9mZm1wZWdCaXRyYXRlLmppbmphMjoxCm1zZ2lkICJCaXRyYXRlIHRvIHVzZSBmb3IgZW5jb2RpbmcgdGhlIHRpbWVsYXBzZSB2aWRlbyIKbXNnc3RyICJEw6liaXQgZCdlbmNvZGFnZSB1dGlsaXPDqSBwb3VyIGxhIHZpZMOpbyBkdSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vZmZtcGVnQml0cmF0ZS5qaW5qYTI6Mgptc2dpZCAiVGltZWxhcHNlIGJpdHJhdGUiCm1zZ3N0ciAiRMOpYml0IGR1IFRpbWVsYXBzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS9mZm1wZWdDb21tYW5kbGluZS5qaW5qYTI6MQptc2dpZCAiRkZNUEVHIGNvbW1hbmQgbGluZSB0byB1c2UiCm1zZ3N0ciAiTGlnbmUgZGUgY29tbWFuZGUgRkZNUEVHIMOgIHV0aWxpc2VyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL2ZmbXBlZ0NvbW1hbmRsaW5lLmppbmphMjoyCm1zZ2lkICJGRk1QRUcgY29tbWFuZCBsaW5lIgptc2dzdHIgIkxpZ25lIGRlIGNvbW1hbmRlIEZGTVBFRyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS9mZm1wZWdDb21tYW5kbGluZS5qaW5qYTI6NQptc2dpZCAiIgoiXG4iCiIgICAgICAgICAgICBZb3UgY2FuIGFkanVzdCB0aGUgZnVsbCBGRk1QRUcgY29tbWFuZCBsaW5lIGhlcmUgdGhhdFxuIgoiICAgICAgICAgICAgaXMgdXNlZCB0byBnZW5lcmF0ZSB0aGUgdGltZWxhcHNlIHJlY29yZGluZ3MsIGUuZy4gdG8gYWRkIGFkZGl0aW9uYWwgY29tbWFuZCBsaW5lXG4iCiIgICAgICAgICAgICBwYXJhbWV0ZXJzIGFzIG5lZWRlZC4gU3VwcG9ydGVkIHBsYWNlaG9sZGVycyBhcmU6XG4iCiIgICAgICAgICAgICA8Y29kZT57ZmZtcGVnfTwvY29kZT4gKGNvbmZpZ3VyZWQgcGF0aCB0byBmZm1wZWcpLCA8Y29kZT57ZnBzfTwvY29kZT4gKGNvbmZpZ3VyZWQgZnJhbWVyYXRlKSxcbiIKIiAgICAgICAgICAgIDxjb2RlPntpbnB1dH08L2NvZGU+IChpbnB1dCBmaWxlcyksIDxjb2RlPnt2aWRlb2NvZGVjfTwvY29kZT4gKGNvbmZpZ3VyZWQgdmlkZW8gY29kZWMgdG8gdXNlKSxcbiIKIiAgICAgICAgICAgIDxjb2RlPnt0aHJlYWRzfTwvY29kZT4gKGNvbmZpZ3VyZWQgbnVtYmVyIG9mIHRocmVhZHMgdG8gdXNlKSwgPGNvZGU+e2JpdHJhdGV9PC9jb2RlPiAoY29uZmlndXJlZCBiaXRyYXRlIHRvIHVzZSksXG4iCiIgICAgICAgICAgICA8Y29kZT57Y29udGFpbmVyZm9ybWF0fTwvY29kZT4gKGNvbmZpZ3VyZWQgY29udGFpbmVyIGZvcm1hdCB0byB1c2UpLCA8Y29kZT57ZmlsdGVyc308L2NvZGU+IChmaWx0ZXIgY2hhaW4gZm9yIGZsaXAvcm90YXRlICYgd2F0ZXJtYXJrKSxcbiIKIiAgICAgICAgICAgIDxjb2RlPntvdXRwdXR9PC9jb2RlPiAob3V0cHV0IGZpbGUpLlxuIgoiICAgICAgICAiCm1zZ3N0ciAiIgoiXG4iCiJWb3VzIHBvdXZleiBhanVzdGVyIGljaSB0b3V0ZSBsYSBsaWduZSBkZSBjb21tYW5kZSBGRk1QRUcgcXVpIGVzdCB1dGlsaXPDqWUgcG91ciBnw6luw6lyZXIgbGVzIGVucmVnaXN0cmVtZW50cyBlbiB0ZW1wcyByw6llbCwgcGFyIGV4ZW1wbGUgcG91ciBham91dGVyIGRlcyBwYXJhbcOodHJlcyBkZSBsaWduZSBkZSBjb21tYW5kZSBzdXBwbMOpbWVudGFpcmVzIHNpIG7DqWNlc3NhaXJlLiBMZXMgY2FyYWN0w6hyZXMgZGUgcmVtcGxhY2VtZW50IHByaXMgZW4gY2hhcmdlIHNvbnQgbGVzIFxuIgoic3VpdmFudHMgOlxuIgoiPGNvZGU+e2ZmbXBlZ308L2NvZGU+IChjaGVtaW4gY29uZmlndXLDqSB2ZXJzIEZGTVBFRylcbiIKIjxjb2RlPntmcHN9PC9jb2RlPiAodGF1eCBkZSByYWZyYcOuY2hpc3NlbWVudCBjb25maWd1csOpKSxcbiIKIjxjb2RlPntpbnB1dH08L2NvZGU+IChmaWNoaWVycyBlbnRyYW50cylcbiIKIjxjb2RlPnt2aWRlb2NvZGVjfTwvY29kZT4gKGNvZGVjIHZpZMOpbyBjb25maWd1csOpIMOgIHV0aWxpc2VyKVxuIgoiPGNvZGU+e3RocmVhZHN9PC9jb2RlPiAobm9tYnJlIGRlIHRocmVhZHMgY29uZmlndXLDqXMgw6AgdXRpbGlzZXIpXG4iCiI8Y29kZT57Yml0cmF0ZX08L2NvZGU+IChkw6liaXQgYmluYWlyZSBjb25maWd1csOpIMOgIHV0aWxpc2VyKVxuIgoiPGNvZGU+e2NvbnRhaW5lcmZvcm1hdH08L2NvZGU+IChmb3JtYXQgZGUgY29udGVuZXVyIGNvbmZpZ3Vyw6kgw6AgdXRpbGlzZXIpXG4iCiI8Y29kZT57ZmlsdGVyc308L2NvZGU+IChjaGHDrm5lIGRlIGZpbHRyZXMgcG91ciBsZSBtaXJvaXIvcm90YXRpb24gZXQgbGUgZmlsaWdyYW5lKVxuIgoiPGNvZGU+e291dHB1dH08L2NvZGU+IChmaWNoaWVyIGRlIHNvcnRpZSkuICAgICAgICAiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vZmZtcGVnUGF0aC5qaW5qYTI6MQptc2dpZCAiRnVsbCBwYXRoIHRvIHRoZSBGRk1QRUcgYmluYXJ5Igptc2dzdHIgIkNoZW1pbiBjb21wbGV0IHZlcnMgbCdleMOpY3V0YWJsZSBGRk1QRUciCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vZmZtcGVnUGF0aC5qaW5qYTI6Mgptc2dpZCAiUGF0aCB0byBGRk1QRUciCm1zZ3N0ciAiQ2hlbWluIHZlcnMgRkZNUEVHIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL2ZmbXBlZ1RocmVhZHMuamluamEyOjEKbXNnaWQgIk51bWJlciBvZiBGRk1QRUcgZW5jb2RpbmcgdGhyZWFkcyIKbXNnc3RyICJOb21icmUgZGUgZmlscyBkJ2VuY29kYWdlIEZGTVBFRyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS9mZm1wZWdUaHJlYWRzLmppbmphMjoyCm1zZ2lkICJGRk1QRUcgdGhyZWFkcyIKbXNnc3RyICJJbnN0YW5jZXMgRkZNUEVHIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL2ZmbXBlZ1ZpZGVvQ29kZWMuamluamEyOjEKbXNnaWQgIlZpZGVvIGNvZGVjIHVzZWQgZm9yIGVuY29kaW5nIgptc2dzdHIgIkNvZGVjIHZpZMOpbyB1dGlsaXPDqSBwb3VyIGwnZW5jb2RhZ2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vZmZtcGVnVmlkZW9Db2RlYy5qaW5qYTI6Mgptc2dpZCAiVmlkZW8gY29kZWMiCm1zZ3N0ciAiQ29kZWMgdmlkw6lvIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3RpbWVsYXBzZUVuYWJsZWQuamluamEyOjQKbXNnaWQgIkVuYWJsZSB0aW1lbGFwc2Ugc3VwcG9ydCIKbXNnc3RyICJBY3RpdmVyIGxhIHByaXNlIGVuIGNoYXJnZSBkdSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2F0ZXJtYXJrLmppbmphMjo0Cm1zZ2lkICJFbmFibGUgT2N0b1ByaW50IHdhdGVybWFyayBpbiB0aW1lbGFwc2UgbW92aWVzIgptc2dzdHIgIkFjdGl2ZXIgbGUgZmlsaWdyYW5lIE9jdG9QcmludCBzdXIgbGVzIFRpbWVsYXBzZXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtQ2FjaGVCdXN0ZXIuamluamEyOjEKbXNnaWQgIkVuYWJsZSB0aGUgY2FjaGUgYnVzdGVyIG9uIHRoZSB3ZWJjYW0gVVJsIgptc2dzdHIgIkFjdGl2ZXIgbGUgY2FjaGUgYXNzb2Npw6kgw6AgbCdVUkwgZGUgbGEgd2ViY2FtIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3dlYmNhbUNhY2hlQnVzdGVyLmppbmphMjo1Cm1zZ2lkICJFbmFibGUgQ2FjaGUgYnVzdGVyIgptc2dzdHIgIkFjdGl2ZXIgbGUgYnJpc2V1ciBkZSBjYWNoZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1DYWNoZUJ1c3Rlci5qaW5qYTI6OAptc2dpZCAiVGhpcyBtYXkgY2F1c2UgdW5wcmVkaWN0YWJsZSBjYWNoaW5nIGJlaGF2aW91ci4gT25seSBkaXNhYmxlIGlmIHlvdXIgd2ViY2FtIHNlcnZlciBpcyBpbmNvbXBhdGlibGUgYW5kIGRvZXMgbm90IHdvcmsgaW4gT2N0b1ByaW50J3MgVUkiCm1zZ3N0ciAiQ2VsYSBwZXV0IGVudHJhw65uZXIgdW4gY29tcG9ydGVtZW50IGRlIG1pc2UgZW4gY2FjaGUgaW1wcsOpdmlzaWJsZS4gTmUgZMOpc2FjdGl2ZXogcXVlIHNpIHZvdHJlIHNlcnZldXIgZGUgd2ViY2FtIGVzdCBpbmNvbXBhdGlibGUgZXQgbmUgZm9uY3Rpb25uZSBwYXMgZGFucyBsJ2ludGVyZmFjZSB1dGlsaXNhdGV1ciBkJ09jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1FbmFibGVkLmppbmphMjo0Cm1zZ2lkICJFbmFibGUgd2ViY2FtIHN1cHBvcnQiCm1zZ3N0ciAiQWN0aXZlciBsZSBzdXBwb3J0IGRlIGxhIHdlYmNhbSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1PcmllbnRhdGlvbi5qaW5qYTI6NAptc2dpZCAiRmxpcCB3ZWJjYW0gaG9yaXpvbnRhbGx5Igptc2dzdHIgIlJldG91cm5lciBsYSB3ZWJjYW0gaG9yaXpvbnRhbGVtZW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3dlYmNhbU9yaWVudGF0aW9uLmppbmphMjo5Cm1zZ2lkICJGbGlwIHdlYmNhbSB2ZXJ0aWNhbGx5Igptc2dzdHIgIlJldG91cm5lciBsYSB3ZWJjYW0gdmVydGljYWxlbWVudCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1PcmllbnRhdGlvbi5qaW5qYTI6MTQKbXNnaWQgIlJvdGF0ZSB3ZWJjYW0gOTAgZGVncmVlcyBjb3VudGVyIGNsb2Nrd2lzZSIKbXNnc3RyICJUb3VybmVyIGxhIHdlYmNhbSBkZSA5MMKwIGRhbnMgbGUgc2VucyBkZXMgYWlndWlsbGVzIGQndW5lIG1vbnRyZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TbmFwc2hvdFNzbFZhbGlkYXRpb24uamluamEyOjQKbXNnaWQgIlZhbGlkYXRlIFNTTCBvbiBzbmFwc2hvdCBVUkwgKGlmIGFwcGxpY2FibGUpIgptc2dzdHIgIlZhbGlkZXIgU1NMIHN1ciBsJ1VSTCBkdSBTbmFwc2hvdCAobGUgY2FzIMOpY2jDqWFudCkiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU25hcHNob3RUaW1lb3V0LmppbmphMjoxCm1zZ2lkICJUaW1lb3V0IGZvciB0YWtpbmcgYSBzbmFwc2hvdCIKbXNnc3RyICJEw6lsYWkgZCdhdHRlbnRlIHBvdXIgcHJlbmRyZSB1biBTbmFwc2hvdCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TbmFwc2hvdFRpbWVvdXQuamluamEyOjIKbXNnaWQgIlNuYXBzaG90IHRpbWVvdXQiCm1zZ3N0ciAiRMOpbGFpcyBkJ2F0dGVudGUgZGUgbGEgY2FwdHVyZSBkJ2ltYWdlcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TbmFwc2hvdFVybC5qaW5qYTI6MQptc2dpZCAiVVJMIHRvIHVzZSBmb3IgcmV0cmlldmluZyB3ZWJjYW0gc25hcHNob3QgaW1hZ2VzIGZvciB0aW1lbGFwc2UgY3JlYXRpb24iCm1zZ3N0ciAiVVJMIMOgIHV0aWxpc2VyIHBvdXIgcsOpY3Vww6lyZXIgbGVzIFNuYXBzaG90cyBkZSBsYSB3ZWJjYW0gdXRpbGlzw6llcyBwb3VyIGxhIGNyw6lhdGlvbiBkdSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU25hcHNob3RVcmwuamluamEyOjIKbXNnaWQgIlNuYXBzaG90IFVSTCIKbXNnc3RyICJVUkwgZHUgU25hcHNob3QiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU25hcHNob3RVcmwuamluamEyOjgKbXNnaWQgIkZ1bGx5IHF1YWxpZmllZCBVUkwsIG5lZWRzIHRvIGJlIHJlYWNoYWJsZSBieSBPY3RvUHJpbnQncyBzZXJ2ZXIiCm1zZ3N0ciAiTCdVUkwgZW50acOocmUsIGRvaXQgw6p0cmUgam9pZ25hYmxlIHBhciBsZSBzZXJ2ZXVyIE9jdG9QcmludCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TdHJlYW1SYXRpby5qaW5qYTI6MQptc2dpZCAiQXNwZWN0IHJhdGlvIG9mIHRoZSB3ZWJjYW0gc3RyZWFtLCBlaXRoZXIgMTY6OSBvciA0OjMiCm1zZ3N0ciAiUmF0aW8gZCdhc3BlY3QgZHUgZmx1eCB2aWRlbyBkZSBsYSBXZWJjYW0sIDE2Ojkgb3UgNDozIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3dlYmNhbVN0cmVhbVJhdGlvLmppbmphMjoyCm1zZ2lkICJTdHJlYW0gYXNwZWN0IHJhdGlvIgptc2dzdHIgIlJhdGlvbiBkJ2FzcGVjdCBkdSBmbHV4IHZpZGVvIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3dlYmNhbVN0cmVhbVJhdGlvLmppbmphMjo1Cm1zZ2lkICJJZiB0aGUgc3RyZWFtIGhhcyBhIGRpZmZlcmVudCBhc3BlY3QgcmF0aW8gdGhhbiBjb25maWd1cmVkIGhlcmUgaXQgd2lsbCBiZSBsZXR0ZXJib3hlZC4iCm1zZ3N0ciAiU2kgbGUgZmx1eCB2aWRlbyBhIHVuIHJhdGlvIGQnYXNwZWN0IGRpZmbDqXJlbnQgZGUgY2VsdWkgY29uZmlndXLDqSBpY2ksIGlsIGFwcGFyYWl0cmEgYXZlYyBkZXMgbWFyZ2VzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TdHJlYW1UaW1lb3V0LmppbmphMjoxCm1zZ2lkICJUaW1lb3V0IGFmdGVyIHdoaWNoIHRvIHVubG9hZCB0aGUgc3RyZWFtIGlmIHRoZSBjb250cm9sIHRhYiBpcyBub3QgdmlzaWJsZSIKbXNnc3RyICJEw6lsYWkgZCdleHBpcmF0aW9uIGR1IGTDqWNoYXJnZW1lbnQgZHUgZmx1eCBzaSBsJ29uZ2xldCBkZSBjb250csO0bGUgbidlc3QgcGFzIHZpc2libGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU3RyZWFtVGltZW91dC5qaW5qYTI6Mgptc2dpZCAiU3RyZWFtIHRpbWVvdXQiCm1zZ3N0ciAiRMOpbGFpIGQnYXR0ZW50ZSBkZSBmbHV4IGTDqXBhc3PDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3NuaXBwZXRzL3NldHRpbmdzL3dlYmNhbS93ZWJjYW1TdHJlYW1VcmwuamluamEyOjEKbXNnaWQgIlVSTCB0byBlbWJlZCBpbnRvIHRoZSBVSSBmb3IgbGl2ZSB2aWV3aW5nIG9mIHRoZSB3ZWJjYW0gc3RyZWFtIgptc2dzdHIgIlVSTCDDoCBpbnTDqWdyZXIgZGFucyBsJ2ludGVyZmFjZSBwb3VyIGxlIHZpc2lvbm5lbWVudCBlbiBkaXJlY3QgZHUgZmx1eCBkZSBsYSB3ZWJjYW0iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy9zbmlwcGV0cy9zZXR0aW5ncy93ZWJjYW0vd2ViY2FtU3RyZWFtVXJsLmppbmphMjoyCm1zZ2lkICJTdHJlYW0gVVJMIgptc2dzdHIgIlVSTCBkZSBkaWZmdXNpb24gZW4gZGlyZWN0IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvc25pcHBldHMvc2V0dGluZ3Mvd2ViY2FtL3dlYmNhbVN0cmVhbVVybC5qaW5qYTI6OAptc2dpZCAiTmVlZHMgdG8gYmUgcmVhY2hhYmxlIGZyb20gdGhlIGJyb3dzZXIgZGlzcGxheWluZyB0aGUgT2N0b1ByaW50IFVJLCB1c2VkIHRvIGVtYmVkIHRoZSB3ZWJjYW0gc3RyZWFtIGludG8gdGhlIHBhZ2UuIgptc2dzdHIgIkRvaXQgw6p0cmUgYWNjZXNzaWJsZSBkZXB1aXMgbGUgbmF2aWdhdGV1ciBhZmZpY2hhbnQgbCdpbnRlcmZhY2UgdXRpbGlzYXRldXIgT2N0b1ByaW50LCB1dGlsaXPDqWUgcG91ciBpbnTDqWdyZXIgbGUgZmx1eCBkZSB3ZWJjYW0gZGFucyBsYSBwYWdlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6OQptc2dpZCAiV2ViY2FtIHN0cmVhbSBsb2FkaW5nLi4uIgptc2dzdHIgIkNoYXJnZW1lbnQgZHUgZmx1eCB2aWRlbyBkZSBsYSB3ZWJjYW0uLi4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEyCm1zZ2lkICJXZWJjYW0gc3RyZWFtIG5vdCBsb2FkZWQiCm1zZ3N0ciAiRmx1eCB2aWRlbyBkZSBsYSB3ZWJjYW0gbm9uIGNoYXJnw6kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEzCm1zZ2lkICJJdCBtaWdodCBub3QgYmUgY29uZmlndXJlZCBjb3JyZWN0bHkgb3IgcmVxdWlyZSBhdXRoZW50aWNhdGlvbi4gVG8gaGF2ZSB0aGlzIGZpeGVkLCBnZXQgaW4gdG91Y2ggd2l0aCBhbiBhZG1pbmlzdHJhdG9yIG9mIHRoaXMgT2N0b1ByaW50IGluc3RhbmNlLiIKbXNnc3RyICJJbCBwZXV0IG5lIHBhcyDDqnRyZSBjb25maWd1csOpIGNvcnJlY3RlbWVudCBvdSBuw6ljZXNzaXRlIHVuZSBhdXRoZW50aWZpY2F0aW9uLiBQb3VyIHLDqXNvdWRyZSBjZSBwcm9ibMOobWUsIGNvbnRhY3RleiB1biBhZG1pbmlzdHJhdGV1ciBkZSBjZXR0ZSBpbnN0YW5jZSBPY3RvUHJpbnQuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoxNAptc2dpZCAiSXQgbWlnaHQgbm90IGJlIGNvbmZpZ3VyZWQgY29ycmVjdGx5IG9yIHJlcXVpcmUgYXV0aGVudGljYXRpb24uIFlvdSBjYW4gY2hhbmdlIHRoZSBVUkwgb2YgdGhlIHN0cmVhbSB1bmRlciBcIlNldHRpbmdzXCIgPiBcIldlYmNhbSAmIFRpbWVsYXBzZVwiID4gXCJXZWJjYW1cIiA+IFwiU3RyZWFtIFVSTFwiLiBJZiB5b3UgZG9uJ3QgaGF2ZSBhIHdlYmNhbSB5b3UgY2FuIGFsc28ganVzdCBkaXNhYmxlIHdlYmNhbSBzdXBwb3J0IHRoZXJlLiIKbXNnc3RyICJJbCBzZSBwZXV0IHF1J2lsIG5lIHNvaXQgcGFzIGNvbmZpZ3Vyw6kgY29ycmVjdGVtZW50IG91IHF1J2lsIG7DqWNlc3NpdGUgdW5lIGF1dGhlbnRpZmljYXRpb24uIFZvdXMgcG91dmV6IGNoYW5nZXIgbCdVUkwgZHUgZmx1eCBzb3VzIFwiUGFyYW3DqHRyZXMgT2N0b1ByaW50XCIgPiBcIkZvbmN0aW9ubmFsaXTDqXNcIiA+IFdlYmNhbSAmIFRpbWVsYXBzZVwiID4gXCJXZWJjYW1cIiA+IFwiU3RyZWFtIFVSTFwiLiBTaSB2b3VzIG4nYXZleiBwYXMgZGUgd2ViY2FtLCB2b3VzIHBvdXZleiBzaW1wbGVtZW50IGTDqXNhY3RpdmVyIGxlIHN1cHBvcnQgZGUgbGEgd2ViY2FtLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6MTUKbXNnaWQgIkN1cnJlbnRseSBjb25maWd1cmVkIHN0cmVhbSBVUkwiCm1zZ3N0ciAiVXJsIGR1IGZsdXggYWN0dWVsbGVtZW50IGNvbmZpZ3Vyw6kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjI2Cm1zZ2lkICJLZXlib2FyZCBjb250cm9scyBhY3RpdmUiCm1zZ3N0ciAiQ29udHLDtGxlcyBjbGF2aWVyIGFjdGlmIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoyOQptc2dpZCAiWCBBeGlzIgptc2dzdHIgIkF4ZSBYIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozMAptc2dpZCAiWSBBeGlzIgptc2dzdHIgIkF4ZSBZIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozMQptc2dpZCAiUGFnZSZ1YXJyOyIKbXNnc3RyICJQYWdlJnVhcnI7IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozMQptc2dpZCAiUGFnZSZkYXJyOyIKbXNnc3RyICJQYWdlJmRhcnI7IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozMQptc2dpZCAiWiBBeGlzIgptc2dzdHIgIkF4ZSBaIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozNAptc2dpZCAiSG9tZSBYL1kiCm1zZ3N0ciAiT3JpZ2luZSBYL1kiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjM1Cm1zZ2lkICJIb21lIFoiCm1zZ3N0ciAiT3JpZ2luZSBaIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjozNgptc2dpZCAiU3RlcHNpemUiCm1zZ3N0ciAiUGFzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjo0Mgptc2dpZCAiSGludDogSWYgeW91IG1vdmUgeW91ciBtb3VzZSBvdmVyIHRoZSBwaWN0dXJlLCB5b3UgZW50ZXIga2V5Ym9hcmQgY29udHJvbCBtb2RlLiIKbXNnc3RyICJBc3R1Y2UgOiBTaSB2b3VzIGTDqXBsYWNleiB2b3RyZSBzb3VyaXMgc3VyIGwnaW1hZ2UsIHZvdXMgZW50cmV6IGRhbnMgbGUgbW9kZSBkZSBjb21tYW5kZSBhdSBjbGF2aWVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6ODgKbXNnaWQgIkZlZWQgcmF0ZSBtb2RpZmllcjoiCm1zZ3N0ciAiTW9kaWZpY2F0aW9uIGRlIGxhIHZpdGVzc2U6IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjo4OCBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjExNiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEyMQptc2dpZCAiUGxlYXNlIG5vdGUhIgptc2dzdHIgIlZldWlsbGV6IG5vdGVyICEiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjg4Cm1zZ2lkICJUaGUgZmVlZCByYXRlIGNhbiBvbmx5IGJlIHNldCwgaXQgY2Fubm90IGJlIHJlYWQgYmFjayBmcm9tIHRoZSBmaXJtd2FyZSBkdWUgdG8gYSBsaW1pdGF0aW9uIG9mIHRoZSBjb21tdW5pY2F0aW9uIHByb3RvY29sLiBUaGVyZSBpcyBubyB3YXkgdG8gc2hvdyB0aGUgY3VycmVudCBzZXR0aW5nLiIKbXNnc3RyICJMYSB2aXRlc3NlIGRcXCdhdmFuY2UgcGV1dCBzZXVsZW1lbnQgw6p0cmUgcsOpZ2zDqWUsIGVsbGUgbmUgcGV1dCBwYXMgw6p0cmUgbHVlIMOgIHBhcnRpciBkdSBmaXJtd2FyZSBlbiByYWlzb24gZFxcJ3VuZSBsaW1pdGF0aW9uIGR1IHByb3RvY29sZSBkZSBjb21tdW5pY2F0aW9uLiBJbCBuXFwneSBhIGF1Y3VuIG1veWVuIGRcXCdhZmZpY2hlciBsZSByw6lnbGFnZSBhY3R1ZWwuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoxMDQKbXNnaWQgIkV4dHJ1ZGUiCm1zZ3N0ciAiRXh0cnVkZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEwNQptc2dpZCAiUmV0cmFjdCIKbXNnc3RyICJSw6l0cmFjdGVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoxMDkKbXNnaWQgIlN3aXRjaCBUb29sLi4uIgptc2dzdHIgIkNoYW5nZXIgZCdvdXRpbC4uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6MTE2Cm1zZ2lkICJUaGUgc2VsZWN0ZWQgdG9vbCBjYW4gb25seSBiZSBzZXQsIGl0IGNhbm5vdCBiZSByZWFkIGJhY2sgZnJvbSB0aGUgZmlybXdhcmUgZHVlIHRvIGEgbGltaXRhdGlvbiBvZiB0aGUgY29tbXVuaWNhdGlvbiBwcm90b2NvbC4gVGhlcmUgaXMgbm8gd2F5IHRvIHNob3cgdGhlIGN1cnJlbnQgc2V0dGluZy4iCm1zZ3N0ciAiTFxcJ291dGlsIHPDqWxlY3Rpb25uw6kgcGV1dCBzZXVsZW1lbnQgw6p0cmUgZMOpZmluaSwgaWwgbmUgcGV1dCBwYXMgw6p0cmUgbHUgw6AgcGFydGlyIGR1IGZpcm13YXJlIGVuIHJhaXNvbiBkXFwndW5lIGxpbWl0YXRpb24gZHUgcHJvdG9jb2xlIGRlIGNvbW11bmljYXRpb24uIElsIG5cXCd5IGEgYXVjdW4gbW95ZW4gZFxcJ2FmZmljaGVyIGxlIHLDqWdsYWdlIGFjdHVlbC4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEyMQptc2dpZCAiRmxvdyByYXRlIG1vZGlmaWVyOiIKbXNnc3RyICJNb2RpZmljYXRpb24gZHUgZMOpYml0IDoiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL2NvbnRyb2wuamluamEyOjEyMQptc2dpZCAiVGhlIGZsb3cgcmF0ZSBjYW4gb25seSBiZSBzZXQsIGl0IGNhbm5vdCBiZSByZWFkIGJhY2sgZnJvbSB0aGUgZmlybXdhcmUgZHVlIHRvIGEgbGltaXRhdGlvbiBvZiB0aGUgY29tbXVuaWNhdGlvbiBwcm90b2NvbC4gVGhlcmUgaXMgbm8gd2F5IHRvIHNob3cgdGhlIGN1cnJlbnQgc2V0dGluZy4iCm1zZ3N0ciAiTGUgZMOpYml0IHBldXQgc2V1bGVtZW50IMOqdHJlIHLDqWdsw6ksIGlsIG5lIHBldXQgcGFzIMOqdHJlIGx1IMOgIHBhcnRpciBkdSBmaXJtd2FyZSBlbiByYWlzb24gZFxcJ3VuZSBsaW1pdGF0aW9uIGR1IHByb3RvY29sZSBkZSBjb21tdW5pY2F0aW9uLiBJbCBuXFwneSBhIGF1Y3VuIG1veWVuIGRcXCdhZmZpY2hlciBsZSByw6lnbGFnZSBhY3R1ZWwuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoxMzQKbXNnaWQgIk1vdG9ycyBvZmYiCm1zZ3N0ciAiTW90ZXVycyDDqXRlaW50cyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvY29udHJvbC5qaW5qYTI6MTM1Cm1zZ2lkICJGYW4gb24iCm1zZ3N0ciAiVmVudGlsYXRldXIgZW4gbWFyY2hlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy9jb250cm9sLmppbmphMjoxMzYKbXNnaWQgIkZhbiBvZmYiCm1zZ3N0ciAiVmVudGlsYXRldXIgw6l0ZWludCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVtcGVyYXR1cmUuamluamEyOjExCm1zZ2lkICJDdXJyZW50IGFjdHVhbCB0ZW1wZXJhdHVyZSBhcyByZXBvcnRlZCBieSB5b3VyIHByaW50ZXIiCm1zZ3N0ciAiTGEgdGVtcMOpcmF0dXJlIGFjdHVlbGxlIGRvbm7DqWUgcGFyIHZvdHJlIGltcHJpbWFudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoxMgptc2dpZCAiQ3VycmVudCB0YXJnZXQgdGVtcGVyYXR1cmUgYXMgcmVwb3J0ZWQgYnkgeW91ciBwcmludGVyIgptc2dzdHIgIkxhIHRlbXDDqXJhdHVyZSBjaWJsZSBhY3R1ZWxsZSBkb25uw6llIHBhciB2b3RyZSBpbXByaW1hbnRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZW1wZXJhdHVyZS5qaW5qYTI6MTUKbXNnaWQgIlNldCB0ZW1wZXJhdHVyZSBwcm9maWxlIgptc2dzdHIgIkTDqWZpbmlyIGxlIHByb2ZpbCBkZSB0ZW1ww6lyYXR1cmUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjoyOQptc2dpZCAiT2Zmc2V0IHRvIGFwcGx5IHRvIHRlbXBlcmF0dXJlIGNvbW1hbmRzIHNlbnQgZnJvbSBmaWxlcyIKbXNnc3RyICJEw6ljYWxhZ2Ugw6AgYXBwbGlxdWVyIGF1eCBjb21tYW5kZXMgZGUgdGVtcMOpcmF0dXJlIGVudm95w6llcyDDoCBwYXJ0aXIgZGUgZmljaGllcnMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjo0NAptc2dpZCAiRmluZSBhZGp1c3Q6IC0xwrBDIgptc2dzdHIgIlLDqWdsYWdlIGZpbjogLTHCsEMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjo0Nwptc2dpZCAiRmluZSBhZGp1c3Q6ICsxwrBDIgptc2dzdHIgIlLDqWdsYWdlIGZpbjogKzHCsEMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RlbXBlcmF0dXJlLmppbmphMjo1MAptc2dpZCAiU2V0Igptc2dzdHIgIkZpeGVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZW1wZXJhdHVyZS5qaW5qYTI6NzMKbXNnaWQgIkNoYW5nZSBPZmZzZXQiCm1zZ3N0ciAiTW9kaWZpZXIgbGUgZMOpY2FsYWdlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZXJtaW5hbC5qaW5qYTI6Nwptc2dpZCAiU2VuZCIKbXNnc3RyICJFbnZveWVyIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZXJtaW5hbC5qaW5qYTI6MTEKbXNnaWQgIkF1dG9zY3JvbGwiCm1zZ3N0ciAiRMOpZmlsZW1lbnQgYXV0b21hdGlxdWUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3Rlcm1pbmFsLmppbmphMjoxMwptc2dpZCAiU2Nyb2xsIHRvIGVuZCIKbXNnc3RyICJBbGxlciDDoCBsYSBmaW4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3Rlcm1pbmFsLmppbmphMjoxNgptc2dpZCAiQ29weSBhbGwiCm1zZ3N0ciAiVG91dCBjb3BpZXIiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3Rlcm1pbmFsLmppbmphMjoxNwptc2dpZCAiQ2xlYXIgbG9nIHdpbmRvdyIKbXNnc3RyICJFZmZhY2VyIGxhIGZlbsOqdHJlIGR1IGpvdXJuYWwiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3Rlcm1pbmFsLmppbmphMjoxNwptc2dpZCAiQ2xlYXIgYWxsIgptc2dzdHIgIlRvdXQgZWZmYWNlciIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVybWluYWwuamluamEyOjIwCm1zZ2lkICJGb3IgcGVyZm9ybWFuY2UgcmVhc29ucyBvbmx5IGEgbGltaXRlZCBhbW91bnQgb2YgdGVybWluYWwgZnVuY3Rpb25hbGl0eSBpcyBlbmFibGVkIHJpZ2h0IG5vdy4iCm1zZ3N0ciAiUG91ciBkZXMgcmFpc29ucyBkZSBwZXJmb3JtYW5jZXMsIHNldWxlIHVuZSBxdWFudGl0w6kgbGltaXTDqWUgZGUgZm9uY3Rpb25uYWxpdMOpcyBzb250IGFjdHVlbGxlbWVudCBhY3RpdmVzLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVybWluYWwuamluamEyOjM4Cm1zZ2lkICJGYWtlIEFja25vd2xlZGdlbWVudCIKbXNnc3RyICJGYXV4IGFjY3Vzw6kgZGUgcsOpY2VwdGlvbiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVybWluYWwuamluamEyOjM5Cm1zZ2lkICJJZiBhY2tub3dsZWRnZW1lbnRzIChcIm9rXCJzKSBzZW50IGJ5IHRoZSBmaXJtd2FyZSBnZXQgbG9zdCBkdWUgdG8gaXNzdWVzIHdpdGggdGhlIHNlcmlhbCBjb21tdW5pY2F0aW9uIHRvIHlvdXIgcHJpbnRlciwgT2N0b1ByaW50J3MgY29tbXVuaWNhdGlvbiB3aXRoIGl0IGNhbiBiZWNvbWUgc3R1Y2suIElmIHRoYXQgaGFwcGVucywgdGhpcyBjYW4gaGVscC4gUGxlYXNlIGJlIGFkdmlzZWQgdGhhdCBzdWNoIG9jY3VycmVuY2VzIGhpbnQgYXQgZ2VuZXJhbCBjb21tdW5pY2F0aW9uIGlzc3VlcyB3aXRoIHlvdXIgcHJpbnRlciB3aGljaCB3aWxsIHByb2JhYmx5IG5lZ2F0aXZlbHkgaW5mbHVlbmNlIHlvdXIgcHJpbnRpbmcgcmVzdWx0cyBhbmQgd2hpY2ggeW91IHNob3VsZCB0aGVyZWZvcmUgdHJ5IHRvIHJlc29sdmUhIgptc2dzdHIgIlNpIGRlcyBhY2N1c8OpcyBkZSByw6ljZXB0aW9uIChcIm9rXCIpIGVudm95w6lzIHBhciBsZSBtaWNyb2xvZ2ljaWVsIHNvbnQgcGVyZHVzIGVuIHJhaXNvbiBkZSBwcm9ibMOobWVzIGRlIGNvbW11bmljYXRpb24gc8OpcmllIGF2ZWMgdm90cmUgaW1wcmltYW50ZSwgbGEgY29tbXVuaWNhdGlvbiBhdmVjIE9jdG9QcmludCBwZXV0IGRldmVuaXIgYmxvcXXDqWUuIFNpIGNlbGEgYXJyaXZlLCBjZWxhIHBldXQgYWlkZXIuIFZldWlsbGV6IG5vdGVyIHF1ZSBkZSB0ZWxsZXMgb2NjdXJyZW5jZXMgZm9udCBhbGx1c2lvbiDDoCBkZXMgcHJvYmzDqG1lcyBkZSBjb21tdW5pY2F0aW9uIGfDqW7DqXJhdXggYXZlYyB2b3RyZSBpbXByaW1hbnRlIHF1aSBhdXJvbnQgcHJvYmFibGVtZW50IHVuZSBpbmZsdWVuY2UgbsOpZ2F0aXZlIHN1ciB2b3MgcsOpc3VsdGF0cyBkJ2ltcHJlc3Npb24gZXQgcXVlIHZvdXMgZGV2cmlleiBkb25jIGVzc2F5ZXIgZGUgcsOpc291ZHJlISIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVybWluYWwuamluamEyOjQyCm1zZ2lkICJGb3JjZSBmYW5jeSBmdW5jdGlvbmFsaXR5Igptc2dzdHIgIkZvcmNlciBsJ3V0aWxpc2F0aW9uIGRlIGxhIGZvbmN0aW9ubmFsaXTDqSBmYW50YWlzaXN0ZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGVybWluYWwuamluamEyOjQzCm1zZ2lkICJGb3JjZSB0ZXJtaW5hbCBvdXRwdXQgZHVyaW5nIHByaW50aW5nIgptc2dzdHIgIkZvcmNlciBsYSBzb3J0aWUgdmVycyBsZSB0ZXJtaW5hbCBkdXJhbnQgbCdpbXByZXNzaW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90ZXJtaW5hbC5qaW5qYTI6NDQKbXNnaWQgIlNvbWUgZnVuY3Rpb25hbGl0eSBvZiB0aGUgdGVybWluYWwgd2lsbCBiZSBkaXNhYmxlZCBpZiBPY3RvUHJpbnQgZGV0ZWN0cyB0aGF0IHlvdXIgYnJvd3NlciBpcyB0b28gc2xvdyBmb3IgdGhhdC4gWW91IG1heSBmb3JjZSBpdCBiYWNrIG9uIGhlcmUsIGJ1dCBiZSBhd2FyZSB0aGF0IHRoaXMgbWlnaHQgbWFrZSB5b3VyIGJyb3dzZXIgdW5yZXNwb25zaXZlLiIKbXNnc3RyICJDZXJ0YWluZXMgZm9uY3Rpb25uYWxpdMOpcyBkdSB0ZXJtaW5hbCBwZXV2ZW50IMOqdHJlIGTDqXNhY3RpdsOpZXMgc2kgT2N0b1ByaW50IGTDqXRlY3RlIHF1ZSBsZSBuYXZpZ2F0ZXVyIHN1Yml0IGRlcyByYWxlbnRpc3NlbWVudHMuIFZvdXMgcG91dmV6IHLDqWFjdGl2ZXIgY2VzIGZvbmN0aW9ucyBpY2kgbWFpcyBsZSBuYXZpZ2F0ZXVyIHJpc3F1ZSBkZSBuZSBwbHVzIHLDqXBvbmRyZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6NAptc2dpZCAiVGFrZSBub3RlIHRoYXQgdGltZWxhcHNlIGNvbmZpZ3VyYXRpb24gaXMgZGlzYWJsZWQgd2hpbGUgeW91ciBwcmludGVyIGlzIHByaW50aW5nLiIKbXNnc3RyICJOb3RleiBxdWUgbGEgY29uZmlndXJhdGlvbiBkdSBUaW1lbGFwc2UgZXN0IGTDqXNhY3RpdsOpZSBwZW5kYW50IHF1ZSBsJ2ltcHJpbWFudGUgZm9uY3Rpb25uZS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6Nwptc2dpZCAiVGltZWxhcHNlIENvbmZpZ3VyYXRpb24iCm1zZ3N0ciAiQ29uZmlndXJhdGlvbiBkdSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTEKbXNnaWQgIlRpbWVsYXBzZSBNb2RlIgptc2dzdHIgIk1vZGUgZHUgVGltZWxhcHNlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE4Cm1zZ2lkICJOb3RlIgptc2dzdHIgIk5vdGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTgKbXNnaWQgIkRvZXMgbm90IHdvcmsgd2hlbiBwcmludGluZyBmcm9tIHRoZSBwcmludGVyJ3MgU0QgQ2FyZCAobm8gd2F5IHRvIGRldGVjdCB0aGUgY2hhbmdlIGluIFogcmVsaWFibHkpLiBVc2UgXCJUaW1lZFwiIG1vZGUgZm9yIHRob3NlIHByaW50cyBpbnN0ZWFkLiIKbXNnc3RyICJOZSBmb25jdGlvbm5lIHBhcyBsb3JzIGQndW5lIGltcHJlc3Npb24gw6AgcGFydGlyIGRlIGxhIGNhcnRlIFNEIChpbXBvc3NpYmlsaXTDqSBkZSBkw6l0ZWN0ZXIgZGUgbWFuacOocmUgZmlhYmxlIGxlcyBjaGFuZ2VtZW50cyBkZSBaKS4gVXRpbGlzZXogw6AgbGEgcGxhY2UgbGUgbW9kZSBcIkNocm9ub23DqXRyw6lcIiBwb3VyIGNlIHR5cGUgZCdpbXByZXNzaW9uLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoyMwptc2dpZCAiTWluaW11bSBpbnRlcnZhbCIKbXNnc3RyICJJbnRlcnZhbGxlIG1pbmltdW0iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MjkKbXNnaWQgIk9jdG9QcmludCB3aWxsIHJhdGUgbGltaXQgc25hcHNob3RzIHRvIHRoaXMgbWluaW11bSBpbnRlcnZhbC4gVGhpcyBpdCB0byBwcmV2ZW50IGFnYWluc3QgcGVyZm9ybWFuY2UgaXNzdWVzIHdpdGggdmFzZSBtb2RlL2NvbnRpbnVvdXMgeiBwcmludHMuIgptc2dzdHIgIk9jdG9QcmludCDDqXZhbHVlcmEgbGVzIGluc3RhbnRhbsOpcyBsaW1pdGVzIMOgIGNldCBpbnRlcnZhbGxlIG1pbmltdW0uIENlY2kgcG91ciDDqXZpdGVyIGxlcyBwcm9ibMOobWVzIGRlIHBlcmZvcm1hbmNlcyBhdmVjIGxlIG1vZGUgdmFzZSAvIGltcHJlc3Npb25zIHogZW4gY29udGludS4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MzQKbXNnaWQgIlNuYXBzaG90IGludGVydmFsIgptc2dzdHIgIkludGVydmFsbGUgZGUgY2FwdHVyZSBkJ2ltYWdlcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo0NAptc2dpZCAiVGltZWxhcHNlIGZyYW1lIHJhdGUiCm1zZ3N0ciAiVGF1eCBkZSB0cmFtZSBwb3VyIGxlIFRpbWVsYXBzZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo0OAptc2dpZCAiZnBzIgptc2dzdHIgImlwcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo1NAptc2dpZCAiVGltZWxhcHNlIHBvc3Qgcm9sbCIKbXNnc3RyICJUaW1lbGFwc2UgcG9zdCB0cmFpdGVtZW50IgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjYwCm1zZ2lkICJPY3RvUHJpbnQgd2lsbCB1c2UgdGhlIGZpbmFsIHBpY3R1cmUgdG8gYWRkIHRoaXMgbWFueSBzZWNvbmRzIHRvIHRoZSBlbmQgb2YgeW91ciByZW5kZXJlZCB0aW1lbGFwc2UuIgptc2dzdHIgIk9jdG9QcmludCB1dGlsaXNlcmEgbCdpbWFnZSBmaW5hbGUgcG91ciBham91dGVyIGNlIG5vbWJyZSBkZSBzZWNvbmRlcyDDoCBsYSBmaW4gZGUgdm90cmUgVGltZWxhcHNlLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo2NQptc2dpZCAiUmV0cmFjdGlvbiBaLUhvcCIKbXNnc3RyICJEaXN0YW5jZSBkZSByw6l0cmFjdGF0aW9uIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjcxCm1zZ2lkICJFbnRlciB0aGUgcmV0cmFjdGlvbiB6LWhvcCB1c2VkIGluIHRoZSBmaXJtd2FyZSBvciB0aGUgZ2NvZGUgZmlsZSB0byB0cmlnZ2VyIHNuYXBzaG90cyBmb3IgdGhlIHRpbWVsYXBzZSBvbmx5IGlmIGEgcmVhbCBsYXllciBjaGFuZ2UgaGFwcGVucy4gRm9yIHRoaXMgdG8gd29yayBwcm9wZXJseSB5b3VyIHJldHJhY3Rpb24gei1ob3AgaGFzIHRvIGJlIGRpZmZlcmVudCBmcm9tIHlvdXIgbGF5ZXJoZWlnaHQhIgptc2dzdHIgIkVudHJleiBsYSBkaXN0YW5jZSBkZSByw6l0cmFjdGF0aW9uIHV0aWxpc8OpZSBkYW5zIGxlIGZpcm13YXJlIG91IGR1IGTDqWNvdXBldXIgb3UgZHUgZmljaGllciBHLWNvZGUgcG91ciBkw6ljbGVuY2hlciBkZXMgY2FwdHVyZXMgZCdpbWFnZXMgcG91ciBsZSBUaW1lbGFwc2UsIHVuaXF1ZW1lbnQgc2kgdW4gY2hhbmdlbWVudCBkJ3VuZSBsYSBjb3VjaGUgZXN0IGF2w6lyw6kgUG91ciBxdWUgY2VsYSBmb25jdGlvbm5lIGNvcnJlY3RlbWVudCwgdm90cmUgZGlzdGFuY2UgZGUgcsOpdHJhY3RhdGlvbiBkb2l0IMOqdHJlIGRpZmbDqXJlbnRlIGRlIGxhIGhhdXRldXIgZGUgbGEgY291Y2hlICEiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6NzgKbXNnaWQgIlNhdmUgYXMgZGVmYXVsdCIKbXNnc3RyICJTYXV2ZWdhcmRlciBwYXIgZMOpZmF1dCIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo3OQptc2dpZCAiQ2hlY2sgdGhpcyB0byBtYWtlIHlvdXIgc2VsZWN0ZWQgdGltZWxhcHNlIG1vZGUgYW5kIG9wdGlvbnMgcGVyc2lzdCBhY3Jvc3MgcmVzdGFydHMuIgptc2dzdHIgIkNvY2hleiBjZXR0ZSBjYXNlIHBvdXIgcXVlIGxlIG1vZGUgVGltZWxhcHNlIGV0IGxlcyBvcHRpb25zIHF1ZSB2b3VzIGF2ZXogc8OpbGVjdGlvbm7DqXMgc29pZW50IGNvbnNlcnbDqXMgbG9ycyBkZXMgcmVkw6ltYXJyYWdlcy4iCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6ODYKbXNnaWQgIllvdSBoYXZlIHVuc2F2ZWQgY2hhbmdlcy4gRG9uJ3QgZm9yZ2V0IHRvIHNhdmUgdGhlbS4iCm1zZ3N0ciAiVm91cyBhdmV6IGRlcyBtb2RpZmljYXRpb25zIG5vbi1lbnJlZ2lzdHLDqWVzLCBwZW5zZXogw6AgbGVzIHNhdXZlZ2FyZGVyLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo4Nwptc2dpZCAiU2F2ZSBjaGFuZ2VzIgptc2dzdHIgIkVucmVnaXN0cmVyIGxlcyBtb2RpZmljYXRpb25zIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjg4Cm1zZ2lkICJSZXNldCB0byBhY3RpdmUgY29uZmlndXJhdGlvbiIKbXNnc3RyICJSZXRvdXIgw6AgbGEgY29uZmlndXJhdGlvbiBwcsOpY8OpZGVudGUiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6OTQKbXNnaWQgIlRpbWVsYXBzZSBub3QgZnVsbHkgY29uZmlndXJlZCIKbXNnc3RyICJUaW1lbGFwc2UgcGFzIGNvbXBsw6h0ZW1lbnQgY29uZmlndXLDqSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo5NQptc2dpZCAiVGhlIHNuYXBzaG90IFVSTCBhbmQvb3IgdGhlIHBhdGggdG8gRkZNUEVHIGFyZSBtaXNzaW5nLiBUbyBoYXZlIHRoaXMgZml4ZWQsIGdldCBpbiB0b3VjaCB3aXRoIGFuIGFkbWluaXN0cmF0b3Igb2YgdGhpcyBPY3RvUHJpbnQgaW5zdGFuY2UuIgptc2dzdHIgIkwnVVJMIGRlIGwnaW5zdGFudGFuw6kgZXQgLyBvdSBsZSBjaGVtaW4gZCdhY2PDqHMgw6AgRkZNUEVHIHNvbnQgbWFucXVhbnRzLiBQb3VyIHLDqXNvdWRyZSBjZSBwcm9ibMOobWUsIGNvbnRhY3RleiB1biBhZG1pbmlzdHJhdGV1ciBkZSBjZXR0ZSBpbnN0YW5jZSBPY3RvUHJpbnQuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjk2Cm1zZ2lkICJUaGUgc25hcHNob3QgVVJMIGFuZC9vciB0aGUgcGF0aCB0byBGRk1QRUcgYXJlIG1pc3NpbmcuIFlvdSBjYW4gY2hhbmdlIGJvdGggdW5kZXIgXCJTZXR0aW5nc1wiID4gXCJXZWJjYW0gJiBUaW1lbGFwc2VcIiA+IFwiVGltZWxhcHNlXCIuIElmIHlvdSBkb24ndCBoYXZlIGEgd2ViY2FtIG9yIGRvbid0IHdhbnQgdG8gZW5hYmxlIHRpbWVsYXBzZSBzdXBwb3J0IHlvdSBjYW4gYWxzbyBqdXN0IGRpc2FibGUgaXQgdGhlcmUuIgptc2dzdHIgIkwnVVJMIGRlIGxhIGNhcHVyZSBkJ2ltYWdlcyBldCAvIG91IGxlIGNoZW1pbiBkJ2FjY8OocyB2ZXJzIEZGTVBFRyBzb250IG1hbnF1YW50cy4gVm91cyBwb3V2ZXogbW9kaWZpZXIgbGVzIGRldXggc291cyBcIlBhcmFtw6h0cmVzIE9jdG9QcmludFwiID4gXCJXZWJjYW0gJiBUaW1lbGFwc2VcIiA+IFwiVGltZWxhcHNlXCIuIFNpIHZvdXMgbmUgcG9zc8OpZGV6IHBhcyBkZSB3ZWJjYW0gb3Ugc2kgdm91cyBuZSBzb3VoYWl0ZXogcGFzIGFjdGl2ZXIgbGUgc3VwcG9ydCBUaW1lbGFwc2UsIHZvdXMgcG91dmV6IHNpbXBsZW1lbnQgbGUgZMOpc2FjdGl2ZXIgaWNpLiIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo5OAptc2dpZCAiQ3VycmVudGx5IGNvbmZpZ3VyZWQgc25hcHNob3QgVVJMIgptc2dzdHIgIlVSTCBkZSBjYXB0dXJlIGQnaW1hZ2VzIGFjdHVlbGxlbWVudCBjb25maWd1csOpZSIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjo5OQptc2dpZCAiQ3VycmVudGx5IGNvbmZpZ3VyZWQgcGF0aCB0byBGRk1QRUciCm1zZ3N0ciAiQ2hlbWluIGFjdHVlbGxlbWVudCBjb25maWd1csOpIHZlcnMgRkZNUEVHIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjEwNAptc2dpZCAiVGltZWxhcHNlIFJlbmRlciBQcm9ncmVzcyIKbXNnc3RyICJQcm9ncmVzc2lvbiBkdSByZW5kdSBkdSBUaW1lbGFwc2UiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTExCm1zZ2lkICJGaW5pc2hlZCBUaW1lbGFwc2VzIgptc2dzdHIgIlRpbWVsYXBzZXMgdGVybWluw6lzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjExOAptc2dpZCAiU29ydCBieSBkYXRlIgptc2dzdHIgIlRyaWVyIHBhciBkYXRlIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE2NQptc2dpZCAiVG9vIG1hbnkgZmlsZXMgc2VsZWN0ZWQgdG8gZG93bmxvYWQgYXQgb25jZS4gUmVkdWNlIG51bWJlciBvZiBmaWxlcyB0byBlbmFibGUgZG93bmxvYWQgYnV0dG9uLiIKbXNnc3RyICJUcm9wIGRlIGZpY2hpZXJzIHPDqWxlY3Rpb25uw6kgZW4gbcOqbWUgdGVtcHMuIFLDqWR1aXNleiBsZSBub21icmVzIGRlIGZpY2hpZXJzIHBvdXIgYWN0aXZlciBsZSBib3V0b24gdMOpbMOpY2hhcmdlbWVudHMuIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjE2OQptc2dpZCAiVW5yZW5kZXJlZCBUaW1lbGFwc2VzIgptc2dzdHIgIlRpbWVsYXBzZXMgcGFzIGZpbmFsaXPDqXMiCgojOiBzcmMvb2N0b3ByaW50L3RlbXBsYXRlcy90YWJzL3RpbWVsYXBzZS5qaW5qYTI6MTg4Cm1zZ2lkICJGcmFtZXMiCm1zZ3N0ciAiSW1hZ2VzIgoKIzogc3JjL29jdG9wcmludC90ZW1wbGF0ZXMvdGFicy90aW1lbGFwc2UuamluamEyOjIwMQptc2dpZCAiRGVsZXRlIHVucmVuZGVyZWQgdGltZWxhcHNlIgptc2dzdHIgIlN1cHByaW1lciBsZXMgVGltZWxhcHNlcyBwYXMgZmluYWxpc8OpcyIKCiM6IHNyYy9vY3RvcHJpbnQvdGVtcGxhdGVzL3RhYnMvdGltZWxhcHNlLmppbmphMjoyMDEKbXNnaWQgIlJlbmRlciB0aW1lbGFwc2UiCm1zZ3N0ciAiRmFpcmUgbGUgcmVuZHUgZHUgdGltZWxhcHNlIgpQSwMECgAAAAAAHbsJU7vYJnchAAAAIQAAAAwAAABmci9tZXRhLnlhbWxsYXN0X3VwZGF0ZTogMjAyMS0wOC0wOVQyMzoyNTowMApQSwECPwAUAAAAAAAIuwlTAAAAAAAAAAAAAAAAAwAkAAAAAAAAABAAAAAAAAAAZnIvCgAgAAAAAAABABgAvGCD52SN1wGhL0rqZI3XAeh6gOdkjdcBUEsBAj8AFAAAAAAAOrsJUwAAAAAAAAAAAAAAAA8AJAAAAAAAAAAQAAAAIQAAAGZyL0xDX01FU1NBR0VTLwoAIAAAAAAAAQAYAKUY3SBljdcBpRjdIGWN1wG8YIPnZI3XAVBLAQI/AAoAAAAAABS6CVNHTN8xSFkDAEhZAwAaACQAAAAAAAAAIAAAAE4AAABmci9MQ19NRVNTQUdFUy9tZXNzYWdlcy5tbwoAIAAAAAAAAQAYAJSgMthjjdcBnP/7ZmWN1wF8B0IOZY3XAVBLAQI/AAoAAAAAAA66CVMiydVJPFIFADxSBQAaACQAAAAAAAAAIAAAAM5ZAwBmci9MQ19NRVNTQUdFUy9tZXNzYWdlcy5wbwoAIAAAAAAAAQAYABW6CdBjjdcBkh6ODmWN1wETqEAOZY3XAVBLAQI/AAoAAAAAAB27CVO72CZ3IQAAACEAAAAMACQAAAAAAAAAIAAAAEKsCABmci9tZXRhLnlhbWwKACAAAAAAAAEAGADNbm8AZY3XAcib/GZljdcBQLOB52SN1wFQSwUGAAAAAAUABQDsAQAAjawIAAAADQotLS0tLS0tLS0tLS0tUnVieU11bHRpcGFydFBvc3QtMGY2MGIwNTIyYTJiZjk1MDY4NWIzNzYwNzc4ODRjMDkNCkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0ibG9jYWxlIg0KDQplbg0KLS0tLS0tLS0tLS0tLVJ1YnlNdWx0aXBhcnRQb3N0LTBmNjBiMDUyMmEyYmY5NTA2ODViMzc2MDc3ODg0YzA5LS0NCg==
    headers:
      Authorization:
      - Bearer <API_KEY>
      Content-Type:
      - multipart/form-data; boundary=-----------RubyMultipartPost-0f60b0522a2bf950685b376077884c09
      User-Agent:
      - Faraday v2.13.1
      Content-Length:
      - '569410'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, max-age=0
      Pragma:
      - no-cache
      Expires:
      - "-1"
      X-Clacks-Overhead:
      - GNU Terry Pratchett
      Server-Timing:
      - app;dur=46
      X-Robots-Tag:
      - noindex, nofollow, noimageindex
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "language_packs": {
            "_core": {
              "display": "Core",
              "identifier": "_core",
              "languages": [
                {
                  "last_update": 1628551500.0,
                  "locale": "fr",
                  "locale_display": "fran\u00e7ais",
                  "locale_english": "French"
                }
              ]
            }
          }
        }
  recorded_at: Sat, 05 Jul 2025 03:49:17 GMT
recorded_with: VCR 6.3.1
