# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `pry` gem.
# Please instead update this file by running `bin/tapioca gem pry`.

# source://pry//lib/pry/core_extensions.rb#115
class BasicObject
  # source://pry//lib/pry/core_extensions.rb#125
  def __binding__; end
end

# source://pry//lib/pry/core_extensions.rb#24
class Object < ::BasicObject
  include ::Kernel
  include ::PP::ObjectMixin

  # source://pry//lib/pry/core_extensions.rb#70
  def __binding__; end

  # source://pry//lib/pry/core_extensions.rb#43
  def pry(object = T.unsafe(nil), hash = T.unsafe(nil)); end
end

# source://pry//lib/pry/version.rb#3
class Pry
  extend ::Forwardable
  extend ::Pry::Forwardable

  # source://pry//lib/pry/pry_instance.rb#81
  def initialize(options = T.unsafe(nil)); end

  # source://pry//lib/pry/pry_instance.rb#212
  def add_sticky_local(name, &block); end

  # source://pry//lib/pry/pry_instance.rb#35
  def backtrace; end

  # source://pry//lib/pry/pry_instance.rb#35
  def backtrace=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#32
  def binding_stack; end

  # source://pry//lib/pry/pry_instance.rb#32
  def binding_stack=(_arg0); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def color(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def color=(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def commands(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def commands=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#145
  def complete(str); end

  # source://pry//lib/pry/pry_instance.rb#50
  def config; end

  # source://pry//lib/pry/pry_instance.rb#124
  def current_binding; end

  # source://pry//lib/pry/pry_instance.rb#124
  def current_context; end

  # source://pry//lib/pry/pry_instance.rb#33
  def custom_completions; end

  # source://pry//lib/pry/pry_instance.rb#33
  def custom_completions=(_arg0); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def editor(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def editor=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#255
  def eval(line, options = T.unsafe(nil)); end

  # source://pry//lib/pry/pry_instance.rb#34
  def eval_string; end

  # source://pry//lib/pry/pry_instance.rb#34
  def eval_string=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#286
  def evaluate_ruby(code); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def exception_handler(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def exception_handler=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#394
  def exec_hook(name, *args, &block); end

  # source://pry//lib/pry/pry_instance.rb#42
  def exit_value; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def extra_sticky_locals(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def extra_sticky_locals=(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def hooks(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def hooks=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#173
  def inject_local(name, value, binding); end

  # source://pry//lib/pry/pry_instance.rb#201
  def inject_sticky_locals!; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def input(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def input=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#45
  def input_ring; end

  # source://pry//lib/pry/pry_instance.rb#39
  def last_dir; end

  # source://pry//lib/pry/pry_instance.rb#39
  def last_dir=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#41
  def last_exception; end

  # source://pry//lib/pry/pry_instance.rb#418
  def last_exception=(exception); end

  # source://pry//lib/pry/pry_instance.rb#38
  def last_file; end

  # source://pry//lib/pry/pry_instance.rb#38
  def last_file=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#37
  def last_result; end

  # source://pry//lib/pry/pry_instance.rb#37
  def last_result=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#440
  def last_result_is_exception?; end

  # source://pry//lib/pry/pry_instance.rb#190
  def memory_size; end

  # source://pry//lib/pry/pry_instance.rb#195
  def memory_size=(size); end

  # source://pry//lib/pry/pry_instance.rb#538
  def output; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def output=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#48
  def output_ring; end

  # source://pry//lib/pry/pry_instance.rb#530
  def pager; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def pager=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#522
  def pop_prompt; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def print(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def print=(*args, **_arg1, &block); end

  # source://pry//lib/pry/pry_instance.rb#325
  def process_command(val); end

  # source://pry//lib/pry/pry_instance.rb#360
  def process_command_safely(val); end

  # source://pry//lib/pry/pry_instance.rb#101
  def prompt; end

  # source://pry//lib/pry/pry_instance.rb#108
  def prompt=(new_prompt); end

  # source://pry//lib/pry/pry_instance.rb#131
  def push_binding(object); end

  # source://pry//lib/pry/pry_instance.rb#118
  def push_initial_binding(target = T.unsafe(nil)); end

  # source://pry//lib/pry/pry_instance.rb#506
  def push_prompt(new_prompt); end

  # source://pry//lib/pry/pry_instance.rb#592
  def quiet?; end

  # source://pry//lib/pry/pry_instance.rb#582
  def raise_up(*args); end

  # source://pry//lib/pry/pry_instance.rb#586
  def raise_up!(*args); end

  # source://pry//lib/pry/pry_instance.rb#554
  def raise_up_common(force, *args); end

  # source://pry//lib/pry/pry_instance.rb#282
  def repl(target = T.unsafe(nil)); end

  # source://pry//lib/pry/pry_instance.rb#231
  def reset_eval_string; end

  # source://pry//lib/pry/pry_instance.rb#375
  def run_command(val); end

  # source://pry//lib/pry/pry_instance.rb#453
  def select_prompt; end

  # source://pry//lib/pry/pry_instance.rb#409
  def set_last_result(result, code = T.unsafe(nil)); end

  # source://pry//lib/pry/pry_instance.rb#447
  def should_print?; end

  # source://pry//lib/pry/pry_instance.rb#298
  def show_result(result); end

  # source://pry//lib/pry/pry_instance.rb#216
  def sticky_locals; end

  # source://pry//lib/pry/pry_instance.rb#36
  def suppress_output; end

  # source://pry//lib/pry/pry_instance.rb#36
  def suppress_output=(_arg0); end

  # source://pry//lib/pry/pry_instance.rb#428
  def update_input_history(code); end

  private

  # source://pry//lib/pry/pry_instance.rb#680
  def ensure_correct_encoding!(val); end

  # source://pry//lib/pry/pry_instance.rb#688
  def generate_prompt(prompt_proc, conf); end

  # source://pry//lib/pry/pry_instance.rb#598
  def handle_line(line, options); end

  # source://pry//lib/pry/pry_instance.rb#697
  def prompt_stack; end

  class << self
    # source://pry//lib/pry/code.rb#12
    def Code(obj); end

    # source://pry//lib/pry/method.rb#9
    def Method(obj); end

    # source://pry//lib/pry/wrapped_module.rb#7
    def WrappedModule(obj); end

    # source://pry//lib/pry/pry_class.rb#294
    def auto_resize!; end

    # source://pry//lib/pry/pry_class.rb#347
    def binding_for(target); end

    # source://pry//lib/pry/pry_class.rb#22
    def cli; end

    # source://pry//lib/pry/pry_class.rb#22
    def cli=(_arg0); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def color(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def color=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def commands(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def commands=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#25
    def config; end

    # source://pry//lib/pry/pry_class.rb#25
    def config=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#46
    def configure; end

    # source://pry//lib/pry/pry_class.rb#380
    def critical_section; end

    # source://pry//lib/pry/pry_class.rb#63
    def current; end

    # source://pry//lib/pry/pry_class.rb#19
    def current_line; end

    # source://pry//lib/pry/pry_class.rb#19
    def current_line=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#18
    def custom_completions; end

    # source://pry//lib/pry/pry_class.rb#18
    def custom_completions=(_arg0); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def editor(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def editor=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#21
    def eval_path; end

    # source://pry//lib/pry/pry_class.rb#21
    def eval_path=(_arg0); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exception_handler(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exception_handler=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def extra_sticky_locals(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def extra_sticky_locals=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#139
    def final_session_setup; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def history(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def history=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def hooks(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def hooks=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#375
    def in_critical_section?; end

    # source://pry//lib/pry/pry_class.rb#338
    def init; end

    # source://pry//lib/pry/pry_class.rb#257
    def initial_session?; end

    # source://pry//lib/pry/pry_class.rb#129
    def initial_session_setup; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def input(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def input=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#24
    def last_internal_error; end

    # source://pry//lib/pry/pry_class.rb#24
    def last_internal_error=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#20
    def line_buffer; end

    # source://pry//lib/pry/pry_class.rb#20
    def line_buffer=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#69
    def load_file_at_toplevel(file); end

    # source://pry//lib/pry/pry_class.rb#202
    def load_file_through_repl(file_name); end

    # source://pry//lib/pry/pry_class.rb#251
    def load_history; end

    # source://pry//lib/pry/pry_class.rb#77
    def load_rc_files; end

    # source://pry//lib/pry/pry_class.rb#101
    def load_requires; end

    # source://pry//lib/pry/pry_class.rb#109
    def load_traps; end

    # source://pry//lib/pry/pry_class.rb#113
    def load_win32console; end

    # source://pry//lib/pry/pry_class.rb#55
    def main; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def memory_size(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def memory_size=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def output(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def output=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def pager(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def pager=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def print(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def print=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def prompt(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def prompt=(*args, **_arg1, &block); end

    # source://pry//lib/pry/pry_class.rb#23
    def quiet; end

    # source://pry//lib/pry/pry_class.rb#23
    def quiet=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#86
    def rc_files_to_load; end

    # source://pry//lib/pry/pry_class.rb#94
    def real_path_to(file); end

    # source://pry//lib/pry/pry_class.rb#326
    def reset_defaults; end

    # source://pry//lib/pry/pry_class.rb#277
    def run_command(command_string, options = T.unsafe(nil)); end

    # source://pry//lib/pry/pry_class.rb#156
    def start(target = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://pry//lib/pry/pry_class.rb#354
    def toplevel_binding; end

    # source://pry//lib/pry/pry_class.rb#372
    def toplevel_binding=(_arg0); end

    # source://pry//lib/pry/pry_class.rb#225
    def view_clip(obj, options = T.unsafe(nil)); end

    private

    # source://pry//lib/pry/pry_class.rb#388
    def mutex_available?; end
  end
end

# source://pry//lib/pry/core_extensions.rb#9
Pry::BINDING_METHOD_IMPL = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/basic_object.rb#4
class Pry::BasicObject < ::BasicObject
  include ::Kernel
end

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::Dir = Dir

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::ENV = T.let(T.unsafe(nil), Object)

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::File = File

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::Kernel = Kernel

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::LoadError = LoadError

# source://pry//lib/pry/basic_object.rb#6
Pry::BasicObject::Pry = Pry

# source://pry//lib/pry/block_command.rb#13
class Pry::BlockCommand < ::Pry::Command
  # source://pry//lib/pry/block_command.rb#14
  def call(*args); end

  # source://pry//lib/pry/block_command.rb#18
  def help; end
end

# source://pry//lib/pry/cli.rb#7
class Pry::CLI
  class << self
    # source://pry//lib/pry/cli.rb#39
    def add_option_processor(&block); end

    # source://pry//lib/pry/cli.rb#24
    def add_options(&block); end

    # source://pry//lib/pry/cli.rb#21
    def input_args; end

    # source://pry//lib/pry/cli.rb#21
    def input_args=(_arg0); end

    # source://pry//lib/pry/cli.rb#17
    def option_processors; end

    # source://pry//lib/pry/cli.rb#17
    def option_processors=(_arg0); end

    # source://pry//lib/pry/cli.rb#12
    def options; end

    # source://pry//lib/pry/cli.rb#12
    def options=(_arg0); end

    # source://pry//lib/pry/cli.rb#52
    def parse_options(args = T.unsafe(nil)); end

    # source://pry//lib/pry/cli.rb#47
    def reset; end

    # source://pry//lib/pry/cli.rb#90
    def start(opts); end
  end
end

# source://pry//lib/pry/cli.rb#8
class Pry::CLI::NoOptionsError < ::StandardError; end

# source://pry//lib/pry/class_command.rb#15
class Pry::ClassCommand < ::Pry::Command
  # source://pry//lib/pry/class_command.rb#64
  def args; end

  # source://pry//lib/pry/class_command.rb#64
  def args=(_arg0); end

  # source://pry//lib/pry/class_command.rb#72
  def call(*args); end

  # source://pry//lib/pry/class_command.rb#105
  def complete(search); end

  # source://pry//lib/pry/class_command.rb#87
  def help; end

  # source://pry//lib/pry/class_command.rb#171
  def options(opt); end

  # source://pry//lib/pry/class_command.rb#63
  def opts; end

  # source://pry//lib/pry/class_command.rb#63
  def opts=(_arg0); end

  # source://pry//lib/pry/class_command.rb#190
  def process; end

  # source://pry//lib/pry/class_command.rb#121
  def setup; end

  # source://pry//lib/pry/class_command.rb#93
  def slop; end

  # source://pry//lib/pry/class_command.rb#156
  def subcommands(cmd); end

  class << self
    # source://pry//lib/pry/class_command.rb#29
    def doc; end

    # source://pry//lib/pry/class_command.rb#37
    def file; end

    # source://pry//lib/pry/class_command.rb#19
    def inherited(klass); end

    # source://pry//lib/pry/class_command.rb#42
    def line; end

    # source://pry//lib/pry/class_command.rb#25
    def source; end

    # source://pry//lib/pry/class_command.rb#37
    def source_file; end

    # source://pry//lib/pry/class_command.rb#42
    def source_line; end

    # source://pry//lib/pry/class_command.rb#33
    def source_location; end

    private

    # source://pry//lib/pry/class_command.rb#54
    def source_object; end
  end
end

# source://pry//lib/pry/code.rb#32
class Pry::Code
  extend ::MethodSource::CodeHelpers

  # source://pry//lib/pry/code.rb#87
  def initialize(lines = T.unsafe(nil), start_line = T.unsafe(nil), code_type = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#102
  def <<(line); end

  # source://pry//lib/pry/code.rb#325
  def ==(other); end

  # source://pry//lib/pry/code.rb#195
  def after(lineno, lines = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#182
  def around(lineno, lines = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#168
  def before(lineno, lines = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#135
  def between(start_line, end_line = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#77
  def code_type; end

  # source://pry//lib/pry/code.rb#77
  def code_type=(_arg0); end

  # source://pry//lib/pry/code.rb#286
  def comment_describing(line_number); end

  # source://pry//lib/pry/code.rb#294
  def expression_at(line_number, consume = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#207
  def grep(pattern); end

  # source://pry//lib/pry/code.rb#263
  def highlighted; end

  # source://pry//lib/pry/code.rb#316
  def length; end

  # source://pry//lib/pry/code.rb#252
  def max_lineno_width; end

  # source://pry//lib/pry/code.rb#335
  def method_missing(method_name, *args, &block); end

  # source://pry//lib/pry/code.rb#302
  def nesting_at(line_number); end

  # source://pry//lib/pry/code.rb#269
  def print_to_output(output, color = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#102
  def push(line); end

  # source://pry//lib/pry/code.rb#309
  def raw; end

  # source://pry//lib/pry/code.rb#122
  def reject(&block); end

  # source://pry//lib/pry/code.rb#112
  def select(&block); end

  # source://pry//lib/pry/code.rb#150
  def take_lines(start_line, num_lines); end

  # source://pry//lib/pry/code.rb#258
  def to_s; end

  # source://pry//lib/pry/code.rb#244
  def with_indentation(spaces = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#221
  def with_line_numbers(y_n = T.unsafe(nil)); end

  # source://pry//lib/pry/code.rb#232
  def with_marker(lineno = T.unsafe(nil)); end

  protected

  # source://pry//lib/pry/code.rb#353
  def alter(&block); end

  private

  # source://pry//lib/pry/code.rb#345
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end

  class << self
    # source://pry//lib/pry/code.rb#42
    def from_file(filename, code_type = T.unsafe(nil)); end

    # source://pry//lib/pry/code.rb#55
    def from_method(meth, start_line = T.unsafe(nil)); end

    # source://pry//lib/pry/code.rb#69
    def from_module(mod, candidate_rank = T.unsafe(nil), start_line = T.unsafe(nil)); end
  end
end

# source://pry//lib/pry/code/code_range.rb#8
class Pry::Code::CodeRange
  # source://pry//lib/pry/code/code_range.rb#11
  def initialize(start_line, end_line = T.unsafe(nil)); end

  # source://pry//lib/pry/code/code_range.rb#19
  def indices_range(lines); end

  private

  # source://pry//lib/pry/code/code_range.rb#27
  def end_line; end

  # source://pry//lib/pry/code/code_range.rb#57
  def find_end_index(lines); end

  # source://pry//lib/pry/code/code_range.rb#50
  def find_start_index(lines); end

  # source://pry//lib/pry/code/code_range.rb#32
  def force_set_end_line; end

  # source://pry//lib/pry/code/code_range.rb#45
  def indices(lines); end

  # source://pry//lib/pry/code/code_range.rb#66
  def set_end_line_from_range; end

  # source://pry//lib/pry/code/code_range.rb#25
  def start_line; end
end

# source://pry//lib/pry/code/loc.rb#23
class Pry::Code::LOC
  # source://pry//lib/pry/code/loc.rb#29
  def initialize(line, lineno); end

  # source://pry//lib/pry/code/loc.rb#34
  def ==(other); end

  # source://pry//lib/pry/code/loc.rb#64
  def add_line_number(max_width = T.unsafe(nil), color = T.unsafe(nil)); end

  # source://pry//lib/pry/code/loc.rb#81
  def add_marker(marker_lineno); end

  # source://pry//lib/pry/code/loc.rb#56
  def colorize(code_type); end

  # source://pry//lib/pry/code/loc.rb#38
  def dup; end

  # source://pry//lib/pry/code/loc.rb#98
  def handle_multiline_entries_from_edit_command(line, max_width); end

  # source://pry//lib/pry/code/loc.rb#94
  def indent(distance); end

  # source://pry//lib/pry/code/loc.rb#43
  def line; end

  # source://pry//lib/pry/code/loc.rb#48
  def lineno; end

  # source://pry//lib/pry/code/loc.rb#25
  def tuple; end
end

# source://pry//lib/pry/code/code_file.rb#6
class Pry::CodeFile
  # source://pry//lib/pry/code/code_file.rb#41
  def initialize(filename, code_type = T.unsafe(nil)); end

  # source://pry//lib/pry/code/code_file.rb#47
  def code; end

  # source://pry//lib/pry/code/code_file.rb#37
  def code_type; end

  private

  # source://pry//lib/pry/code/code_file.rb#64
  def abs_path; end

  # source://pry//lib/pry/code/code_file.rb#80
  def code_path; end

  # source://pry//lib/pry/code/code_file.rb#110
  def from_load_path; end

  # source://pry//lib/pry/code/code_file.rb#105
  def from_pry_init_pwd; end

  # source://pry//lib/pry/code/code_file.rb#100
  def from_pwd; end

  # source://pry//lib/pry/code/code_file.rb#73
  def readable?(path); end

  # source://pry//lib/pry/code/code_file.rb#89
  def type_from_filename(filename, default = T.unsafe(nil)); end
end

# source://pry//lib/pry/code/code_file.rb#7
Pry::CodeFile::DEFAULT_EXT = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/code/code_file.rb#11
Pry::CodeFile::EXTENSIONS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/code/code_file.rb#28
Pry::CodeFile::FILES = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/code/code_file.rb#34
Pry::CodeFile::INITIAL_PWD = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/code_object.rb#22
class Pry::CodeObject
  include ::Pry::Helpers::OptionsHelpers
  include ::Pry::Helpers::CommandHelpers

  # source://pry//lib/pry/code_object.rb#82
  def initialize(str, pry_instance, options = T.unsafe(nil)); end

  # source://pry//lib/pry/code_object.rb#94
  def command_lookup; end

  # source://pry//lib/pry/code_object.rb#118
  def default_lookup; end

  # source://pry//lib/pry/code_object.rb#102
  def empty_lookup; end

  # source://pry//lib/pry/code_object.rb#136
  def method_or_class_lookup; end

  # source://pry//lib/pry/code_object.rb#79
  def pry_instance; end

  # source://pry//lib/pry/code_object.rb#79
  def pry_instance=(_arg0); end

  # source://pry//lib/pry/code_object.rb#77
  def str; end

  # source://pry//lib/pry/code_object.rb#77
  def str=(_arg0); end

  # source://pry//lib/pry/code_object.rb#80
  def super_level; end

  # source://pry//lib/pry/code_object.rb#80
  def super_level=(_arg0); end

  # source://pry//lib/pry/code_object.rb#78
  def target; end

  # source://pry//lib/pry/code_object.rb#78
  def target=(_arg0); end

  private

  # source://pry//lib/pry/code_object.rb#163
  def looks_like_an_instance_method?(str); end

  # source://pry//lib/pry/code_object.rb#188
  def lookup_super(obj, super_level); end

  # source://pry//lib/pry/code_object.rb#173
  def safe_to_evaluate?(str); end

  # source://pry//lib/pry/code_object.rb#152
  def sourcable_object?(obj); end

  # source://pry//lib/pry/code_object.rb#181
  def target_self; end

  class << self
    # source://pry//lib/pry/code_object.rb#69
    def lookup(str, pry_instance, options = T.unsafe(nil)); end
  end
end

# source://pry//lib/pry/code_object.rb#23
module Pry::CodeObject::Helpers
  # source://pry//lib/pry/code_object.rb#30
  def c_method?; end

  # source://pry//lib/pry/code_object.rb#46
  def c_module?; end

  # source://pry//lib/pry/code_object.rb#38
  def command?; end

  # source://pry//lib/pry/code_object.rb#34
  def module_with_yard_docs?; end

  # source://pry//lib/pry/code_object.rb#26
  def real_method_object?; end
end

# source://pry//lib/pry/color_printer.rb#8
class Pry::ColorPrinter < ::PP
  # source://pry//lib/pry/color_printer.rb#25
  def pp(object); end

  # source://pry//lib/pry/color_printer.rb#37
  def text(str, max_width = T.unsafe(nil)); end

  private

  # source://pry//lib/pry/color_printer.rb#49
  def highlight_object_literal(object_literal); end

  # source://pry//lib/pry/color_printer.rb#55
  def inspect_object(object); end

  class << self
    # source://pry//lib/pry/color_printer.rb#11
    def default(_output, value, pry_instance); end

    # source://pry//lib/pry/color_printer.rb#18
    def pp(obj, output = T.unsafe(nil), max_width = T.unsafe(nil)); end
  end
end

# source://pry//lib/pry/command.rb#11
class Pry::Command
  include ::Pry::Helpers::BaseHelpers
  include ::Pry::Helpers::OptionsHelpers
  include ::Pry::Helpers::CommandHelpers
  include ::Pry::Helpers::Text
  extend ::Pry::Helpers::DocumentationHelpers
  extend ::Pry::CodeObject::Helpers

  # source://pry//lib/pry/command.rb#230
  def initialize(context = T.unsafe(nil)); end

  # source://pry//lib/pry/command.rb#292
  def _pry_; end

  # source://pry//lib/pry/command.rb#217
  def _pry_=(_arg0); end

  # source://pry//lib/pry/command.rb#213
  def arg_string; end

  # source://pry//lib/pry/command.rb#213
  def arg_string=(_arg0); end

  # source://pry//lib/pry/command.rb#253
  def block; end

  # source://pry//lib/pry/command.rb#211
  def captures; end

  # source://pry//lib/pry/command.rb#211
  def captures=(_arg0); end

  # source://pry//lib/pry/command.rb#329
  def check_for_command_collision(command_match, arg_string); end

  # source://pry//lib/pry/command.rb#226
  def command_block; end

  # source://pry//lib/pry/command.rb#226
  def command_block=(_arg0); end

  # source://pry//lib/pry/command.rb#261
  def command_name; end

  # source://pry//lib/pry/command.rb#257
  def command_options; end

  # source://pry//lib/pry/command.rb#215
  def command_set; end

  # source://pry//lib/pry/command.rb#215
  def command_set=(_arg0); end

  # source://pry//lib/pry/command.rb#284
  def commands; end

  # source://pry//lib/pry/command.rb#411
  def complete(_search); end

  # source://pry//lib/pry/command.rb#214
  def context; end

  # source://pry//lib/pry/command.rb#214
  def context=(_arg0); end

  # source://pry//lib/pry/command.rb#249
  def description; end

  # source://pry//lib/pry/command.rb#212
  def eval_string; end

  # source://pry//lib/pry/command.rb#212
  def eval_string=(_arg0); end

  # source://pry//lib/pry/command.rb#216
  def hooks; end

  # source://pry//lib/pry/command.rb#216
  def hooks=(_arg0); end

  # source://pry//lib/pry/command.rb#318
  def interpolate_string(str); end

  # source://pry//lib/pry/command.rb#245
  def match; end

  # source://pry//lib/pry/command.rb#241
  def name; end

  # source://pry//lib/pry/command.rb#209
  def output; end

  # source://pry//lib/pry/command.rb#209
  def output=(_arg0); end

  # source://pry//lib/pry/command.rb#394
  def process_line(line); end

  # source://pry//lib/pry/command.rb#217
  def pry_instance; end

  # source://pry//lib/pry/command.rb#217
  def pry_instance=(_arg0); end

  # source://pry//lib/pry/command.rb#278
  def run(command_string, *args); end

  # source://pry//lib/pry/command.rb#265
  def source; end

  # source://pry//lib/pry/command.rb#309
  def state; end

  # source://pry//lib/pry/command.rb#210
  def target; end

  # source://pry//lib/pry/command.rb#210
  def target=(_arg0); end

  # source://pry//lib/pry/command.rb#298
  def target_self; end

  # source://pry//lib/pry/command.rb#356
  def tokenize(val); end

  # source://pry//lib/pry/command.rb#288
  def void; end

  private

  # source://pry//lib/pry/command.rb#485
  def after_hooks; end

  # source://pry//lib/pry/command.rb#481
  def before_hooks; end

  # source://pry//lib/pry/command.rb#425
  def call_safely(*args); end

  # source://pry//lib/pry/command.rb#492
  def call_with_hooks(*args); end

  # source://pry//lib/pry/command.rb#476
  def find_hooks(event); end

  # source://pry//lib/pry/command.rb#509
  def normalize_method_args(method, args); end

  # source://pry//lib/pry/command.rb#451
  def pass_block(arg_string); end

  # source://pry//lib/pry/command.rb#436
  def use_unpatched_symbol; end

  class << self
    # source://pry//lib/pry/command.rb#61
    def banner(arg = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#66
    def block; end

    # source://pry//lib/pry/command.rb#30
    def block=(_arg0); end

    # source://pry//lib/pry/command.rb#109
    def command_name; end

    # source://pry//lib/pry/command.rb#51
    def command_options(arg = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#32
    def command_options=(_arg0); end

    # source://pry//lib/pry/command.rb#165
    def command_regex; end

    # source://pry//lib/pry/command.rb#172
    def convert_to_regex(obj); end

    # source://pry//lib/pry/command.rb#89
    def default_options(match); end

    # source://pry//lib/pry/command.rb#45
    def description(arg = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#31
    def description=(_arg0); end

    # source://pry//lib/pry/command.rb#75
    def doc; end

    # source://pry//lib/pry/command.rb#79
    def file; end

    # source://pry//lib/pry/command.rb#185
    def group(name = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#105
    def inspect; end

    # source://pry//lib/pry/command.rb#84
    def line; end

    # source://pry//lib/pry/command.rb#35
    def match(arg = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#33
    def match=(_arg0); end

    # source://pry//lib/pry/command.rb#153
    def match_score(val); end

    # source://pry//lib/pry/command.rb#133
    def matches?(val); end

    # source://pry//lib/pry/command.rb#101
    def name; end

    # source://pry//lib/pry/command.rb#51
    def options(arg = T.unsafe(nil)); end

    # source://pry//lib/pry/command.rb#32
    def options=(_arg0); end

    # source://pry//lib/pry/command.rb#70
    def source; end

    # source://pry//lib/pry/command.rb#79
    def source_file; end

    # source://pry//lib/pry/command.rb#84
    def source_line; end

    # source://pry//lib/pry/command.rb#202
    def state; end

    # source://pry//lib/pry/command.rb#120
    def subclass(match, description, options, helpers, &block); end
  end
end

# source://pry//lib/pry/commands/amend_line.rb#5
class Pry::Command::AmendLine < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/amend_line.rb#22
  def process; end

  private

  # source://pry//lib/pry/commands/amend_line.rb#33
  def amend_input; end

  # source://pry//lib/pry/commands/amend_line.rb#47
  def delete_from_array(array, range); end

  # source://pry//lib/pry/commands/amend_line.rb#51
  def insert_into_array(array, range); end

  # source://pry//lib/pry/commands/amend_line.rb#62
  def line_count; end

  # source://pry//lib/pry/commands/amend_line.rb#90
  def line_range; end

  # source://pry//lib/pry/commands/amend_line.rb#56
  def replace_in_array(array, range); end

  # source://pry//lib/pry/commands/amend_line.rb#70
  def start_and_end_line_number; end

  # source://pry//lib/pry/commands/amend_line.rb#83
  def zero_indexed_range_from_one_indexed_numbers(start_line_number, end_line_number); end
end

# source://pry//lib/pry/commands/bang.rb#5
class Pry::Command::Bang < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/bang.rb#16
  def process; end
end

# source://pry//lib/pry/commands/bang_pry.rb#5
class Pry::Command::BangPry < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/bang_pry.rb#14
  def process; end
end

# source://pry//lib/pry/commands/cat.rb#5
class Pry::Command::Cat < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/cat.rb#53
  def complete(search); end

  # source://pry//lib/pry/commands/cat.rb#57
  def load_path_completions; end

  # source://pry//lib/pry/commands/cat.rb#23
  def options(opt); end

  # source://pry//lib/pry/commands/cat.rb#38
  def process; end
end

# source://pry//lib/pry/commands/cat/abstract_formatter.rb#6
class Pry::Command::Cat::AbstractFormatter
  include ::Pry::Helpers::OptionsHelpers
  include ::Pry::Helpers::CommandHelpers
  include ::Pry::Helpers::BaseHelpers

  private

  # source://pry//lib/pry/commands/cat/abstract_formatter.rb#26
  def between_lines; end

  # source://pry//lib/pry/commands/cat/abstract_formatter.rb#18
  def code_type; end

  # source://pry//lib/pry/commands/cat/abstract_formatter.rb#12
  def decorate(content); end

  # source://pry//lib/pry/commands/cat/abstract_formatter.rb#22
  def use_line_numbers?; end
end

# source://pry//lib/pry/commands/cat/exception_formatter.rb#6
class Pry::Command::Cat::ExceptionFormatter < ::Pry::Command::Cat::AbstractFormatter
  include ::Pry::Helpers::Text

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#12
  def initialize(exception, pry_instance, opts); end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#7
  def ex; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#18
  def format; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#8
  def opts; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#9
  def pry_instance; end

  private

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#56
  def backtrace_file; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#37
  def backtrace_level; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#60
  def backtrace_line; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#64
  def check_for_errors; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#33
  def code_window_size; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#78
  def header; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#52
  def increment_backtrace_level; end

  # source://pry//lib/pry/commands/cat/exception_formatter.rb#71
  def start_and_end_line_for_code_window; end
end

# source://pry//lib/pry/commands/cat/file_formatter.rb#6
class Pry::Command::Cat::FileFormatter < ::Pry::Command::Cat::AbstractFormatter
  # source://pry//lib/pry/commands/cat/file_formatter.rb#11
  def initialize(file_with_embedded_line, pry_instance, opts); end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#27
  def file_and_line; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#7
  def file_with_embedded_line; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#22
  def format; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#8
  def opts; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#9
  def pry_instance; end

  private

  # source://pry//lib/pry/commands/cat/file_formatter.rb#55
  def code_type; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#43
  def code_window_size; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#47
  def decorate(content); end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#59
  def detect_code_type_from_file(file_name); end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#35
  def file_name; end

  # source://pry//lib/pry/commands/cat/file_formatter.rb#39
  def line_number; end
end

# source://pry//lib/pry/commands/cat/input_expression_formatter.rb#6
class Pry::Command::Cat::InputExpressionFormatter < ::Pry::Command::Cat::AbstractFormatter
  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#10
  def initialize(input_expressions, opts); end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#15
  def format; end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#7
  def input_expressions; end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#7
  def input_expressions=(_arg0); end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#8
  def opts; end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#8
  def opts=(_arg0); end

  private

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#42
  def normalized_expression_range; end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#37
  def numbered_input_items; end

  # source://pry//lib/pry/commands/cat/input_expression_formatter.rb#33
  def selected_input_items; end
end

# source://pry//lib/pry/commands/cd.rb#5
class Pry::Command::Cd < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/cd.rb#25
  def process; end
end

# source://pry//lib/pry/commands/change_inspector.rb#5
class Pry::Command::ChangeInspector < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/change_inspector.rb#17
  def process(inspector); end

  private

  # source://pry//lib/pry/commands/change_inspector.rb#28
  def inspector_map; end
end

# source://pry//lib/pry/commands/change_prompt.rb#5
class Pry::Command::ChangePrompt < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/change_prompt.rb#16
  def options(opt); end

  # source://pry//lib/pry/commands/change_prompt.rb#20
  def process(prompt); end

  private

  # source://pry//lib/pry/commands/change_prompt.rb#38
  def change_prompt(prompt); end

  # source://pry//lib/pry/commands/change_prompt.rb#30
  def list_prompts; end
end

# source://pry//lib/pry/commands/clear_screen.rb#5
class Pry::Command::ClearScreen < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/clear_screen.rb#10
  def process; end
end

# source://pry//lib/pry/commands/code_collector.rb#5
class Pry::Command::CodeCollector
  include ::Pry::Helpers::OptionsHelpers
  include ::Pry::Helpers::CommandHelpers

  # source://pry//lib/pry/commands/code_collector.rb#23
  def initialize(args, opts, pry_instance); end

  # source://pry//lib/pry/commands/code_collector.rb#8
  def args; end

  # source://pry//lib/pry/commands/code_collector.rb#86
  def code_object; end

  # source://pry//lib/pry/commands/code_collector.rb#60
  def content; end

  # source://pry//lib/pry/commands/code_collector.rb#13
  def file; end

  # source://pry//lib/pry/commands/code_collector.rb#13
  def file=(_arg0); end

  # source://pry//lib/pry/commands/code_collector.rb#123
  def line_range; end

  # source://pry//lib/pry/commands/code_collector.rb#128
  def obj_name; end

  # source://pry//lib/pry/commands/code_collector.rb#9
  def opts; end

  # source://pry//lib/pry/commands/code_collector.rb#116
  def pry_input_content; end

  # source://pry//lib/pry/commands/code_collector.rb#10
  def pry_instance; end

  # source://pry//lib/pry/commands/code_collector.rb#104
  def pry_output_content; end

  # source://pry//lib/pry/commands/code_collector.rb#96
  def restrict_to_lines(content, range); end

  private

  # source://pry//lib/pry/commands/code_collector.rb#134
  def bad_option_combination?; end

  # source://pry//lib/pry/commands/code_collector.rb#153
  def code_object_doc; end

  # source://pry//lib/pry/commands/code_collector.rb#157
  def code_object_source_or_file; end

  # source://pry//lib/pry/commands/code_collector.rb#175
  def convert_to_range(range); end

  # source://pry//lib/pry/commands/code_collector.rb#171
  def could_not_locate(name); end

  # source://pry//lib/pry/commands/code_collector.rb#161
  def file_content; end

  # source://pry//lib/pry/commands/code_collector.rb#139
  def pry_array_content_as_string(array, ranges); end

  class << self
    # source://pry//lib/pry/commands/code_collector.rb#30
    def inject_options(opt); end

    # source://pry//lib/pry/commands/code_collector.rb#16
    def input_expression_ranges; end

    # source://pry//lib/pry/commands/code_collector.rb#16
    def input_expression_ranges=(_arg0); end

    # source://pry//lib/pry/commands/code_collector.rb#17
    def output_result_ranges; end

    # source://pry//lib/pry/commands/code_collector.rb#17
    def output_result_ranges=(_arg0); end
  end
end

# source://pry//lib/pry/commands/disable_pry.rb#5
class Pry::Command::DisablePry < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/disable_pry.rb#23
  def process; end
end

# source://pry//lib/pry/commands/edit.rb#5
class Pry::Command::Edit < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/edit.rb#89
  def apply_runtime_patch; end

  # source://pry//lib/pry/commands/edit.rb#172
  def bad_option_combination?; end

  # source://pry//lib/pry/commands/edit.rb#152
  def code_object; end

  # source://pry//lib/pry/commands/edit.rb#105
  def ensure_file_name_is_valid(file_name); end

  # source://pry//lib/pry/commands/edit.rb#119
  def file_and_line; end

  # source://pry//lib/pry/commands/edit.rb#115
  def file_and_line_for_current_exception; end

  # source://pry//lib/pry/commands/edit.rb#78
  def file_based_exception?; end

  # source://pry//lib/pry/commands/edit.rb#135
  def file_edit; end

  # source://pry//lib/pry/commands/edit.rb#148
  def filename_argument; end

  # source://pry//lib/pry/commands/edit.rb#203
  def initial_temp_file_content; end

  # source://pry//lib/pry/commands/edit.rb#180
  def input_expression; end

  # source://pry//lib/pry/commands/edit.rb#195
  def never_reload?; end

  # source://pry//lib/pry/commands/edit.rb#25
  def options(opt); end

  # source://pry//lib/pry/commands/edit.rb#168
  def patch_exception?; end

  # source://pry//lib/pry/commands/edit.rb#163
  def previously_patched?(code_object); end

  # source://pry//lib/pry/commands/edit.rb#215
  def probably_a_file?(str); end

  # source://pry//lib/pry/commands/edit.rb#46
  def process; end

  # source://pry//lib/pry/commands/edit.rb#158
  def pry_method?(code_object); end

  # source://pry//lib/pry/commands/edit.rb#199
  def reload?(file_name = T.unsafe(nil)); end

  # source://pry//lib/pry/commands/edit.rb#191
  def reloadable?; end

  # source://pry//lib/pry/commands/edit.rb#69
  def repl_edit; end

  # source://pry//lib/pry/commands/edit.rb#64
  def repl_edit?; end

  # source://pry//lib/pry/commands/edit.rb#82
  def runtime_patch?; end
end

# source://pry//lib/pry/commands/edit/exception_patcher.rb#6
class Pry::Command::Edit::ExceptionPatcher
  # source://pry//lib/pry/commands/edit/exception_patcher.rb#11
  def initialize(pry_instance, state, exception_file_and_line); end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#9
  def file_and_line; end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#9
  def file_and_line=(_arg0); end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#18
  def perform_patch; end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#7
  def pry_instance; end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#7
  def pry_instance=(_arg0); end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#8
  def state; end

  # source://pry//lib/pry/commands/edit/exception_patcher.rb#8
  def state=(_arg0); end
end

# source://pry//lib/pry/commands/edit/file_and_line_locator.rb#6
module Pry::Command::Edit::FileAndLineLocator
  class << self
    # source://pry//lib/pry/commands/edit/file_and_line_locator.rb#8
    def from_binding(target); end

    # source://pry//lib/pry/commands/edit/file_and_line_locator.rb#16
    def from_code_object(code_object, filename_argument); end

    # source://pry//lib/pry/commands/edit/file_and_line_locator.rb#24
    def from_exception(exception, backtrace_level); end

    # source://pry//lib/pry/commands/edit/file_and_line_locator.rb#38
    def from_filename_argument(filename_argument); end
  end
end

# source://pry//lib/pry/commands/exit.rb#5
class Pry::Command::Exit < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/exit.rb#25
  def process; end

  # source://pry//lib/pry/commands/exit.rb#34
  def process_pop_and_return; end
end

# source://pry//lib/pry/commands/exit_all.rb#5
class Pry::Command::ExitAll < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/exit_all.rb#18
  def process; end
end

# source://pry//lib/pry/commands/exit_program.rb#5
class Pry::Command::ExitProgram < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/exit_program.rb#18
  def process; end
end

# source://pry//lib/pry/commands/find_method.rb#5
class Pry::Command::FindMethod < ::Pry::ClassCommand
  extend ::Pry::Helpers::BaseHelpers

  # source://pry//lib/pry/commands/find_method.rb#31
  def options(opt); end

  # source://pry//lib/pry/commands/find_method.rb#36
  def process; end

  private

  # source://pry//lib/pry/commands/find_method.rb#100
  def additional_info(header, method); end

  # source://pry//lib/pry/commands/find_method.rb#186
  def content_search(namespace); end

  # source://pry//lib/pry/commands/find_method.rb#108
  def matched_method_lines(header, method); end

  # source://pry//lib/pry/commands/find_method.rb#174
  def name_search(namespace); end

  # source://pry//lib/pry/commands/find_method.rb#48
  def pattern; end

  # source://pry//lib/pry/commands/find_method.rb#80
  def print_matches(matches); end

  # source://pry//lib/pry/commands/find_method.rb#90
  def print_matches_for_class(klass, grouped); end

  # source://pry//lib/pry/commands/find_method.rb#120
  def recurse_namespace(klass, done = T.unsafe(nil), &block); end

  # source://pry//lib/pry/commands/find_method.rb#150
  def search_all_methods(namespace); end

  # source://pry//lib/pry/commands/find_method.rb#67
  def search_class; end

  # source://pry//lib/pry/commands/find_method.rb#55
  def show_search_results(matches); end
end

# source://pry//lib/pry/commands/fix_indent.rb#5
class Pry::Command::FixIndent < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/fix_indent.rb#15
  def process; end
end

# source://pry//lib/pry/commands/help.rb#5
class Pry::Command::Help < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/help.rb#29
  def command_groups; end

  # source://pry//lib/pry/commands/help.rb#125
  def display_command(command); end

  # source://pry//lib/pry/commands/help.rb#111
  def display_filtered_commands(search); end

  # source://pry//lib/pry/commands/help.rb#98
  def display_filtered_search_results(search); end

  # source://pry//lib/pry/commands/help.rb#44
  def display_index(groups); end

  # source://pry//lib/pry/commands/help.rb#86
  def display_search(search); end

  # source://pry//lib/pry/commands/help.rb#159
  def group_sort_key(group_name); end

  # source://pry//lib/pry/commands/help.rb#62
  def help_text_for_commands(name, commands); end

  # source://pry//lib/pry/commands/help.rb#155
  def normalize(key); end

  # source://pry//lib/pry/commands/help.rb#33
  def process; end

  # source://pry//lib/pry/commands/help.rb#137
  def search_hash(search, hash); end

  # source://pry//lib/pry/commands/help.rb#79
  def sorted_commands(commands); end

  # source://pry//lib/pry/commands/help.rb#71
  def sorted_group_names(groups); end

  # source://pry//lib/pry/commands/help.rb#20
  def visible_commands; end
end

# source://pry//lib/pry/commands/hist.rb#5
class Pry::Command::Hist < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/hist.rb#25
  def options(opt); end

  # source://pry//lib/pry/commands/hist.rb#43
  def process; end

  private

  # source://pry//lib/pry/commands/hist.rb#143
  def check_for_juxtaposed_replay(replay_sequence); end

  # source://pry//lib/pry/commands/hist.rb#168
  def find_history; end

  # source://pry//lib/pry/commands/hist.rb#105
  def process_clear; end

  # source://pry//lib/pry/commands/hist.rb#78
  def process_display; end

  # source://pry//lib/pry/commands/hist.rb#110
  def process_replay; end

  # source://pry//lib/pry/commands/hist.rb#86
  def process_save; end
end

# source://pry//lib/pry/commands/import_set.rb#5
class Pry::Command::ImportSet < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/import_set.rb#17
  def process(_command_set_name); end
end

# source://pry//lib/pry/commands/jump_to.rb#5
class Pry::Command::JumpTo < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/jump_to.rb#14
  def process(break_level); end
end

# source://pry//lib/pry/commands/list_inspectors.rb#5
class Pry::Command::ListInspectors < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/list_inspectors.rb#16
  def process; end

  private

  # source://pry//lib/pry/commands/list_inspectors.rb#28
  def inspector_map; end

  # source://pry//lib/pry/commands/list_inspectors.rb#36
  def selected_inspector?(inspector); end

  # source://pry//lib/pry/commands/list_inspectors.rb#32
  def selected_text; end
end

# source://pry//lib/pry/commands/ls/jruby_hacks.rb#5
class Pry::Command::Ls < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/ls.rb#85
  def no_user_opts?; end

  # source://pry//lib/pry/commands/ls.rb#52
  def options(opt); end

  # source://pry//lib/pry/commands/ls.rb#90
  def process; end

  private

  # source://pry//lib/pry/commands/ls.rb#106
  def error_list; end

  # source://pry//lib/pry/commands/ls.rb#126
  def raise_errors_if_arguments_are_weird; end
end

# source://pry//lib/pry/commands/ls/constants.rb#6
class Pry::Command::Ls::Constants < ::Pry::Command::Ls::Formatter
  include ::Pry::Command::Ls::Interrogatable

  # source://pry//lib/pry/commands/ls/constants.rb#14
  def initialize(interrogatee, no_user_opts, opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/constants.rb#23
  def correct_opts?; end

  # source://pry//lib/pry/commands/ls/constants.rb#27
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/constants.rb#39
  def format(mod, constants); end

  # source://pry//lib/pry/commands/ls/constants.rb#35
  def show_deprecated_constants?; end
end

# source://pry//lib/pry/commands/ls/constants.rb#7
Pry::Command::Ls::Constants::DEPRECATED_CONSTANTS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/commands/ls.rb#6
Pry::Command::Ls::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/commands/ls/formatter.rb#6
class Pry::Command::Ls::Formatter
  # source://pry//lib/pry/commands/ls/formatter.rb#10
  def initialize(pry_instance); end

  # source://pry//lib/pry/commands/ls/formatter.rb#7
  def grep=(_arg0); end

  # source://pry//lib/pry/commands/ls/formatter.rb#8
  def pry_instance; end

  # source://pry//lib/pry/commands/ls/formatter.rb#16
  def write_out; end

  private

  # source://pry//lib/pry/commands/ls/formatter.rb#24
  def color(type, str); end

  # source://pry//lib/pry/commands/ls/formatter.rb#41
  def correct_opts?; end

  # source://pry//lib/pry/commands/ls/formatter.rb#37
  def format_value(value); end

  # source://pry//lib/pry/commands/ls/formatter.rb#49
  def grep; end

  # source://pry//lib/pry/commands/ls/formatter.rb#30
  def output_section(heading, body); end

  # source://pry//lib/pry/commands/ls/formatter.rb#45
  def output_self; end
end

# source://pry//lib/pry/commands/ls/globals.rb#7
class Pry::Command::Ls::Globals < ::Pry::Command::Ls::Formatter
  # source://pry//lib/pry/commands/ls/globals.rb#24
  def initialize(opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/globals.rb#29
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/globals.rb#36
  def format(globals); end
end

# source://pry//lib/pry/commands/ls/globals.rb#8
Pry::Command::Ls::Globals::BUILTIN_GLOBALS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/commands/ls/globals.rb#19
Pry::Command::Ls::Globals::PSEUDO_GLOBALS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/commands/ls/grep.rb#6
class Pry::Command::Ls::Grep
  # source://pry//lib/pry/commands/ls/grep.rb#7
  def initialize(grep_regexp); end

  # source://pry//lib/pry/commands/ls/grep.rb#11
  def regexp; end
end

# source://pry//lib/pry/commands/ls/instance_vars.rb#6
class Pry::Command::Ls::InstanceVars < ::Pry::Command::Ls::Formatter
  include ::Pry::Command::Ls::Interrogatable

  # source://pry//lib/pry/commands/ls/instance_vars.rb#9
  def initialize(interrogatee, no_user_opts, opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/instance_vars.rb#16
  def correct_opts?; end

  # source://pry//lib/pry/commands/ls/instance_vars.rb#20
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/instance_vars.rb#34
  def format(type, vars); end
end

# source://pry//lib/pry/commands/ls/interrogatable.rb#6
module Pry::Command::Ls::Interrogatable
  private

  # source://pry//lib/pry/commands/ls/interrogatable.rb#13
  def interrogatee_mod; end

  # source://pry//lib/pry/commands/ls/interrogatable.rb#9
  def interrogating_a_module?; end
end

# source://pry//lib/pry/commands/ls/jruby_hacks.rb#6
module Pry::Command::Ls::JRubyHacks
  private

  # source://pry//lib/pry/commands/ls/jruby_hacks.rb#40
  def rubbishness(name); end

  # source://pry//lib/pry/commands/ls/jruby_hacks.rb#21
  def trim_jruby_aliases(methods); end
end

# source://pry//lib/pry/commands/ls/local_names.rb#6
class Pry::Command::Ls::LocalNames < ::Pry::Command::Ls::Formatter
  # source://pry//lib/pry/commands/ls/local_names.rb#7
  def initialize(no_user_opts, args, pry_instance); end

  # source://pry//lib/pry/commands/ls/local_names.rb#14
  def correct_opts?; end

  # source://pry//lib/pry/commands/ls/local_names.rb#18
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/local_names.rb#25
  def format(locals); end
end

# source://pry//lib/pry/commands/ls/local_vars.rb#6
class Pry::Command::Ls::LocalVars < ::Pry::Command::Ls::Formatter
  # source://pry//lib/pry/commands/ls/local_vars.rb#7
  def initialize(opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/local_vars.rb#13
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/local_vars.rb#34
  def colorized_assignment_style(lhs, rhs, desired_width = T.unsafe(nil)); end

  # source://pry//lib/pry/commands/ls/local_vars.rb#25
  def format(name_value_pairs); end
end

# source://pry//lib/pry/commands/ls/ls_entity.rb#6
class Pry::Command::Ls::LsEntity
  # source://pry//lib/pry/commands/ls/ls_entity.rb#9
  def initialize(opts); end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#18
  def entities_table; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#7
  def pry_instance; end

  private

  # source://pry//lib/pry/commands/ls/ls_entity.rb#32
  def constants; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#56
  def entities; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#28
  def globals; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#24
  def grep(entity); end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#44
  def instance_vars; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#48
  def local_names; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#52
  def local_vars; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#36
  def methods; end

  # source://pry//lib/pry/commands/ls/ls_entity.rb#40
  def self_methods; end
end

# source://pry//lib/pry/commands/ls/methods.rb#6
class Pry::Command::Ls::Methods < ::Pry::Command::Ls::Formatter
  include ::Pry::Command::Ls::Interrogatable
  include ::Pry::Command::Ls::JRubyHacks
  include ::Pry::Command::Ls::MethodsHelper

  # source://pry//lib/pry/commands/ls/methods.rb#10
  def initialize(interrogatee, no_user_opts, opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/methods.rb#22
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/methods.rb#41
  def below_ceiling; end

  # source://pry//lib/pry/commands/ls/methods.rb#35
  def correct_opts?; end
end

# source://pry//lib/pry/commands/ls/methods_helper.rb#6
module Pry::Command::Ls::MethodsHelper
  include ::Pry::Command::Ls::JRubyHacks

  private

  # source://pry//lib/pry/commands/ls/methods_helper.rb#12
  def all_methods(instance_methods = T.unsafe(nil)); end

  # source://pry//lib/pry/commands/ls/methods_helper.rb#34
  def format(methods); end

  # source://pry//lib/pry/commands/ls/methods_helper.rb#26
  def resolution_order; end
end

# source://pry//lib/pry/commands/ls/self_methods.rb#6
class Pry::Command::Ls::SelfMethods < ::Pry::Command::Ls::Formatter
  include ::Pry::Command::Ls::Interrogatable
  include ::Pry::Command::Ls::JRubyHacks
  include ::Pry::Command::Ls::MethodsHelper

  # source://pry//lib/pry/commands/ls/self_methods.rb#10
  def initialize(interrogatee, no_user_opts, opts, pry_instance); end

  # source://pry//lib/pry/commands/ls/self_methods.rb#18
  def output_self; end

  private

  # source://pry//lib/pry/commands/ls/self_methods.rb#28
  def correct_opts?; end
end

# source://pry//lib/pry/commands/nesting.rb#5
class Pry::Command::Nesting < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/nesting.rb#14
  def process; end
end

# source://pry//lib/pry/commands/play.rb#5
class Pry::Command::Play < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/play.rb#74
  def code_object; end

  # source://pry//lib/pry/commands/play.rb#82
  def content; end

  # source://pry//lib/pry/commands/play.rb#60
  def content_after_options; end

  # source://pry//lib/pry/commands/play.rb#70
  def content_at_expression; end

  # source://pry//lib/pry/commands/play.rb#92
  def default_file; end

  # source://pry//lib/pry/commands/play.rb#102
  def file_content; end

  # source://pry//lib/pry/commands/play.rb#29
  def options(opt); end

  # source://pry//lib/pry/commands/play.rb#48
  def perform_play; end

  # source://pry//lib/pry/commands/play.rb#41
  def process; end

  # source://pry//lib/pry/commands/play.rb#78
  def should_use_default_file?; end

  # source://pry//lib/pry/commands/play.rb#53
  def show_input; end
end

# source://pry//lib/pry/commands/pry_backtrace.rb#5
class Pry::Command::PryBacktrace < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/pry_backtrace.rb#22
  def process; end
end

# source://pry//lib/pry/commands/raise_up.rb#6
class Pry::Command::RaiseUp < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/raise_up.rb#27
  def process; end
end

# source://pry//lib/pry/commands/reload_code.rb#5
class Pry::Command::ReloadCode < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/reload_code.rb#20
  def process; end

  private

  # source://pry//lib/pry/commands/reload_code.rb#58
  def check_for_reloadability(code_object, identifier); end

  # source://pry//lib/pry/commands/reload_code.rb#32
  def current_file; end

  # source://pry//lib/pry/commands/reload_code.rb#42
  def reload_current_file; end

  # source://pry//lib/pry/commands/reload_code.rb#51
  def reload_object(identifier); end
end

# source://pry//lib/pry/commands/reset.rb#5
class Pry::Command::Reset < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/reset.rb#14
  def process; end
end

# source://pry//lib/pry/commands/ri.rb#7
class Pry::Command::Ri < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/ri.rb#21
  def process(spec); end
end

# source://pry//lib/pry/commands/save_file.rb#5
class Pry::Command::SaveFile < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/save_file.rb#50
  def display_content; end

  # source://pry//lib/pry/commands/save_file.rb#39
  def file_name; end

  # source://pry//lib/pry/commands/save_file.rb#56
  def mode; end

  # source://pry//lib/pry/commands/save_file.rb#21
  def options(opt); end

  # source://pry//lib/pry/commands/save_file.rb#28
  def process; end

  # source://pry//lib/pry/commands/save_file.rb#43
  def save_file; end
end

# source://pry//lib/pry/commands/shell_command.rb#5
class Pry::Command::ShellCommand < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/shell_command.rb#21
  def process(cmd); end

  private

  # source://pry//lib/pry/commands/shell_command.rb#50
  def cd_path_env; end

  # source://pry//lib/pry/commands/shell_command.rb#54
  def cd_path_exists?; end

  # source://pry//lib/pry/commands/shell_command.rb#36
  def parse_destination(dest); end

  # source://pry//lib/pry/commands/shell_command.rb#58
  def path_from_cd_path(dest); end

  # source://pry//lib/pry/commands/shell_command.rb#43
  def process_cd(dest); end

  # source://pry//lib/pry/commands/shell_command.rb#68
  def special_case_path?(dest); end
end

# source://pry//lib/pry/commands/shell_mode.rb#5
class Pry::Command::ShellMode < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/shell_mode.rb#14
  def process; end
end

# source://pry//lib/pry/commands/show_doc.rb#5
class Pry::Command::ShowDoc < ::Pry::Command::ShowInfo
  include ::Pry::Helpers::DocumentationHelpers

  # source://pry//lib/pry/commands/show_doc.rb#35
  def content_for(code_object); end

  # source://pry//lib/pry/commands/show_doc.rb#64
  def docs_for(code_object); end

  # source://pry//lib/pry/commands/show_doc.rb#76
  def header_options; end

  # source://pry//lib/pry/commands/show_doc.rb#24
  def process; end

  # source://pry//lib/pry/commands/show_doc.rb#44
  def render_doc_markup_for(code_object); end

  # source://pry//lib/pry/commands/show_doc.rb#83
  def start_line_for(code_object); end
end

# source://pry//lib/pry/commands/show_info.rb#5
class Pry::Command::ShowInfo < ::Pry::ClassCommand
  extend ::Pry::Helpers::BaseHelpers

  # source://pry//lib/pry/commands/show_info.rb#10
  def initialize(*_arg0); end

  # source://pry//lib/pry/commands/show_info.rb#127
  def code_object_header(code_object, line_num); end

  # source://pry//lib/pry/commands/show_info.rb#61
  def code_object_with_accessible_source(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#213
  def complete(input); end

  # source://pry//lib/pry/commands/show_info.rb#77
  def content_and_header_for_code_object(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#81
  def content_and_headers_for_all_module_candidates(mod); end

  # source://pry//lib/pry/commands/show_info.rb#205
  def file_and_line_for(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#106
  def header(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#173
  def header_options; end

  # source://pry//lib/pry/commands/show_info.rb#142
  def method_header(code_object, line_num); end

  # source://pry//lib/pry/commands/show_info.rb#165
  def method_sections(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#151
  def module_header(code_object, line_num); end

  # source://pry//lib/pry/commands/show_info.rb#100
  def no_definition_message; end

  # source://pry//lib/pry/commands/show_info.rb#185
  def obj_name; end

  # source://pry//lib/pry/commands/show_info.rb#16
  def options(opt); end

  # source://pry//lib/pry/commands/show_info.rb#26
  def process; end

  # source://pry//lib/pry/commands/show_info.rb#181
  def show_all_modules?(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#193
  def start_line_for(code_object); end

  # source://pry//lib/pry/commands/show_info.rb#189
  def use_line_numbers?; end

  # source://pry//lib/pry/commands/show_info.rb#73
  def valid_superclass?(code_object); end
end

# source://pry//lib/pry/commands/show_input.rb#5
class Pry::Command::ShowInput < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/show_input.rb#15
  def process; end
end

# source://pry//lib/pry/commands/show_source.rb#5
class Pry::Command::ShowSource < ::Pry::Command::ShowInfo
  include ::Pry::Helpers::DocumentationHelpers

  # source://pry//lib/pry/commands/show_source.rb#48
  def content_for(code_object); end

  # source://pry//lib/pry/commands/show_source.rb#86
  def docs_for(code_object); end

  # source://pry//lib/pry/commands/show_source.rb#98
  def header_options; end

  # source://pry//lib/pry/commands/show_source.rb#31
  def options(opt); end

  # source://pry//lib/pry/commands/show_source.rb#38
  def process; end

  # source://pry//lib/pry/commands/show_source.rb#66
  def render_doc_markup_for(code_object); end

  # source://pry//lib/pry/commands/show_source.rb#105
  def start_line_for(code_object); end
end

# source://pry//lib/pry/commands/stat.rb#5
class Pry::Command::Stat < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/stat.rb#19
  def options(opt); end

  # source://pry//lib/pry/commands/stat.rb#23
  def process; end
end

# source://pry//lib/pry/commands/switch_to.rb#5
class Pry::Command::SwitchTo < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/switch_to.rb#14
  def process(selection); end
end

# source://pry//lib/pry/commands/toggle_color.rb#5
class Pry::Command::ToggleColor < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/toggle_color.rb#21
  def color_toggle; end

  # source://pry//lib/pry/commands/toggle_color.rb#16
  def process; end
end

# source://pry//lib/pry/command.rb#20
Pry::Command::VOID_VALUE = T.let(T.unsafe(nil), Object)

# source://pry//lib/pry/commands/pry_version.rb#5
class Pry::Command::Version < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/pry_version.rb#14
  def process; end
end

# source://pry//lib/pry/commands/watch_expression.rb#5
class Pry::Command::WatchExpression < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/watch_expression.rb#31
  def options(opt); end

  # source://pry//lib/pry/commands/watch_expression.rb#42
  def process; end

  private

  # source://pry//lib/pry/commands/watch_expression.rb#93
  def add_expression(_arguments); end

  # source://pry//lib/pry/commands/watch_expression.rb#98
  def add_hook; end

  # source://pry//lib/pry/commands/watch_expression.rb#59
  def delete(index); end

  # source://pry//lib/pry/commands/watch_expression.rb#84
  def eval_and_print_changed(output); end

  # source://pry//lib/pry/commands/watch_expression.rb#55
  def expressions; end

  # source://pry//lib/pry/commands/watch_expression.rb#69
  def list; end
end

# source://pry//lib/pry/commands/watch_expression/expression.rb#6
class Pry::Command::WatchExpression::Expression
  # source://pry//lib/pry/commands/watch_expression/expression.rb#9
  def initialize(pry_instance, target, source); end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#29
  def changed?; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#15
  def eval!; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#7
  def previous_value; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#7
  def pry_instance; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#7
  def source; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#7
  def target; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#20
  def to_s; end

  # source://pry//lib/pry/commands/watch_expression/expression.rb#7
  def value; end

  private

  # source://pry//lib/pry/commands/watch_expression/expression.rb#35
  def target_eval(target, source); end
end

# source://pry//lib/pry/commands/whereami.rb#7
class Pry::Command::Whereami < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/whereami.rb#8
  def initialize(*_arg0); end

  # source://pry//lib/pry/commands/whereami.rb#83
  def bad_option_combination?; end

  # source://pry//lib/pry/commands/whereami.rb#63
  def code; end

  # source://pry//lib/pry/commands/whereami.rb#77
  def code?; end

  # source://pry//lib/pry/commands/whereami.rb#88
  def location; end

  # source://pry//lib/pry/commands/whereami.rb#55
  def options(opt); end

  # source://pry//lib/pry/commands/whereami.rb#92
  def process; end

  # source://pry//lib/pry/commands/whereami.rb#44
  def setup; end

  private

  # source://pry//lib/pry/commands/whereami.rb#171
  def class_code; end

  # source://pry//lib/pry/commands/whereami.rb#152
  def code_window; end

  # source://pry//lib/pry/commands/whereami.rb#144
  def default_code; end

  # source://pry//lib/pry/commands/whereami.rb#185
  def expand_path(filename); end

  # source://pry//lib/pry/commands/whereami.rb#132
  def handle_internal_binding; end

  # source://pry//lib/pry/commands/whereami.rb#124
  def marker; end

  # source://pry//lib/pry/commands/whereami.rb#156
  def method_code; end

  # source://pry//lib/pry/commands/whereami.rb#116
  def nothing_to_do?; end

  # source://pry//lib/pry/commands/whereami.rb#140
  def small_method?; end

  # source://pry//lib/pry/commands/whereami.rb#165
  def target_class; end

  # source://pry//lib/pry/commands/whereami.rb#128
  def top_level?; end

  # source://pry//lib/pry/commands/whereami.rb#120
  def use_line_numbers?; end

  # source://pry//lib/pry/commands/whereami.rb#180
  def valid_method?; end

  # source://pry//lib/pry/commands/whereami.rb#192
  def window_size; end

  class << self
    # source://pry//lib/pry/commands/whereami.rb#15
    def method_size_cutoff; end

    # source://pry//lib/pry/commands/whereami.rb#15
    def method_size_cutoff=(_arg0); end
  end
end

# source://pry//lib/pry/commands/wtf.rb#5
class Pry::Command::Wtf < ::Pry::ClassCommand
  # source://pry//lib/pry/commands/wtf.rb#27
  def options(opt); end

  # source://pry//lib/pry/commands/wtf.rb#32
  def process; end

  private

  # source://pry//lib/pry/commands/wtf.rb#64
  def format_backtrace(backtrace); end

  # source://pry//lib/pry/commands/wtf.rb#60
  def format_header(title, exception); end

  # source://pry//lib/pry/commands/wtf.rb#83
  def read_line(file, line); end

  # source://pry//lib/pry/commands/wtf.rb#76
  def trim_backtrace(backtrace); end

  # source://pry//lib/pry/commands/wtf.rb#48
  def unwind_exceptions; end
end

# source://pry//lib/pry/commands/wtf.rb#25
Pry::Command::Wtf::RUBY_FRAME_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/exceptions.rb#68
class Pry::CommandError < ::StandardError; end

# source://pry//lib/pry/command_set.rb#12
class Pry::CommandSet
  include ::Enumerable
  include ::Pry::Helpers::BaseHelpers

  # source://pry//lib/pry/command_set.rb#20
  def initialize(*imported_sets, &block); end

  # source://pry//lib/pry/command_set.rb#275
  def [](pattern); end

  # source://pry//lib/pry/command_set.rb#298
  def []=(pattern, command); end

  # source://pry//lib/pry/command_set.rb#324
  def add_command(command); end

  # source://pry//lib/pry/command_set.rb#190
  def alias_command(match, action, options = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#78
  def block_command(match, description = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://pry//lib/pry/command_set.rb#78
  def command(match, description = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://pry//lib/pry/command_set.rb#365
  def complete(search, context = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#117
  def create_command(match, description = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://pry//lib/pry/command_set.rb#138
  def delete(*searches); end

  # source://pry//lib/pry/command_set.rb#253
  def desc(search, description = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#131
  def each(&block); end

  # source://pry//lib/pry/command_set.rb#275
  def find_command(pattern); end

  # source://pry//lib/pry/command_set.rb#173
  def find_command_by_match_or_listing(match_or_listing); end

  # source://pry//lib/pry/command_set.rb#331
  def find_command_for_help(search); end

  # source://pry//lib/pry/command_set.rb#15
  def helper_module; end

  # source://pry//lib/pry/command_set.rb#149
  def import(*sets); end

  # source://pry//lib/pry/command_set.rb#161
  def import_from(set, *matches); end

  # source://pry//lib/pry/command_set.rb#262
  def keys; end

  # source://pry//lib/pry/command_set.rb#262
  def list_commands; end

  # source://pry//lib/pry/command_set.rb#351
  def process_line(val, context = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#227
  def rename_command(new_match, search, options = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#267
  def to_h; end

  # source://pry//lib/pry/command_set.rb#267
  def to_hash; end

  # source://pry//lib/pry/command_set.rb#343
  def valid_command?(val); end

  private

  # source://pry//lib/pry/command_set.rb#390
  def helpers(&block); end
end

# source://pry//lib/pry/command_state.rb#14
class Pry::CommandState
  # source://pry//lib/pry/command_state.rb#19
  def initialize; end

  # source://pry//lib/pry/command_state.rb#27
  def reset(command_name); end

  # source://pry//lib/pry/command_state.rb#23
  def state_for(command_name); end

  class << self
    # source://pry//lib/pry/command_state.rb#15
    def default; end
  end
end

# source://pry//lib/pry.rb#35
Pry::Commands = T.let(T.unsafe(nil), Pry::CommandSet)

# source://pry//lib/pry/config/attributable.rb#4
class Pry::Config
  extend ::Pry::Config::Attributable

  # source://pry//lib/pry/config.rb#154
  def initialize; end

  # source://pry//lib/pry/config.rb#234
  def [](attr); end

  # source://pry//lib/pry/config.rb#230
  def []=(attr, value); end

  # source://pry//lib/pry/config/attributable.rb#13
  def auto_indent; end

  # source://pry//lib/pry/config/attributable.rb#18
  def auto_indent=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def collision_warning; end

  # source://pry//lib/pry/config/attributable.rb#18
  def collision_warning=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def color; end

  # source://pry//lib/pry/config/attributable.rb#18
  def color=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def command_completions; end

  # source://pry//lib/pry/config/attributable.rb#18
  def command_completions=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def command_prefix; end

  # source://pry//lib/pry/config/attributable.rb#18
  def command_prefix=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def commands; end

  # source://pry//lib/pry/config/attributable.rb#18
  def commands=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def completer; end

  # source://pry//lib/pry/config/attributable.rb#18
  def completer=(_arg0); end

  # source://pry//lib/pry/config.rb#259
  def control_d_handler; end

  # source://pry//lib/pry/config.rb#260
  def control_d_handler=(value); end

  # source://pry//lib/pry/config/attributable.rb#13
  def correct_indent; end

  # source://pry//lib/pry/config/attributable.rb#18
  def correct_indent=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def default_window_size; end

  # source://pry//lib/pry/config/attributable.rb#18
  def default_window_size=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def disable_auto_reload; end

  # source://pry//lib/pry/config/attributable.rb#18
  def disable_auto_reload=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def editor; end

  # source://pry//lib/pry/config/attributable.rb#18
  def editor=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def exception_handler; end

  # source://pry//lib/pry/config/attributable.rb#18
  def exception_handler=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def exception_whitelist; end

  # source://pry//lib/pry/config/attributable.rb#18
  def exception_whitelist=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def exec_string; end

  # source://pry//lib/pry/config/attributable.rb#18
  def exec_string=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def extra_sticky_locals; end

  # source://pry//lib/pry/config/attributable.rb#18
  def extra_sticky_locals=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def file_completions; end

  # source://pry//lib/pry/config/attributable.rb#18
  def file_completions=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def history; end

  # source://pry//lib/pry/config/attributable.rb#18
  def history=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def history_file; end

  # source://pry//lib/pry/config/attributable.rb#18
  def history_file=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def history_ignorelist; end

  # source://pry//lib/pry/config/attributable.rb#18
  def history_ignorelist=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def history_load; end

  # source://pry//lib/pry/config/attributable.rb#18
  def history_load=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def history_save; end

  # source://pry//lib/pry/config/attributable.rb#18
  def history_save=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def hooks; end

  # source://pry//lib/pry/config/attributable.rb#18
  def hooks=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def input; end

  # source://pry//lib/pry/config/attributable.rb#18
  def input=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def ls; end

  # source://pry//lib/pry/config/attributable.rb#18
  def ls=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def memory_size; end

  # source://pry//lib/pry/config/attributable.rb#18
  def memory_size=(_arg0); end

  # source://pry//lib/pry/config.rb#226
  def merge(config_hash); end

  # source://pry//lib/pry/config.rb#221
  def merge!(config_hash); end

  # source://pry//lib/pry/config.rb#239
  def method_missing(method_name, *args, &_block); end

  # source://pry//lib/pry/config/attributable.rb#13
  def output; end

  # source://pry//lib/pry/config/attributable.rb#18
  def output=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def output_prefix; end

  # source://pry//lib/pry/config/attributable.rb#18
  def output_prefix=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def pager; end

  # source://pry//lib/pry/config/attributable.rb#18
  def pager=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def print; end

  # source://pry//lib/pry/config/attributable.rb#18
  def print=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def prompt; end

  # source://pry//lib/pry/config/attributable.rb#18
  def prompt=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def prompt_name; end

  # source://pry//lib/pry/config/attributable.rb#18
  def prompt_name=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def prompt_safe_contexts; end

  # source://pry//lib/pry/config/attributable.rb#18
  def prompt_safe_contexts=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def quiet; end

  # source://pry//lib/pry/config/attributable.rb#18
  def quiet=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def rc_file; end

  # source://pry//lib/pry/config/attributable.rb#18
  def rc_file=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def requires; end

  # source://pry//lib/pry/config/attributable.rb#18
  def requires=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def should_load_local_rc; end

  # source://pry//lib/pry/config/attributable.rb#18
  def should_load_local_rc=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def should_load_rc; end

  # source://pry//lib/pry/config/attributable.rb#18
  def should_load_rc=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def should_load_requires; end

  # source://pry//lib/pry/config/attributable.rb#18
  def should_load_requires=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def should_trap_interrupts; end

  # source://pry//lib/pry/config/attributable.rb#18
  def should_trap_interrupts=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def system; end

  # source://pry//lib/pry/config/attributable.rb#18
  def system=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def unrescued_exceptions; end

  # source://pry//lib/pry/config/attributable.rb#18
  def unrescued_exceptions=(_arg0); end

  # source://pry//lib/pry/config/attributable.rb#13
  def windows_console_warning; end

  # source://pry//lib/pry/config/attributable.rb#18
  def windows_console_warning=(_arg0); end

  private

  # source://pry//lib/pry/config.rb#303
  def default_rc_file; end

  # source://pry//lib/pry/config.rb#254
  def initialize_dup(other); end

  # source://pry//lib/pry/config.rb#289
  def lazy_readline; end

  # source://pry//lib/pry/config.rb#250
  def respond_to_missing?(method_name, include_all = T.unsafe(nil)); end
end

# source://pry//lib/pry/config/attributable.rb#11
module Pry::Config::Attributable
  # source://pry//lib/pry/config/attributable.rb#12
  def attribute(attr_name); end
end

# source://pry//lib/pry/config/lazy_value.rb#19
class Pry::Config::LazyValue
  # source://pry//lib/pry/config/lazy_value.rb#20
  def initialize(&block); end

  # source://pry//lib/pry/config/lazy_value.rb#24
  def call; end
end

# source://pry//lib/pry/config/memoized_value.rb#19
class Pry::Config::MemoizedValue
  # source://pry//lib/pry/config/memoized_value.rb#20
  def initialize(&block); end

  # source://pry//lib/pry/config/memoized_value.rb#26
  def call; end
end

# source://pry//lib/pry/config/value.rb#10
class Pry::Config::Value
  # source://pry//lib/pry/config/value.rb#11
  def initialize(value); end

  # source://pry//lib/pry/config/value.rb#15
  def call; end
end

# source://pry//lib/pry/control_d_handler.rb#6
module Pry::ControlDHandler
  class << self
    # source://pry//lib/pry/control_d_handler.rb#12
    def default(pry_instance); end
  end
end

# source://pry//lib/pry/pry_instance.rb#59
Pry::EMPTY_COMPLETIONS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/editor.rb#6
class Pry::Editor
  include ::Pry::Helpers::OptionsHelpers
  include ::Pry::Helpers::CommandHelpers

  # source://pry//lib/pry/editor.rb#27
  def initialize(pry_instance); end

  # source://pry//lib/pry/editor.rb#60
  def build_editor_invocation_string(file, line, blocking); end

  # source://pry//lib/pry/editor.rb#31
  def edit_tempfile_with_content(initial_content, line = T.unsafe(nil)); end

  # source://pry//lib/pry/editor.rb#41
  def invoke_editor(file, line, blocking = T.unsafe(nil)); end

  # source://pry//lib/pry/editor.rb#25
  def pry_instance; end

  private

  # source://pry//lib/pry/editor.rb#100
  def blocking_flag_for_editor(blocking); end

  # source://pry//lib/pry/editor.rb#153
  def editor_name; end

  # source://pry//lib/pry/editor.rb#76
  def open_editor(editor_invocation); end

  # source://pry//lib/pry/editor.rb#89
  def open_editor_on_jruby(editor_invocation); end

  # source://pry//lib/pry/editor.rb#115
  def start_line_syntax_for_editor(file_name, line_number); end

  class << self
    # source://pry//lib/pry/editor.rb#7
    def default; end
  end
end

# source://pry//lib/pry/env.rb#8
module Pry::Env
  class << self
    # source://pry//lib/pry/env.rb#9
    def [](key); end
  end
end

# source://pry//lib/pry/exception_handler.rb#6
module Pry::ExceptionHandler
  class << self
    # source://pry//lib/pry/exception_handler.rb#9
    def handle_exception(output, exception, _pry_instance); end

    private

    # source://pry//lib/pry/exception_handler.rb#37
    def cause_text(cause); end

    # source://pry//lib/pry/exception_handler.rb#32
    def exception_text(exception); end

    # source://pry//lib/pry/exception_handler.rb#19
    def standard_error_text_for(exception); end
  end
end

# source://pry//lib/pry/forwardable.rb#4
module Pry::Forwardable
  include ::Forwardable

  # source://pry//lib/pry/forwardable.rb#16
  def def_private_delegators(target, *private_delegates); end
end

# source://pry//lib/pry/exceptions.rb#56
module Pry::FrozenObjectException
  class << self
    # source://pry//lib/pry/exceptions.rb#57
    def ===(exception); end
  end
end

# source://pry//lib/pry/pry_class.rb#11
Pry::HAS_SAFE_LEVEL = T.let(T.unsafe(nil), FalseClass)

# source://pry//lib/pry/helpers/base_helpers.rb#4
module Pry::Helpers
  class << self
    # source://pry//lib/pry/helpers/table.rb#27
    def tablify(things, line_length, pry_instance = T.unsafe(nil)); end

    # source://pry//lib/pry/helpers/table.rb#5
    def tablify_or_one_line(heading, things, pry_instance = T.unsafe(nil)); end

    # source://pry//lib/pry/helpers/table.rb#16
    def tablify_to_screen_width(things, options, pry_instance = T.unsafe(nil)); end
  end
end

# source://pry//lib/pry/helpers/base_helpers.rb#5
module Pry::Helpers::BaseHelpers
  extend ::Pry::Helpers::BaseHelpers

  # source://pry//lib/pry/helpers/base_helpers.rb#43
  def colorize_code(code); end

  # source://pry//lib/pry/helpers/base_helpers.rb#27
  def find_command(name, set = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/base_helpers.rb#54
  def heading(text); end

  # source://pry//lib/pry/helpers/base_helpers.rb#47
  def highlight(string, regexp, highlight_color = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/base_helpers.rb#34
  def not_a_real_file?(file); end

  # source://pry//lib/pry/helpers/base_helpers.rb#22
  def safe_send(obj, method, *args, &block); end

  # source://pry//lib/pry/helpers/base_helpers.rb#8
  def silence_warnings; end

  # source://pry//lib/pry/helpers/base_helpers.rb#62
  def stagger_output(text, _out = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/base_helpers.rb#38
  def use_ansi_codes?; end
end

# source://pry//lib/pry/helpers/command_helpers.rb#7
module Pry::Helpers::CommandHelpers
  include ::Pry::Helpers::OptionsHelpers
  extend ::Pry::Helpers::OptionsHelpers
  extend ::Pry::Helpers::CommandHelpers

  # source://pry//lib/pry/helpers/command_helpers.rb#115
  def absolute_index_number(line_number, array_length); end

  # source://pry//lib/pry/helpers/command_helpers.rb#123
  def absolute_index_range(range_or_number, array_length); end

  # source://pry//lib/pry/helpers/command_helpers.rb#31
  def get_method_or_raise(method_name, context, opts = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/command_helpers.rb#21
  def internal_binding?(context); end

  # source://pry//lib/pry/helpers/command_helpers.rb#97
  def one_index_number(line_number); end

  # source://pry//lib/pry/helpers/command_helpers.rb#102
  def one_index_range(range); end

  # source://pry//lib/pry/helpers/command_helpers.rb#106
  def one_index_range_or_number(range_or_number); end

  # source://pry//lib/pry/helpers/command_helpers.rb#92
  def restrict_to_lines(content, lines); end

  # source://pry//lib/pry/helpers/command_helpers.rb#135
  def set_file_and_dir_locals(file_name, pry = T.unsafe(nil), ctx = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/command_helpers.rb#14
  def temp_file(ext = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/command_helpers.rb#68
  def unindent(dirty_text, left_padding = T.unsafe(nil)); end
end

# source://pry//lib/pry/helpers/documentation_helpers.rb#7
module Pry::Helpers::DocumentationHelpers
  private

  # source://pry//lib/pry/helpers/documentation_helpers.rb#67
  def get_comment_content(comment); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#51
  def process_comment_markup(comment); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#15
  def process_rdoc(comment); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#45
  def process_yardoc(comment); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#30
  def process_yardoc_tag(comment, tag); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#57
  def strip_comments_from_c_code(code); end

  # source://pry//lib/pry/helpers/documentation_helpers.rb#79
  def strip_leading_whitespace(text); end

  class << self
    # source://pry//lib/pry/helpers/documentation_helpers.rb#67
    def get_comment_content(comment); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#51
    def process_comment_markup(comment); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#15
    def process_rdoc(comment); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#45
    def process_yardoc(comment); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#30
    def process_yardoc_tag(comment, tag); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#57
    def strip_comments_from_c_code(code); end

    # source://pry//lib/pry/helpers/documentation_helpers.rb#79
    def strip_leading_whitespace(text); end
  end
end

# source://pry//lib/pry/helpers/documentation_helpers.rb#8
Pry::Helpers::DocumentationHelpers::YARD_TAGS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/helpers/options_helpers.rb#5
module Pry::Helpers::OptionsHelpers
  private

  # source://pry//lib/pry/helpers/options_helpers.rb#23
  def method_object; end

  # source://pry//lib/pry/helpers/options_helpers.rb#9
  def method_options(opt); end

  class << self
    # source://pry//lib/pry/helpers/options_helpers.rb#23
    def method_object; end

    # source://pry//lib/pry/helpers/options_helpers.rb#9
    def method_options(opt); end
  end
end

# source://pry//lib/pry/helpers/platform.rb#10
module Pry::Helpers::Platform
  class << self
    # source://pry//lib/pry/helpers/platform.rb#35
    def jruby?; end

    # source://pry//lib/pry/helpers/platform.rb#40
    def jruby_19?; end

    # source://pry//lib/pry/helpers/platform.rb#17
    def linux?; end

    # source://pry//lib/pry/helpers/platform.rb#12
    def mac_osx?; end

    # source://pry//lib/pry/helpers/platform.rb#45
    def mri?; end

    # source://pry//lib/pry/helpers/platform.rb#50
    def mri_2?; end

    # source://pry//lib/pry/helpers/platform.rb#23
    def windows?; end

    # source://pry//lib/pry/helpers/platform.rb#28
    def windows_ansi?; end
  end
end

# source://pry//lib/pry/helpers/table.rb#35
class Pry::Helpers::Table
  # source://pry//lib/pry/helpers/table.rb#37
  def initialize(items, args, pry_instance = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/table.rb#81
  def ==(other); end

  # source://pry//lib/pry/helpers/table.rb#36
  def column_count; end

  # source://pry//lib/pry/helpers/table.rb#68
  def column_count=(count); end

  # source://pry//lib/pry/helpers/table.rb#77
  def columns; end

  # source://pry//lib/pry/helpers/table.rb#73
  def fits_on_line?(line_length); end

  # source://pry//lib/pry/helpers/table.rb#36
  def items; end

  # source://pry//lib/pry/helpers/table.rb#62
  def items=(items); end

  # source://pry//lib/pry/helpers/table.rb#47
  def rows_to_s(style = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/table.rb#85
  def to_a; end

  # source://pry//lib/pry/helpers/table.rb#43
  def to_s; end

  private

  # source://pry//lib/pry/helpers/table.rb#91
  def _max_width(things); end

  # source://pry//lib/pry/helpers/table.rb#95
  def _rebuild_colorless_cache; end

  # source://pry//lib/pry/helpers/table.rb#116
  def _recall_color_for(thing); end

  # source://pry//lib/pry/helpers/table.rb#105
  def _recolumn; end
end

# source://pry//lib/pry/helpers/text.rb#7
module Pry::Helpers::Text
  extend ::Pry::Helpers::Text

  # source://pry//lib/pry/helpers/text.rb#23
  def black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def black_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#23
  def blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def blue_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#54
  def bold(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_black_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_blue_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_cyan_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_green_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_magenta_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_purple_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_red_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_white_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#27
  def bright_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#36
  def bright_yellow_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#23
  def cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def cyan_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#63
  def default(text); end

  # source://pry//lib/pry/helpers/text.rb#23
  def green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def green_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#113
  def indent(text, chars); end

  # source://pry//lib/pry/helpers/text.rb#23
  def magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def magenta_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#73
  def no_color; end

  # source://pry//lib/pry/helpers/text.rb#87
  def no_pager; end

  # source://pry//lib/pry/helpers/text.rb#23
  def purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def purple_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#23
  def red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def red_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#46
  def strip_color(text); end

  # source://pry//lib/pry/helpers/text.rb#23
  def white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def white_on_yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#100
  def with_line_numbers(text, offset, color = T.unsafe(nil)); end

  # source://pry//lib/pry/helpers/text.rb#23
  def yellow(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_black(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_blue(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_cyan(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_green(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_magenta(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_purple(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_red(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_white(text); end

  # source://pry//lib/pry/helpers/text.rb#32
  def yellow_on_yellow(text); end
end

# source://pry//lib/pry/helpers/text.rb#10
Pry::Helpers::Text::COLORS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/history.rb#6
class Pry::History
  # source://pry//lib/pry/history.rb#29
  def initialize(options = T.unsafe(nil)); end

  # source://pry//lib/pry/history.rb#53
  def <<(line); end

  # source://pry//lib/pry/history.rb#74
  def clear; end

  # source://pry//lib/pry/history.rb#95
  def filter(history); end

  # source://pry//lib/pry/history.rb#27
  def history_line_count; end

  # source://pry//lib/pry/history.rb#40
  def load; end

  # source://pry//lib/pry/history.rb#21
  def loader; end

  # source://pry//lib/pry/history.rb#21
  def loader=(_arg0); end

  # source://pry//lib/pry/history.rb#24
  def original_lines; end

  # source://pry//lib/pry/history.rb#53
  def push(line); end

  # source://pry//lib/pry/history.rb#21
  def saver; end

  # source://pry//lib/pry/history.rb#21
  def saver=(_arg0); end

  # source://pry//lib/pry/history.rb#81
  def session_line_count; end

  # source://pry//lib/pry/history.rb#88
  def to_a; end

  private

  # source://pry//lib/pry/history.rb#127
  def history_file; end

  # source://pry//lib/pry/history.rb#143
  def history_file_path; end

  # source://pry//lib/pry/history.rb#147
  def invalid_readline_line?(line); end

  # source://pry//lib/pry/history.rb#113
  def read_from_file; end

  # source://pry//lib/pry/history.rb#122
  def save_to_file(line); end

  # source://pry//lib/pry/history.rb#105
  def should_ignore?(line); end

  class << self
    # source://pry//lib/pry/history.rb#7
    def default_file; end
  end
end

# source://pry//lib/pry/hooks.rb#14
class Pry::Hooks
  # source://pry//lib/pry/hooks.rb#25
  def initialize; end

  # source://pry//lib/pry/hooks.rb#81
  def add_hook(event_name, hook_name, callable = T.unsafe(nil), &block); end

  # source://pry//lib/pry/hooks.rb#165
  def clear_event_hooks(event_name); end

  # source://pry//lib/pry/hooks.rb#147
  def delete_hook(event_name, hook_name); end

  # source://pry//lib/pry/hooks.rb#39
  def errors; end

  # source://pry//lib/pry/hooks.rb#108
  def exec_hook(event_name, *args, &block); end

  # source://pry//lib/pry/hooks.rb#128
  def get_hook(event_name, hook_name); end

  # source://pry//lib/pry/hooks.rb#139
  def get_hooks(event_name); end

  # source://pry//lib/pry/hooks.rb#121
  def hook_count(event_name); end

  # source://pry//lib/pry/hooks.rb#172
  def hook_exists?(event_name, hook_name); end

  # source://pry//lib/pry/hooks.rb#69
  def merge(other); end

  # source://pry//lib/pry/hooks.rb#48
  def merge!(other); end

  protected

  # source://pry//lib/pry/hooks.rb#178
  def hooks; end

  private

  # source://pry//lib/pry/hooks.rb#30
  def initialize_copy(_orig); end

  class << self
    # source://pry//lib/pry/hooks.rb#15
    def default; end
  end
end

# source://pry//lib/pry/indent.rb#11
class Pry::Indent
  include ::Pry::Helpers::BaseHelpers

  # source://pry//lib/pry/indent.rb#104
  def initialize(pry_instance = T.unsafe(nil)); end

  # source://pry//lib/pry/indent.rb#393
  def correct_indentation(prompt, code, overhang = T.unsafe(nil)); end

  # source://pry//lib/pry/indent.rb#181
  def current_prefix; end

  # source://pry//lib/pry/indent.rb#264
  def end_of_statement?(last_token, last_kind); end

  # source://pry//lib/pry/indent.rb#275
  def in_string?; end

  # source://pry//lib/pry/indent.rb#142
  def indent(input); end

  # source://pry//lib/pry/indent.rb#18
  def indent_level; end

  # source://pry//lib/pry/indent.rb#198
  def indentation_delta(tokens); end

  # source://pry//lib/pry/indent.rb#376
  def module_nesting; end

  # source://pry//lib/pry/indent.rb#312
  def open_delimiters; end

  # source://pry//lib/pry/indent.rb#320
  def open_delimiters_line; end

  # source://pry//lib/pry/indent.rb#110
  def reset; end

  # source://pry//lib/pry/indent.rb#21
  def stack; end

  # source://pry//lib/pry/indent.rb#283
  def tokenize(string); end

  # source://pry//lib/pry/indent.rb#297
  def track_delimiter(token); end

  # source://pry//lib/pry/indent.rb#341
  def track_module_nesting(token, kind); end

  # source://pry//lib/pry/indent.rb#366
  def track_module_nesting_end(token, kind = T.unsafe(nil)); end

  class << self
    # source://pry//lib/pry/indent.rb#82
    def indent(str); end

    # source://pry//lib/pry/indent.rb#95
    def nesting_at(str, line_number); end
  end
end

# source://pry//lib/pry/indent.rb#60
Pry::Indent::IGNORE_TOKENS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/indent.rb#76
Pry::Indent::MIDWAY_TOKENS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/indent.rb#30
Pry::Indent::OPEN_TOKENS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/indent.rb#52
Pry::Indent::OPTIONAL_DO_TOKENS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/indent.rb#49
Pry::Indent::SINGLELINE_TOKENS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/indent.rb#24
Pry::Indent::SPACES = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/indent.rb#69
Pry::Indent::STATEMENT_END_TOKENS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/indent.rb#15
class Pry::Indent::UnparseableNestingError < ::StandardError; end

# source://pry//lib/pry/input_completer.rb#6
class Pry::InputCompleter
  # source://pry//lib/pry/input_completer.rb#42
  def initialize(input, pry = T.unsafe(nil)); end

  # source://pry//lib/pry/input_completer.rb#240
  def build_path(input); end

  # source://pry//lib/pry/input_completer.rb#56
  def call(str, options = T.unsafe(nil)); end

  # source://pry//lib/pry/input_completer.rb#255
  def ignored_modules; end

  # source://pry//lib/pry/input_completer.rb#229
  def select_message(path, receiver, message, candidates); end
end

# source://pry//lib/pry/input_completer.rb#8
Pry::InputCompleter::ARRAY_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#15
Pry::InputCompleter::CONSTANT_OR_METHOD_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#14
Pry::InputCompleter::CONSTANT_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#17
Pry::InputCompleter::GLOBALVARIABLE_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#16
Pry::InputCompleter::HEX_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#7
Pry::InputCompleter::NUMERIC_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#12
Pry::InputCompleter::PROC_OR_HASH_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#11
Pry::InputCompleter::REGEX_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#20
Pry::InputCompleter::RESERVED_WORDS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/input_completer.rb#10
Pry::InputCompleter::SYMBOL_METHOD_CALL_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#9
Pry::InputCompleter::SYMBOL_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#13
Pry::InputCompleter::TOPLEVEL_LOOKUP_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#18
Pry::InputCompleter::VARIABLE_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://pry//lib/pry/input_completer.rb#40
Pry::InputCompleter::WORD_ESCAPE_STR = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/input_lock.rb#8
class Pry::InputLock
  # source://pry//lib/pry/input_lock.rb#29
  def initialize; end

  # source://pry//lib/pry/input_lock.rb#38
  def __with_ownership; end

  # source://pry//lib/pry/input_lock.rb#81
  def enter_interruptible_region; end

  # source://pry//lib/pry/input_lock.rb#108
  def interruptible_region; end

  # source://pry//lib/pry/input_lock.rb#95
  def leave_interruptible_region; end

  # source://pry//lib/pry/input_lock.rb#75
  def with_ownership(&block); end

  class << self
    # source://pry//lib/pry/input_lock.rb#19
    def for(input); end

    # source://pry//lib/pry/input_lock.rb#13
    def global_lock; end

    # source://pry//lib/pry/input_lock.rb#13
    def global_lock=(_arg0); end

    # source://pry//lib/pry/input_lock.rb#12
    def input_locks; end

    # source://pry//lib/pry/input_lock.rb#12
    def input_locks=(_arg0); end
  end
end

# source://pry//lib/pry/input_lock.rb#9
class Pry::InputLock::Interrupt < ::Exception; end

# source://pry//lib/pry/inspector.rb#4
class Pry::Inspector; end

# source://pry//lib/pry/inspector.rb#5
Pry::Inspector::MAP = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/pry_class.rb#7
Pry::LOCAL_RC_FILE = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/last_exception.rb#12
class Pry::LastException < ::BasicObject
  # source://pry//lib/pry/last_exception.rb#15
  def initialize(exception); end

  # source://pry//lib/pry/last_exception.rb#13
  def bt_index; end

  # source://pry//lib/pry/last_exception.rb#13
  def bt_index=(_arg0); end

  # source://pry//lib/pry/last_exception.rb#52
  def bt_source_location_for(index); end

  # source://pry//lib/pry/last_exception.rb#37
  def file; end

  # source://pry//lib/pry/last_exception.rb#57
  def inc_bt_index; end

  # source://pry//lib/pry/last_exception.rb#43
  def line; end

  # source://pry//lib/pry/last_exception.rb#21
  def method_missing(name, *args, &block); end

  # source://pry//lib/pry/last_exception.rb#48
  def wrapped_exception; end

  private

  # source://pry//lib/pry/last_exception.rb#29
  def respond_to_missing?(name, include_all = T.unsafe(nil)); end
end

# source://pry//lib/pry/method.rb#20
class Pry::Method
  include ::Pry::Helpers::BaseHelpers
  include ::Pry::Helpers::DocumentationHelpers
  include ::Pry::CodeObject::Helpers
  extend ::Pry::Helpers::BaseHelpers
  extend ::Forwardable
  extend ::Pry::Forwardable

  # source://pry//lib/pry/method.rb#263
  def initialize(method, known_info = T.unsafe(nil)); end

  # source://pry//lib/pry/method.rb#483
  def ==(other); end

  # source://pry//lib/pry/method.rb#478
  def alias?; end

  # source://pry//lib/pry/method.rb#461
  def aliases; end

  # source://pry//lib/pry/method.rb#446
  def bound_method?; end

  # source://pry//lib/pry/method.rb#515
  def comment; end

  # source://pry//lib/pry/method.rb#329
  def doc; end

  # source://pry//lib/pry/method.rb#436
  def dynamically_defined?; end

  # source://pry//lib/pry/method.rb#491
  def is_a?(klass); end

  # source://pry//lib/pry/method.rb#491
  def kind_of?(klass); end

  # source://pry//lib/pry/method.rb#503
  def method_missing(method_name, *args, &block); end

  # source://pry//lib/pry/method.rb#272
  def name; end

  # source://pry//lib/pry/method.rb#299
  def name_with_owner; end

  # source://pry//lib/pry/method.rb#429
  def original_name; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def owner(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def parameters(*args, **_arg1, &block); end

  # source://pry//lib/pry/method.rb#456
  def pry_method?; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def receiver(*args, **_arg1, &block); end

  # source://pry//lib/pry/method.rb#314
  def redefine(source); end

  # source://pry//lib/pry/method.rb#498
  def respond_to?(method_name, include_all = T.unsafe(nil)); end

  # source://pry//lib/pry/method.rb#391
  def signature; end

  # source://pry//lib/pry/method.rb#451
  def singleton_method?; end

  # source://pry//lib/pry/method.rb#304
  def source; end

  # source://pry//lib/pry/method.rb#321
  def source?; end

  # source://pry//lib/pry/method.rb#348
  def source_file; end

  # source://pry//lib/pry/method.rb#361
  def source_line; end

  # source://pry//lib/pry/method.rb#367
  def source_range; end

  # source://pry//lib/pry/method.rb#342
  def source_type; end

  # source://pry//lib/pry/method.rb#417
  def super(times = T.unsafe(nil)); end

  # source://pry//lib/pry/method.rb#441
  def unbound_method?; end

  # source://pry//lib/pry/method.rb#290
  def undefined?; end

  # source://pry//lib/pry/method.rb#373
  def visibility; end

  # source://pry//lib/pry/method.rb#284
  def wrapped; end

  # source://pry//lib/pry/method.rb#278
  def wrapped_owner; end

  private

  # source://pry//lib/pry/method.rb#578
  def c_source; end

  # source://pry//lib/pry/method.rb#564
  def method_name_from_first_line(first_ln); end

  # source://pry//lib/pry/method.rb#523
  def pry_doc_info; end

  # source://pry//lib/pry/method.rb#511
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end

  # source://pry//lib/pry/method.rb#583
  def ruby_source; end

  # source://pry//lib/pry/method.rb#543
  def super_using_ancestors(ancestors, times = T.unsafe(nil)); end

  class << self
    # source://pry//lib/pry/method.rb#161
    def all_from_class(klass, include_super = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#184
    def all_from_obj(obj, include_super = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#77
    def from_binding(binding); end

    # source://pry//lib/pry/method.rb#136
    def from_class(klass, name, target = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#136
    def from_module(klass, name, target = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#151
    def from_obj(obj, name, target = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#43
    def from_str(name, target = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#227
    def instance_method_definition?(name, definition_line); end

    # source://pry//lib/pry/method.rb#210
    def instance_resolution_order(klass); end

    # source://pry//lib/pry/method.rb#114
    def lookup_method_via_binding(obj, method_name, method_type, target = T.unsafe(nil)); end

    # source://pry//lib/pry/method.rb#215
    def method_definition?(name, definition_line); end

    # source://pry//lib/pry/method.rb#192
    def resolution_order(obj); end

    # source://pry//lib/pry/method.rb#247
    def singleton_class_of(obj); end

    # source://pry//lib/pry/method.rb#238
    def singleton_class_resolution_order(klass); end

    # source://pry//lib/pry/method.rb#220
    def singleton_method_definition?(name, definition_line); end
  end
end

# source://pry//lib/pry/method/disowned.rb#18
class Pry::Method::Disowned < ::Pry::Method
  # source://pry//lib/pry/method/disowned.rb#25
  def initialize(receiver, method_name); end

  # source://pry//lib/pry/method/disowned.rb#52
  def method_missing(method_name, *args, &block); end

  # source://pry//lib/pry/method/disowned.rb#19
  def name; end

  # source://pry//lib/pry/method/disowned.rb#46
  def owner; end

  # source://pry//lib/pry/method/disowned.rb#19
  def receiver; end

  # source://pry//lib/pry/method/disowned.rb#39
  def source?; end

  # source://pry//lib/pry/method/disowned.rb#33
  def undefined?; end

  private

  # source://pry//lib/pry/method/disowned.rb#62
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end
end

# source://pry//lib/pry/method/patcher.rb#5
class Pry::Method::Patcher
  # source://pry//lib/pry/method/patcher.rb#12
  def initialize(method); end

  # source://pry//lib/pry/method/patcher.rb#6
  def method; end

  # source://pry//lib/pry/method/patcher.rb#6
  def method=(_arg0); end

  # source://pry//lib/pry/method/patcher.rb#21
  def patch_in_ram(source); end

  private

  # source://pry//lib/pry/method/patcher.rb#38
  def cache_key; end

  # source://pry//lib/pry/method/patcher.rb#78
  def definition_for_owner(line); end

  # source://pry//lib/pry/method/patcher.rb#33
  def redefine(source); end

  # source://pry//lib/pry/method/patcher.rb#49
  def with_method_transaction; end

  # source://pry//lib/pry/method/patcher.rb#91
  def wrap(source); end

  # source://pry//lib/pry/method/patcher.rb#122
  def wrap_for_nesting(source); end

  # source://pry//lib/pry/method/patcher.rb#103
  def wrap_for_owner(source); end

  class << self
    # source://pry//lib/pry/method/patcher.rb#16
    def code_for(filename); end
  end
end

# source://pry//lib/pry/method/weird_method_locator.rb#19
class Pry::Method::WeirdMethodLocator
  # source://pry//lib/pry/method/weird_method_locator.rb#55
  def initialize(method, target); end

  # source://pry//lib/pry/method/weird_method_locator.rb#62
  def find_method; end

  # source://pry//lib/pry/method/weird_method_locator.rb#69
  def lost_method?; end

  # source://pry//lib/pry/method/weird_method_locator.rb#49
  def method; end

  # source://pry//lib/pry/method/weird_method_locator.rb#49
  def method=(_arg0); end

  # source://pry//lib/pry/method/weird_method_locator.rb#50
  def target; end

  # source://pry//lib/pry/method/weird_method_locator.rb#50
  def target=(_arg0); end

  private

  # source://pry//lib/pry/method/weird_method_locator.rb#215
  def all_methods_for(obj); end

  # source://pry//lib/pry/method/weird_method_locator.rb#167
  def expanded_source_location(source_location); end

  # source://pry//lib/pry/method/weird_method_locator.rb#131
  def find_method_in_superclass; end

  # source://pry//lib/pry/method/weird_method_locator.rb#156
  def find_renamed_method; end

  # source://pry//lib/pry/method/weird_method_locator.rb#197
  def index_to_line_number(index); end

  # source://pry//lib/pry/method/weird_method_locator.rb#206
  def lines_for_file(file); end

  # source://pry//lib/pry/method/weird_method_locator.rb#80
  def normal_method?(method); end

  # source://pry//lib/pry/method/weird_method_locator.rb#106
  def pry_file?; end

  # source://pry//lib/pry/method/weird_method_locator.rb#184
  def renamed_method_source_location; end

  # source://pry//lib/pry/method/weird_method_locator.rb#75
  def skip_superclass_search?; end

  # source://pry//lib/pry/method/weird_method_locator.rb#88
  def target_file; end

  # source://pry//lib/pry/method/weird_method_locator.rb#98
  def target_line; end

  # source://pry//lib/pry/method/weird_method_locator.rb#84
  def target_self; end

  # source://pry//lib/pry/method/weird_method_locator.rb#202
  def valid_file?(file); end

  class << self
    # source://pry//lib/pry/method/weird_method_locator.rb#29
    def normal_method?(method, binding); end

    # source://pry//lib/pry/method/weird_method_locator.rb#44
    def weird_method?(method, binding); end
  end
end

# source://pry//lib/pry/exceptions.rb#69
class Pry::MethodNotFound < ::Pry::CommandError; end

# source://pry//lib/pry/command_set.rb#4
class Pry::NoCommandError < ::StandardError
  # source://pry//lib/pry/command_set.rb#5
  def initialize(match, owner); end
end

# source://pry//lib/pry/object_path.rb#17
class Pry::ObjectPath
  # source://pry//lib/pry/object_path.rb#23
  def initialize(path_string, current_stack); end

  # source://pry//lib/pry/object_path.rb#30
  def resolve; end

  private

  # source://pry//lib/pry/object_path.rb#74
  def complete?(segment); end

  # source://pry//lib/pry/object_path.rb#78
  def handle_failure(context, err); end
end

# source://pry//lib/pry/object_path.rb#18
Pry::ObjectPath::SPECIAL_TERMS = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/exceptions.rb#72
class Pry::ObsoleteError < ::StandardError; end

# source://pry//lib/pry/output.rb#4
class Pry::Output
  # source://pry//lib/pry/output.rb#10
  def initialize(pry_instance); end

  # source://pry//lib/pry/output.rb#28
  def <<(*objs); end

  # source://pry//lib/pry/output.rb#53
  def decolorize_maybe(str); end

  # source://pry//lib/pry/output.rb#74
  def height; end

  # source://pry//lib/pry/output.rb#41
  def method_missing(method_name, *args, &block); end

  # source://pry//lib/pry/output.rb#28
  def print(*objs); end

  # source://pry//lib/pry/output.rb#8
  def pry_instance; end

  # source://pry//lib/pry/output.rb#15
  def puts(*objs); end

  # source://pry//lib/pry/output.rb#61
  def size; end

  # source://pry//lib/pry/output.rb#37
  def tty?; end

  # source://pry//lib/pry/output.rb#69
  def width; end

  # source://pry//lib/pry/output.rb#28
  def write(*objs); end

  private

  # source://pry//lib/pry/output.rb#80
  def actual_screen_size; end

  # source://pry//lib/pry/output.rb#125
  def ansicon_env_size; end

  # source://pry//lib/pry/output.rb#109
  def env_size; end

  # source://pry//lib/pry/output.rb#92
  def io_console_size; end

  # source://pry//lib/pry/output.rb#132
  def nonzero_column?(size); end

  # source://pry//lib/pry/output.rb#114
  def readline_size; end

  # source://pry//lib/pry/output.rb#49
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end
end

# source://pry//lib/pry/output.rb#6
Pry::Output::DEFAULT_SIZE = T.let(T.unsafe(nil), Array)

# source://pry//lib/pry/pager.rb#7
class Pry::Pager
  # source://pry//lib/pry/pager.rb#13
  def initialize(pry_instance); end

  # source://pry//lib/pry/pager.rb#33
  def open; end

  # source://pry//lib/pry/pager.rb#25
  def page(text); end

  # source://pry//lib/pry/pager.rb#11
  def pry_instance; end

  private

  # source://pry//lib/pry/pager.rb#56
  def best_available; end

  # source://pry//lib/pry/pager.rb#43
  def enabled?; end

  # source://pry//lib/pry/pager.rb#47
  def output; end
end

# source://pry//lib/pry/pager.rb#68
class Pry::Pager::NullPager
  # source://pry//lib/pry/pager.rb#69
  def initialize(out); end

  # source://pry//lib/pry/pager.rb#77
  def <<(str); end

  # source://pry//lib/pry/pager.rb#86
  def close; end

  # source://pry//lib/pry/pager.rb#77
  def print(str); end

  # source://pry//lib/pry/pager.rb#73
  def puts(str); end

  # source://pry//lib/pry/pager.rb#82
  def write(str); end

  private

  # source://pry//lib/pry/pager.rb#90
  def height; end

  # source://pry//lib/pry/pager.rb#94
  def width; end
end

# source://pry//lib/pry/pager.rb#213
class Pry::Pager::PageTracker
  # source://pry//lib/pry/pager.rb#214
  def initialize(rows, cols); end

  # source://pry//lib/pry/pager.rb#231
  def page?; end

  # source://pry//lib/pry/pager.rb#220
  def record(str); end

  # source://pry//lib/pry/pager.rb#235
  def reset; end

  private

  # source://pry//lib/pry/pager.rb#244
  def line_length(line); end
end

# source://pry//lib/pry/pager.rb#101
class Pry::Pager::SimplePager < ::Pry::Pager::NullPager
  # source://pry//lib/pry/pager.rb#102
  def initialize(*_arg0); end

  # source://pry//lib/pry/pager.rb#107
  def write(str); end
end

# source://pry//lib/pry/pager.rb#8
class Pry::Pager::StopPaging < ::StandardError; end

# source://pry//lib/pry/pager.rb#129
class Pry::Pager::SystemPager < ::Pry::Pager::NullPager
  # source://pry//lib/pry/pager.rb#161
  def initialize(*_arg0); end

  # source://pry//lib/pry/pager.rb#181
  def close; end

  # source://pry//lib/pry/pager.rb#168
  def write(str); end

  private

  # source://pry//lib/pry/pager.rb#195
  def invoked_pager?; end

  # source://pry//lib/pry/pager.rb#199
  def pager; end

  # source://pry//lib/pry/pager.rb#191
  def write_to_pager(text); end

  class << self
    # source://pry//lib/pry/pager.rb#142
    def available?; end

    # source://pry//lib/pry/pager.rb#130
    def default_pager; end
  end
end

# source://pry//lib/pry/prompt.rb#38
class Pry::Prompt
  # source://pry//lib/pry/prompt.rb#117
  def initialize(name, description, prompt_procs); end

  # source://pry//lib/pry/prompt.rb#135
  def [](key); end

  # source://pry//lib/pry/prompt.rb#108
  def description; end

  # source://pry//lib/pry/prompt.rb#130
  def incomplete_proc; end

  # source://pry//lib/pry/prompt.rb#105
  def name; end

  # source://pry//lib/pry/prompt.rb#112
  def prompt_procs; end

  # source://pry//lib/pry/prompt.rb#124
  def wait_proc; end

  class << self
    # source://pry//lib/pry/prompt.rb#52
    def [](name); end

    # source://pry//lib/pry/prompt.rb#79
    def add(name, description = T.unsafe(nil), separators = T.unsafe(nil)); end

    # source://pry//lib/pry/prompt.rb#59
    def all; end
  end
end

# source://pry//lib/pry/repl.rb#4
class Pry::REPL
  extend ::Forwardable
  extend ::Pry::Forwardable

  # source://pry//lib/pry/repl.rb#22
  def initialize(pry, options = T.unsafe(nil)); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def input(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def output(*args, **_arg1, &block); end

  # source://pry//lib/pry/repl.rb#9
  def pry; end

  # source://pry//lib/pry/repl.rb#9
  def pry=(_arg0); end

  # source://pry//lib/pry/repl.rb#36
  def start; end

  private

  # source://pry//lib/pry/repl.rb#237
  def calculate_overhang(current_prompt, original_val, indented_val); end

  # source://pry//lib/pry/repl.rb#205
  def coolline_available?; end

  # source://pry//lib/pry/repl.rb#84
  def epilogue; end

  # source://pry//lib/pry/repl.rb#127
  def handle_read_errors; end

  # source://pry//lib/pry/repl.rb#195
  def input_readline(*args); end

  # source://pry//lib/pry/repl.rb#217
  def piping?; end

  # source://pry//lib/pry/repl.rb#47
  def prologue; end

  # source://pry//lib/pry/repl.rb#93
  def read; end

  # source://pry//lib/pry/repl.rb#169
  def read_line(current_prompt); end

  # source://pry//lib/pry/repl.rb#201
  def readline_available?; end

  # source://pry//lib/pry/repl.rb#66
  def repl; end

  # source://pry//lib/pry/repl.rb#224
  def set_readline_output; end

  class << self
    # source://pry//lib/pry/repl.rb#14
    def start(options); end
  end
end

# source://pry//lib/pry/repl_file_loader.rb#14
class Pry::REPLFileLoader
  # source://pry//lib/pry/repl_file_loader.rb#15
  def initialize(file_name); end

  # source://pry//lib/pry/repl_file_loader.rb#59
  def define_additional_commands; end

  # source://pry//lib/pry/repl_file_loader.rb#26
  def interactive_mode(pry_instance); end

  # source://pry//lib/pry/repl_file_loader.rb#75
  def load; end

  # source://pry//lib/pry/repl_file_loader.rb#37
  def non_interactive_mode(pry_instance, content); end
end

# source://pry//lib/pry/exceptions.rb#7
module Pry::RescuableException
  class << self
    # source://pry//lib/pry/exceptions.rb#8
    def ===(exception); end
  end
end

# source://pry//lib/pry/command_set.rb#397
class Pry::Result
  # source://pry//lib/pry/command_set.rb#400
  def initialize(is_command, retval = T.unsafe(nil)); end

  # source://pry//lib/pry/command_set.rb#407
  def command?; end

  # source://pry//lib/pry/command_set.rb#398
  def retval; end

  # source://pry//lib/pry/command_set.rb#414
  def void_command?; end
end

# source://pry//lib/pry/ring.rb#22
class Pry::Ring
  # source://pry//lib/pry/ring.rb#33
  def initialize(max_size); end

  # source://pry//lib/pry/ring.rb#43
  def <<(value); end

  # source://pry//lib/pry/ring.rb#57
  def [](index); end

  # source://pry//lib/pry/ring.rb#75
  def clear; end

  # source://pry//lib/pry/ring.rb#28
  def count; end

  # source://pry//lib/pry/ring.rb#24
  def max_size; end

  # source://pry//lib/pry/ring.rb#28
  def size; end

  # source://pry//lib/pry/ring.rb#67
  def to_a; end

  private

  # source://pry//lib/pry/ring.rb#84
  def transpose_buffer_tail; end
end

# source://pry//lib/pry/slop.rb#5
class Pry::Slop
  include ::Enumerable

  # source://pry//lib/pry/slop.rb#127
  def initialize(config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop.rb#278
  def [](key); end

  # source://pry//lib/pry/slop.rb#398
  def add_callback(label, &block); end

  # source://pry//lib/pry/slop.rb#168
  def banner(banner = T.unsafe(nil)); end

  # source://pry//lib/pry/slop.rb#159
  def banner=(banner); end

  # source://pry//lib/pry/slop.rb#196
  def command(command, options = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop.rb#118
  def config; end

  # source://pry//lib/pry/slop.rb#185
  def description(desc = T.unsafe(nil)); end

  # source://pry//lib/pry/slop.rb#176
  def description=(desc); end

  # source://pry//lib/pry/slop.rb#297
  def each(&block); end

  # source://pry//lib/pry/slop.rb#389
  def fetch_command(command); end

  # source://pry//lib/pry/slop.rb#373
  def fetch_option(key); end

  # source://pry//lib/pry/slop.rb#278
  def get(key); end

  # source://pry//lib/pry/slop.rb#416
  def help; end

  # source://pry//lib/pry/slop.rb#357
  def missing; end

  # source://pry//lib/pry/slop.rb#265
  def on(*objects, &block); end

  # source://pry//lib/pry/slop.rb#265
  def opt(*objects, &block); end

  # source://pry//lib/pry/slop.rb#265
  def option(*objects, &block); end

  # source://pry//lib/pry/slop.rb#121
  def options; end

  # source://pry//lib/pry/slop.rb#206
  def parse(items = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop.rb#219
  def parse!(items = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop.rb#333
  def present?(*keys); end

  # source://pry//lib/pry/slop.rb#317
  def run(callable = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop.rb#405
  def separator(text); end

  # source://pry//lib/pry/slop.rb#152
  def strict?; end

  # source://pry//lib/pry/slop.rb#287
  def to_h(include_commands = T.unsafe(nil)); end

  # source://pry//lib/pry/slop.rb#287
  def to_hash(include_commands = T.unsafe(nil)); end

  # source://pry//lib/pry/slop.rb#416
  def to_s; end

  private

  # source://pry//lib/pry/slop.rb#590
  def autocreate(items, index); end

  # source://pry//lib/pry/slop.rb#606
  def build_option(objects, &block); end

  # source://pry//lib/pry/slop.rb#659
  def clean(object); end

  # source://pry//lib/pry/slop.rb#663
  def commands_to_help; end

  # source://pry//lib/pry/slop.rb#552
  def execute_multiple_switches(option, argument, index); end

  # source://pry//lib/pry/slop.rb#519
  def execute_option(option, argument, index, item = T.unsafe(nil)); end

  # source://pry//lib/pry/slop.rb#644
  def extract_long_flag(objects, config); end

  # source://pry//lib/pry/slop.rb#567
  def extract_option(flag); end

  # source://pry//lib/pry/slop.rb#626
  def extract_short_flag(objects, config); end

  # source://pry//lib/pry/slop.rb#454
  def method_missing(method, *args, &block); end

  # source://pry//lib/pry/slop.rb#472
  def process_item(items, index, &block); end

  # source://pry//lib/pry/slop.rb#340
  def respond_to_missing?(method_name, include_all = T.unsafe(nil)); end

  class << self
    # source://pry//lib/pry/slop.rb#97
    def optspec(string, config = T.unsafe(nil)); end

    # source://pry//lib/pry/slop.rb#54
    def parse(items = T.unsafe(nil), config = T.unsafe(nil), &block); end

    # source://pry//lib/pry/slop.rb#63
    def parse!(items = T.unsafe(nil), config = T.unsafe(nil), &block); end
  end
end

# source://pry//lib/pry/slop/commands.rb#5
class Pry::Slop::Commands
  include ::Enumerable

  # source://pry//lib/pry/slop/commands.rb#39
  def initialize(config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop/commands.rb#100
  def [](key); end

  # source://pry//lib/pry/slop/commands.rb#8
  def arguments; end

  # source://pry//lib/pry/slop/commands.rb#59
  def banner(banner = T.unsafe(nil)); end

  # source://pry//lib/pry/slop/commands.rb#9
  def banner=(_arg0); end

  # source://pry//lib/pry/slop/commands.rb#8
  def commands; end

  # source://pry//lib/pry/slop/commands.rb#8
  def config; end

  # source://pry//lib/pry/slop/commands.rb#81
  def default(config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop/commands.rb#119
  def each(&block); end

  # source://pry//lib/pry/slop/commands.rb#100
  def get(key); end

  # source://pry//lib/pry/slop/commands.rb#91
  def global(config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop/commands.rb#158
  def help; end

  # source://pry//lib/pry/slop/commands.rb#170
  def inspect; end

  # source://pry//lib/pry/slop/commands.rb#71
  def on(command, config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop/commands.rb#128
  def parse(items = T.unsafe(nil)); end

  # source://pry//lib/pry/slop/commands.rb#138
  def parse!(items = T.unsafe(nil)); end

  # source://pry//lib/pry/slop/commands.rb#114
  def present?(key); end

  # source://pry//lib/pry/slop/commands.rb#153
  def to_hash; end

  # source://pry//lib/pry/slop/commands.rb#158
  def to_s; end

  private

  # source://pry//lib/pry/slop/commands.rb#177
  def execute_arguments!(items); end

  # source://pry//lib/pry/slop/commands.rb#183
  def execute_global_opts!(items); end
end

# source://pry//lib/pry/slop.rb#30
Pry::Slop::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/slop.rb#12
class Pry::Slop::Error < ::StandardError; end

# source://pry//lib/pry/slop.rb#21
class Pry::Slop::InvalidArgumentError < ::Pry::Slop::Error; end

# source://pry//lib/pry/slop.rb#27
class Pry::Slop::InvalidCommandError < ::Pry::Slop::Error; end

# source://pry//lib/pry/slop.rb#24
class Pry::Slop::InvalidOptionError < ::Pry::Slop::Error; end

# source://pry//lib/pry/slop.rb#15
class Pry::Slop::MissingArgumentError < ::Pry::Slop::Error; end

# source://pry//lib/pry/slop.rb#18
class Pry::Slop::MissingOptionError < ::Pry::Slop::Error; end

# source://pry//lib/pry/slop/option.rb#5
class Pry::Slop::Option
  # source://pry//lib/pry/slop/option.rb#35
  def initialize(slop, short, long, description, config = T.unsafe(nil), &block); end

  # source://pry//lib/pry/slop/option.rb#72
  def accepts_optional_argument?; end

  # source://pry//lib/pry/slop/option.rb#23
  def argument_in_value; end

  # source://pry//lib/pry/slop/option.rb#23
  def argument_in_value=(_arg0); end

  # source://pry//lib/pry/slop/option.rb#84
  def call(*objects); end

  # source://pry//lib/pry/slop/option.rb#22
  def config; end

  # source://pry//lib/pry/slop/option.rb#23
  def count; end

  # source://pry//lib/pry/slop/option.rb#23
  def count=(_arg0); end

  # source://pry//lib/pry/slop/option.rb#22
  def description; end

  # source://pry//lib/pry/slop/option.rb#67
  def expects_argument?; end

  # source://pry//lib/pry/slop/option.rb#124
  def help; end

  # source://pry//lib/pry/slop/option.rb#143
  def inspect; end

  # source://pry//lib/pry/slop/option.rb#77
  def key; end

  # source://pry//lib/pry/slop/option.rb#22
  def long; end

  # source://pry//lib/pry/slop/option.rb#22
  def short; end

  # source://pry//lib/pry/slop/option.rb#124
  def to_s; end

  # source://pry//lib/pry/slop/option.rb#22
  def types; end

  # source://pry//lib/pry/slop/option.rb#108
  def value; end

  # source://pry//lib/pry/slop/option.rb#93
  def value=(new_value); end

  private

  # source://pry//lib/pry/slop/option.rb#173
  def value_to_float(value); end

  # source://pry//lib/pry/slop/option.rb#156
  def value_to_integer(value); end

  # source://pry//lib/pry/slop/option.rb#190
  def value_to_range(value); end
end

# source://pry//lib/pry/slop/option.rb#7
Pry::Slop::Option::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://pry//lib/pry/slop.rb#9
Pry::Slop::VERSION = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/syntax_highlighter.rb#8
class Pry::SyntaxHighlighter
  class << self
    # source://pry//lib/pry/syntax_highlighter.rb#9
    def highlight(code, language = T.unsafe(nil)); end

    # source://pry//lib/pry/syntax_highlighter.rb#17
    def keyword_token_color; end

    # source://pry//lib/pry/syntax_highlighter.rb#22
    def overwrite_coderay_comment_token!; end

    # source://pry//lib/pry/syntax_highlighter.rb#13
    def tokenize(code, language = T.unsafe(nil)); end
  end
end

# source://pry//lib/pry/system_command_handler.rb#6
module Pry::SystemCommandHandler
  class << self
    # source://pry//lib/pry/system_command_handler.rb#8
    def default(output, command, _pry_instance); end
  end
end

# source://pry//lib/pry/exceptions.rb#28
module Pry::TooSafeException
  class << self
    # source://pry//lib/pry/exceptions.rb#29
    def ===(exception); end
  end
end

# source://pry//lib/pry/exceptions.rb#51
module Pry::UserError; end

# source://pry//lib/pry/version.rb#4
Pry::VERSION = T.let(T.unsafe(nil), String)

# source://pry//lib/pry/warning.rb#6
module Pry::Warning
  class << self
    # source://pry//lib/pry/warning.rb#12
    def warn(message); end
  end
end

# source://pry//lib/pry/wrapped_module.rb#16
class Pry::WrappedModule
  include ::Pry::Helpers::BaseHelpers
  include ::Pry::CodeObject::Helpers

  # source://pry//lib/pry/wrapped_module.rb#56
  def initialize(mod); end

  # source://pry//lib/pry/wrapped_module.rb#239
  def candidate(rank); end

  # source://pry//lib/pry/wrapped_module.rb#250
  def candidates; end

  # source://pry//lib/pry/wrapped_module.rb#126
  def class?; end

  # source://pry//lib/pry/wrapped_module.rb#76
  def constants(inherit = T.unsafe(nil)); end

  # source://pry//lib/pry/wrapped_module.rb#195
  def doc; end

  # source://pry//lib/pry/wrapped_module.rb#176
  def file; end

  # source://pry//lib/pry/wrapped_module.rb#183
  def line; end

  # source://pry//lib/pry/wrapped_module.rb#150
  def method_missing(method_name, *args, &block); end

  # source://pry//lib/pry/wrapped_module.rb#85
  def method_prefix; end

  # source://pry//lib/pry/wrapped_module.rb#120
  def module?; end

  # source://pry//lib/pry/wrapped_module.rb#100
  def nonblank_name; end

  # source://pry//lib/pry/wrapped_module.rb#245
  def number_of_candidates; end

  # source://pry//lib/pry/wrapped_module.rb#110
  def singleton_class?; end

  # source://pry//lib/pry/wrapped_module.rb#135
  def singleton_instance; end

  # source://pry//lib/pry/wrapped_module.rb#206
  def source; end

  # source://pry//lib/pry/wrapped_module.rb#176
  def source_file; end

  # source://pry//lib/pry/wrapped_module.rb#183
  def source_line; end

  # source://pry//lib/pry/wrapped_module.rb#168
  def source_location; end

  # source://pry//lib/pry/wrapped_module.rb#270
  def super(times = T.unsafe(nil)); end

  # source://pry//lib/pry/wrapped_module.rb#20
  def wrapped; end

  # source://pry//lib/pry/wrapped_module.rb#223
  def yard_doc; end

  # source://pry//lib/pry/wrapped_module.rb#260
  def yard_docs?; end

  # source://pry//lib/pry/wrapped_module.rb#212
  def yard_file; end

  # source://pry//lib/pry/wrapped_module.rb#218
  def yard_line; end

  private

  # source://pry//lib/pry/wrapped_module.rb#347
  def all_methods_for(mod); end

  # source://pry//lib/pry/wrapped_module.rb#329
  def all_relevant_methods_for(mod); end

  # source://pry//lib/pry/wrapped_module.rb#310
  def all_source_locations_by_popularity; end

  # source://pry//lib/pry/wrapped_module.rb#371
  def lines_for_file(file); end

  # source://pry//lib/pry/wrapped_module.rb#302
  def method_candidates; end

  # source://pry//lib/pry/wrapped_module.rb#366
  def method_defined_by_forwardable_module?(method); end

  # source://pry//lib/pry/wrapped_module.rb#351
  def nested_module?(parent, name); end

  # source://pry//lib/pry/wrapped_module.rb#292
  def primary_candidate; end

  # source://pry//lib/pry/wrapped_module.rb#158
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end

  class << self
    # source://pry//lib/pry/wrapped_module.rb#29
    def from_str(mod_name, target = T.unsafe(nil)); end

    private

    # source://pry//lib/pry/wrapped_module.rb#45
    def safe_to_evaluate?(str, target); end
  end
end

# source://pry//lib/pry/wrapped_module/candidate.rb#8
class Pry::WrappedModule::Candidate
  include ::Pry::Helpers::DocumentationHelpers
  include ::Pry::CodeObject::Helpers
  extend ::Forwardable
  extend ::Pry::Forwardable

  # source://pry//lib/pry/wrapped_module/candidate.rb#38
  def initialize(wrapper, rank); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def class?(*args, **_arg1, &block); end

  # source://pry//lib/pry/wrapped_module/candidate.rb#70
  def doc; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#14
  def file; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#18
  def line; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def module?(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def nonblank_name(*args, **_arg1, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def number_of_candidates(*args, **_arg1, &block); end

  # source://pry//lib/pry/wrapped_module/candidate.rb#59
  def source; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#14
  def source_file; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#18
  def source_line; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#79
  def source_location; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def wrapped(*args, **_arg1, &block); end

  private

  # source://pry//lib/pry/wrapped_module/candidate.rb#99
  def first_line_of_module_definition(file, line); end

  # source://pry//lib/pry/wrapped_module/candidate.rb#116
  def first_method_source_location; end

  # source://pry//lib/pry/wrapped_module/candidate.rb#122
  def last_method_source_location; end

  # source://pry//lib/pry/forwardable.rb#18
  def lines_for_file(*a, &b); end

  # source://pry//lib/pry/forwardable.rb#18
  def method_candidates(*a, &b); end

  # source://pry//lib/pry/wrapped_module/candidate.rb#104
  def module_definition_first_line?(line); end

  # source://pry//lib/pry/forwardable.rb#18
  def name(*a, &b); end

  # source://pry//lib/pry/wrapped_module/candidate.rb#132
  def number_of_lines_in_first_chunk; end

  # source://pry//lib/pry/forwardable.rb#18
  def yard_docs?(*a, &b); end
end
