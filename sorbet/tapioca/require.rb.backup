# typed: true
# frozen_string_literal: true

puts "DEBUG: require.rb is being executed!"

require "active_support/all"
require "dotenv/load"
require "faraday"
require "faraday/multipart"
require "pry"
require "rspec/its"
require "rspec/sorbet"
require "sorbet-runtime"
require "vcr"
require "zeitwerk"

# Load our gem so DSL compilers can find our classes
gem_root = File.expand_path("../..", File.dirname(__FILE__))

# Load the main gem file which sets up Zeitwerk properly
require File.join(gem_root, "lib", "octoprint")
puts "DEBUG: Octoprint loaded from require.rb"

# Eager load all classes using the Zeitwerk loader
if defined?(Zeitwerk::Registry)
  puts "DEBUG: Zeitwerk::Registry available"
  Zeitwerk::Registry.loaders.each do |loader|
    puts "DEBUG: Eager loading with loader: #{loader}"
    loader.eager_load
  end
  puts "DEBUG: AutoInitializable after eager_load: #{defined?(::Octoprint::AutoInitializable)}"
  puts "DEBUG: File after eager_load: #{defined?(::Octoprint::Files::File)}"
else
  puts "DEBUG: Zeitwerk::Registry not available"
end
